%..opaque = type {};
%..string = type {i8*, i64} ; Basic_string
%..rawptr = type i8* ; Basic_rawptr
%..complex32 = type {half, half} ; Basic_complex32
%..complex64 = type {float, float} ; Basic_complex64
%..complex128 = type {double, double} ; Basic_complex128
%..any = type {%..rawptr, %Type_Info*} ; Basic_any
declare void @llvm.dbg.declare(metadata, metadata, metadata) nounwind readnone 

%Calling_Convention = type i64
%Type_Info_Enum_Value = type {[0 x <8 x i8>], [16 x i8], i8}
%Type_Info_Named = type {%..string, %Type_Info*}
%Type_Info_Integer = type {i1}
%Type_Info_Rune = type {}
%Type_Info_Float = type {}
%Type_Info_Complex = type {}
%Type_Info_String = type {}
%Type_Info_Boolean = type {}
%Type_Info_Any = type {}
%Type_Info_Pointer = type {%Type_Info*}
%Type_Info_Procedure = type {%Type_Info*, %Type_Info*, i1, i64}
%Type_Info_Array = type {%Type_Info*, i64, i64}
%Type_Info_Dynamic_Array = type {%Type_Info*, i64}
%Type_Info_Slice = type {%Type_Info*, i64}
%Type_Info_Vector = type {%Type_Info*, i64, i64}
%Type_Info_Tuple = type {{%Type_Info**, i64}, {%..string*, i64}}
%Type_Info_Struct = type {{%Type_Info**, i64}, {%..string*, i64}, {i64*, i64}, {i1*, i64}, i1, i1, i1, i1}
%Type_Info_Union = type {{%Type_Info**, i64}, i64, %Type_Info*}
%Type_Info_Enum = type {%Type_Info*, {%..string*, i64}, {%Type_Info_Enum_Value*, i64}}
%Type_Info_Map = type {%Type_Info*, %Type_Info*, %Type_Info*}
%Type_Info_Bit_Field = type {{%..string*, i64}, {i32*, i64}, {i32*, i64}}
%Type_Info = type {i64, i64, {[0 x <8 x i8>], [72 x i8], i8}}
%Source_Code_Location = type {%..string, i64, i64, %..string}
%Allocator_Mode = type i8
%Allocator_Proc = type %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64, %Source_Code_Location*, %Context*)*
%Allocator = type {%..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64, %Source_Code_Location*, %Context*)*, %..rawptr}
%Context = type {%Allocator, i64, %..any, i64, %..any}
%__Map_Key = type {i128, %..string}
%__Map_Find_Result = type {i64, i64, i64}
%__Map_Entry_Header = type {%__Map_Key, i64}
%__Map_Header = type {%raw-6.Map*, i1, i64, i64, i64, i64}
%main-0.Entity = type {{[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}, %engine-10.Sprite}
%fmt-4.String_Buffer = type {i8*, i64, i64, %Allocator}
%fmt-4.Fmt_Info = type {%..any, i64, i64, i64, {i8*, i64, i64, %Allocator}*, i1, i1, i1, i1, i1, i1, i1, i1, i1}
%utf8-5.Accept_Range = type {i8, i8}
%raw-6.Slice = type {%..rawptr, i64}
%raw-6.Dynamic_Array = type {%..rawptr, i64, i64, %Allocator}
%raw-6.Map = type {{i64*, i64, i64, %Allocator}, %raw-6.Dynamic_Array}
%math-7.Vector2 = type {[0 x <8 x i8>], [2 x float]}
%glfw-9.Window_Handle = type %..rawptr
%glfw-9.Monitor_Handle = type %..rawptr
%glfw-9.Vid_Mode = type {i32, i32, i32, i32, i32, i32}
%glfw-9.Window_Size_Proc = type void (%..rawptr, i32, i32)*
%glfw-9.Key_Proc = type void (%..rawptr, i32, i32, i32, i32)*
%glfw-9.Scroll_Proc = type void (%..rawptr, double, double)*
%glfw-9.Error_Proc = type void (i32, i8*)*
%glfw-9._TimingStruct = type {double, double, double, double, i64, i64}
%engine-10.Engine_Config = type {%..string, void (%Context*)*, void (%Context*)*, i32, i32, i32, i32, float}
%engine-10.Sprite = type {i32, i32, i32}
%engine-10.Sprite_Data = type {%engine-10.Sprite, {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}}
%os_windows-12.Handle = type i64
%os_windows-12.Errno = type i64
%strconv-18.Int_Flag = type i64
%strconv-18.DecimalSlice = type {{i8*, i64}, i64, i64, i1}
%strconv-18.FloatInfo = type {i64, i64, i64}
%math-19.Mat4 = type [4 x [4 x float]]
%gl-21.sync_t = type %..rawptr
%gl-21.debug_proc_t = type void (i32, i32, i32, i32, i32, i8*, %..rawptr)*
%gl-21.Shader_Type = type i32
%windows-23.Handle = type %..rawptr
%windows-23.Bool = type i32
%windows-23.Security_Attributes = type {i32, %..rawptr, i32}
%decimal-24.Decimal = type {i64, i64, [384 x i8], i1, i1}
%__multi3.TWords-1044 = type {[0 x <8 x i8>], [16 x i8]}
%engine-10.load_sprite.Metadata_Texture_Entry-1047 = type {{[0 x <8 x i8>], [2 x float]}}
%strconv-18.format_digits.Buffer-1048 = type {{i8*, i64}, i64}

declare ccc void @llvm.assume(i1) #0 
declare ccc void @llvm.debugtrap() #0 
declare ccc void @llvm.trap() #0 
declare ccc i64 @llvm.readcyclecounter() #0 
declare ccc float @llvm.sqrt.f32(float) #0 
declare ccc double @llvm.sqrt.f64(double) #0 
declare ccc float @llvm.sin.f32(float) #0 
declare ccc double @llvm.sin.f64(double) #0 
declare ccc float @llvm.cos.f32(float) #0 
declare ccc double @llvm.cos.f64(double) #0 
declare ccc float @llvm.pow.f32(float, float) #0 
declare ccc double @llvm.pow.f64(double, double) #0 
declare ccc float @llvm.fmuladd.f32(float, float, float) #0 
declare ccc double @llvm.fmuladd.f64(double, double, double) #0 
declare ccc i32 @glfwInit() #0 
declare ccc %..rawptr @glfwGetPrimaryMonitor() #0 
declare ccc %glfw-9.Vid_Mode* @glfwGetVideoMode(%..rawptr) #0 
declare ccc %..rawptr @glfwCreateWindow(i32, i32, i8*, %..rawptr, %..rawptr) #0 
declare ccc void @glfwWindowHint(i32, i32) #0 
declare ccc i32 @glfwWindowShouldClose(%..rawptr) #0 
declare ccc void @glfwSwapInterval(i32) #0 
declare ccc void @glfwSwapBuffers(%..rawptr) #0 
declare ccc void @glfwSetWindowTitle(%..rawptr, i8*) #0 
declare ccc void @glfwSetWindowPos(%..rawptr, i32, i32) #0 
declare ccc void @glfwPollEvents() #0 
declare ccc double @glfwGetTime() #0 
declare ccc void @glfwMakeContextCurrent(%..rawptr) #0 
declare ccc %..rawptr @glfwGetProcAddress(i8*) #0 
declare ccc void (%..rawptr, i32, i32)* @glfwSetWindowSizeCallback(%..rawptr, void (%..rawptr, i32, i32)*) #0 
declare ccc void (%..rawptr, i32, i32, i32, i32)* @glfwSetKeyCallback(%..rawptr, void (%..rawptr, i32, i32, i32, i32)*) #0 
declare ccc void (%..rawptr, double, double)* @glfwSetScrollCallback(%..rawptr, void (%..rawptr, double, double)*) #0 
declare ccc void (i32, i8*)* @glfwSetErrorCallback(void (i32, i8*)*) #0 
declare ccc i8* @stbi_load(i8*, i32*, i32*, i32*, i32) #0 
declare ccc void @stbi_set_flip_vertically_on_load(i32) #0 
declare cc 64 i32 @GetLastError() #0 
declare cc 64 i32 @GetCurrentThreadId() #0 
declare cc 64 i32 @CloseHandle(%..rawptr) #0 
declare cc 64 %..rawptr @GetStdHandle(i32) #0 
declare cc 64 %..rawptr @CreateFileA(i8*, i32, i32, %..rawptr, i32, i32, %..rawptr) #0 
declare cc 64 i32 @ReadFile(%..rawptr, %..rawptr, i32, i32*, %..rawptr) #0 
declare cc 64 i32 @WriteFile(%..rawptr, %..rawptr, i32, i32*, %..rawptr) #0 
declare cc 64 i32 @GetFileSizeEx(%..rawptr, i64*) #0 
declare cc 64 i32 @SetHandleInformation(%..rawptr, i32, i32) #0 
declare cc 64 %..rawptr @HeapAlloc(%..rawptr, i32, i64) #0 
declare cc 64 %..rawptr @HeapReAlloc(%..rawptr, i32, %..rawptr, i64) #0 
declare cc 64 i32 @HeapFree(%..rawptr, i32, %..rawptr) #0 
declare cc 64 %..rawptr @GetProcessHeap() #0 
declare ccc void @llvm.memset.p0i8.i64(%..rawptr, i8, i64, i32, i1) #0 
declare ccc void @llvm.memmove.p0i8.p0i8.i64(%..rawptr, %..rawptr, i64, i32, i1) #0 
declare ccc void @llvm.memcpy.p0i8.p0i8.i64(%..rawptr, %..rawptr, i64, i32, i1) #0 
declare ccc i32 @glfwGetKey(%..rawptr, i32) #0 
declare ccc void @glfwSetWindowShouldClose(%..rawptr, i32) #0 

define %Type_Info* @type_info_base(%Type_Info* %info, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca %Type_Info*, align 8
	%1 = alloca %Type_Info*, align 8
	%2 = alloca %Type_Info_Named, align 8
	%3 = alloca {[0 x <8 x i8>], [72 x i8], i8}, align 8
		store %Type_Info* %info, %Type_Info** %0
	; IfStmt
	%4 = load %Type_Info*, %Type_Info** %0, align 8
	%5 = icmp eq %Type_Info* %4, zeroinitializer
	br i1 %5, label %if.then-1, label %if.done-2

if.then-1:
	; ReturnStmt
	ret %Type_Info* zeroinitializer

if.done-2:
	; base
		%6 = load %Type_Info*, %Type_Info** %0, align 8
	store %Type_Info* %6, %Type_Info** %1
	; ForStmt
	br label %for.body-3

for.body-3:
	; TypeSwitchStmt
	; SelectorExpr
	%7 = load %Type_Info*, %Type_Info** %1, align 8
	%8 = getelementptr inbounds %Type_Info, %Type_Info* %7, i64 0
	%9 = getelementptr inbounds %Type_Info, %Type_Info* %8, i64 0, i32 2
	%10 = load {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %9, align 8
	; get union's tag
	%11 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %9, i64 0, i32 2 ; UnionTagPtr
	%12 = load i8, i8* %11, align 1
	%13 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %9 to %..rawptr
	%14 = icmp eq i8 %12, 1
	br i1 %14, label %typeswitch.body-5, label %typeswitch.next-4

typeswitch.next-4:
	store {[0 x <8 x i8>], [72 x i8], i8} %10, {[0 x <8 x i8>], [72 x i8], i8}* %3
	; break
	; ReturnStmt
	%15 = load %Type_Info*, %Type_Info** %1, align 8
	ret %Type_Info* %15

typeswitch.body-5:
	%16 = bitcast %..rawptr %13 to %Type_Info_Named*
	%17 = load %Type_Info_Named, %Type_Info_Named* %16, align 8
	store %Type_Info_Named %17, %Type_Info_Named* %2
	; AssignStmt
	; SelectorExpr
	%18 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %2, i64 0, i32 1
	%19 = load %Type_Info*, %Type_Info** %18, align 8
	store %Type_Info* %19, %Type_Info** %1
	br label %for.body-3
}

define %Type_Info* @type_info_base_without_enum(%Type_Info* %info, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca %Type_Info*, align 8
	%1 = alloca %Type_Info*, align 8
	%2 = alloca %Type_Info_Named, align 8
	%3 = alloca %Type_Info_Enum, align 8
	%4 = alloca {[0 x <8 x i8>], [72 x i8], i8}, align 8
		store %Type_Info* %info, %Type_Info** %0
	; IfStmt
	%5 = load %Type_Info*, %Type_Info** %0, align 8
	%6 = icmp eq %Type_Info* %5, zeroinitializer
	br i1 %6, label %if.then-1, label %if.done-2

if.then-1:
	; ReturnStmt
	ret %Type_Info* zeroinitializer

if.done-2:
	; base
		%7 = load %Type_Info*, %Type_Info** %0, align 8
	store %Type_Info* %7, %Type_Info** %1
	; ForStmt
	br label %for.body-3

for.body-3:
	; TypeSwitchStmt
	; SelectorExpr
	%8 = load %Type_Info*, %Type_Info** %1, align 8
	%9 = getelementptr inbounds %Type_Info, %Type_Info* %8, i64 0
	%10 = getelementptr inbounds %Type_Info, %Type_Info* %9, i64 0, i32 2
	%11 = load {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %10, align 8
	; get union's tag
	%12 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %10, i64 0, i32 2 ; UnionTagPtr
	%13 = load i8, i8* %12, align 1
	%14 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %10 to %..rawptr
	%15 = icmp eq i8 %13, 1
	br i1 %15, label %typeswitch.body-5, label %typeswitch.next-4

typeswitch.next-4:
	%16 = icmp eq i8 %13, 18
	br i1 %16, label %typeswitch.body-7, label %typeswitch.next-6

typeswitch.body-5:
	%17 = bitcast %..rawptr %14 to %Type_Info_Named*
	%18 = load %Type_Info_Named, %Type_Info_Named* %17, align 8
	store %Type_Info_Named %18, %Type_Info_Named* %2
	; AssignStmt
	; SelectorExpr
	%19 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %2, i64 0, i32 1
	%20 = load %Type_Info*, %Type_Info** %19, align 8
	store %Type_Info* %20, %Type_Info** %1
	br label %typeswitch.done-8

typeswitch.next-6:
	store {[0 x <8 x i8>], [72 x i8], i8} %11, {[0 x <8 x i8>], [72 x i8], i8}* %4
	; break
	; ReturnStmt
	%21 = load %Type_Info*, %Type_Info** %1, align 8
	ret %Type_Info* %21

typeswitch.body-7:
	%22 = bitcast %..rawptr %14 to %Type_Info_Enum*
	%23 = load %Type_Info_Enum, %Type_Info_Enum* %22, align 8
	store %Type_Info_Enum %23, %Type_Info_Enum* %3
	; AssignStmt
	; SelectorExpr
	%24 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %3, i64 0, i32 0
	%25 = load %Type_Info*, %Type_Info** %24, align 8
	store %Type_Info* %25, %Type_Info** %1
	br label %typeswitch.done-8

typeswitch.done-8:
	br label %for.body-3
}

define %Source_Code_Location @make_source_code_location(%..string %file, i64 %line, i64 %column, %..string %procedure) alwaysinline #1 {
decls-0:
	%0 = alloca %..string, align 8
	%1 = alloca i64, align 8
	%2 = alloca i64, align 8
	%3 = alloca %..string, align 8
	%4 = alloca %Source_Code_Location, align 8
		store %..string %file, %..string* %0
		store i64 %line, i64* %1
		store i64 %column, i64* %2
		store %..string %procedure, %..string* %3
	; ReturnStmt
	; CompoundLit
	store %Source_Code_Location zeroinitializer, %Source_Code_Location* %4
	store %Source_Code_Location {%..string zeroinitializer, i64 zeroinitializer, i64 zeroinitializer, %..string zeroinitializer}, %Source_Code_Location* %4
	%5 = load %..string, %..string* %0, align 8
	%6 = getelementptr inbounds %Source_Code_Location, %Source_Code_Location* %4, i64 0, i32 0
	store %..string %5, %..string* %6
	%7 = load i64, i64* %1, align 8
	%8 = getelementptr inbounds %Source_Code_Location, %Source_Code_Location* %4, i64 0, i32 1
	store i64 %7, i64* %8
	%9 = load i64, i64* %2, align 8
	%10 = getelementptr inbounds %Source_Code_Location, %Source_Code_Location* %4, i64 0, i32 2
	store i64 %9, i64* %10
	%11 = load %..string, %..string* %3, align 8
	%12 = getelementptr inbounds %Source_Code_Location, %Source_Code_Location* %4, i64 0, i32 3
	store %..string %11, %..string* %12
	%13 = load %Source_Code_Location, %Source_Code_Location* %4, align 8
	ret %Source_Code_Location %13
}

define void @__init_context_from_ptr(%Context* %c, %Context* %other) #0 {
decls-0:
	%0 = alloca %Context*, align 8
	%1 = alloca %Context*, align 8
	%2 = alloca %Context, align 8
		store %Context* %c, %Context** %0
		store %Context* %other, %Context** %1
	; IfStmt
	%3 = load %Context*, %Context** %0, align 8
	%4 = icmp eq %Context* %3, zeroinitializer
	br i1 %4, label %if.then-1, label %if.done-2

if.then-1:
	; ReturnStmt
	ret void

if.done-2:
	; AssignStmt
	%5 = load %Context*, %Context** %0, align 8
	%6 = getelementptr inbounds %Context, %Context* %5, i64 0
	%7 = load %Context*, %Context** %1, align 8
	%8 = getelementptr inbounds %Context, %Context* %7, i64 0
	%9 = load %Context, %Context* %8, align 8
	store %Context %9, %Context* %6
	; IfStmt
	; SelectorExpr
	; SelectorExpr
	%10 = load %Context*, %Context** %0, align 8
	%11 = getelementptr inbounds %Context, %Context* %10, i64 0
	%12 = getelementptr inbounds %Context, %Context* %11, i64 0, i32 0
	%13 = getelementptr inbounds %Allocator, %Allocator* %12, i64 0, i32 0
	%14 = load %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64, %Source_Code_Location*, %Context*)*, %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64, %Source_Code_Location*, %Context*)** %13, align 8
	%15 = icmp eq %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64, %Source_Code_Location*, %Context*)* %14, zeroinitializer
	br i1 %15, label %if.then-3, label %if.done-4

if.then-3:
	; AssignStmt
	; SelectorExpr
	%16 = load %Context*, %Context** %0, align 8
	%17 = getelementptr inbounds %Context, %Context* %16, i64 0
	%18 = getelementptr inbounds %Context, %Context* %17, i64 0, i32 0
	store %Context zeroinitializer, %Context* %2
	%19 = load %Context, %Context* @__ggv$0, align 8
	store %Context %19, %Context* %2
	%20 = call %Allocator @default_allocator(%Context* noalias nonnull %2)
	store %Allocator %20, %Allocator* %18
	br label %if.done-4

if.done-4:
	; IfStmt
	; SelectorExpr
	%21 = load %Context*, %Context** %0, align 8
	%22 = getelementptr inbounds %Context, %Context* %21, i64 0
	%23 = getelementptr inbounds %Context, %Context* %22, i64 0, i32 1
	%24 = load i64, i64* %23, align 8
	%25 = icmp eq i64 %24, 0
	br i1 %25, label %if.then-5, label %if.done-6

if.then-5:
	; AssignStmt
	; SelectorExpr
	%26 = load %Context*, %Context** %0, align 8
	%27 = getelementptr inbounds %Context, %Context* %26, i64 0
	%28 = getelementptr inbounds %Context, %Context* %27, i64 0, i32 1
	; SelectorExpr
	%29 = call i64 @os_windows-12.current_thread_id(%Context* noalias nonnull %2)
	store i64 %29, i64* %28
	br label %if.done-6

if.done-6:
	ret void
}

define void @__init_context(%Context* %c) #0 {
decls-0:
	%0 = alloca %Context*, align 8
	%1 = alloca %Context, align 8
		store %Context* %c, %Context** %0
	; IfStmt
	%2 = load %Context*, %Context** %0, align 8
	%3 = icmp eq %Context* %2, zeroinitializer
	br i1 %3, label %if.then-1, label %if.done-2

if.then-1:
	; ReturnStmt
	ret void

if.done-2:
	; IfStmt
	; SelectorExpr
	; SelectorExpr
	%4 = load %Context*, %Context** %0, align 8
	%5 = getelementptr inbounds %Context, %Context* %4, i64 0
	%6 = getelementptr inbounds %Context, %Context* %5, i64 0, i32 0
	%7 = getelementptr inbounds %Allocator, %Allocator* %6, i64 0, i32 0
	%8 = load %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64, %Source_Code_Location*, %Context*)*, %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64, %Source_Code_Location*, %Context*)** %7, align 8
	%9 = icmp eq %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64, %Source_Code_Location*, %Context*)* %8, zeroinitializer
	br i1 %9, label %if.then-3, label %if.done-4

if.then-3:
	; AssignStmt
	; SelectorExpr
	%10 = load %Context*, %Context** %0, align 8
	%11 = getelementptr inbounds %Context, %Context* %10, i64 0
	%12 = getelementptr inbounds %Context, %Context* %11, i64 0, i32 0
	store %Context zeroinitializer, %Context* %1
	%13 = load %Context, %Context* @__ggv$0, align 8
	store %Context %13, %Context* %1
	%14 = call %Allocator @default_allocator(%Context* noalias nonnull %1)
	store %Allocator %14, %Allocator* %12
	br label %if.done-4

if.done-4:
	; IfStmt
	; SelectorExpr
	%15 = load %Context*, %Context** %0, align 8
	%16 = getelementptr inbounds %Context, %Context* %15, i64 0
	%17 = getelementptr inbounds %Context, %Context* %16, i64 0, i32 1
	%18 = load i64, i64* %17, align 8
	%19 = icmp eq i64 %18, 0
	br i1 %19, label %if.then-5, label %if.done-6

if.then-5:
	; AssignStmt
	; SelectorExpr
	%20 = load %Context*, %Context** %0, align 8
	%21 = getelementptr inbounds %Context, %Context* %20, i64 0
	%22 = getelementptr inbounds %Context, %Context* %21, i64 0, i32 1
	; SelectorExpr
	%23 = call i64 @os_windows-12.current_thread_id(%Context* noalias nonnull %1)
	store i64 %23, i64* %22
	br label %if.done-6

if.done-6:
	ret void
}

define %..rawptr @alloc(i64 %size, i64 %alignment, %Source_Code_Location* %loc, %Context* noalias nonnull %__.context_ptr) alwaysinline #1 {
decls-0:
	%0 = alloca i64, align 8
	%1 = alloca i64, align 8
	%2 = alloca %Allocator, align 8
	%3 = alloca %Source_Code_Location, align 16
		store i64 %size, i64* %0
		store i64 %alignment, i64* %1
	%4 = load %Source_Code_Location, %Source_Code_Location* %loc, align 8
	; a
		; SelectorExpr
	%5 = getelementptr inbounds %Context, %Context* %__.context_ptr, i64 0, i32 0
	%6 = load %Allocator, %Allocator* %5, align 8
	store %Allocator %6, %Allocator* %2
	; ReturnStmt
	; SelectorExpr
	%7 = getelementptr inbounds %Allocator, %Allocator* %2, i64 0, i32 0
	%8 = load %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64, %Source_Code_Location*, %Context*)*, %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64, %Source_Code_Location*, %Context*)** %7, align 8
	; SelectorExpr
	%9 = getelementptr inbounds %Allocator, %Allocator* %2, i64 0, i32 1
	%10 = load %..rawptr, %..rawptr* %9, align 8
	%11 = load i64, i64* %0, align 8
	%12 = load i64, i64* %1, align 8
	%13 = load %Source_Code_Location, %Source_Code_Location* %loc, align 8
	store %Source_Code_Location zeroinitializer, %Source_Code_Location* %3
	store %Source_Code_Location %13, %Source_Code_Location* %3
	%14 = call %..rawptr %8(%..rawptr %10, i8 0, i64 %11, i64 %12, %..rawptr zeroinitializer, i64 0, i64 0, %Source_Code_Location* %3, %Context* noalias nonnull %__.context_ptr)
	ret %..rawptr %14
}

define void @free_ptr_with_allocator(%Allocator* %a, %..rawptr %ptr, %Source_Code_Location* %loc, %Context* noalias nonnull %__.context_ptr) alwaysinline #1 {
decls-0:
	%0 = alloca %..rawptr, align 8
	%1 = alloca %Source_Code_Location, align 16
	%2 = load %Allocator, %Allocator* %a, align 8
		store %..rawptr %ptr, %..rawptr* %0
	%3 = load %Source_Code_Location, %Source_Code_Location* %loc, align 8
	; IfStmt
	%4 = load %..rawptr, %..rawptr* %0, align 8
	%5 = icmp eq %..rawptr %4, zeroinitializer
	br i1 %5, label %if.then-1, label %if.done-2

if.then-1:
	; ReturnStmt
	ret void

if.done-2:
	; IfStmt
	; SelectorExpr
	%6 = getelementptr inbounds %Allocator, %Allocator* %a, i64 0, i32 0
	%7 = load %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64, %Source_Code_Location*, %Context*)*, %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64, %Source_Code_Location*, %Context*)** %6, align 8
	%8 = icmp eq %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64, %Source_Code_Location*, %Context*)* %7, zeroinitializer
	br i1 %8, label %if.then-3, label %if.done-4

if.then-3:
	; ReturnStmt
	ret void

if.done-4:
	; SelectorExpr
	%9 = getelementptr inbounds %Allocator, %Allocator* %a, i64 0, i32 0
	%10 = load %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64, %Source_Code_Location*, %Context*)*, %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64, %Source_Code_Location*, %Context*)** %9, align 8
	; SelectorExpr
	%11 = getelementptr inbounds %Allocator, %Allocator* %a, i64 0, i32 1
	%12 = load %..rawptr, %..rawptr* %11, align 8
	%13 = load %..rawptr, %..rawptr* %0, align 8
	%14 = load %Source_Code_Location, %Source_Code_Location* %loc, align 8
	store %Source_Code_Location zeroinitializer, %Source_Code_Location* %1
	store %Source_Code_Location %14, %Source_Code_Location* %1
	%15 = call %..rawptr %10(%..rawptr %12, i8 1, i64 0, i64 0, %..rawptr %13, i64 0, i64 0, %Source_Code_Location* %1, %Context* noalias nonnull %__.context_ptr)
	ret void
}

define void @free_ptr(%..rawptr %ptr, %Source_Code_Location* %loc, %Context* noalias nonnull %__.context_ptr) alwaysinline #1 {
decls-0:
	%0 = alloca %..rawptr, align 8
	%1 = alloca %Allocator, align 16
	%2 = alloca %Source_Code_Location, align 16
		store %..rawptr %ptr, %..rawptr* %0
	%3 = load %Source_Code_Location, %Source_Code_Location* %loc, align 8
	; SelectorExpr
	%4 = getelementptr inbounds %Context, %Context* %__.context_ptr, i64 0, i32 0
	%5 = load %Allocator, %Allocator* %4, align 8
	%6 = load %..rawptr, %..rawptr* %0, align 8
	%7 = call %Source_Code_Location @make_source_code_location(%..string {i8* getelementptr inbounds ([34 x i8], [34 x i8]* @__str$0, i64 0, i32 0), i64 33}, i64 309, i64 66, %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$1, i64 0, i32 0), i64 8})
	store %Allocator zeroinitializer, %Allocator* %1
	store %Allocator %5, %Allocator* %1
	store %Source_Code_Location zeroinitializer, %Source_Code_Location* %2
	store %Source_Code_Location %7, %Source_Code_Location* %2
	call void @free_ptr_with_allocator(%Allocator* %1, %..rawptr %6, %Source_Code_Location* %2, %Context* noalias nonnull %__.context_ptr)
	ret void
}

define void @free_all(%Source_Code_Location* %loc, %Context* noalias nonnull %__.context_ptr) alwaysinline #1 {
decls-0:
	%0 = alloca %Allocator, align 8
	%1 = alloca %Source_Code_Location, align 16
	%2 = load %Source_Code_Location, %Source_Code_Location* %loc, align 8
	; a
		; SelectorExpr
	%3 = getelementptr inbounds %Context, %Context* %__.context_ptr, i64 0, i32 0
	%4 = load %Allocator, %Allocator* %3, align 8
	store %Allocator %4, %Allocator* %0
	; SelectorExpr
	%5 = getelementptr inbounds %Allocator, %Allocator* %0, i64 0, i32 0
	%6 = load %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64, %Source_Code_Location*, %Context*)*, %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64, %Source_Code_Location*, %Context*)** %5, align 8
	; SelectorExpr
	%7 = getelementptr inbounds %Allocator, %Allocator* %0, i64 0, i32 1
	%8 = load %..rawptr, %..rawptr* %7, align 8
	%9 = load %Source_Code_Location, %Source_Code_Location* %loc, align 8
	store %Source_Code_Location zeroinitializer, %Source_Code_Location* %1
	store %Source_Code_Location %9, %Source_Code_Location* %1
	%10 = call %..rawptr %6(%..rawptr %8, i8 2, i64 0, i64 0, %..rawptr zeroinitializer, i64 0, i64 0, %Source_Code_Location* %1, %Context* noalias nonnull %__.context_ptr)
	ret void
}

define %..rawptr @resize(%..rawptr %ptr, i64 %old_size, i64 %new_size, i64 %alignment, %Source_Code_Location* %loc, %Context* noalias nonnull %__.context_ptr) alwaysinline #1 {
decls-0:
	%0 = alloca %..rawptr, align 8
	%1 = alloca i64, align 8
	%2 = alloca i64, align 8
	%3 = alloca i64, align 8
	%4 = alloca %Allocator, align 8
	%5 = alloca %Source_Code_Location, align 16
		store %..rawptr %ptr, %..rawptr* %0
		store i64 %old_size, i64* %1
		store i64 %new_size, i64* %2
		store i64 %alignment, i64* %3
	%6 = load %Source_Code_Location, %Source_Code_Location* %loc, align 8
	; a
		; SelectorExpr
	%7 = getelementptr inbounds %Context, %Context* %__.context_ptr, i64 0, i32 0
	%8 = load %Allocator, %Allocator* %7, align 8
	store %Allocator %8, %Allocator* %4
	; ReturnStmt
	; SelectorExpr
	%9 = getelementptr inbounds %Allocator, %Allocator* %4, i64 0, i32 0
	%10 = load %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64, %Source_Code_Location*, %Context*)*, %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64, %Source_Code_Location*, %Context*)** %9, align 8
	; SelectorExpr
	%11 = getelementptr inbounds %Allocator, %Allocator* %4, i64 0, i32 1
	%12 = load %..rawptr, %..rawptr* %11, align 8
	%13 = load i64, i64* %2, align 8
	%14 = load i64, i64* %3, align 8
	%15 = load %..rawptr, %..rawptr* %0, align 8
	%16 = load i64, i64* %1, align 8
	%17 = load %Source_Code_Location, %Source_Code_Location* %loc, align 8
	store %Source_Code_Location zeroinitializer, %Source_Code_Location* %5
	store %Source_Code_Location %17, %Source_Code_Location* %5
	%18 = call %..rawptr %10(%..rawptr %12, i8 3, i64 %13, i64 %14, %..rawptr %15, i64 %16, i64 0, %Source_Code_Location* %5, %Context* noalias nonnull %__.context_ptr)
	ret %..rawptr %18
}

define void @_preload-0.free-126(%..rawptr %ptr, %Source_Code_Location* %loc, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca %..rawptr, align 8
	%1 = alloca %Source_Code_Location, align 16
		store %..rawptr %ptr, %..rawptr* %0
	%2 = load %Source_Code_Location, %Source_Code_Location* %loc, align 8
	%3 = load %..rawptr, %..rawptr* %0, align 8
	%4 = load %Source_Code_Location, %Source_Code_Location* %loc, align 8
	store %Source_Code_Location zeroinitializer, %Source_Code_Location* %1
	store %Source_Code_Location %4, %Source_Code_Location* %1
	call void @free_ptr(%..rawptr %3, %Source_Code_Location* %1, %Context* noalias nonnull %__.context_ptr)
	ret void
}

define %..rawptr @default_resize_align(%..rawptr %old_memory, i64 %old_size, i64 %new_size, i64 %alignment, %Source_Code_Location* %loc, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca %..rawptr, align 8
	%1 = alloca i64, align 8
	%2 = alloca i64, align 8
	%3 = alloca i64, align 8
	%4 = alloca %Source_Code_Location, align 16
	%5 = alloca %Source_Code_Location, align 16
	%6 = alloca %..rawptr, align 8
	%7 = alloca %Source_Code_Location, align 16
	%8 = alloca %Source_Code_Location, align 16
		store %..rawptr %old_memory, %..rawptr* %0
		store i64 %old_size, i64* %1
		store i64 %new_size, i64* %2
		store i64 %alignment, i64* %3
	%9 = load %Source_Code_Location, %Source_Code_Location* %loc, align 8
	; IfStmt
	%10 = load %..rawptr, %..rawptr* %0, align 8
	%11 = icmp eq %..rawptr %10, zeroinitializer
	br i1 %11, label %if.then-1, label %if.done-2

if.then-1:
	; ReturnStmt
	%12 = load i64, i64* %2, align 8
	%13 = load i64, i64* %3, align 8
	%14 = load %Source_Code_Location, %Source_Code_Location* %loc, align 8
	store %Source_Code_Location zeroinitializer, %Source_Code_Location* %4
	store %Source_Code_Location %14, %Source_Code_Location* %4
	%15 = call %..rawptr @alloc(i64 %12, i64 %13, %Source_Code_Location* %4, %Context* noalias nonnull %__.context_ptr)
	ret %..rawptr %15

if.done-2:
	; IfStmt
	%16 = load i64, i64* %2, align 8
	%17 = icmp eq i64 %16, 0
	br i1 %17, label %if.then-3, label %if.done-4

if.then-3:
	%18 = load %..rawptr, %..rawptr* %0, align 8
	%19 = load %Source_Code_Location, %Source_Code_Location* %loc, align 8
	store %Source_Code_Location zeroinitializer, %Source_Code_Location* %5
	store %Source_Code_Location %19, %Source_Code_Location* %5
	call void @_preload-0.free-126(%..rawptr %18, %Source_Code_Location* %5, %Context* noalias nonnull %__.context_ptr)
	; ReturnStmt
	ret %..rawptr zeroinitializer

if.done-4:
	; IfStmt
	%20 = load i64, i64* %2, align 8
	%21 = load i64, i64* %1, align 8
	%22 = icmp eq i64 %20, %21
	br i1 %22, label %if.then-5, label %if.done-6

if.then-5:
	; ReturnStmt
	%23 = load %..rawptr, %..rawptr* %0, align 8
	ret %..rawptr %23

if.done-6:
	; new_memory
		%24 = load i64, i64* %2, align 8
	%25 = load i64, i64* %3, align 8
	%26 = load %Source_Code_Location, %Source_Code_Location* %loc, align 8
	store %Source_Code_Location zeroinitializer, %Source_Code_Location* %7
	store %Source_Code_Location %26, %Source_Code_Location* %7
	%27 = call %..rawptr @alloc(i64 %24, i64 %25, %Source_Code_Location* %7, %Context* noalias nonnull %__.context_ptr)
	store %..rawptr %27, %..rawptr* %6
	; IfStmt
	%28 = load %..rawptr, %..rawptr* %6, align 8
	%29 = icmp eq %..rawptr %28, zeroinitializer
	br i1 %29, label %if.then-7, label %if.done-8

if.then-7:
	; ReturnStmt
	ret %..rawptr zeroinitializer

if.done-8:
	%30 = load %..rawptr, %..rawptr* %6, align 8
	%31 = load %..rawptr, %..rawptr* %0, align 8
	; min
	%32 = load i64, i64* %1, align 8
	%33 = load i64, i64* %2, align 8
	%34 = icmp slt i64 %32, %33
	%35 = select i1 %34, i64 %32, i64 %33
	%36 = call %..rawptr @__mem_copy(%..rawptr %30, %..rawptr %31, i64 %35)
	%37 = load %..rawptr, %..rawptr* %0, align 8
	%38 = load %Source_Code_Location, %Source_Code_Location* %loc, align 8
	store %Source_Code_Location zeroinitializer, %Source_Code_Location* %8
	store %Source_Code_Location %38, %Source_Code_Location* %8
	call void @_preload-0.free-126(%..rawptr %37, %Source_Code_Location* %8, %Context* noalias nonnull %__.context_ptr)
	; ReturnStmt
	%39 = load %..rawptr, %..rawptr* %6, align 8
	ret %..rawptr %39
}

define %..rawptr @default_allocator_proc(%..rawptr %allocator_data, i8 %mode, i64 %size, i64 %alignment, %..rawptr %old_memory, i64 %old_size, i64 %flags, %Source_Code_Location* %loc, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca %..rawptr, align 8
	%1 = alloca i8, align 1
	%2 = alloca i64, align 8
	%3 = alloca i64, align 8
	%4 = alloca %..rawptr, align 8
	%5 = alloca i64, align 8
	%6 = alloca i64, align 8
	%7 = alloca %..rawptr, align 8
	%8 = alloca {%..any*, i64}, align 8
	%9 = alloca {%..any*, i64}, align 16
	%10 = alloca %Source_Code_Location, align 16
		store %..rawptr %allocator_data, %..rawptr* %0
		store i8 %mode, i8* %1
		store i64 %size, i64* %2
		store i64 %alignment, i64* %3
		store %..rawptr %old_memory, %..rawptr* %4
		store i64 %old_size, i64* %5
		store i64 %flags, i64* %6
	%11 = load %Source_Code_Location, %Source_Code_Location* %loc, align 8
	; SwitchStmt
	%12 = load i8, i8* %1, align 1
	%13 = icmp eq i8 %12, 0
	br i1 %13, label %switch.case.body-2, label %switch.case.next-1

switch.case.next-1:
	%14 = icmp eq i8 %12, 1
	br i1 %14, label %switch.fall.body-4, label %switch.case.next-3

switch.case.body-2:
	; ReturnStmt
	; SelectorExpr
	%15 = load i64, i64* %2, align 8
	%16 = call %..rawptr @os_windows-12.heap_alloc(i64 %15, %Context* noalias nonnull %__.context_ptr)
	ret %..rawptr %16

switch.case.next-3:
	%17 = icmp eq i8 %12, 2
	br i1 %17, label %switch.fall.body-6, label %switch.case.next-5

switch.fall.body-4:
	; SelectorExpr
	%18 = load %..rawptr, %..rawptr* %4, align 8
	call void @os_windows-12.heap_free(%..rawptr %18, %Context* noalias nonnull %__.context_ptr)
	; ReturnStmt
	ret %..rawptr zeroinitializer

switch.case.next-5:
	%19 = icmp eq i8 %12, 3
	br i1 %19, label %switch.fall.body-8, label %switch.case.next-7

switch.fall.body-6:
	br label %switch.done-9

switch.case.next-7:
	br label %switch.done-9

switch.fall.body-8:
	; ptr
		; SelectorExpr
	%20 = load %..rawptr, %..rawptr* %4, align 8
	%21 = load i64, i64* %2, align 8
	%22 = call %..rawptr @os_windows-12.heap_resize(%..rawptr %20, i64 %21, %Context* noalias nonnull %__.context_ptr)
	store %..rawptr %22, %..rawptr* %7
	%23 = load %..rawptr, %..rawptr* %7, align 8
	%24 = icmp ne %..rawptr %23, zeroinitializer
	; variadic call argument generation
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %8
	%25 = load {%..any*, i64}, {%..any*, i64}* %8, align 8
	%26 = call %Source_Code_Location @make_source_code_location(%..string {i8* getelementptr inbounds ([34 x i8], [34 x i8]* @__str$2, i64 0, i32 0), i64 33}, i64 578, i64 3, %..string {i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__str$3, i64 0, i32 0), i64 22})
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %9
	store {%..any*, i64} %25, {%..any*, i64}* %9
	store %Source_Code_Location zeroinitializer, %Source_Code_Location* %10
	store %Source_Code_Location %26, %Source_Code_Location* %10
	%27 = call i1 @assert(i1 %24, %..string zeroinitializer, {%..any*, i64}* %9, %Source_Code_Location* %10)
	; ReturnStmt
	%28 = load %..rawptr, %..rawptr* %7, align 8
	ret %..rawptr %28

switch.done-9:
	; ReturnStmt
	ret %..rawptr zeroinitializer
}

define %Allocator @default_allocator(%Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca %Allocator, align 8
	; ReturnStmt
	; CompoundLit
	store %Allocator zeroinitializer, %Allocator* %0
	store %Allocator {%..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64, %Source_Code_Location*, %Context*)* zeroinitializer, %..rawptr zeroinitializer}, %Allocator* %0
	%1 = bitcast %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64, %Source_Code_Location*, %Context*)* @default_allocator_proc to %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64, %Source_Code_Location*, %Context*)*
	%2 = getelementptr inbounds %Allocator, %Allocator* %0, i64 0, i32 0
	store %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64, %Source_Code_Location*, %Context*)* %1, %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64, %Source_Code_Location*, %Context*)** %2
	%3 = getelementptr inbounds %Allocator, %Allocator* %0, i64 0, i32 1
	store %..rawptr zeroinitializer, %..rawptr* %3
	%4 = load %Allocator, %Allocator* %0, align 8
	ret %Allocator %4
}

define %..rawptr @nil_allocator_proc(%..rawptr %allocator_data, i8 %mode, i64 %size, i64 %alignment, %..rawptr %old_memory, i64 %old_size, i64 %flags, %Source_Code_Location* %loc, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca %..rawptr, align 8
	%1 = alloca i8, align 1
	%2 = alloca i64, align 8
	%3 = alloca i64, align 8
	%4 = alloca %..rawptr, align 8
	%5 = alloca i64, align 8
	%6 = alloca i64, align 8
		store %..rawptr %allocator_data, %..rawptr* %0
		store i8 %mode, i8* %1
		store i64 %size, i64* %2
		store i64 %alignment, i64* %3
		store %..rawptr %old_memory, %..rawptr* %4
		store i64 %old_size, i64* %5
		store i64 %flags, i64* %6
	%7 = load %Source_Code_Location, %Source_Code_Location* %loc, align 8
	; ReturnStmt
	ret %..rawptr zeroinitializer
}

define %Allocator @nil_allocator(%Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca %Allocator, align 8
	; ReturnStmt
	; CompoundLit
	store %Allocator zeroinitializer, %Allocator* %0
	store %Allocator {%..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64, %Source_Code_Location*, %Context*)* zeroinitializer, %..rawptr zeroinitializer}, %Allocator* %0
	%1 = bitcast %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64, %Source_Code_Location*, %Context*)* @nil_allocator_proc to %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64, %Source_Code_Location*, %Context*)*
	%2 = getelementptr inbounds %Allocator, %Allocator* %0, i64 0, i32 0
	store %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64, %Source_Code_Location*, %Context*)* %1, %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64, %Source_Code_Location*, %Context*)** %2
	%3 = getelementptr inbounds %Allocator, %Allocator* %0, i64 0, i32 1
	store %..rawptr zeroinitializer, %..rawptr* %3
	%4 = load %Allocator, %Allocator* %0, align 8
	ret %Allocator %4
}

define i1 @assert(i1 %condition, %..string %message, {%..any*, i64}* %args, %Source_Code_Location* %loc) #0 {
decls-0:
	%0 = alloca i1, align 1
	%1 = alloca %..string, align 8
	%2 = alloca %..any, align 8
	%3 = alloca %..any, align 8
	%4 = alloca %..any, align 8
	%5 = alloca {%..any*, i64}, align 8
	%6 = alloca [3 x %..any], align 8
	%7 = alloca %Context, align 8
	%8 = alloca {%..any*, i64}, align 16
	%9 = alloca %..string, align 8
	%10 = alloca %..any, align 8
	%11 = alloca {%..any*, i64}, align 8
	%12 = alloca [1 x %..any], align 8
	%13 = alloca {%..any*, i64}, align 16
	%14 = alloca {%..any*, i64}, align 16
	%15 = alloca {%..any*, i64}, align 8
	%16 = alloca {%..any*, i64}, align 16
		store i1 %condition, i1* %0
		store %..string %message, %..string* %1
	%17 = load {%..any*, i64}, {%..any*, i64}* %args, align 8
	%18 = load %Source_Code_Location, %Source_Code_Location* %loc, align 8
	; IfStmt
	%19 = load i1, i1* %0, align 1
	br i1 %19, label %if.done-4, label %if.then-1

if.then-1:
	; SelectorExpr
	; SelectorExpr
	%20 = load i64, i64* @os_windows-12.stderr, align 8
	%21 = getelementptr inbounds %Source_Code_Location, %Source_Code_Location* %loc, i64 0, i32 0
	%22 = load %..string, %..string* %21, align 8
	%23 = getelementptr inbounds %Source_Code_Location, %Source_Code_Location* %loc, i64 0, i32 1
	%24 = load i64, i64* %23, align 8
	%25 = getelementptr inbounds %Source_Code_Location, %Source_Code_Location* %loc, i64 0, i32 2
	%26 = load i64, i64* %25, align 8
	store %..any zeroinitializer, %..any* %2
	%27 = bitcast %..string* %21 to %..rawptr
	%28 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%29 = getelementptr inbounds %..any, %..any* %2, i64 0, i32 0
	store %..rawptr %27, %..rawptr* %29
	%30 = getelementptr inbounds %..any, %..any* %2, i64 0, i32 1
	store %Type_Info* %28, %Type_Info** %30
	%31 = load %..any, %..any* %2, align 8
	store %..any zeroinitializer, %..any* %3
	%32 = bitcast i64* %23 to %..rawptr
	%33 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%34 = getelementptr inbounds %..any, %..any* %3, i64 0, i32 0
	store %..rawptr %32, %..rawptr* %34
	%35 = getelementptr inbounds %..any, %..any* %3, i64 0, i32 1
	store %Type_Info* %33, %Type_Info** %35
	%36 = load %..any, %..any* %3, align 8
	store %..any zeroinitializer, %..any* %4
	%37 = bitcast i64* %25 to %..rawptr
	%38 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%39 = getelementptr inbounds %..any, %..any* %4, i64 0, i32 0
	store %..rawptr %37, %..rawptr* %39
	%40 = getelementptr inbounds %..any, %..any* %4, i64 0, i32 1
	store %Type_Info* %38, %Type_Info** %40
	%41 = load %..any, %..any* %4, align 8
	; variadic call argument generation
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %5
	store [3 x %..any] zeroinitializer, [3 x %..any]* %6
	%42 = getelementptr inbounds [3 x %..any], [3 x %..any]* %6, i64 0, i32 0
	store %..any %31, %..any* %42
	%43 = getelementptr inbounds [3 x %..any], [3 x %..any]* %6, i64 0, i32 1
	store %..any %36, %..any* %43
	%44 = getelementptr inbounds [3 x %..any], [3 x %..any]* %6, i64 0, i32 2
	store %..any %41, %..any* %44
	%45 = getelementptr inbounds [3 x %..any], [3 x %..any]* %6, i64 0, i32 0
	%46 = getelementptr inbounds {%..any*, i64}, {%..any*, i64}* %5, i64 0, i32 0
	store %..any* %45, %..any** %46
	%47 = getelementptr inbounds {%..any*, i64}, {%..any*, i64}* %5, i64 0, i32 1
	store i64 3, i64* %47
	%48 = load {%..any*, i64}, {%..any*, i64}* %5, align 8
	store %Context zeroinitializer, %Context* %7
	%49 = load %Context, %Context* @__ggv$0, align 8
	store %Context %49, %Context* %7
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %8
	store {%..any*, i64} %48, {%..any*, i64}* %8
	%50 = call i64 @fmt-4.fprintf(i64 %20, %..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$4, i64 0, i32 0), i64 27}, {%..any*, i64}* %8, %Context* noalias nonnull %7)
	; IfStmt
	%51 = load %..string, %..string* %1, align 8
	%52 = extractvalue %..string %51, 1
	%53 = icmp sgt i64 %52, 0
	br i1 %53, label %if.then-2, label %if.done-3

if.then-2:
	; SelectorExpr
	; SelectorExpr
	%54 = load i64, i64* @os_windows-12.stderr, align 8
	store %..string zeroinitializer, %..string* %9
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$5, i64 0, i32 0), i64 2}, %..string* %9
	%55 = load %..string, %..string* %9, align 8
	store %..any zeroinitializer, %..any* %10
	%56 = bitcast %..string* %9 to %..rawptr
	%57 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%58 = getelementptr inbounds %..any, %..any* %10, i64 0, i32 0
	store %..rawptr %56, %..rawptr* %58
	%59 = getelementptr inbounds %..any, %..any* %10, i64 0, i32 1
	store %Type_Info* %57, %Type_Info** %59
	%60 = load %..any, %..any* %10, align 8
	; variadic call argument generation
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %11
	store [1 x %..any] zeroinitializer, [1 x %..any]* %12
	%61 = getelementptr inbounds [1 x %..any], [1 x %..any]* %12, i64 0, i32 0
	store %..any %60, %..any* %61
	%62 = getelementptr inbounds [1 x %..any], [1 x %..any]* %12, i64 0, i32 0
	%63 = getelementptr inbounds {%..any*, i64}, {%..any*, i64}* %11, i64 0, i32 0
	store %..any* %62, %..any** %63
	%64 = getelementptr inbounds {%..any*, i64}, {%..any*, i64}* %11, i64 0, i32 1
	store i64 1, i64* %64
	%65 = load {%..any*, i64}, {%..any*, i64}* %11, align 8
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %13
	store {%..any*, i64} %65, {%..any*, i64}* %13
	%66 = call i64 @fmt-4.fprint(i64 %54, {%..any*, i64}* %13, %Context* noalias nonnull %7)
	br label %if.done-3

if.done-3:
	; SelectorExpr
	; SelectorExpr
	%67 = load i64, i64* @os_windows-12.stderr, align 8
	%68 = load %..string, %..string* %1, align 8
	%69 = load {%..any*, i64}, {%..any*, i64}* %args, align 8
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %14
	store {%..any*, i64} %69, {%..any*, i64}* %14
	%70 = call i64 @fmt-4.fprintf(i64 %67, %..string %68, {%..any*, i64}* %14, %Context* noalias nonnull %7)
	; SelectorExpr
	; SelectorExpr
	%71 = load i64, i64* @os_windows-12.stderr, align 8
	; variadic call argument generation
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %15
	%72 = load {%..any*, i64}, {%..any*, i64}* %15, align 8
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %16
	store {%..any*, i64} %72, {%..any*, i64}* %16
	%73 = call i64 @fmt-4.fprintf(i64 %71, %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$6, i64 0, i32 0), i64 1}, {%..any*, i64}* %16, %Context* noalias nonnull %7)
	call ccc void @llvm.debugtrap()
	br label %if.done-4

if.done-4:
	; ReturnStmt
	%74 = load i1, i1* %0, align 1
	ret i1 %74
}

define void @panic(%..string %message, {%..any*, i64}* %args, %Source_Code_Location* %loc) #0 {
decls-0:
	%0 = alloca %..string, align 8
	%1 = alloca %..any, align 8
	%2 = alloca %..any, align 8
	%3 = alloca %..any, align 8
	%4 = alloca {%..any*, i64}, align 8
	%5 = alloca [3 x %..any], align 8
	%6 = alloca %Context, align 8
	%7 = alloca {%..any*, i64}, align 16
	%8 = alloca %..string, align 8
	%9 = alloca %..any, align 8
	%10 = alloca {%..any*, i64}, align 8
	%11 = alloca [1 x %..any], align 8
	%12 = alloca {%..any*, i64}, align 16
	%13 = alloca {%..any*, i64}, align 16
	%14 = alloca {%..any*, i64}, align 8
	%15 = alloca {%..any*, i64}, align 16
		store %..string %message, %..string* %0
	%16 = load {%..any*, i64}, {%..any*, i64}* %args, align 8
	%17 = load %Source_Code_Location, %Source_Code_Location* %loc, align 8
	; SelectorExpr
	; SelectorExpr
	%18 = load i64, i64* @os_windows-12.stderr, align 8
	%19 = getelementptr inbounds %Source_Code_Location, %Source_Code_Location* %loc, i64 0, i32 0
	%20 = load %..string, %..string* %19, align 8
	%21 = getelementptr inbounds %Source_Code_Location, %Source_Code_Location* %loc, i64 0, i32 1
	%22 = load i64, i64* %21, align 8
	%23 = getelementptr inbounds %Source_Code_Location, %Source_Code_Location* %loc, i64 0, i32 2
	%24 = load i64, i64* %23, align 8
	store %..any zeroinitializer, %..any* %1
	%25 = bitcast %..string* %19 to %..rawptr
	%26 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%27 = getelementptr inbounds %..any, %..any* %1, i64 0, i32 0
	store %..rawptr %25, %..rawptr* %27
	%28 = getelementptr inbounds %..any, %..any* %1, i64 0, i32 1
	store %Type_Info* %26, %Type_Info** %28
	%29 = load %..any, %..any* %1, align 8
	store %..any zeroinitializer, %..any* %2
	%30 = bitcast i64* %21 to %..rawptr
	%31 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%32 = getelementptr inbounds %..any, %..any* %2, i64 0, i32 0
	store %..rawptr %30, %..rawptr* %32
	%33 = getelementptr inbounds %..any, %..any* %2, i64 0, i32 1
	store %Type_Info* %31, %Type_Info** %33
	%34 = load %..any, %..any* %2, align 8
	store %..any zeroinitializer, %..any* %3
	%35 = bitcast i64* %23 to %..rawptr
	%36 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%37 = getelementptr inbounds %..any, %..any* %3, i64 0, i32 0
	store %..rawptr %35, %..rawptr* %37
	%38 = getelementptr inbounds %..any, %..any* %3, i64 0, i32 1
	store %Type_Info* %36, %Type_Info** %38
	%39 = load %..any, %..any* %3, align 8
	; variadic call argument generation
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %4
	store [3 x %..any] zeroinitializer, [3 x %..any]* %5
	%40 = getelementptr inbounds [3 x %..any], [3 x %..any]* %5, i64 0, i32 0
	store %..any %29, %..any* %40
	%41 = getelementptr inbounds [3 x %..any], [3 x %..any]* %5, i64 0, i32 1
	store %..any %34, %..any* %41
	%42 = getelementptr inbounds [3 x %..any], [3 x %..any]* %5, i64 0, i32 2
	store %..any %39, %..any* %42
	%43 = getelementptr inbounds [3 x %..any], [3 x %..any]* %5, i64 0, i32 0
	%44 = getelementptr inbounds {%..any*, i64}, {%..any*, i64}* %4, i64 0, i32 0
	store %..any* %43, %..any** %44
	%45 = getelementptr inbounds {%..any*, i64}, {%..any*, i64}* %4, i64 0, i32 1
	store i64 3, i64* %45
	%46 = load {%..any*, i64}, {%..any*, i64}* %4, align 8
	store %Context zeroinitializer, %Context* %6
	%47 = load %Context, %Context* @__ggv$0, align 8
	store %Context %47, %Context* %6
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %7
	store {%..any*, i64} %46, {%..any*, i64}* %7
	%48 = call i64 @fmt-4.fprintf(i64 %18, %..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$7, i64 0, i32 0), i64 15}, {%..any*, i64}* %7, %Context* noalias nonnull %6)
	; IfStmt
	%49 = load %..string, %..string* %0, align 8
	%50 = extractvalue %..string %49, 1
	%51 = icmp sgt i64 %50, 0
	br i1 %51, label %if.then-1, label %if.done-2

if.then-1:
	; SelectorExpr
	; SelectorExpr
	%52 = load i64, i64* @os_windows-12.stderr, align 8
	store %..string zeroinitializer, %..string* %8
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$8, i64 0, i32 0), i64 2}, %..string* %8
	%53 = load %..string, %..string* %8, align 8
	store %..any zeroinitializer, %..any* %9
	%54 = bitcast %..string* %8 to %..rawptr
	%55 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%56 = getelementptr inbounds %..any, %..any* %9, i64 0, i32 0
	store %..rawptr %54, %..rawptr* %56
	%57 = getelementptr inbounds %..any, %..any* %9, i64 0, i32 1
	store %Type_Info* %55, %Type_Info** %57
	%58 = load %..any, %..any* %9, align 8
	; variadic call argument generation
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %10
	store [1 x %..any] zeroinitializer, [1 x %..any]* %11
	%59 = getelementptr inbounds [1 x %..any], [1 x %..any]* %11, i64 0, i32 0
	store %..any %58, %..any* %59
	%60 = getelementptr inbounds [1 x %..any], [1 x %..any]* %11, i64 0, i32 0
	%61 = getelementptr inbounds {%..any*, i64}, {%..any*, i64}* %10, i64 0, i32 0
	store %..any* %60, %..any** %61
	%62 = getelementptr inbounds {%..any*, i64}, {%..any*, i64}* %10, i64 0, i32 1
	store i64 1, i64* %62
	%63 = load {%..any*, i64}, {%..any*, i64}* %10, align 8
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %12
	store {%..any*, i64} %63, {%..any*, i64}* %12
	%64 = call i64 @fmt-4.fprint(i64 %52, {%..any*, i64}* %12, %Context* noalias nonnull %6)
	br label %if.done-2

if.done-2:
	; SelectorExpr
	; SelectorExpr
	%65 = load i64, i64* @os_windows-12.stderr, align 8
	%66 = load %..string, %..string* %0, align 8
	%67 = load {%..any*, i64}, {%..any*, i64}* %args, align 8
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %13
	store {%..any*, i64} %67, {%..any*, i64}* %13
	%68 = call i64 @fmt-4.fprintf(i64 %65, %..string %66, {%..any*, i64}* %13, %Context* noalias nonnull %6)
	; SelectorExpr
	; SelectorExpr
	%69 = load i64, i64* @os_windows-12.stderr, align 8
	; variadic call argument generation
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %14
	%70 = load {%..any*, i64}, {%..any*, i64}* %14, align 8
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %15
	store {%..any*, i64} %70, {%..any*, i64}* %15
	%71 = call i64 @fmt-4.fprintf(i64 %69, %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$9, i64 0, i32 0), i64 1}, {%..any*, i64}* %15, %Context* noalias nonnull %6)
	call ccc void @llvm.debugtrap()
	ret void
}

define i1 @__string_eq(%..string %a, %..string %b) #0 {
decls-0:
	%0 = alloca %..string, align 8
	%1 = alloca %..string, align 8
		store %..string %a, %..string* %0
		store %..string %b, %..string* %1
	; SwitchStmt
	%2 = load %..string, %..string* %0, align 8
	%3 = extractvalue %..string %2, 1
	%4 = load %..string, %..string* %1, align 8
	%5 = extractvalue %..string %4, 1
	%6 = icmp ne i64 %3, %5
	%7 = icmp eq i1 true, %6
	br i1 %7, label %switch.case.body-2, label %switch.case.next-1

switch.case.next-1:
	%8 = load %..string, %..string* %0, align 8
	%9 = extractvalue %..string %8, 1
	%10 = icmp eq i64 %9, 0
	%11 = icmp eq i1 true, %10
	br i1 %11, label %switch.fall.body-4, label %switch.case.next-3

switch.case.body-2:
	; ReturnStmt
	ret i1 false

switch.case.next-3:
	; IndexExpr
	%12 = load %..string, %..string* %0, align 8
	%13 = extractvalue %..string %12, 0
	%14 = extractvalue %..string %12, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([34 x i8], [34 x i8]* @__str$a, i64 0, i32 0), i64 33}, i64 630, i64 10, i64 0, i64 %14)
	%15 = getelementptr inbounds i8, i8* %13, i64 0
	%16 = getelementptr inbounds i8, i8* %15, i64 0
	; IndexExpr
	%17 = load %..string, %..string* %1, align 8
	%18 = extractvalue %..string %17, 0
	%19 = extractvalue %..string %17, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([34 x i8], [34 x i8]* @__str$b, i64 0, i32 0), i64 33}, i64 630, i64 19, i64 0, i64 %19)
	%20 = getelementptr inbounds i8, i8* %18, i64 0
	%21 = getelementptr inbounds i8, i8* %20, i64 0
	%22 = icmp eq i8* %16, %21
	%23 = icmp eq i1 true, %22
	br i1 %23, label %switch.fall.body-6, label %switch.case.next-5

switch.fall.body-4:
	; ReturnStmt
	ret i1 true

switch.case.next-5:
	; ReturnStmt
	%24 = load %..string, %..string* %0, align 8
	%25 = load %..string, %..string* %1, align 8
	%26 = call i64 @__string_cmp(%..string %24, %..string %25)
	%27 = icmp eq i64 %26, 0
	ret i1 %27

switch.fall.body-6:
	; ReturnStmt
	ret i1 true
}

define i64 @__string_cmp(%..string %a, %..string %b) #0 {
decls-0:
	%0 = alloca %..string, align 8
	%1 = alloca %..string, align 8
		store %..string %a, %..string* %0
		store %..string %b, %..string* %1
	; ReturnStmt
	; IndexExpr
	%2 = load %..string, %..string* %0, align 8
	%3 = extractvalue %..string %2, 0
	%4 = extractvalue %..string %2, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([34 x i8], [34 x i8]* @__str$c, i64 0, i32 0), i64 33}, i64 636, i64 26, i64 0, i64 %4)
	%5 = getelementptr inbounds i8, i8* %3, i64 0
	%6 = getelementptr inbounds i8, i8* %5, i64 0
	; IndexExpr
	%7 = load %..string, %..string* %1, align 8
	%8 = extractvalue %..string %7, 0
	%9 = extractvalue %..string %7, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([34 x i8], [34 x i8]* @__str$d, i64 0, i32 0), i64 33}, i64 636, i64 33, i64 0, i64 %9)
	%10 = getelementptr inbounds i8, i8* %8, i64 0
	%11 = getelementptr inbounds i8, i8* %10, i64 0
	; min
	%12 = load %..string, %..string* %0, align 8
	%13 = extractvalue %..string %12, 1
	%14 = load %..string, %..string* %1, align 8
	%15 = extractvalue %..string %14, 1
	%16 = icmp slt i64 %13, %15
	%17 = select i1 %16, i64 %13, i64 %15
	%18 = call i64 @__mem_compare(i8* %6, i8* %11, i64 %17)
	ret i64 %18
}

define i1 @__string_ne(%..string %a, %..string %b) alwaysinline #1 {
decls-0:
	%0 = alloca %..string, align 8
	%1 = alloca %..string, align 8
		store %..string %a, %..string* %0
		store %..string %b, %..string* %1
	; ReturnStmt
	%2 = load %..string, %..string* %0, align 8
	%3 = load %..string, %..string* %1, align 8
	%4 = call i1 @__string_eq(%..string %2, %..string %3)
	%5 = xor i1 -1, %4
	ret i1 %5
}

define i1 @__string_lt(%..string %a, %..string %b) alwaysinline #1 {
decls-0:
	%0 = alloca %..string, align 8
	%1 = alloca %..string, align 8
		store %..string %a, %..string* %0
		store %..string %b, %..string* %1
	; ReturnStmt
	%2 = load %..string, %..string* %0, align 8
	%3 = load %..string, %..string* %1, align 8
	%4 = call i64 @__string_cmp(%..string %2, %..string %3)
	%5 = icmp slt i64 %4, 0
	ret i1 %5
}

define i1 @__string_gt(%..string %a, %..string %b) alwaysinline #1 {
decls-0:
	%0 = alloca %..string, align 8
	%1 = alloca %..string, align 8
		store %..string %a, %..string* %0
		store %..string %b, %..string* %1
	; ReturnStmt
	%2 = load %..string, %..string* %0, align 8
	%3 = load %..string, %..string* %1, align 8
	%4 = call i64 @__string_cmp(%..string %2, %..string %3)
	%5 = icmp sgt i64 %4, 0
	ret i1 %5
}

define i1 @__string_le(%..string %a, %..string %b) alwaysinline #1 {
decls-0:
	%0 = alloca %..string, align 8
	%1 = alloca %..string, align 8
		store %..string %a, %..string* %0
		store %..string %b, %..string* %1
	; ReturnStmt
	%2 = load %..string, %..string* %0, align 8
	%3 = load %..string, %..string* %1, align 8
	%4 = call i64 @__string_cmp(%..string %2, %..string %3)
	%5 = icmp sle i64 %4, 0
	ret i1 %5
}

define i1 @__string_ge(%..string %a, %..string %b) alwaysinline #1 {
decls-0:
	%0 = alloca %..string, align 8
	%1 = alloca %..string, align 8
		store %..string %a, %..string* %0
		store %..string %b, %..string* %1
	; ReturnStmt
	%2 = load %..string, %..string* %0, align 8
	%3 = load %..string, %..string* %1, align 8
	%4 = call i64 @__string_cmp(%..string %2, %..string %3)
	%5 = icmp sge i64 %4, 0
	ret i1 %5
}

define i1 @__complex64_eq(%..complex64 %a, %..complex64 %b) alwaysinline #1 {
decls-0:
	%0 = alloca %..complex64, align 4
	%1 = alloca %..complex64, align 4
		store %..complex64 %a, %..complex64* %0
		store %..complex64 %b, %..complex64* %1
	; ReturnStmt
	; real
	%2 = load %..complex64, %..complex64* %0, align 4
	%3 = extractvalue %..complex64 %2, 0
	; real
	%4 = load %..complex64, %..complex64* %1, align 4
	%5 = extractvalue %..complex64 %4, 0
	%6 = fcmp oeq float %3, %5
	; real
	%7 = load %..complex64, %..complex64* %0, align 4
	%8 = extractvalue %..complex64 %7, 0
	; real
	%9 = load %..complex64, %..complex64* %1, align 4
	%10 = extractvalue %..complex64 %9, 0
	%11 = fcmp oeq float %8, %10
	br i1 %11, label %logical.cmp.rhs-1, label %logical.cmp.done-2

logical.cmp.rhs-1:
	; imag
	%12 = load %..complex64, %..complex64* %0, align 4
	%13 = extractvalue %..complex64 %12, 1
	; imag
	%14 = load %..complex64, %..complex64* %1, align 4
	%15 = extractvalue %..complex64 %14, 1
	%16 = fcmp oeq float %13, %15
	br label %logical.cmp.done-2

logical.cmp.done-2:
	%17 = phi i1 [ false, %decls-0 ], [ %16, %logical.cmp.rhs-1 ]
	ret i1 %17
}

define i1 @__complex64_ne(%..complex64 %a, %..complex64 %b) alwaysinline #1 {
decls-0:
	%0 = alloca %..complex64, align 4
	%1 = alloca %..complex64, align 4
		store %..complex64 %a, %..complex64* %0
		store %..complex64 %b, %..complex64* %1
	; ReturnStmt
	; real
	%2 = load %..complex64, %..complex64* %0, align 4
	%3 = extractvalue %..complex64 %2, 0
	; real
	%4 = load %..complex64, %..complex64* %1, align 4
	%5 = extractvalue %..complex64 %4, 0
	%6 = fcmp one float %3, %5
	; real
	%7 = load %..complex64, %..complex64* %0, align 4
	%8 = extractvalue %..complex64 %7, 0
	; real
	%9 = load %..complex64, %..complex64* %1, align 4
	%10 = extractvalue %..complex64 %9, 0
	%11 = fcmp one float %8, %10
	br i1 %11, label %logical.cmp.done-2, label %logical.cmp.rhs-1

logical.cmp.rhs-1:
	; imag
	%12 = load %..complex64, %..complex64* %0, align 4
	%13 = extractvalue %..complex64 %12, 1
	; imag
	%14 = load %..complex64, %..complex64* %1, align 4
	%15 = extractvalue %..complex64 %14, 1
	%16 = fcmp one float %13, %15
	br label %logical.cmp.done-2

logical.cmp.done-2:
	%17 = phi i1 [ true, %decls-0 ], [ %16, %logical.cmp.rhs-1 ]
	ret i1 %17
}

define i1 @__complex128_eq(%..complex128* %a, %..complex128* %b) alwaysinline #1 {
decls-0:
	%0 = load %..complex128, %..complex128* %a, align 8
	%1 = load %..complex128, %..complex128* %b, align 8
	; ReturnStmt
	; real
	%2 = load %..complex128, %..complex128* %a, align 8
	%3 = extractvalue %..complex128 %2, 0
	; real
	%4 = load %..complex128, %..complex128* %b, align 8
	%5 = extractvalue %..complex128 %4, 0
	%6 = fcmp oeq double %3, %5
	; real
	%7 = load %..complex128, %..complex128* %a, align 8
	%8 = extractvalue %..complex128 %7, 0
	; real
	%9 = load %..complex128, %..complex128* %b, align 8
	%10 = extractvalue %..complex128 %9, 0
	%11 = fcmp oeq double %8, %10
	br i1 %11, label %logical.cmp.rhs-1, label %logical.cmp.done-2

logical.cmp.rhs-1:
	; imag
	%12 = load %..complex128, %..complex128* %a, align 8
	%13 = extractvalue %..complex128 %12, 1
	; imag
	%14 = load %..complex128, %..complex128* %b, align 8
	%15 = extractvalue %..complex128 %14, 1
	%16 = fcmp oeq double %13, %15
	br label %logical.cmp.done-2

logical.cmp.done-2:
	%17 = phi i1 [ false, %decls-0 ], [ %16, %logical.cmp.rhs-1 ]
	ret i1 %17
}

define i1 @__complex128_ne(%..complex128* %a, %..complex128* %b) alwaysinline #1 {
decls-0:
	%0 = load %..complex128, %..complex128* %a, align 8
	%1 = load %..complex128, %..complex128* %b, align 8
	; ReturnStmt
	; real
	%2 = load %..complex128, %..complex128* %a, align 8
	%3 = extractvalue %..complex128 %2, 0
	; real
	%4 = load %..complex128, %..complex128* %b, align 8
	%5 = extractvalue %..complex128 %4, 0
	%6 = fcmp one double %3, %5
	; real
	%7 = load %..complex128, %..complex128* %a, align 8
	%8 = extractvalue %..complex128 %7, 0
	; real
	%9 = load %..complex128, %..complex128* %b, align 8
	%10 = extractvalue %..complex128 %9, 0
	%11 = fcmp one double %8, %10
	br i1 %11, label %logical.cmp.done-2, label %logical.cmp.rhs-1

logical.cmp.rhs-1:
	; imag
	%12 = load %..complex128, %..complex128* %a, align 8
	%13 = extractvalue %..complex128 %12, 1
	; imag
	%14 = load %..complex128, %..complex128* %b, align 8
	%15 = extractvalue %..complex128 %14, 1
	%16 = fcmp one double %13, %15
	br label %logical.cmp.done-2

logical.cmp.done-2:
	%17 = phi i1 [ true, %decls-0 ], [ %16, %logical.cmp.rhs-1 ]
	ret i1 %17
}

define void @__bounds_check_error(%..string %file, i64 %line, i64 %column, i64 %index, i64 %count) #0 {
decls-0:
	%0 = alloca %..string, align 8
	%1 = alloca i64, align 8
	%2 = alloca i64, align 8
	%3 = alloca i64, align 8
	%4 = alloca i64, align 8
	%5 = alloca %..any, align 8
	%6 = alloca %..any, align 8
	%7 = alloca %..any, align 8
	%8 = alloca %..any, align 8
	%9 = alloca %..any, align 8
	%10 = alloca {%..any*, i64}, align 8
	%11 = alloca [5 x %..any], align 8
	%12 = alloca %Context, align 8
	%13 = alloca {%..any*, i64}, align 16
		store %..string %file, %..string* %0
		store i64 %line, i64* %1
		store i64 %column, i64* %2
		store i64 %index, i64* %3
		store i64 %count, i64* %4
	; IfStmt
	%14 = load i64, i64* %3, align 8
	%15 = icmp sle i64 0, %14
	br i1 %15, label %cmp.and-1, label %if.done-3

cmp.and-1:
	%16 = load i64, i64* %3, align 8
	%17 = load i64, i64* %4, align 8
	%18 = icmp slt i64 %16, %17
	br i1 %18, label %if.then-2, label %if.done-3

if.then-2:
	; ReturnStmt
	ret void

if.done-3:
	; SelectorExpr
	; SelectorExpr
	%19 = load i64, i64* @os_windows-12.stderr, align 8
	%20 = load %..string, %..string* %0, align 8
	%21 = load i64, i64* %1, align 8
	%22 = load i64, i64* %2, align 8
	%23 = load i64, i64* %3, align 8
	%24 = load i64, i64* %4, align 8
	store %..any zeroinitializer, %..any* %5
	%25 = bitcast %..string* %0 to %..rawptr
	%26 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%27 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 0
	store %..rawptr %25, %..rawptr* %27
	%28 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 1
	store %Type_Info* %26, %Type_Info** %28
	%29 = load %..any, %..any* %5, align 8
	store %..any zeroinitializer, %..any* %6
	%30 = bitcast i64* %1 to %..rawptr
	%31 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%32 = getelementptr inbounds %..any, %..any* %6, i64 0, i32 0
	store %..rawptr %30, %..rawptr* %32
	%33 = getelementptr inbounds %..any, %..any* %6, i64 0, i32 1
	store %Type_Info* %31, %Type_Info** %33
	%34 = load %..any, %..any* %6, align 8
	store %..any zeroinitializer, %..any* %7
	%35 = bitcast i64* %2 to %..rawptr
	%36 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%37 = getelementptr inbounds %..any, %..any* %7, i64 0, i32 0
	store %..rawptr %35, %..rawptr* %37
	%38 = getelementptr inbounds %..any, %..any* %7, i64 0, i32 1
	store %Type_Info* %36, %Type_Info** %38
	%39 = load %..any, %..any* %7, align 8
	store %..any zeroinitializer, %..any* %8
	%40 = bitcast i64* %3 to %..rawptr
	%41 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%42 = getelementptr inbounds %..any, %..any* %8, i64 0, i32 0
	store %..rawptr %40, %..rawptr* %42
	%43 = getelementptr inbounds %..any, %..any* %8, i64 0, i32 1
	store %Type_Info* %41, %Type_Info** %43
	%44 = load %..any, %..any* %8, align 8
	store %..any zeroinitializer, %..any* %9
	%45 = bitcast i64* %4 to %..rawptr
	%46 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%47 = getelementptr inbounds %..any, %..any* %9, i64 0, i32 0
	store %..rawptr %45, %..rawptr* %47
	%48 = getelementptr inbounds %..any, %..any* %9, i64 0, i32 1
	store %Type_Info* %46, %Type_Info** %48
	%49 = load %..any, %..any* %9, align 8
	; variadic call argument generation
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %10
	store [5 x %..any] zeroinitializer, [5 x %..any]* %11
	%50 = getelementptr inbounds [5 x %..any], [5 x %..any]* %11, i64 0, i32 0
	store %..any %29, %..any* %50
	%51 = getelementptr inbounds [5 x %..any], [5 x %..any]* %11, i64 0, i32 1
	store %..any %34, %..any* %51
	%52 = getelementptr inbounds [5 x %..any], [5 x %..any]* %11, i64 0, i32 2
	store %..any %39, %..any* %52
	%53 = getelementptr inbounds [5 x %..any], [5 x %..any]* %11, i64 0, i32 3
	store %..any %44, %..any* %53
	%54 = getelementptr inbounds [5 x %..any], [5 x %..any]* %11, i64 0, i32 4
	store %..any %49, %..any* %54
	%55 = getelementptr inbounds [5 x %..any], [5 x %..any]* %11, i64 0, i32 0
	%56 = getelementptr inbounds {%..any*, i64}, {%..any*, i64}* %10, i64 0, i32 0
	store %..any* %55, %..any** %56
	%57 = getelementptr inbounds {%..any*, i64}, {%..any*, i64}* %10, i64 0, i32 1
	store i64 5, i64* %57
	%58 = load {%..any*, i64}, {%..any*, i64}* %10, align 8
	store %Context zeroinitializer, %Context* %12
	%59 = load %Context, %Context* @__ggv$0, align 8
	store %Context %59, %Context* %12
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %13
	store {%..any*, i64} %58, {%..any*, i64}* %13
	%60 = call i64 @fmt-4.fprintf(i64 %19, %..string {i8* getelementptr inbounds ([49 x i8], [49 x i8]* @__str$e, i64 0, i32 0), i64 48}, {%..any*, i64}* %13, %Context* noalias nonnull %12)
	call ccc void @llvm.debugtrap()
	ret void
}

define void @__slice_expr_error(%..string %file, i64 %line, i64 %column, i64 %low, i64 %high) #0 {
decls-0:
	%0 = alloca %..string, align 8
	%1 = alloca i64, align 8
	%2 = alloca i64, align 8
	%3 = alloca i64, align 8
	%4 = alloca i64, align 8
	%5 = alloca %..any, align 8
	%6 = alloca %..any, align 8
	%7 = alloca %..any, align 8
	%8 = alloca %..any, align 8
	%9 = alloca %..any, align 8
	%10 = alloca {%..any*, i64}, align 8
	%11 = alloca [5 x %..any], align 8
	%12 = alloca %Context, align 8
	%13 = alloca {%..any*, i64}, align 16
		store %..string %file, %..string* %0
		store i64 %line, i64* %1
		store i64 %column, i64* %2
		store i64 %low, i64* %3
		store i64 %high, i64* %4
	; IfStmt
	%14 = load i64, i64* %3, align 8
	%15 = icmp sle i64 0, %14
	br i1 %15, label %cmp.and-1, label %if.done-3

cmp.and-1:
	%16 = load i64, i64* %3, align 8
	%17 = load i64, i64* %4, align 8
	%18 = icmp sle i64 %16, %17
	br i1 %18, label %if.then-2, label %if.done-3

if.then-2:
	; ReturnStmt
	ret void

if.done-3:
	; SelectorExpr
	; SelectorExpr
	%19 = load i64, i64* @os_windows-12.stderr, align 8
	%20 = load %..string, %..string* %0, align 8
	%21 = load i64, i64* %1, align 8
	%22 = load i64, i64* %2, align 8
	%23 = load i64, i64* %3, align 8
	%24 = load i64, i64* %4, align 8
	store %..any zeroinitializer, %..any* %5
	%25 = bitcast %..string* %0 to %..rawptr
	%26 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%27 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 0
	store %..rawptr %25, %..rawptr* %27
	%28 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 1
	store %Type_Info* %26, %Type_Info** %28
	%29 = load %..any, %..any* %5, align 8
	store %..any zeroinitializer, %..any* %6
	%30 = bitcast i64* %1 to %..rawptr
	%31 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%32 = getelementptr inbounds %..any, %..any* %6, i64 0, i32 0
	store %..rawptr %30, %..rawptr* %32
	%33 = getelementptr inbounds %..any, %..any* %6, i64 0, i32 1
	store %Type_Info* %31, %Type_Info** %33
	%34 = load %..any, %..any* %6, align 8
	store %..any zeroinitializer, %..any* %7
	%35 = bitcast i64* %2 to %..rawptr
	%36 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%37 = getelementptr inbounds %..any, %..any* %7, i64 0, i32 0
	store %..rawptr %35, %..rawptr* %37
	%38 = getelementptr inbounds %..any, %..any* %7, i64 0, i32 1
	store %Type_Info* %36, %Type_Info** %38
	%39 = load %..any, %..any* %7, align 8
	store %..any zeroinitializer, %..any* %8
	%40 = bitcast i64* %3 to %..rawptr
	%41 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%42 = getelementptr inbounds %..any, %..any* %8, i64 0, i32 0
	store %..rawptr %40, %..rawptr* %42
	%43 = getelementptr inbounds %..any, %..any* %8, i64 0, i32 1
	store %Type_Info* %41, %Type_Info** %43
	%44 = load %..any, %..any* %8, align 8
	store %..any zeroinitializer, %..any* %9
	%45 = bitcast i64* %4 to %..rawptr
	%46 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%47 = getelementptr inbounds %..any, %..any* %9, i64 0, i32 0
	store %..rawptr %45, %..rawptr* %47
	%48 = getelementptr inbounds %..any, %..any* %9, i64 0, i32 1
	store %Type_Info* %46, %Type_Info** %48
	%49 = load %..any, %..any* %9, align 8
	; variadic call argument generation
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %10
	store [5 x %..any] zeroinitializer, [5 x %..any]* %11
	%50 = getelementptr inbounds [5 x %..any], [5 x %..any]* %11, i64 0, i32 0
	store %..any %29, %..any* %50
	%51 = getelementptr inbounds [5 x %..any], [5 x %..any]* %11, i64 0, i32 1
	store %..any %34, %..any* %51
	%52 = getelementptr inbounds [5 x %..any], [5 x %..any]* %11, i64 0, i32 2
	store %..any %39, %..any* %52
	%53 = getelementptr inbounds [5 x %..any], [5 x %..any]* %11, i64 0, i32 3
	store %..any %44, %..any* %53
	%54 = getelementptr inbounds [5 x %..any], [5 x %..any]* %11, i64 0, i32 4
	store %..any %49, %..any* %54
	%55 = getelementptr inbounds [5 x %..any], [5 x %..any]* %11, i64 0, i32 0
	%56 = getelementptr inbounds {%..any*, i64}, {%..any*, i64}* %10, i64 0, i32 0
	store %..any* %55, %..any** %56
	%57 = getelementptr inbounds {%..any*, i64}, {%..any*, i64}* %10, i64 0, i32 1
	store i64 5, i64* %57
	%58 = load {%..any*, i64}, {%..any*, i64}* %10, align 8
	store %Context zeroinitializer, %Context* %12
	%59 = load %Context, %Context* @__ggv$0, align 8
	store %Context %59, %Context* %12
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %13
	store {%..any*, i64} %58, {%..any*, i64}* %13
	%60 = call i64 @fmt-4.fprintf(i64 %19, %..string {i8* getelementptr inbounds ([41 x i8], [41 x i8]* @__str$f, i64 0, i32 0), i64 40}, {%..any*, i64}* %13, %Context* noalias nonnull %12)
	call ccc void @llvm.debugtrap()
	ret void
}

define void @__dynamic_array_expr_error(%..string %file, i64 %line, i64 %column, i64 %low, i64 %high, i64 %max) #0 {
decls-0:
	%0 = alloca %..string, align 8
	%1 = alloca i64, align 8
	%2 = alloca i64, align 8
	%3 = alloca i64, align 8
	%4 = alloca i64, align 8
	%5 = alloca i64, align 8
	%6 = alloca %..any, align 8
	%7 = alloca %..any, align 8
	%8 = alloca %..any, align 8
	%9 = alloca %..any, align 8
	%10 = alloca %..any, align 8
	%11 = alloca %..any, align 8
	%12 = alloca {%..any*, i64}, align 8
	%13 = alloca [6 x %..any], align 8
	%14 = alloca %Context, align 8
	%15 = alloca {%..any*, i64}, align 16
		store %..string %file, %..string* %0
		store i64 %line, i64* %1
		store i64 %column, i64* %2
		store i64 %low, i64* %3
		store i64 %high, i64* %4
		store i64 %max, i64* %5
	; IfStmt
	%16 = load i64, i64* %3, align 8
	%17 = icmp sle i64 0, %16
	br i1 %17, label %cmp.and-1, label %if.done-4

cmp.and-1:
	%18 = load i64, i64* %3, align 8
	%19 = load i64, i64* %4, align 8
	%20 = icmp sle i64 %18, %19
	br i1 %20, label %cmp.and-2, label %if.done-4

cmp.and-2:
	%21 = load i64, i64* %4, align 8
	%22 = load i64, i64* %5, align 8
	%23 = icmp sle i64 %21, %22
	br i1 %23, label %if.then-3, label %if.done-4

if.then-3:
	; ReturnStmt
	ret void

if.done-4:
	; SelectorExpr
	; SelectorExpr
	%24 = load i64, i64* @os_windows-12.stderr, align 8
	%25 = load %..string, %..string* %0, align 8
	%26 = load i64, i64* %1, align 8
	%27 = load i64, i64* %2, align 8
	%28 = load i64, i64* %3, align 8
	%29 = load i64, i64* %4, align 8
	%30 = load i64, i64* %5, align 8
	store %..any zeroinitializer, %..any* %6
	%31 = bitcast %..string* %0 to %..rawptr
	%32 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%33 = getelementptr inbounds %..any, %..any* %6, i64 0, i32 0
	store %..rawptr %31, %..rawptr* %33
	%34 = getelementptr inbounds %..any, %..any* %6, i64 0, i32 1
	store %Type_Info* %32, %Type_Info** %34
	%35 = load %..any, %..any* %6, align 8
	store %..any zeroinitializer, %..any* %7
	%36 = bitcast i64* %1 to %..rawptr
	%37 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%38 = getelementptr inbounds %..any, %..any* %7, i64 0, i32 0
	store %..rawptr %36, %..rawptr* %38
	%39 = getelementptr inbounds %..any, %..any* %7, i64 0, i32 1
	store %Type_Info* %37, %Type_Info** %39
	%40 = load %..any, %..any* %7, align 8
	store %..any zeroinitializer, %..any* %8
	%41 = bitcast i64* %2 to %..rawptr
	%42 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%43 = getelementptr inbounds %..any, %..any* %8, i64 0, i32 0
	store %..rawptr %41, %..rawptr* %43
	%44 = getelementptr inbounds %..any, %..any* %8, i64 0, i32 1
	store %Type_Info* %42, %Type_Info** %44
	%45 = load %..any, %..any* %8, align 8
	store %..any zeroinitializer, %..any* %9
	%46 = bitcast i64* %3 to %..rawptr
	%47 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%48 = getelementptr inbounds %..any, %..any* %9, i64 0, i32 0
	store %..rawptr %46, %..rawptr* %48
	%49 = getelementptr inbounds %..any, %..any* %9, i64 0, i32 1
	store %Type_Info* %47, %Type_Info** %49
	%50 = load %..any, %..any* %9, align 8
	store %..any zeroinitializer, %..any* %10
	%51 = bitcast i64* %4 to %..rawptr
	%52 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%53 = getelementptr inbounds %..any, %..any* %10, i64 0, i32 0
	store %..rawptr %51, %..rawptr* %53
	%54 = getelementptr inbounds %..any, %..any* %10, i64 0, i32 1
	store %Type_Info* %52, %Type_Info** %54
	%55 = load %..any, %..any* %10, align 8
	store %..any zeroinitializer, %..any* %11
	%56 = bitcast i64* %5 to %..rawptr
	%57 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%58 = getelementptr inbounds %..any, %..any* %11, i64 0, i32 0
	store %..rawptr %56, %..rawptr* %58
	%59 = getelementptr inbounds %..any, %..any* %11, i64 0, i32 1
	store %Type_Info* %57, %Type_Info** %59
	%60 = load %..any, %..any* %11, align 8
	; variadic call argument generation
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %12
	store [6 x %..any] zeroinitializer, [6 x %..any]* %13
	%61 = getelementptr inbounds [6 x %..any], [6 x %..any]* %13, i64 0, i32 0
	store %..any %35, %..any* %61
	%62 = getelementptr inbounds [6 x %..any], [6 x %..any]* %13, i64 0, i32 1
	store %..any %40, %..any* %62
	%63 = getelementptr inbounds [6 x %..any], [6 x %..any]* %13, i64 0, i32 2
	store %..any %45, %..any* %63
	%64 = getelementptr inbounds [6 x %..any], [6 x %..any]* %13, i64 0, i32 3
	store %..any %50, %..any* %64
	%65 = getelementptr inbounds [6 x %..any], [6 x %..any]* %13, i64 0, i32 4
	store %..any %55, %..any* %65
	%66 = getelementptr inbounds [6 x %..any], [6 x %..any]* %13, i64 0, i32 5
	store %..any %60, %..any* %66
	%67 = getelementptr inbounds [6 x %..any], [6 x %..any]* %13, i64 0, i32 0
	%68 = getelementptr inbounds {%..any*, i64}, {%..any*, i64}* %12, i64 0, i32 0
	store %..any* %67, %..any** %68
	%69 = getelementptr inbounds {%..any*, i64}, {%..any*, i64}* %12, i64 0, i32 1
	store i64 6, i64* %69
	%70 = load {%..any*, i64}, {%..any*, i64}* %12, align 8
	store %Context zeroinitializer, %Context* %14
	%71 = load %Context, %Context* @__ggv$0, align 8
	store %Context %71, %Context* %14
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %15
	store {%..any*, i64} %70, {%..any*, i64}* %15
	%72 = call i64 @fmt-4.fprintf(i64 %24, %..string {i8* getelementptr inbounds ([45 x i8], [45 x i8]* @__str$10, i64 0, i32 0), i64 44}, {%..any*, i64}* %15, %Context* noalias nonnull %14)
	call ccc void @llvm.debugtrap()
	ret void
}

define void @__substring_expr_error(%..string %file, i64 %line, i64 %column, i64 %low, i64 %high) #0 {
decls-0:
	%0 = alloca %..string, align 8
	%1 = alloca i64, align 8
	%2 = alloca i64, align 8
	%3 = alloca i64, align 8
	%4 = alloca i64, align 8
	%5 = alloca %..any, align 8
	%6 = alloca %..any, align 8
	%7 = alloca %..any, align 8
	%8 = alloca %..any, align 8
	%9 = alloca %..any, align 8
	%10 = alloca {%..any*, i64}, align 8
	%11 = alloca [5 x %..any], align 8
	%12 = alloca %Context, align 8
	%13 = alloca {%..any*, i64}, align 16
		store %..string %file, %..string* %0
		store i64 %line, i64* %1
		store i64 %column, i64* %2
		store i64 %low, i64* %3
		store i64 %high, i64* %4
	; IfStmt
	%14 = load i64, i64* %3, align 8
	%15 = icmp sle i64 0, %14
	br i1 %15, label %cmp.and-1, label %if.done-3

cmp.and-1:
	%16 = load i64, i64* %3, align 8
	%17 = load i64, i64* %4, align 8
	%18 = icmp sle i64 %16, %17
	br i1 %18, label %if.then-2, label %if.done-3

if.then-2:
	; ReturnStmt
	ret void

if.done-3:
	; SelectorExpr
	; SelectorExpr
	%19 = load i64, i64* @os_windows-12.stderr, align 8
	%20 = load %..string, %..string* %0, align 8
	%21 = load i64, i64* %1, align 8
	%22 = load i64, i64* %2, align 8
	%23 = load i64, i64* %3, align 8
	%24 = load i64, i64* %4, align 8
	store %..any zeroinitializer, %..any* %5
	%25 = bitcast %..string* %0 to %..rawptr
	%26 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%27 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 0
	store %..rawptr %25, %..rawptr* %27
	%28 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 1
	store %Type_Info* %26, %Type_Info** %28
	%29 = load %..any, %..any* %5, align 8
	store %..any zeroinitializer, %..any* %6
	%30 = bitcast i64* %1 to %..rawptr
	%31 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%32 = getelementptr inbounds %..any, %..any* %6, i64 0, i32 0
	store %..rawptr %30, %..rawptr* %32
	%33 = getelementptr inbounds %..any, %..any* %6, i64 0, i32 1
	store %Type_Info* %31, %Type_Info** %33
	%34 = load %..any, %..any* %6, align 8
	store %..any zeroinitializer, %..any* %7
	%35 = bitcast i64* %2 to %..rawptr
	%36 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%37 = getelementptr inbounds %..any, %..any* %7, i64 0, i32 0
	store %..rawptr %35, %..rawptr* %37
	%38 = getelementptr inbounds %..any, %..any* %7, i64 0, i32 1
	store %Type_Info* %36, %Type_Info** %38
	%39 = load %..any, %..any* %7, align 8
	store %..any zeroinitializer, %..any* %8
	%40 = bitcast i64* %3 to %..rawptr
	%41 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%42 = getelementptr inbounds %..any, %..any* %8, i64 0, i32 0
	store %..rawptr %40, %..rawptr* %42
	%43 = getelementptr inbounds %..any, %..any* %8, i64 0, i32 1
	store %Type_Info* %41, %Type_Info** %43
	%44 = load %..any, %..any* %8, align 8
	store %..any zeroinitializer, %..any* %9
	%45 = bitcast i64* %4 to %..rawptr
	%46 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%47 = getelementptr inbounds %..any, %..any* %9, i64 0, i32 0
	store %..rawptr %45, %..rawptr* %47
	%48 = getelementptr inbounds %..any, %..any* %9, i64 0, i32 1
	store %Type_Info* %46, %Type_Info** %48
	%49 = load %..any, %..any* %9, align 8
	; variadic call argument generation
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %10
	store [5 x %..any] zeroinitializer, [5 x %..any]* %11
	%50 = getelementptr inbounds [5 x %..any], [5 x %..any]* %11, i64 0, i32 0
	store %..any %29, %..any* %50
	%51 = getelementptr inbounds [5 x %..any], [5 x %..any]* %11, i64 0, i32 1
	store %..any %34, %..any* %51
	%52 = getelementptr inbounds [5 x %..any], [5 x %..any]* %11, i64 0, i32 2
	store %..any %39, %..any* %52
	%53 = getelementptr inbounds [5 x %..any], [5 x %..any]* %11, i64 0, i32 3
	store %..any %44, %..any* %53
	%54 = getelementptr inbounds [5 x %..any], [5 x %..any]* %11, i64 0, i32 4
	store %..any %49, %..any* %54
	%55 = getelementptr inbounds [5 x %..any], [5 x %..any]* %11, i64 0, i32 0
	%56 = getelementptr inbounds {%..any*, i64}, {%..any*, i64}* %10, i64 0, i32 0
	store %..any* %55, %..any** %56
	%57 = getelementptr inbounds {%..any*, i64}, {%..any*, i64}* %10, i64 0, i32 1
	store i64 5, i64* %57
	%58 = load {%..any*, i64}, {%..any*, i64}* %10, align 8
	store %Context zeroinitializer, %Context* %12
	%59 = load %Context, %Context* @__ggv$0, align 8
	store %Context %59, %Context* %12
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %13
	store {%..any*, i64} %58, {%..any*, i64}* %13
	%60 = call i64 @fmt-4.fprintf(i64 %19, %..string {i8* getelementptr inbounds ([45 x i8], [45 x i8]* @__str$11, i64 0, i32 0), i64 44}, {%..any*, i64}* %13, %Context* noalias nonnull %12)
	call ccc void @llvm.debugtrap()
	ret void
}

define void @__type_assertion_check(i1 %ok, %..string %file, i64 %line, i64 %column, %Type_Info* %from, %Type_Info* %to) #0 {
decls-0:
	%0 = alloca i1, align 1
	%1 = alloca %..string, align 8
	%2 = alloca i64, align 8
	%3 = alloca i64, align 8
	%4 = alloca %Type_Info*, align 8
	%5 = alloca %Type_Info*, align 8
	%6 = alloca %..any, align 8
	%7 = alloca %..any, align 8
	%8 = alloca %..any, align 8
	%9 = alloca %..any, align 8
	%10 = alloca %..any, align 8
	%11 = alloca {%..any*, i64}, align 8
	%12 = alloca [5 x %..any], align 8
	%13 = alloca %Context, align 8
	%14 = alloca {%..any*, i64}, align 16
		store i1 %ok, i1* %0
		store %..string %file, %..string* %1
		store i64 %line, i64* %2
		store i64 %column, i64* %3
		store %Type_Info* %from, %Type_Info** %4
		store %Type_Info* %to, %Type_Info** %5
	; IfStmt
	%15 = load i1, i1* %0, align 1
	br i1 %15, label %if.then-1, label %if.done-2

if.then-1:
	; ReturnStmt
	ret void

if.done-2:
	; SelectorExpr
	; SelectorExpr
	%16 = load i64, i64* @os_windows-12.stderr, align 8
	%17 = load %..string, %..string* %1, align 8
	%18 = load i64, i64* %2, align 8
	%19 = load i64, i64* %3, align 8
	%20 = load %Type_Info*, %Type_Info** %4, align 8
	%21 = load %Type_Info*, %Type_Info** %5, align 8
	store %..any zeroinitializer, %..any* %6
	%22 = bitcast %..string* %1 to %..rawptr
	%23 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%24 = getelementptr inbounds %..any, %..any* %6, i64 0, i32 0
	store %..rawptr %22, %..rawptr* %24
	%25 = getelementptr inbounds %..any, %..any* %6, i64 0, i32 1
	store %Type_Info* %23, %Type_Info** %25
	%26 = load %..any, %..any* %6, align 8
	store %..any zeroinitializer, %..any* %7
	%27 = bitcast i64* %2 to %..rawptr
	%28 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%29 = getelementptr inbounds %..any, %..any* %7, i64 0, i32 0
	store %..rawptr %27, %..rawptr* %29
	%30 = getelementptr inbounds %..any, %..any* %7, i64 0, i32 1
	store %Type_Info* %28, %Type_Info** %30
	%31 = load %..any, %..any* %7, align 8
	store %..any zeroinitializer, %..any* %8
	%32 = bitcast i64* %3 to %..rawptr
	%33 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%34 = getelementptr inbounds %..any, %..any* %8, i64 0, i32 0
	store %..rawptr %32, %..rawptr* %34
	%35 = getelementptr inbounds %..any, %..any* %8, i64 0, i32 1
	store %Type_Info* %33, %Type_Info** %35
	%36 = load %..any, %..any* %8, align 8
	store %..any zeroinitializer, %..any* %9
	%37 = bitcast %Type_Info** %4 to %..rawptr
	%38 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%39 = getelementptr inbounds %..any, %..any* %9, i64 0, i32 0
	store %..rawptr %37, %..rawptr* %39
	%40 = getelementptr inbounds %..any, %..any* %9, i64 0, i32 1
	store %Type_Info* %38, %Type_Info** %40
	%41 = load %..any, %..any* %9, align 8
	store %..any zeroinitializer, %..any* %10
	%42 = bitcast %Type_Info** %5 to %..rawptr
	%43 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%44 = getelementptr inbounds %..any, %..any* %10, i64 0, i32 0
	store %..rawptr %42, %..rawptr* %44
	%45 = getelementptr inbounds %..any, %..any* %10, i64 0, i32 1
	store %Type_Info* %43, %Type_Info** %45
	%46 = load %..any, %..any* %10, align 8
	; variadic call argument generation
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %11
	store [5 x %..any] zeroinitializer, [5 x %..any]* %12
	%47 = getelementptr inbounds [5 x %..any], [5 x %..any]* %12, i64 0, i32 0
	store %..any %26, %..any* %47
	%48 = getelementptr inbounds [5 x %..any], [5 x %..any]* %12, i64 0, i32 1
	store %..any %31, %..any* %48
	%49 = getelementptr inbounds [5 x %..any], [5 x %..any]* %12, i64 0, i32 2
	store %..any %36, %..any* %49
	%50 = getelementptr inbounds [5 x %..any], [5 x %..any]* %12, i64 0, i32 3
	store %..any %41, %..any* %50
	%51 = getelementptr inbounds [5 x %..any], [5 x %..any]* %12, i64 0, i32 4
	store %..any %46, %..any* %51
	%52 = getelementptr inbounds [5 x %..any], [5 x %..any]* %12, i64 0, i32 0
	%53 = getelementptr inbounds {%..any*, i64}, {%..any*, i64}* %11, i64 0, i32 0
	store %..any* %52, %..any** %53
	%54 = getelementptr inbounds {%..any*, i64}, {%..any*, i64}* %11, i64 0, i32 1
	store i64 5, i64* %54
	%55 = load {%..any*, i64}, {%..any*, i64}* %11, align 8
	store %Context zeroinitializer, %Context* %13
	%56 = load %Context, %Context* @__ggv$0, align 8
	store %Context %56, %Context* %13
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %14
	store {%..any*, i64} %55, {%..any*, i64}* %14
	%57 = call i64 @fmt-4.fprintf(i64 %16, %..string {i8* getelementptr inbounds ([48 x i8], [48 x i8]* @__str$12, i64 0, i32 0), i64 47}, {%..any*, i64}* %14, %Context* noalias nonnull %13)
	call ccc void @llvm.debugtrap()
	ret void
}

define {i32, i64} @__string_decode_rune(%..string %s) alwaysinline #1 {
decls-0:
	%0 = alloca %..string, align 8
	%1 = alloca %Context, align 8
	%2 = alloca {i32, i64}, align 8
		store %..string %s, %..string* %0
	; ReturnStmt
	; SelectorExpr
	%3 = load %..string, %..string* %0, align 8
	store %Context zeroinitializer, %Context* %1
	%4 = load %Context, %Context* @__ggv$0, align 8
	store %Context %4, %Context* %1
	%5 = call {i32, i64} @utf8-5.decode_rune-293(%..string %3, %Context* noalias nonnull %1)
	%6 = extractvalue {i32, i64} %5, 0
	%7 = extractvalue {i32, i64} %5, 1
	store {i32, i64} zeroinitializer, {i32, i64}* %2
	%8 = getelementptr inbounds {i32, i64}, {i32, i64}* %2, i64 0, i32 0
	store i32 %6, i32* %8
	%9 = getelementptr inbounds {i32, i64}, {i32, i64}* %2, i64 0, i32 1
	store i64 %7, i64* %9
	%10 = load {i32, i64}, {i32, i64}* %2, align 8
	ret {i32, i64} %10
}

define void @__bounds_check_error_loc(%Source_Code_Location* %loc, i64 %index, i64 %count) alwaysinline #1 {
decls-0:
	%0 = alloca i64, align 8
	%1 = alloca i64, align 8
	%2 = load %Source_Code_Location, %Source_Code_Location* %loc, align 8
		store i64 %index, i64* %0
		store i64 %count, i64* %1
	%3 = getelementptr inbounds %Source_Code_Location, %Source_Code_Location* %loc, i64 0, i32 0
	%4 = load %..string, %..string* %3, align 8
	%5 = getelementptr inbounds %Source_Code_Location, %Source_Code_Location* %loc, i64 0, i32 1
	%6 = load i64, i64* %5, align 8
	%7 = getelementptr inbounds %Source_Code_Location, %Source_Code_Location* %loc, i64 0, i32 2
	%8 = load i64, i64* %7, align 8
	%9 = load i64, i64* %0, align 8
	%10 = load i64, i64* %1, align 8
	call void @__bounds_check_error(%..string %4, i64 %6, i64 %8, i64 %9, i64 %10)
	ret void
}

define void @__slice_expr_error_loc(%Source_Code_Location* %loc, i64 %low, i64 %high) alwaysinline #1 {
decls-0:
	%0 = alloca i64, align 8
	%1 = alloca i64, align 8
	%2 = load %Source_Code_Location, %Source_Code_Location* %loc, align 8
		store i64 %low, i64* %0
		store i64 %high, i64* %1
	%3 = getelementptr inbounds %Source_Code_Location, %Source_Code_Location* %loc, i64 0, i32 0
	%4 = load %..string, %..string* %3, align 8
	%5 = getelementptr inbounds %Source_Code_Location, %Source_Code_Location* %loc, i64 0, i32 1
	%6 = load i64, i64* %5, align 8
	%7 = getelementptr inbounds %Source_Code_Location, %Source_Code_Location* %loc, i64 0, i32 2
	%8 = load i64, i64* %7, align 8
	%9 = load i64, i64* %0, align 8
	%10 = load i64, i64* %1, align 8
	call void @__slice_expr_error(%..string %4, i64 %6, i64 %8, i64 %9, i64 %10)
	ret void
}

define void @__substring_expr_error_loc(%Source_Code_Location* %loc, i64 %low, i64 %high) alwaysinline #1 {
decls-0:
	%0 = alloca i64, align 8
	%1 = alloca i64, align 8
	%2 = load %Source_Code_Location, %Source_Code_Location* %loc, align 8
		store i64 %low, i64* %0
		store i64 %high, i64* %1
	%3 = getelementptr inbounds %Source_Code_Location, %Source_Code_Location* %loc, i64 0, i32 0
	%4 = load %..string, %..string* %3, align 8
	%5 = getelementptr inbounds %Source_Code_Location, %Source_Code_Location* %loc, i64 0, i32 1
	%6 = load i64, i64* %5, align 8
	%7 = getelementptr inbounds %Source_Code_Location, %Source_Code_Location* %loc, i64 0, i32 2
	%8 = load i64, i64* %7, align 8
	%9 = load i64, i64* %0, align 8
	%10 = load i64, i64* %1, align 8
	call void @__substring_expr_error(%..string %4, i64 %6, i64 %8, i64 %9, i64 %10)
	ret void
}

define %..rawptr @__mem_set(%..rawptr %data, i32 %value, i64 %len) #0 {
decls-0:
	%0 = alloca %..rawptr, align 8
	%1 = alloca i32, align 4
	%2 = alloca i64, align 8
		store %..rawptr %data, %..rawptr* %0
		store i32 %value, i32* %1
		store i64 %len, i64* %2
	; IfStmt
	%3 = load %..rawptr, %..rawptr* %0, align 8
	%4 = icmp eq %..rawptr %3, zeroinitializer
	br i1 %4, label %if.then-1, label %if.done-2

if.then-1:
	; ReturnStmt
	ret %..rawptr zeroinitializer

if.done-2:
	%5 = load %..rawptr, %..rawptr* %0, align 8
	%6 = load i32, i32* %1, align 4
	%7 = trunc i32 %6 to i8
	%8 = load i64, i64* %2, align 8
	call ccc void @llvm.memset.p0i8.i64(%..rawptr %5, i8 %7, i64 %8, i32 1, i1 false)
	; ReturnStmt
	%9 = load %..rawptr, %..rawptr* %0, align 8
	ret %..rawptr %9
}

define %..rawptr @__mem_zero(%..rawptr %data, i64 %len) #0 {
decls-0:
	%0 = alloca %..rawptr, align 8
	%1 = alloca i64, align 8
		store %..rawptr %data, %..rawptr* %0
		store i64 %len, i64* %1
	; ReturnStmt
	%2 = load %..rawptr, %..rawptr* %0, align 8
	%3 = load i64, i64* %1, align 8
	%4 = call %..rawptr @__mem_set(%..rawptr %2, i32 0, i64 %3)
	ret %..rawptr %4
}

define %..rawptr @__mem_copy(%..rawptr %dst, %..rawptr %src, i64 %len) #0 {
decls-0:
	%0 = alloca %..rawptr, align 8
	%1 = alloca %..rawptr, align 8
	%2 = alloca i64, align 8
		store %..rawptr %dst, %..rawptr* %0
		store %..rawptr %src, %..rawptr* %1
		store i64 %len, i64* %2
	; IfStmt
	%3 = load %..rawptr, %..rawptr* %1, align 8
	%4 = icmp eq %..rawptr %3, zeroinitializer
	br i1 %4, label %if.then-1, label %if.done-2

if.then-1:
	; ReturnStmt
	%5 = load %..rawptr, %..rawptr* %0, align 8
	ret %..rawptr %5

if.done-2:
	%6 = load %..rawptr, %..rawptr* %0, align 8
	%7 = load %..rawptr, %..rawptr* %1, align 8
	%8 = load i64, i64* %2, align 8
	call ccc void @llvm.memmove.p0i8.p0i8.i64(%..rawptr %6, %..rawptr %7, i64 %8, i32 1, i1 false)
	; ReturnStmt
	%9 = load %..rawptr, %..rawptr* %0, align 8
	ret %..rawptr %9
}

define %..rawptr @__mem_copy_non_overlapping(%..rawptr %dst, %..rawptr %src, i64 %len) #0 {
decls-0:
	%0 = alloca %..rawptr, align 8
	%1 = alloca %..rawptr, align 8
	%2 = alloca i64, align 8
		store %..rawptr %dst, %..rawptr* %0
		store %..rawptr %src, %..rawptr* %1
		store i64 %len, i64* %2
	; IfStmt
	%3 = load %..rawptr, %..rawptr* %1, align 8
	%4 = icmp eq %..rawptr %3, zeroinitializer
	br i1 %4, label %if.then-1, label %if.done-2

if.then-1:
	; ReturnStmt
	%5 = load %..rawptr, %..rawptr* %0, align 8
	ret %..rawptr %5

if.done-2:
	%6 = load %..rawptr, %..rawptr* %0, align 8
	%7 = load %..rawptr, %..rawptr* %1, align 8
	%8 = load i64, i64* %2, align 8
	call ccc void @llvm.memcpy.p0i8.p0i8.i64(%..rawptr %6, %..rawptr %7, i64 %8, i32 1, i1 false)
	; ReturnStmt
	%9 = load %..rawptr, %..rawptr* %0, align 8
	ret %..rawptr %9
}

define i64 @__mem_compare(i8* %a, i8* %b, i64 %n) #0 {
decls-0:
	%0 = alloca i8*, align 8
	%1 = alloca i8*, align 8
	%2 = alloca i64, align 8
	%3 = alloca i64, align 8
	%4 = alloca i64, align 8
	%5 = alloca i64, align 8
		store i8* %a, i8** %0
		store i8* %b, i8** %1
		store i64 %n, i64* %2
	; RangeStmt
	; i
	store i64 zeroinitializer, i64* %3
		store i64 zeroinitializer, i64* %4
	store i64 0, i64* %4
	store i64 zeroinitializer, i64* %5
	store i64 0, i64* %5
	br label %for.interval.loop-1

for.interval.loop-1:
	%6 = load i64, i64* %2, align 8
	%7 = load i64, i64* %4, align 8
	%8 = icmp slt i64 %7, %6
	br i1 %8, label %for.interval.body-2, label %for.interval.done-7

for.interval.body-2:
	%9 = load i64, i64* %4, align 8
	%10 = load i64, i64* %5, align 8
	%11 = load i64, i64* %4, align 8
	%12 = add i64 %11, 1
	store i64 %12, i64* %4
	%13 = load i64, i64* %5, align 8
	%14 = add i64 %13, 1
	store i64 %14, i64* %5
	store i64 %9, i64* %3
	; SwitchStmt
	%15 = load i8*, i8** %0, align 8
	%16 = load i64, i64* %3, align 8
	%17 = getelementptr inbounds i8, i8* %15, i64 %16
	%18 = getelementptr inbounds i8, i8* %17, i64 0
	%19 = load i8, i8* %18, align 1
	%20 = load i8*, i8** %1, align 8
	%21 = load i64, i64* %3, align 8
	%22 = getelementptr inbounds i8, i8* %20, i64 %21
	%23 = getelementptr inbounds i8, i8* %22, i64 0
	%24 = load i8, i8* %23, align 1
	%25 = icmp ult i8 %19, %24
	%26 = icmp eq i1 true, %25
	br i1 %26, label %switch.case.body-4, label %switch.case.next-3

switch.case.next-3:
	%27 = load i8*, i8** %0, align 8
	%28 = load i64, i64* %3, align 8
	%29 = getelementptr inbounds i8, i8* %27, i64 %28
	%30 = getelementptr inbounds i8, i8* %29, i64 0
	%31 = load i8, i8* %30, align 1
	%32 = load i8*, i8** %1, align 8
	%33 = load i64, i64* %3, align 8
	%34 = getelementptr inbounds i8, i8* %32, i64 %33
	%35 = getelementptr inbounds i8, i8* %34, i64 0
	%36 = load i8, i8* %35, align 1
	%37 = icmp ugt i8 %31, %36
	%38 = icmp eq i1 true, %37
	br i1 %38, label %switch.fall.body-6, label %switch.case.next-5

switch.case.body-4:
	; ReturnStmt
	ret i64 -1

switch.case.next-5:
	br label %for.interval.loop-1

switch.fall.body-6:
	; ReturnStmt
	ret i64 1

for.interval.done-7:
	; ReturnStmt
	ret i64 0
}

define float @__abs_complex64(%..complex64 %x) alwaysinline #1 {
decls-0:
	%0 = alloca %..complex64, align 4
	%1 = alloca float, align 4
	%2 = alloca float, align 4
		store %..complex64 %x, %..complex64* %0
	; r
		; i
		; real
	%3 = load %..complex64, %..complex64* %0, align 4
	%4 = extractvalue %..complex64 %3, 0
	; imag
	%5 = load %..complex64, %..complex64* %0, align 4
	%6 = extractvalue %..complex64 %5, 1
	store float %4, float* %1
	store float %6, float* %2
	; ReturnStmt
	%7 = load float, float* %1, align 4
	%8 = load float, float* %1, align 4
	%9 = fmul float %7, %8
	%10 = load float, float* %2, align 4
	%11 = load float, float* %2, align 4
	%12 = fmul float %10, %11
	%13 = fadd float %9, %12
	%14 = call ccc float @llvm.sqrt.f32(float %13)
	ret float %14
}

define double @__abs_complex128(%..complex128* %x) alwaysinline #1 {
decls-0:
	%0 = alloca double, align 8
	%1 = alloca double, align 8
	%2 = load %..complex128, %..complex128* %x, align 8
	; r
		; i
		; real
	%3 = load %..complex128, %..complex128* %x, align 8
	%4 = extractvalue %..complex128 %3, 0
	; imag
	%5 = load %..complex128, %..complex128* %x, align 8
	%6 = extractvalue %..complex128 %5, 1
	store double %4, double* %0
	store double %6, double* %1
	; ReturnStmt
	%7 = load double, double* %0, align 8
	%8 = load double, double* %0, align 8
	%9 = fmul double %7, %8
	%10 = load double, double* %1, align 8
	%11 = load double, double* %1, align 8
	%12 = fmul double %10, %11
	%13 = fadd double %9, %12
	%14 = call ccc double @llvm.sqrt.f64(double %13)
	ret double %14
}

define void @__dynamic_array_make(%..rawptr %array_, i64 %elem_size, i64 %elem_align, i64 %len, i64 %cap, %Source_Code_Location* %loc, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca %..rawptr, align 8
	%1 = alloca i64, align 8
	%2 = alloca i64, align 8
	%3 = alloca i64, align 8
	%4 = alloca i64, align 8
	%5 = alloca %raw-6.Dynamic_Array*, align 8
	%6 = alloca {%..any*, i64}, align 8
	%7 = alloca {%..any*, i64}, align 16
	%8 = alloca %Source_Code_Location, align 16
	%9 = alloca %Source_Code_Location, align 16
		store %..rawptr %array_, %..rawptr* %0
		store i64 %elem_size, i64* %1
		store i64 %elem_align, i64* %2
		store i64 %len, i64* %3
		store i64 %cap, i64* %4
	%10 = load %Source_Code_Location, %Source_Code_Location* %loc, align 8
	; array
		%11 = load %..rawptr, %..rawptr* %0, align 8
	%12 = bitcast %..rawptr %11 to %raw-6.Dynamic_Array*
	store %raw-6.Dynamic_Array* %12, %raw-6.Dynamic_Array** %5
	; AssignStmt
	; SelectorExpr
	%13 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %5, align 8
	%14 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %13, i64 0
	%15 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %14, i64 0, i32 3
	; SelectorExpr
	%16 = getelementptr inbounds %Context, %Context* %__.context_ptr, i64 0, i32 0
	%17 = load %Allocator, %Allocator* %16, align 8
	store %Allocator %17, %Allocator* %15
	; SelectorExpr
	; SelectorExpr
	%18 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %5, align 8
	%19 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %18, i64 0
	%20 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %19, i64 0, i32 3
	%21 = getelementptr inbounds %Allocator, %Allocator* %20, i64 0, i32 0
	%22 = load %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64, %Source_Code_Location*, %Context*)*, %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64, %Source_Code_Location*, %Context*)** %21, align 8
	%23 = icmp ne %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64, %Source_Code_Location*, %Context*)* %22, zeroinitializer
	; variadic call argument generation
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %6
	%24 = load {%..any*, i64}, {%..any*, i64}* %6, align 8
	%25 = call %Source_Code_Location @make_source_code_location(%..string {i8* getelementptr inbounds ([34 x i8], [34 x i8]* @__str$13, i64 0, i32 0), i64 33}, i64 789, i64 2, %..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$14, i64 0, i32 0), i64 20})
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %7
	store {%..any*, i64} %24, {%..any*, i64}* %7
	store %Source_Code_Location zeroinitializer, %Source_Code_Location* %8
	store %Source_Code_Location %25, %Source_Code_Location* %8
	%26 = call i1 @assert(i1 %23, %..string zeroinitializer, {%..any*, i64}* %7, %Source_Code_Location* %8)
	; IfStmt
	%27 = load i64, i64* %4, align 8
	%28 = icmp sgt i64 %27, 0
	br i1 %28, label %if.then-1, label %if.done-2

if.then-1:
	%29 = load %..rawptr, %..rawptr* %0, align 8
	%30 = load i64, i64* %1, align 8
	%31 = load i64, i64* %2, align 8
	%32 = load i64, i64* %4, align 8
	%33 = load %Source_Code_Location, %Source_Code_Location* %loc, align 8
	store %Source_Code_Location zeroinitializer, %Source_Code_Location* %9
	store %Source_Code_Location %33, %Source_Code_Location* %9
	%34 = call i1 @__dynamic_array_reserve(%..rawptr %29, i64 %30, i64 %31, i64 %32, %Source_Code_Location* %9, %Context* noalias nonnull %__.context_ptr)
	; AssignStmt
	; SelectorExpr
	%35 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %5, align 8
	%36 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %35, i64 0
	%37 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %36, i64 0, i32 1
	%38 = load i64, i64* %3, align 8
	store i64 %38, i64* %37
	br label %if.done-2

if.done-2:
	ret void
}

define i1 @__dynamic_array_reserve(%..rawptr %array_, i64 %elem_size, i64 %elem_align, i64 %cap, %Source_Code_Location* %loc, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca %..rawptr, align 8
	%1 = alloca i64, align 8
	%2 = alloca i64, align 8
	%3 = alloca i64, align 8
	%4 = alloca %raw-6.Dynamic_Array*, align 8
	%5 = alloca {%..any*, i64}, align 8
	%6 = alloca {%..any*, i64}, align 16
	%7 = alloca %Source_Code_Location, align 16
	%8 = alloca i64, align 8
	%9 = alloca i64, align 8
	%10 = alloca %Allocator, align 8
	%11 = alloca %..rawptr, align 8
	%12 = alloca %Source_Code_Location, align 16
		store %..rawptr %array_, %..rawptr* %0
		store i64 %elem_size, i64* %1
		store i64 %elem_align, i64* %2
		store i64 %cap, i64* %3
	%13 = load %Source_Code_Location, %Source_Code_Location* %loc, align 8
	; array
		%14 = load %..rawptr, %..rawptr* %0, align 8
	%15 = bitcast %..rawptr %14 to %raw-6.Dynamic_Array*
	store %raw-6.Dynamic_Array* %15, %raw-6.Dynamic_Array** %4
	; IfStmt
	%16 = load i64, i64* %3, align 8
	; SelectorExpr
	%17 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %4, align 8
	%18 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %17, i64 0
	%19 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %18, i64 0, i32 2
	%20 = load i64, i64* %19, align 8
	%21 = icmp sle i64 %16, %20
	br i1 %21, label %if.then-1, label %if.done-2

if.then-1:
	; ReturnStmt
	ret i1 true

if.done-2:
	; IfStmt
	; SelectorExpr
	; SelectorExpr
	%22 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %4, align 8
	%23 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %22, i64 0
	%24 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %23, i64 0, i32 3
	%25 = getelementptr inbounds %Allocator, %Allocator* %24, i64 0, i32 0
	%26 = load %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64, %Source_Code_Location*, %Context*)*, %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64, %Source_Code_Location*, %Context*)** %25, align 8
	%27 = icmp eq %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64, %Source_Code_Location*, %Context*)* %26, zeroinitializer
	br i1 %27, label %if.then-3, label %if.done-4

if.then-3:
	; AssignStmt
	; SelectorExpr
	%28 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %4, align 8
	%29 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %28, i64 0
	%30 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %29, i64 0, i32 3
	; SelectorExpr
	%31 = getelementptr inbounds %Context, %Context* %__.context_ptr, i64 0, i32 0
	%32 = load %Allocator, %Allocator* %31, align 8
	store %Allocator %32, %Allocator* %30
	br label %if.done-4

if.done-4:
	; SelectorExpr
	; SelectorExpr
	%33 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %4, align 8
	%34 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %33, i64 0
	%35 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %34, i64 0, i32 3
	%36 = getelementptr inbounds %Allocator, %Allocator* %35, i64 0, i32 0
	%37 = load %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64, %Source_Code_Location*, %Context*)*, %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64, %Source_Code_Location*, %Context*)** %36, align 8
	%38 = icmp ne %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64, %Source_Code_Location*, %Context*)* %37, zeroinitializer
	; variadic call argument generation
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %5
	%39 = load {%..any*, i64}, {%..any*, i64}* %5, align 8
	%40 = call %Source_Code_Location @make_source_code_location(%..string {i8* getelementptr inbounds ([34 x i8], [34 x i8]* @__str$15, i64 0, i32 0), i64 33}, i64 805, i64 2, %..string {i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__str$16, i64 0, i32 0), i64 23})
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %6
	store {%..any*, i64} %39, {%..any*, i64}* %6
	store %Source_Code_Location zeroinitializer, %Source_Code_Location* %7
	store %Source_Code_Location %40, %Source_Code_Location* %7
	%41 = call i1 @assert(i1 %38, %..string zeroinitializer, {%..any*, i64}* %6, %Source_Code_Location* %7)
	; old_size
		; SelectorExpr
	%42 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %4, align 8
	%43 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %42, i64 0
	%44 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %43, i64 0, i32 2
	%45 = load i64, i64* %44, align 8
	%46 = load i64, i64* %1, align 8
	%47 = mul i64 %45, %46
	store i64 %47, i64* %8
	; new_size
		%48 = load i64, i64* %3, align 8
	%49 = load i64, i64* %1, align 8
	%50 = mul i64 %48, %49
	store i64 %50, i64* %9
	; allocator
		; SelectorExpr
	%51 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %4, align 8
	%52 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %51, i64 0
	%53 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %52, i64 0, i32 3
	%54 = load %Allocator, %Allocator* %53, align 8
	store %Allocator %54, %Allocator* %10
	; new_data
		; SelectorExpr
	%55 = getelementptr inbounds %Allocator, %Allocator* %10, i64 0, i32 0
	%56 = load %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64, %Source_Code_Location*, %Context*)*, %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64, %Source_Code_Location*, %Context*)** %55, align 8
	; SelectorExpr
	%57 = getelementptr inbounds %Allocator, %Allocator* %10, i64 0, i32 1
	%58 = load %..rawptr, %..rawptr* %57, align 8
	%59 = load i64, i64* %9, align 8
	%60 = load i64, i64* %2, align 8
	; SelectorExpr
	%61 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %4, align 8
	%62 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %61, i64 0
	%63 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %62, i64 0, i32 0
	%64 = load %..rawptr, %..rawptr* %63, align 8
	%65 = load i64, i64* %8, align 8
	%66 = load %Source_Code_Location, %Source_Code_Location* %loc, align 8
	store %Source_Code_Location zeroinitializer, %Source_Code_Location* %12
	store %Source_Code_Location %66, %Source_Code_Location* %12
	%67 = call %..rawptr %56(%..rawptr %58, i8 3, i64 %59, i64 %60, %..rawptr %64, i64 %65, i64 0, %Source_Code_Location* %12, %Context* noalias nonnull %__.context_ptr)
	store %..rawptr %67, %..rawptr* %11
	; IfStmt
	%68 = load %..rawptr, %..rawptr* %11, align 8
	%69 = icmp eq %..rawptr %68, zeroinitializer
	br i1 %69, label %if.then-5, label %if.done-6

if.then-5:
	; ReturnStmt
	ret i1 false

if.done-6:
	; AssignStmt
	; SelectorExpr
	%70 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %4, align 8
	%71 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %70, i64 0
	%72 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %71, i64 0, i32 0
	%73 = load %..rawptr, %..rawptr* %11, align 8
	store %..rawptr %73, %..rawptr* %72
	; AssignStmt
	; SelectorExpr
	%74 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %4, align 8
	%75 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %74, i64 0
	%76 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %75, i64 0, i32 2
	%77 = load i64, i64* %3, align 8
	store i64 %77, i64* %76
	; ReturnStmt
	ret i1 true
}

define i1 @__dynamic_array_resize(%..rawptr %array_, i64 %elem_size, i64 %elem_align, i64 %len, %Source_Code_Location* %loc, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca %..rawptr, align 8
	%1 = alloca i64, align 8
	%2 = alloca i64, align 8
	%3 = alloca i64, align 8
	%4 = alloca %raw-6.Dynamic_Array*, align 8
	%5 = alloca i1, align 1
	%6 = alloca %Source_Code_Location, align 16
		store %..rawptr %array_, %..rawptr* %0
		store i64 %elem_size, i64* %1
		store i64 %elem_align, i64* %2
		store i64 %len, i64* %3
	%7 = load %Source_Code_Location, %Source_Code_Location* %loc, align 8
	; array
		%8 = load %..rawptr, %..rawptr* %0, align 8
	%9 = bitcast %..rawptr %8 to %raw-6.Dynamic_Array*
	store %raw-6.Dynamic_Array* %9, %raw-6.Dynamic_Array** %4
	; ok
		%10 = load %..rawptr, %..rawptr* %0, align 8
	%11 = load i64, i64* %1, align 8
	%12 = load i64, i64* %2, align 8
	%13 = load i64, i64* %3, align 8
	%14 = load %Source_Code_Location, %Source_Code_Location* %loc, align 8
	store %Source_Code_Location zeroinitializer, %Source_Code_Location* %6
	store %Source_Code_Location %14, %Source_Code_Location* %6
	%15 = call i1 @__dynamic_array_reserve(%..rawptr %10, i64 %11, i64 %12, i64 %13, %Source_Code_Location* %6, %Context* noalias nonnull %__.context_ptr)
	store i1 %15, i1* %5
	; IfStmt
	%16 = load i1, i1* %5, align 1
	br i1 %16, label %if.then-1, label %if.done-2

if.then-1:
	; AssignStmt
	; SelectorExpr
	%17 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %4, align 8
	%18 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %17, i64 0
	%19 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %18, i64 0, i32 1
	%20 = load i64, i64* %3, align 8
	store i64 %20, i64* %19
	br label %if.done-2

if.done-2:
	; ReturnStmt
	%21 = load i1, i1* %5, align 1
	ret i1 %21
}

define i64 @__dynamic_array_append(%..rawptr %array_, i64 %elem_size, i64 %elem_align, %..rawptr %items, i64 %item_count, %Source_Code_Location* %loc, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca %..rawptr, align 8
	%1 = alloca i64, align 8
	%2 = alloca i64, align 8
	%3 = alloca %..rawptr, align 8
	%4 = alloca i64, align 8
	%5 = alloca %raw-6.Dynamic_Array*, align 8
	%6 = alloca i1, align 1
	%7 = alloca i64, align 8
	%8 = alloca %Source_Code_Location, align 16
	%9 = alloca i8*, align 8
	%10 = alloca {%..any*, i64}, align 8
	%11 = alloca {%..any*, i64}, align 16
	%12 = alloca %Source_Code_Location, align 16
		store %..rawptr %array_, %..rawptr* %0
		store i64 %elem_size, i64* %1
		store i64 %elem_align, i64* %2
		store %..rawptr %items, %..rawptr* %3
		store i64 %item_count, i64* %4
	%13 = load %Source_Code_Location, %Source_Code_Location* %loc, align 8
	; array
		%14 = load %..rawptr, %..rawptr* %0, align 8
	%15 = bitcast %..rawptr %14 to %raw-6.Dynamic_Array*
	store %raw-6.Dynamic_Array* %15, %raw-6.Dynamic_Array** %5
	; IfStmt
	%16 = load %..rawptr, %..rawptr* %3, align 8
	%17 = icmp eq %..rawptr %16, zeroinitializer
	br i1 %17, label %if.then-1, label %if.done-2

if.then-1:
	; ReturnStmt
	ret i64 0

if.done-2:
	; IfStmt
	%18 = load i64, i64* %4, align 8
	%19 = icmp sle i64 %18, 0
	br i1 %19, label %if.then-3, label %if.done-4

if.then-3:
	; ReturnStmt
	ret i64 0

if.done-4:
	; ok
		store i1 true, i1* %6
	; IfStmt
	; SelectorExpr
	%20 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %5, align 8
	%21 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %20, i64 0
	%22 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %21, i64 0, i32 2
	%23 = load i64, i64* %22, align 8
	; SelectorExpr
	%24 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %5, align 8
	%25 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %24, i64 0
	%26 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %25, i64 0, i32 1
	%27 = load i64, i64* %26, align 8
	%28 = load i64, i64* %4, align 8
	%29 = add i64 %27, %28
	%30 = icmp sle i64 %23, %29
	br i1 %30, label %if.then-5, label %if.done-6

if.then-5:
	; cap
		; SelectorExpr
	%31 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %5, align 8
	%32 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %31, i64 0
	%33 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %32, i64 0, i32 2
	%34 = load i64, i64* %33, align 8
	%35 = mul i64 2, %34
	; max
	%36 = load i64, i64* %4, align 8
	%37 = icmp sgt i64 8, %36
	%38 = select i1 %37, i64 8, i64 %36
	%39 = add i64 %35, %38
	store i64 %39, i64* %7
	; AssignStmt
	%40 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %5, align 8
	%41 = load i64, i64* %1, align 8
	%42 = load i64, i64* %2, align 8
	%43 = load i64, i64* %7, align 8
	%44 = load %Source_Code_Location, %Source_Code_Location* %loc, align 8
	%45 = bitcast %raw-6.Dynamic_Array* %40 to %..rawptr
	store %Source_Code_Location zeroinitializer, %Source_Code_Location* %8
	store %Source_Code_Location %44, %Source_Code_Location* %8
	%46 = call i1 @__dynamic_array_reserve(%..rawptr %45, i64 %41, i64 %42, i64 %43, %Source_Code_Location* %8, %Context* noalias nonnull %__.context_ptr)
	store i1 %46, i1* %6
	br label %if.done-6

if.done-6:
	; IfStmt
	%47 = load i1, i1* %6, align 1
	br i1 %47, label %if.done-8, label %if.then-7

if.then-7:
	; ReturnStmt
	; SelectorExpr
	%48 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %5, align 8
	%49 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %48, i64 0
	%50 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %49, i64 0, i32 1
	%51 = load i64, i64* %50, align 8
	ret i64 %51

if.done-8:
	; data
		; SelectorExpr
	%52 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %5, align 8
	%53 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %52, i64 0
	%54 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %53, i64 0, i32 0
	%55 = load %..rawptr, %..rawptr* %54, align 8
	%56 = bitcast %..rawptr %55 to i8*
	store i8* %56, i8** %9
	%57 = load i8*, i8** %9, align 8
	%58 = icmp ne i8* %57, zeroinitializer
	; variadic call argument generation
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %10
	%59 = load {%..any*, i64}, {%..any*, i64}* %10, align 8
	%60 = call %Source_Code_Location @make_source_code_location(%..string {i8* getelementptr inbounds ([34 x i8], [34 x i8]* @__str$17, i64 0, i32 0), i64 33}, i64 845, i64 2, %..string {i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__str$18, i64 0, i32 0), i64 22})
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %11
	store {%..any*, i64} %59, {%..any*, i64}* %11
	store %Source_Code_Location zeroinitializer, %Source_Code_Location* %12
	store %Source_Code_Location %60, %Source_Code_Location* %12
	%61 = call i1 @assert(i1 %58, %..string zeroinitializer, {%..any*, i64}* %11, %Source_Code_Location* %12)
	%62 = load i8*, i8** %9, align 8
	%63 = load i64, i64* %1, align 8
	; SelectorExpr
	%64 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %5, align 8
	%65 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %64, i64 0
	%66 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %65, i64 0, i32 1
	%67 = load i64, i64* %66, align 8
	%68 = mul i64 %63, %67
	%69 = getelementptr inbounds i8, i8* %62, i64 %68
	%70 = load %..rawptr, %..rawptr* %3, align 8
	%71 = load i64, i64* %1, align 8
	%72 = load i64, i64* %4, align 8
	%73 = mul i64 %71, %72
	%74 = bitcast i8* %69 to %..rawptr
	%75 = call %..rawptr @__mem_copy(%..rawptr %74, %..rawptr %70, i64 %73)
	; AssignStmt
	; SelectorExpr
	%76 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %5, align 8
	%77 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %76, i64 0
	%78 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %77, i64 0, i32 1
	%79 = load i64, i64* %4, align 8
	%80 = load i64, i64* %78, align 8
	%81 = add i64 %80, %79
	store i64 %81, i64* %78
	; ReturnStmt
	; SelectorExpr
	%82 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %5, align 8
	%83 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %82, i64 0
	%84 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %83, i64 0, i32 1
	%85 = load i64, i64* %84, align 8
	ret i64 %85
}

define i64 @__dynamic_array_append_nothing(%..rawptr %array_, i64 %elem_size, i64 %elem_align, %Source_Code_Location* %loc, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca %..rawptr, align 8
	%1 = alloca i64, align 8
	%2 = alloca i64, align 8
	%3 = alloca %raw-6.Dynamic_Array*, align 8
	%4 = alloca i1, align 1
	%5 = alloca i64, align 8
	%6 = alloca %Source_Code_Location, align 16
	%7 = alloca i8*, align 8
	%8 = alloca {%..any*, i64}, align 8
	%9 = alloca {%..any*, i64}, align 16
	%10 = alloca %Source_Code_Location, align 16
		store %..rawptr %array_, %..rawptr* %0
		store i64 %elem_size, i64* %1
		store i64 %elem_align, i64* %2
	%11 = load %Source_Code_Location, %Source_Code_Location* %loc, align 8
	; array
		%12 = load %..rawptr, %..rawptr* %0, align 8
	%13 = bitcast %..rawptr %12 to %raw-6.Dynamic_Array*
	store %raw-6.Dynamic_Array* %13, %raw-6.Dynamic_Array** %3
	; ok
		store i1 true, i1* %4
	; IfStmt
	; SelectorExpr
	%14 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %3, align 8
	%15 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %14, i64 0
	%16 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %15, i64 0, i32 2
	%17 = load i64, i64* %16, align 8
	; SelectorExpr
	%18 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %3, align 8
	%19 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %18, i64 0
	%20 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %19, i64 0, i32 1
	%21 = load i64, i64* %20, align 8
	%22 = add i64 %21, 1
	%23 = icmp sle i64 %17, %22
	br i1 %23, label %if.then-1, label %if.done-2

if.then-1:
	; cap
		; SelectorExpr
	%24 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %3, align 8
	%25 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %24, i64 0
	%26 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %25, i64 0, i32 2
	%27 = load i64, i64* %26, align 8
	%28 = mul i64 2, %27
	%29 = add i64 %28, 8
	store i64 %29, i64* %5
	; AssignStmt
	%30 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %3, align 8
	%31 = load i64, i64* %1, align 8
	%32 = load i64, i64* %2, align 8
	%33 = load i64, i64* %5, align 8
	%34 = load %Source_Code_Location, %Source_Code_Location* %loc, align 8
	%35 = bitcast %raw-6.Dynamic_Array* %30 to %..rawptr
	store %Source_Code_Location zeroinitializer, %Source_Code_Location* %6
	store %Source_Code_Location %34, %Source_Code_Location* %6
	%36 = call i1 @__dynamic_array_reserve(%..rawptr %35, i64 %31, i64 %32, i64 %33, %Source_Code_Location* %6, %Context* noalias nonnull %__.context_ptr)
	store i1 %36, i1* %4
	br label %if.done-2

if.done-2:
	; IfStmt
	%37 = load i1, i1* %4, align 1
	br i1 %37, label %if.done-4, label %if.then-3

if.then-3:
	; ReturnStmt
	; SelectorExpr
	%38 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %3, align 8
	%39 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %38, i64 0
	%40 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %39, i64 0, i32 1
	%41 = load i64, i64* %40, align 8
	ret i64 %41

if.done-4:
	; data
		; SelectorExpr
	%42 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %3, align 8
	%43 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %42, i64 0
	%44 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %43, i64 0, i32 0
	%45 = load %..rawptr, %..rawptr* %44, align 8
	%46 = bitcast %..rawptr %45 to i8*
	store i8* %46, i8** %7
	%47 = load i8*, i8** %7, align 8
	%48 = icmp ne i8* %47, zeroinitializer
	; variadic call argument generation
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %8
	%49 = load {%..any*, i64}, {%..any*, i64}* %8, align 8
	%50 = call %Source_Code_Location @make_source_code_location(%..string {i8* getelementptr inbounds ([34 x i8], [34 x i8]* @__str$19, i64 0, i32 0), i64 33}, i64 863, i64 2, %..string {i8* getelementptr inbounds ([31 x i8], [31 x i8]* @__str$1a, i64 0, i32 0), i64 30})
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %9
	store {%..any*, i64} %49, {%..any*, i64}* %9
	store %Source_Code_Location zeroinitializer, %Source_Code_Location* %10
	store %Source_Code_Location %50, %Source_Code_Location* %10
	%51 = call i1 @assert(i1 %48, %..string zeroinitializer, {%..any*, i64}* %9, %Source_Code_Location* %10)
	%52 = load i8*, i8** %7, align 8
	%53 = load i64, i64* %1, align 8
	; SelectorExpr
	%54 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %3, align 8
	%55 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %54, i64 0
	%56 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %55, i64 0, i32 1
	%57 = load i64, i64* %56, align 8
	%58 = mul i64 %53, %57
	%59 = getelementptr inbounds i8, i8* %52, i64 %58
	%60 = load i64, i64* %1, align 8
	%61 = bitcast i8* %59 to %..rawptr
	%62 = call %..rawptr @__mem_zero(%..rawptr %61, i64 %60)
	; AssignStmt
	; SelectorExpr
	%63 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %3, align 8
	%64 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %63, i64 0
	%65 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %64, i64 0, i32 1
	%66 = load i64, i64* %65, align 8
	%67 = add i64 %66, 1
	store i64 %67, i64* %65
	; ReturnStmt
	; SelectorExpr
	%68 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %3, align 8
	%69 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %68, i64 0
	%70 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %69, i64 0, i32 1
	%71 = load i64, i64* %70, align 8
	ret i64 %71
}

define i128 @__default_hash({i8*, i64}* %data, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca {i8*, i64}, align 16
	%1 = load {i8*, i64}, {i8*, i64}* %data, align 8
	; ReturnStmt
	%2 = load {i8*, i64}, {i8*, i64}* %data, align 8
	store {i8*, i64} zeroinitializer, {i8*, i64}* %0
	store {i8*, i64} %2, {i8*, i64}* %0
	%3 = call i128 @__default_hash.fnv128a-0({i8*, i64}* %0, %Context* noalias nonnull %__.context_ptr)
	ret i128 %3
}

define i128 @__default_hash.fnv128a-0({i8*, i64}* %data, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca i128, align 8
	%1 = alloca i8, align 1
	%2 = alloca i64, align 8
	%3 = alloca i64, align 8
	%4 = load {i8*, i64}, {i8*, i64}* %data, align 8
	; h
		store i128 144066263297769815596495629667062367629, i128* %0
	; RangeStmt
	; b
	store i8 zeroinitializer, i8* %1
		%5 = load {i8*, i64}, {i8*, i64}* %data, align 8
	store i64 zeroinitializer, i64* %2
	%6 = extractvalue {i8*, i64} %5, 1
	store i64 %6, i64* %2
	store i64 zeroinitializer, i64* %3
	store i64 -1, i64* %3
	br label %for.index.loop-1

for.index.loop-1:
	%7 = load i64, i64* %3, align 8
	%8 = add i64 %7, 1
	store i64 %8, i64* %3
	%9 = load i64, i64* %2, align 8
	%10 = icmp slt i64 %8, %9
	br i1 %10, label %for.index.body-2, label %for.index.done-3

for.index.body-2:
	%11 = load i64, i64* %3, align 8
	%12 = extractvalue {i8*, i64} %5, 0
	%13 = getelementptr inbounds i8, i8* %12, i64 %11
	%14 = load i8, i8* %13, align 1
	store i8 %14, i8* %1
	; AssignStmt
	%15 = load i128, i128* %0, align 8
	%16 = load i8, i8* %1, align 1
	%17 = zext i8 %16 to i128
	%18 = xor i128 %15, %17
	%19 = mul i128 %18, 309485009821345068724781371
	store i128 %19, i128* %0
	br label %for.index.loop-1

for.index.done-3:
	; ReturnStmt
	%20 = load i128, i128* %0, align 8
	ret i128 %20
}

define i128 @__default_hash_string(%..string %s, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca %..string, align 8
	%1 = alloca i8*, align 8
	%2 = alloca {i8*, i64}, align 8
	%3 = alloca {i8*, i64}, align 16
		store %..string %s, %..string* %0
	; ReturnStmt
	%4 = load %..string, %..string* %0, align 8
	%5 = extractvalue %..string %4, 0
	store i8* zeroinitializer, i8** %1
	store i8* %5, i8** %1
	%6 = extractvalue %..string %4, 1
	%7 = sub i64 %6, 0
	%8 = load i8*, i8** %1, align 8
	%9 = getelementptr inbounds i8, i8* %8, i64 0
	store {i8*, i64} zeroinitializer, {i8*, i64}* %2
	%10 = getelementptr inbounds {i8*, i64}, {i8*, i64}* %2, i64 0, i32 0
	store i8* %9, i8** %10
	%11 = getelementptr inbounds {i8*, i64}, {i8*, i64}* %2, i64 0, i32 1
	store i64 %7, i64* %11
	%12 = load {i8*, i64}, {i8*, i64}* %2, align 8
	store {i8*, i64} zeroinitializer, {i8*, i64}* %3
	store {i8*, i64} %12, {i8*, i64}* %3
	%13 = call i128 @__default_hash({i8*, i64}* %3, %Context* noalias nonnull %__.context_ptr)
	ret i128 %13
}

define void @__dynamic_map_reserve(%__Map_Header* %header, i64 %cap, %Source_Code_Location* %loc, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca i64, align 8
	%1 = alloca %Source_Code_Location, align 16
	%2 = alloca %Source_Code_Location, align 16
	%3 = load %__Map_Header, %__Map_Header* %header, align 8
		store i64 %cap, i64* %0
	%4 = load %Source_Code_Location, %Source_Code_Location* %loc, align 8
	; SelectorExpr
	%5 = getelementptr inbounds %__Map_Header, %__Map_Header* %header, i64 0, i32 0
	%6 = load %raw-6.Map*, %raw-6.Map** %5, align 8
	%7 = getelementptr inbounds %raw-6.Map, %raw-6.Map* %6, i64 0
	%8 = getelementptr inbounds %raw-6.Map, %raw-6.Map* %7, i64 0, i32 0
	%9 = getelementptr inbounds {i64*, i64, i64, %Allocator}, {i64*, i64, i64, %Allocator}* %8, i64 0
	%10 = load i64, i64* %0, align 8
	%11 = load %Source_Code_Location, %Source_Code_Location* %loc, align 8
	%12 = bitcast {i64*, i64, i64, %Allocator}* %9 to %..rawptr
	store %Source_Code_Location zeroinitializer, %Source_Code_Location* %1
	store %Source_Code_Location %11, %Source_Code_Location* %1
	%13 = call i1 @__dynamic_array_reserve(%..rawptr %12, i64 8, i64 8, i64 %10, %Source_Code_Location* %1, %Context* noalias nonnull %__.context_ptr)
	; SelectorExpr
	%14 = getelementptr inbounds %__Map_Header, %__Map_Header* %header, i64 0, i32 0
	%15 = load %raw-6.Map*, %raw-6.Map** %14, align 8
	%16 = getelementptr inbounds %raw-6.Map, %raw-6.Map* %15, i64 0
	%17 = getelementptr inbounds %raw-6.Map, %raw-6.Map* %16, i64 0, i32 1
	%18 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %17, i64 0
	%19 = getelementptr inbounds %__Map_Header, %__Map_Header* %header, i64 0, i32 2
	%20 = load i64, i64* %19, align 8
	%21 = getelementptr inbounds %__Map_Header, %__Map_Header* %header, i64 0, i32 3
	%22 = load i64, i64* %21, align 8
	%23 = load i64, i64* %0, align 8
	%24 = load %Source_Code_Location, %Source_Code_Location* %loc, align 8
	%25 = bitcast %raw-6.Dynamic_Array* %18 to %..rawptr
	store %Source_Code_Location zeroinitializer, %Source_Code_Location* %2
	store %Source_Code_Location %24, %Source_Code_Location* %2
	%26 = call i1 @__dynamic_array_reserve(%..rawptr %25, i64 %20, i64 %22, i64 %23, %Source_Code_Location* %2, %Context* noalias nonnull %__.context_ptr)
	ret void
}

define void @__dynamic_map_rehash(%__Map_Header* %header, i64 %new_count, %Source_Code_Location* %loc, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca i64, align 8
	%1 = alloca %__Map_Header, align 8
	%2 = alloca %raw-6.Map, align 8
	%3 = alloca %raw-6.Dynamic_Array*, align 8
	%4 = alloca %raw-6.Dynamic_Array*, align 8
	%5 = alloca %Source_Code_Location, align 16
	%6 = alloca %Source_Code_Location, align 16
	%7 = alloca i64, align 8
	%8 = alloca i64, align 8
	%9 = alloca i64, align 8
	%10 = alloca i64, align 8
	%11 = alloca i64, align 8
	%12 = alloca i64, align 8
	%13 = alloca %__Map_Header, align 16
	%14 = alloca %Source_Code_Location, align 16
	%15 = alloca %__Map_Entry_Header*, align 8
	%16 = alloca %__Map_Header, align 16
	%17 = alloca i8*, align 8
	%18 = alloca %__Map_Find_Result, align 8
	%19 = alloca %__Map_Header, align 16
	%20 = alloca %__Map_Key, align 16
	%21 = alloca i64, align 8
	%22 = alloca %__Map_Header, align 16
	%23 = alloca %__Map_Key, align 16
	%24 = alloca %Source_Code_Location, align 16
	%25 = alloca %__Map_Entry_Header*, align 8
	%26 = alloca %__Map_Header, align 16
	%27 = alloca %__Map_Entry_Header*, align 8
	%28 = alloca %__Map_Header, align 16
	%29 = alloca i8*, align 8
	%30 = alloca %__Map_Header, align 16
	%31 = alloca %__Map_Header, align 16
	%32 = alloca %Source_Code_Location, align 16
	%33 = alloca %Allocator, align 16
	%34 = alloca %Source_Code_Location, align 16
	%35 = alloca %Allocator, align 16
	%36 = alloca %Source_Code_Location, align 16
	%37 = load %__Map_Header, %__Map_Header* %header, align 8
		store i64 %new_count, i64* %0
	%38 = load %Source_Code_Location, %Source_Code_Location* %loc, align 8
	; new_header
		%39 = load %__Map_Header, %__Map_Header* %header, align 8
	store %__Map_Header %39, %__Map_Header* %1
	; nm
	store %raw-6.Map zeroinitializer, %raw-6.Map* %2
		; AssignStmt
	; SelectorExpr
	%40 = getelementptr inbounds %__Map_Header, %__Map_Header* %1, i64 0, i32 0
	%41 = getelementptr inbounds %raw-6.Map, %raw-6.Map* %2, i64 0
	store %raw-6.Map* %41, %raw-6.Map** %40
	; header_hashes
		; SelectorExpr
	; SelectorExpr
	%42 = getelementptr inbounds %__Map_Header, %__Map_Header* %header, i64 0, i32 0
	%43 = load %raw-6.Map*, %raw-6.Map** %42, align 8
	%44 = getelementptr inbounds %raw-6.Map, %raw-6.Map* %43, i64 0
	%45 = getelementptr inbounds %raw-6.Map, %raw-6.Map* %44, i64 0, i32 0
	%46 = getelementptr inbounds {i64*, i64, i64, %Allocator}, {i64*, i64, i64, %Allocator}* %45, i64 0
	%47 = bitcast {i64*, i64, i64, %Allocator}* %46 to %raw-6.Dynamic_Array*
	store %raw-6.Dynamic_Array* %47, %raw-6.Dynamic_Array** %3
	; nm_hashes
		; SelectorExpr
	%48 = getelementptr inbounds %raw-6.Map, %raw-6.Map* %2, i64 0, i32 0
	%49 = getelementptr inbounds {i64*, i64, i64, %Allocator}, {i64*, i64, i64, %Allocator}* %48, i64 0
	%50 = bitcast {i64*, i64, i64, %Allocator}* %49 to %raw-6.Dynamic_Array*
	store %raw-6.Dynamic_Array* %50, %raw-6.Dynamic_Array** %4
	%51 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %4, align 8
	%52 = load i64, i64* %0, align 8
	%53 = load %Source_Code_Location, %Source_Code_Location* %loc, align 8
	%54 = bitcast %raw-6.Dynamic_Array* %51 to %..rawptr
	store %Source_Code_Location zeroinitializer, %Source_Code_Location* %5
	store %Source_Code_Location %53, %Source_Code_Location* %5
	%55 = call i1 @__dynamic_array_resize(%..rawptr %54, i64 8, i64 8, i64 %52, %Source_Code_Location* %5, %Context* noalias nonnull %__.context_ptr)
	; SelectorExpr
	%56 = getelementptr inbounds %raw-6.Map, %raw-6.Map* %2, i64 0, i32 1
	%57 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %56, i64 0
	%58 = getelementptr inbounds %__Map_Header, %__Map_Header* %header, i64 0, i32 2
	%59 = load i64, i64* %58, align 8
	%60 = getelementptr inbounds %__Map_Header, %__Map_Header* %header, i64 0, i32 3
	%61 = load i64, i64* %60, align 8
	; SelectorExpr
	; SelectorExpr
	%62 = getelementptr inbounds %__Map_Header, %__Map_Header* %header, i64 0, i32 0
	%63 = load %raw-6.Map*, %raw-6.Map** %62, align 8
	%64 = getelementptr inbounds %raw-6.Map, %raw-6.Map* %63, i64 0
	%65 = getelementptr inbounds %raw-6.Map, %raw-6.Map* %64, i64 0, i32 1
	%66 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %65, i64 0, i32 1
	%67 = load i64, i64* %66, align 8
	%68 = load %Source_Code_Location, %Source_Code_Location* %loc, align 8
	%69 = bitcast %raw-6.Dynamic_Array* %57 to %..rawptr
	store %Source_Code_Location zeroinitializer, %Source_Code_Location* %6
	store %Source_Code_Location %68, %Source_Code_Location* %6
	%70 = call i1 @__dynamic_array_reserve(%..rawptr %69, i64 %59, i64 %61, i64 %67, %Source_Code_Location* %6, %Context* noalias nonnull %__.context_ptr)
	; RangeStmt
	; i
	store i64 zeroinitializer, i64* %7
		store i64 zeroinitializer, i64* %8
	store i64 0, i64* %8
	store i64 zeroinitializer, i64* %9
	store i64 0, i64* %9
	br label %for.interval.loop-1

for.interval.loop-1:
	%71 = load i64, i64* %0, align 8
	%72 = load i64, i64* %8, align 8
	%73 = icmp slt i64 %72, %71
	br i1 %73, label %for.interval.body-2, label %for.interval.done-3

for.interval.body-2:
	%74 = load i64, i64* %8, align 8
	%75 = load i64, i64* %9, align 8
	%76 = load i64, i64* %8, align 8
	%77 = add i64 %76, 1
	store i64 %77, i64* %8
	%78 = load i64, i64* %9, align 8
	%79 = add i64 %78, 1
	store i64 %79, i64* %9
	store i64 %74, i64* %7
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%80 = getelementptr inbounds %raw-6.Map, %raw-6.Map* %2, i64 0, i32 0
	%81 = load {i64*, i64, i64, %Allocator}, {i64*, i64, i64, %Allocator}* %80, align 8
	%82 = extractvalue {i64*, i64, i64, %Allocator} %81, 0
	%83 = extractvalue {i64*, i64, i64, %Allocator} %81, 1
	%84 = load i64, i64* %7, align 8
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([34 x i8], [34 x i8]* @__str$1b, i64 0, i32 0), i64 33}, i64 898, i64 37, i64 %84, i64 %83)
	%85 = getelementptr inbounds i64, i64* %82, i64 %84
	store i64 -1, i64* %85
	br label %for.interval.loop-1

for.interval.done-3:
	; RangeStmt
	; i
	store i64 zeroinitializer, i64* %10
		store i64 zeroinitializer, i64* %11
	store i64 0, i64* %11
	store i64 zeroinitializer, i64* %12
	store i64 0, i64* %12
	br label %for.interval.loop-4

for.interval.loop-4:
	; SelectorExpr
	; SelectorExpr
	%86 = getelementptr inbounds %__Map_Header, %__Map_Header* %header, i64 0, i32 0
	%87 = load %raw-6.Map*, %raw-6.Map** %86, align 8
	%88 = getelementptr inbounds %raw-6.Map, %raw-6.Map* %87, i64 0
	%89 = getelementptr inbounds %raw-6.Map, %raw-6.Map* %88, i64 0, i32 1
	%90 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %89, i64 0, i32 1
	%91 = load i64, i64* %90, align 8
	%92 = load i64, i64* %11, align 8
	%93 = icmp slt i64 %92, %91
	br i1 %93, label %for.interval.body-5, label %for.interval.done-13

for.interval.body-5:
	%94 = load i64, i64* %11, align 8
	%95 = load i64, i64* %12, align 8
	%96 = load i64, i64* %11, align 8
	%97 = add i64 %96, 1
	store i64 %97, i64* %11
	%98 = load i64, i64* %12, align 8
	%99 = add i64 %98, 1
	store i64 %99, i64* %12
	store i64 %94, i64* %10
	; IfStmt
	; SelectorExpr
	%100 = getelementptr inbounds %raw-6.Map, %raw-6.Map* %2, i64 0, i32 0
	%101 = load {i64*, i64, i64, %Allocator}, {i64*, i64, i64, %Allocator}* %100, align 8
	%102 = extractvalue {i64*, i64, i64, %Allocator} %101, 1
	%103 = icmp eq i64 %102, 0
	br i1 %103, label %if.then-6, label %if.done-7

if.then-6:
	%104 = load %__Map_Header, %__Map_Header* %1, align 8
	%105 = load %Source_Code_Location, %Source_Code_Location* %loc, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %13
	store %__Map_Header %104, %__Map_Header* %13
	store %Source_Code_Location zeroinitializer, %Source_Code_Location* %14
	store %Source_Code_Location %105, %Source_Code_Location* %14
	call void @__dynamic_map_grow(%__Map_Header* %13, %Source_Code_Location* %14, %Context* noalias nonnull %__.context_ptr)
	br label %if.done-7

if.done-7:
	; entry_header
		%106 = load %__Map_Header, %__Map_Header* %header, align 8
	%107 = load i64, i64* %10, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %16
	store %__Map_Header %106, %__Map_Header* %16
	%108 = call %__Map_Entry_Header* @__dynamic_map_get_entry(%__Map_Header* %16, i64 %107, %Context* noalias nonnull %__.context_ptr)
	store %__Map_Entry_Header* %108, %__Map_Entry_Header** %15
	; data
		%109 = load %__Map_Entry_Header*, %__Map_Entry_Header** %15, align 8
	%110 = bitcast %__Map_Entry_Header* %109 to i8*
	store i8* %110, i8** %17
	; fr
		%111 = load %__Map_Header, %__Map_Header* %1, align 8
	; SelectorExpr
	%112 = load %__Map_Entry_Header*, %__Map_Entry_Header** %15, align 8
	%113 = getelementptr inbounds %__Map_Entry_Header, %__Map_Entry_Header* %112, i64 0
	%114 = getelementptr inbounds %__Map_Entry_Header, %__Map_Entry_Header* %113, i64 0, i32 0
	%115 = load %__Map_Key, %__Map_Key* %114, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %19
	store %__Map_Header %111, %__Map_Header* %19
	store %__Map_Key zeroinitializer, %__Map_Key* %20
	store %__Map_Key %115, %__Map_Key* %20
	%116 = call %__Map_Find_Result @__dynamic_map_find(%__Map_Header* %19, %__Map_Key* %20, %Context* noalias nonnull %__.context_ptr)
	store %__Map_Find_Result %116, %__Map_Find_Result* %18
	; j
		%117 = load %__Map_Header, %__Map_Header* %1, align 8
	; SelectorExpr
	%118 = load %__Map_Entry_Header*, %__Map_Entry_Header** %15, align 8
	%119 = getelementptr inbounds %__Map_Entry_Header, %__Map_Entry_Header* %118, i64 0
	%120 = getelementptr inbounds %__Map_Entry_Header, %__Map_Entry_Header* %119, i64 0, i32 0
	%121 = load %__Map_Key, %__Map_Key* %120, align 8
	%122 = load %Source_Code_Location, %Source_Code_Location* %loc, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %22
	store %__Map_Header %117, %__Map_Header* %22
	store %__Map_Key zeroinitializer, %__Map_Key* %23
	store %__Map_Key %121, %__Map_Key* %23
	store %Source_Code_Location zeroinitializer, %Source_Code_Location* %24
	store %Source_Code_Location %122, %Source_Code_Location* %24
	%123 = call i64 @__dynamic_map_add_entry(%__Map_Header* %22, %__Map_Key* %23, %Source_Code_Location* %24, %Context* noalias nonnull %__.context_ptr)
	store i64 %123, i64* %21
	; IfStmt
	; SelectorExpr
	%124 = getelementptr inbounds %__Map_Find_Result, %__Map_Find_Result* %18, i64 0, i32 1
	%125 = load i64, i64* %124, align 8
	%126 = icmp slt i64 %125, 0
	br i1 %126, label %if.then-8, label %if.else-9

if.then-8:
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%127 = getelementptr inbounds %raw-6.Map, %raw-6.Map* %2, i64 0, i32 0
	%128 = load {i64*, i64, i64, %Allocator}, {i64*, i64, i64, %Allocator}* %127, align 8
	%129 = extractvalue {i64*, i64, i64, %Allocator} %128, 0
	%130 = extractvalue {i64*, i64, i64, %Allocator} %128, 1
	; SelectorExpr
	%131 = getelementptr inbounds %__Map_Find_Result, %__Map_Find_Result* %18, i64 0, i32 0
	%132 = load i64, i64* %131, align 8
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([34 x i8], [34 x i8]* @__str$1c, i64 0, i32 0), i64 33}, i64 909, i64 17, i64 %132, i64 %130)
	%133 = getelementptr inbounds i64, i64* %129, i64 %132
	%134 = load i64, i64* %21, align 8
	store i64 %134, i64* %133
	br label %if.done-10

if.else-9:
	; e
		%135 = load %__Map_Header, %__Map_Header* %1, align 8
	; SelectorExpr
	%136 = getelementptr inbounds %__Map_Find_Result, %__Map_Find_Result* %18, i64 0, i32 1
	%137 = load i64, i64* %136, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %26
	store %__Map_Header %135, %__Map_Header* %26
	%138 = call %__Map_Entry_Header* @__dynamic_map_get_entry(%__Map_Header* %26, i64 %137, %Context* noalias nonnull %__.context_ptr)
	store %__Map_Entry_Header* %138, %__Map_Entry_Header** %25
	; AssignStmt
	; SelectorExpr
	%139 = load %__Map_Entry_Header*, %__Map_Entry_Header** %25, align 8
	%140 = getelementptr inbounds %__Map_Entry_Header, %__Map_Entry_Header* %139, i64 0
	%141 = getelementptr inbounds %__Map_Entry_Header, %__Map_Entry_Header* %140, i64 0, i32 1
	%142 = load i64, i64* %21, align 8
	store i64 %142, i64* %141
	br label %if.done-10

if.done-10:
	; e
		%143 = load %__Map_Header, %__Map_Header* %1, align 8
	%144 = load i64, i64* %21, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %28
	store %__Map_Header %143, %__Map_Header* %28
	%145 = call %__Map_Entry_Header* @__dynamic_map_get_entry(%__Map_Header* %28, i64 %144, %Context* noalias nonnull %__.context_ptr)
	store %__Map_Entry_Header* %145, %__Map_Entry_Header** %27
	; AssignStmt
	; SelectorExpr
	%146 = load %__Map_Entry_Header*, %__Map_Entry_Header** %27, align 8
	%147 = getelementptr inbounds %__Map_Entry_Header, %__Map_Entry_Header* %146, i64 0
	%148 = getelementptr inbounds %__Map_Entry_Header, %__Map_Entry_Header* %147, i64 0, i32 1
	; SelectorExpr
	%149 = getelementptr inbounds %__Map_Find_Result, %__Map_Find_Result* %18, i64 0, i32 2
	%150 = load i64, i64* %149, align 8
	store i64 %150, i64* %148
	; ndata
		%151 = load %__Map_Entry_Header*, %__Map_Entry_Header** %27, align 8
	%152 = bitcast %__Map_Entry_Header* %151 to i8*
	store i8* %152, i8** %29
	%153 = load i8*, i8** %29, align 8
	%154 = getelementptr inbounds %__Map_Header, %__Map_Header* %header, i64 0, i32 4
	%155 = load i64, i64* %154, align 8
	%156 = bitcast i64 %155 to i64
	%157 = getelementptr inbounds i8, i8* %153, i64 %156
	%158 = load i8*, i8** %17, align 8
	%159 = getelementptr inbounds %__Map_Header, %__Map_Header* %header, i64 0, i32 4
	%160 = load i64, i64* %159, align 8
	%161 = bitcast i64 %160 to i64
	%162 = getelementptr inbounds i8, i8* %158, i64 %161
	%163 = getelementptr inbounds %__Map_Header, %__Map_Header* %header, i64 0, i32 5
	%164 = load i64, i64* %163, align 8
	%165 = bitcast i8* %157 to %..rawptr
	%166 = bitcast i8* %162 to %..rawptr
	%167 = call %..rawptr @__mem_copy(%..rawptr %165, %..rawptr %166, i64 %164)
	; IfStmt
	%168 = load %__Map_Header, %__Map_Header* %1, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %30
	store %__Map_Header %168, %__Map_Header* %30
	%169 = call i1 @__dynamic_map_full(%__Map_Header* %30, %Context* noalias nonnull %__.context_ptr)
	br i1 %169, label %if.then-11, label %if.done-12

if.then-11:
	%170 = load %__Map_Header, %__Map_Header* %1, align 8
	%171 = load %Source_Code_Location, %Source_Code_Location* %loc, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %31
	store %__Map_Header %170, %__Map_Header* %31
	store %Source_Code_Location zeroinitializer, %Source_Code_Location* %32
	store %Source_Code_Location %171, %Source_Code_Location* %32
	call void @__dynamic_map_grow(%__Map_Header* %31, %Source_Code_Location* %32, %Context* noalias nonnull %__.context_ptr)
	br label %if.done-12

if.done-12:
	br label %for.interval.loop-4

for.interval.done-13:
	; SelectorExpr
	%172 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %3, align 8
	%173 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %172, i64 0
	%174 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %173, i64 0, i32 3
	%175 = load %Allocator, %Allocator* %174, align 8
	; SelectorExpr
	%176 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %3, align 8
	%177 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %176, i64 0
	%178 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %177, i64 0, i32 0
	%179 = load %..rawptr, %..rawptr* %178, align 8
	%180 = load %Source_Code_Location, %Source_Code_Location* %loc, align 8
	store %Allocator zeroinitializer, %Allocator* %33
	store %Allocator %175, %Allocator* %33
	store %Source_Code_Location zeroinitializer, %Source_Code_Location* %34
	store %Source_Code_Location %180, %Source_Code_Location* %34
	call void @free_ptr_with_allocator(%Allocator* %33, %..rawptr %179, %Source_Code_Location* %34, %Context* noalias nonnull %__.context_ptr)
	; SelectorExpr
	; SelectorExpr
	; SelectorExpr
	%181 = getelementptr inbounds %__Map_Header, %__Map_Header* %header, i64 0, i32 0
	%182 = load %raw-6.Map*, %raw-6.Map** %181, align 8
	%183 = getelementptr inbounds %raw-6.Map, %raw-6.Map* %182, i64 0
	%184 = getelementptr inbounds %raw-6.Map, %raw-6.Map* %183, i64 0, i32 1
	%185 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %184, i64 0, i32 3
	%186 = load %Allocator, %Allocator* %185, align 8
	; SelectorExpr
	; SelectorExpr
	; SelectorExpr
	%187 = getelementptr inbounds %__Map_Header, %__Map_Header* %header, i64 0, i32 0
	%188 = load %raw-6.Map*, %raw-6.Map** %187, align 8
	%189 = getelementptr inbounds %raw-6.Map, %raw-6.Map* %188, i64 0
	%190 = getelementptr inbounds %raw-6.Map, %raw-6.Map* %189, i64 0, i32 1
	%191 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %190, i64 0, i32 0
	%192 = load %..rawptr, %..rawptr* %191, align 8
	%193 = load %Source_Code_Location, %Source_Code_Location* %loc, align 8
	store %Allocator zeroinitializer, %Allocator* %35
	store %Allocator %186, %Allocator* %35
	store %Source_Code_Location zeroinitializer, %Source_Code_Location* %36
	store %Source_Code_Location %193, %Source_Code_Location* %36
	call void @free_ptr_with_allocator(%Allocator* %35, %..rawptr %192, %Source_Code_Location* %36, %Context* noalias nonnull %__.context_ptr)
	; AssignStmt
	; SelectorExpr
	%194 = getelementptr inbounds %__Map_Header, %__Map_Header* %header, i64 0, i32 0
	%195 = load %raw-6.Map*, %raw-6.Map** %194, align 8
	%196 = getelementptr inbounds %raw-6.Map, %raw-6.Map* %195, i64 0
	%197 = load %raw-6.Map, %raw-6.Map* %2, align 8
	store %raw-6.Map %197, %raw-6.Map* %196
	ret void
}

define %..rawptr @__dynamic_map_get(%__Map_Header* %h, %__Map_Key* %key, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca i64, align 8
	%1 = alloca %__Map_Header, align 16
	%2 = alloca %__Map_Key, align 16
	%3 = alloca %__Map_Find_Result, align 8
	%4 = alloca i8*, align 8
	%5 = alloca %__Map_Header, align 16
	%6 = load %__Map_Header, %__Map_Header* %h, align 8
	%7 = load %__Map_Key, %__Map_Key* %key, align 8
	; index
		; SelectorExpr
	%8 = load %__Map_Header, %__Map_Header* %h, align 8
	%9 = load %__Map_Key, %__Map_Key* %key, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %1
	store %__Map_Header %8, %__Map_Header* %1
	store %__Map_Key zeroinitializer, %__Map_Key* %2
	store %__Map_Key %9, %__Map_Key* %2
	%10 = call %__Map_Find_Result @__dynamic_map_find(%__Map_Header* %1, %__Map_Key* %2, %Context* noalias nonnull %__.context_ptr)
	store %__Map_Find_Result zeroinitializer, %__Map_Find_Result* %3
	store %__Map_Find_Result %10, %__Map_Find_Result* %3
	%11 = getelementptr inbounds %__Map_Find_Result, %__Map_Find_Result* %3, i64 0, i32 2
	%12 = load i64, i64* %11, align 8
	store i64 %12, i64* %0
	; IfStmt
	%13 = load i64, i64* %0, align 8
	%14 = icmp sge i64 %13, 0
	br i1 %14, label %if.then-1, label %if.done-2

if.then-1:
	; data
		%15 = load %__Map_Header, %__Map_Header* %h, align 8
	%16 = load i64, i64* %0, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %5
	store %__Map_Header %15, %__Map_Header* %5
	%17 = call %__Map_Entry_Header* @__dynamic_map_get_entry(%__Map_Header* %5, i64 %16, %Context* noalias nonnull %__.context_ptr)
	%18 = bitcast %__Map_Entry_Header* %17 to i8*
	store i8* %18, i8** %4
	; ReturnStmt
	%19 = load i8*, i8** %4, align 8
	; SelectorExpr
	%20 = getelementptr inbounds %__Map_Header, %__Map_Header* %h, i64 0, i32 4
	%21 = load i64, i64* %20, align 8
	%22 = bitcast i64 %21 to i64
	%23 = getelementptr inbounds i8, i8* %19, i64 %22
	%24 = bitcast i8* %23 to %..rawptr
	ret %..rawptr %24

if.done-2:
	; ReturnStmt
	ret %..rawptr zeroinitializer
}

define void @__dynamic_map_set(%__Map_Header* %h, %__Map_Key* %key, %..rawptr %value, %Source_Code_Location* %loc, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca %..rawptr, align 8
	%1 = alloca i64, align 8
	%2 = alloca {%..any*, i64}, align 8
	%3 = alloca {%..any*, i64}, align 16
	%4 = alloca %Source_Code_Location, align 16
	%5 = alloca %__Map_Header, align 16
	%6 = alloca %Source_Code_Location, align 16
	%7 = alloca %__Map_Header, align 16
	%8 = alloca %Source_Code_Location, align 16
	%9 = alloca %__Map_Find_Result, align 8
	%10 = alloca %__Map_Header, align 16
	%11 = alloca %__Map_Key, align 16
	%12 = alloca %__Map_Header, align 16
	%13 = alloca %__Map_Key, align 16
	%14 = alloca %Source_Code_Location, align 16
	%15 = alloca %__Map_Entry_Header*, align 8
	%16 = alloca %__Map_Header, align 16
	%17 = alloca %__Map_Entry_Header*, align 8
	%18 = alloca %__Map_Header, align 16
	%19 = alloca i8*, align 8
	%20 = alloca %__Map_Header, align 16
	%21 = alloca %__Map_Header, align 16
	%22 = alloca %Source_Code_Location, align 16
	%23 = load %__Map_Header, %__Map_Header* %h, align 8
	%24 = load %__Map_Key, %__Map_Key* %key, align 8
		store %..rawptr %value, %..rawptr* %0
	%25 = load %Source_Code_Location, %Source_Code_Location* %loc, align 8
	; index
	store i64 zeroinitializer, i64* %1
		%26 = load %..rawptr, %..rawptr* %0, align 8
	%27 = icmp ne %..rawptr %26, zeroinitializer
	; variadic call argument generation
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %2
	%28 = load {%..any*, i64}, {%..any*, i64}* %2, align 8
	%29 = call %Source_Code_Location @make_source_code_location(%..string {i8* getelementptr inbounds ([34 x i8], [34 x i8]* @__str$1d, i64 0, i32 0), i64 33}, i64 938, i64 2, %..string {i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__str$1e, i64 0, i32 0), i64 17})
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %3
	store {%..any*, i64} %28, {%..any*, i64}* %3
	store %Source_Code_Location zeroinitializer, %Source_Code_Location* %4
	store %Source_Code_Location %29, %Source_Code_Location* %4
	%30 = call i1 @assert(i1 %27, %..string zeroinitializer, {%..any*, i64}* %3, %Source_Code_Location* %4)
	; IfStmt
	; SelectorExpr
	%31 = getelementptr inbounds %__Map_Header, %__Map_Header* %h, i64 0, i32 0
	%32 = load %raw-6.Map*, %raw-6.Map** %31, align 8
	%33 = getelementptr inbounds %raw-6.Map, %raw-6.Map* %32, i64 0
	%34 = getelementptr inbounds %raw-6.Map, %raw-6.Map* %33, i64 0, i32 0
	%35 = load {i64*, i64, i64, %Allocator}, {i64*, i64, i64, %Allocator}* %34, align 8
	%36 = extractvalue {i64*, i64, i64, %Allocator} %35, 1
	%37 = icmp eq i64 %36, 0
	br i1 %37, label %if.then-1, label %if.done-2

if.then-1:
	%38 = load %__Map_Header, %__Map_Header* %h, align 8
	%39 = load %Source_Code_Location, %Source_Code_Location* %loc, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %5
	store %__Map_Header %38, %__Map_Header* %5
	store %Source_Code_Location zeroinitializer, %Source_Code_Location* %6
	store %Source_Code_Location %39, %Source_Code_Location* %6
	call void @__dynamic_map_reserve(%__Map_Header* %5, i64 16, %Source_Code_Location* %6, %Context* noalias nonnull %__.context_ptr)
	%40 = load %__Map_Header, %__Map_Header* %h, align 8
	%41 = load %Source_Code_Location, %Source_Code_Location* %loc, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %7
	store %__Map_Header %40, %__Map_Header* %7
	store %Source_Code_Location zeroinitializer, %Source_Code_Location* %8
	store %Source_Code_Location %41, %Source_Code_Location* %8
	call void @__dynamic_map_grow(%__Map_Header* %7, %Source_Code_Location* %8, %Context* noalias nonnull %__.context_ptr)
	br label %if.done-2

if.done-2:
	; fr
		%42 = load %__Map_Header, %__Map_Header* %h, align 8
	%43 = load %__Map_Key, %__Map_Key* %key, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %10
	store %__Map_Header %42, %__Map_Header* %10
	store %__Map_Key zeroinitializer, %__Map_Key* %11
	store %__Map_Key %43, %__Map_Key* %11
	%44 = call %__Map_Find_Result @__dynamic_map_find(%__Map_Header* %10, %__Map_Key* %11, %Context* noalias nonnull %__.context_ptr)
	store %__Map_Find_Result %44, %__Map_Find_Result* %9
	; IfStmt
	; SelectorExpr
	%45 = getelementptr inbounds %__Map_Find_Result, %__Map_Find_Result* %9, i64 0, i32 2
	%46 = load i64, i64* %45, align 8
	%47 = icmp sge i64 %46, 0
	br i1 %47, label %if.then-3, label %if.else-4

if.then-3:
	; AssignStmt
	; SelectorExpr
	%48 = getelementptr inbounds %__Map_Find_Result, %__Map_Find_Result* %9, i64 0, i32 2
	%49 = load i64, i64* %48, align 8
	store i64 %49, i64* %1
	br label %if.done-8

if.else-4:
	; AssignStmt
	%50 = load %__Map_Header, %__Map_Header* %h, align 8
	%51 = load %__Map_Key, %__Map_Key* %key, align 8
	%52 = load %Source_Code_Location, %Source_Code_Location* %loc, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %12
	store %__Map_Header %50, %__Map_Header* %12
	store %__Map_Key zeroinitializer, %__Map_Key* %13
	store %__Map_Key %51, %__Map_Key* %13
	store %Source_Code_Location zeroinitializer, %Source_Code_Location* %14
	store %Source_Code_Location %52, %Source_Code_Location* %14
	%53 = call i64 @__dynamic_map_add_entry(%__Map_Header* %12, %__Map_Key* %13, %Source_Code_Location* %14, %Context* noalias nonnull %__.context_ptr)
	store i64 %53, i64* %1
	; IfStmt
	; SelectorExpr
	%54 = getelementptr inbounds %__Map_Find_Result, %__Map_Find_Result* %9, i64 0, i32 1
	%55 = load i64, i64* %54, align 8
	%56 = icmp sge i64 %55, 0
	br i1 %56, label %if.then-5, label %if.else-6

if.then-5:
	; entry
		%57 = load %__Map_Header, %__Map_Header* %h, align 8
	; SelectorExpr
	%58 = getelementptr inbounds %__Map_Find_Result, %__Map_Find_Result* %9, i64 0, i32 1
	%59 = load i64, i64* %58, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %16
	store %__Map_Header %57, %__Map_Header* %16
	%60 = call %__Map_Entry_Header* @__dynamic_map_get_entry(%__Map_Header* %16, i64 %59, %Context* noalias nonnull %__.context_ptr)
	store %__Map_Entry_Header* %60, %__Map_Entry_Header** %15
	; AssignStmt
	; SelectorExpr
	%61 = load %__Map_Entry_Header*, %__Map_Entry_Header** %15, align 8
	%62 = getelementptr inbounds %__Map_Entry_Header, %__Map_Entry_Header* %61, i64 0
	%63 = getelementptr inbounds %__Map_Entry_Header, %__Map_Entry_Header* %62, i64 0, i32 1
	%64 = load i64, i64* %1, align 8
	store i64 %64, i64* %63
	br label %if.done-7

if.else-6:
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%65 = getelementptr inbounds %__Map_Header, %__Map_Header* %h, i64 0, i32 0
	%66 = load %raw-6.Map*, %raw-6.Map** %65, align 8
	%67 = getelementptr inbounds %raw-6.Map, %raw-6.Map* %66, i64 0
	%68 = getelementptr inbounds %raw-6.Map, %raw-6.Map* %67, i64 0, i32 0
	%69 = load {i64*, i64, i64, %Allocator}, {i64*, i64, i64, %Allocator}* %68, align 8
	%70 = extractvalue {i64*, i64, i64, %Allocator} %69, 0
	%71 = extractvalue {i64*, i64, i64, %Allocator} %69, 1
	; SelectorExpr
	%72 = getelementptr inbounds %__Map_Find_Result, %__Map_Find_Result* %9, i64 0, i32 0
	%73 = load i64, i64* %72, align 8
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([34 x i8], [34 x i8]* @__str$1f, i64 0, i32 0), i64 33}, i64 954, i64 16, i64 %73, i64 %71)
	%74 = getelementptr inbounds i64, i64* %70, i64 %73
	%75 = load i64, i64* %1, align 8
	store i64 %75, i64* %74
	br label %if.done-7

if.done-7:
	br label %if.done-8

if.done-8:
	; e
		%76 = load %__Map_Header, %__Map_Header* %h, align 8
	%77 = load i64, i64* %1, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %18
	store %__Map_Header %76, %__Map_Header* %18
	%78 = call %__Map_Entry_Header* @__dynamic_map_get_entry(%__Map_Header* %18, i64 %77, %Context* noalias nonnull %__.context_ptr)
	store %__Map_Entry_Header* %78, %__Map_Entry_Header** %17
	; AssignStmt
	; SelectorExpr
	%79 = load %__Map_Entry_Header*, %__Map_Entry_Header** %17, align 8
	%80 = getelementptr inbounds %__Map_Entry_Header, %__Map_Entry_Header* %79, i64 0
	%81 = getelementptr inbounds %__Map_Entry_Header, %__Map_Entry_Header* %80, i64 0, i32 0
	%82 = load %__Map_Key, %__Map_Key* %key, align 8
	store %__Map_Key %82, %__Map_Key* %81
	; val
		%83 = load %__Map_Entry_Header*, %__Map_Entry_Header** %17, align 8
	%84 = bitcast %__Map_Entry_Header* %83 to i8*
	%85 = getelementptr inbounds %__Map_Header, %__Map_Header* %h, i64 0, i32 4
	%86 = load i64, i64* %85, align 8
	%87 = bitcast i64 %86 to i64
	%88 = getelementptr inbounds i8, i8* %84, i64 %87
	store i8* %88, i8** %19
	%89 = load i8*, i8** %19, align 8
	%90 = load %..rawptr, %..rawptr* %0, align 8
	%91 = getelementptr inbounds %__Map_Header, %__Map_Header* %h, i64 0, i32 5
	%92 = load i64, i64* %91, align 8
	%93 = bitcast i8* %89 to %..rawptr
	%94 = call %..rawptr @__mem_copy(%..rawptr %93, %..rawptr %90, i64 %92)
	; IfStmt
	%95 = load %__Map_Header, %__Map_Header* %h, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %20
	store %__Map_Header %95, %__Map_Header* %20
	%96 = call i1 @__dynamic_map_full(%__Map_Header* %20, %Context* noalias nonnull %__.context_ptr)
	br i1 %96, label %if.then-9, label %if.done-10

if.then-9:
	%97 = load %__Map_Header, %__Map_Header* %h, align 8
	%98 = load %Source_Code_Location, %Source_Code_Location* %loc, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %21
	store %__Map_Header %97, %__Map_Header* %21
	store %Source_Code_Location zeroinitializer, %Source_Code_Location* %22
	store %Source_Code_Location %98, %Source_Code_Location* %22
	call void @__dynamic_map_grow(%__Map_Header* %21, %Source_Code_Location* %22, %Context* noalias nonnull %__.context_ptr)
	br label %if.done-10

if.done-10:
	ret void
}

define void @__dynamic_map_grow(%__Map_Header* %h, %Source_Code_Location* %loc, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca i64, align 8
	%1 = alloca %__Map_Header, align 16
	%2 = alloca %Source_Code_Location, align 16
	%3 = load %__Map_Header, %__Map_Header* %h, align 8
	%4 = load %Source_Code_Location, %Source_Code_Location* %loc, align 8
	; new_count
		; max
	; SelectorExpr
	; SelectorExpr
	%5 = getelementptr inbounds %__Map_Header, %__Map_Header* %h, i64 0, i32 0
	%6 = load %raw-6.Map*, %raw-6.Map** %5, align 8
	%7 = getelementptr inbounds %raw-6.Map, %raw-6.Map* %6, i64 0
	%8 = getelementptr inbounds %raw-6.Map, %raw-6.Map* %7, i64 0, i32 1
	%9 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %8, i64 0, i32 2
	%10 = load i64, i64* %9, align 8
	%11 = mul i64 2, %10
	%12 = add i64 %11, 8
	%13 = icmp sgt i64 %12, 16
	%14 = select i1 %13, i64 %12, i64 16
	store i64 %14, i64* %0
	%15 = load %__Map_Header, %__Map_Header* %h, align 8
	%16 = load i64, i64* %0, align 8
	%17 = load %Source_Code_Location, %Source_Code_Location* %loc, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %1
	store %__Map_Header %15, %__Map_Header* %1
	store %Source_Code_Location zeroinitializer, %Source_Code_Location* %2
	store %Source_Code_Location %17, %Source_Code_Location* %2
	call void @__dynamic_map_rehash(%__Map_Header* %1, i64 %16, %Source_Code_Location* %2, %Context* noalias nonnull %__.context_ptr)
	ret void
}

define i1 @__dynamic_map_full(%__Map_Header* %h, %Context* noalias nonnull %__.context_ptr) alwaysinline #1 {
decls-0:
	%0 = load %__Map_Header, %__Map_Header* %h, align 8
	; ReturnStmt
	; SelectorExpr
	%1 = getelementptr inbounds %__Map_Header, %__Map_Header* %h, i64 0, i32 0
	%2 = load %raw-6.Map*, %raw-6.Map** %1, align 8
	%3 = getelementptr inbounds %raw-6.Map, %raw-6.Map* %2, i64 0
	%4 = getelementptr inbounds %raw-6.Map, %raw-6.Map* %3, i64 0, i32 0
	%5 = load {i64*, i64, i64, %Allocator}, {i64*, i64, i64, %Allocator}* %4, align 8
	%6 = extractvalue {i64*, i64, i64, %Allocator} %5, 1
	%7 = sitofp i64 %6 to double
	%8 = fmul double 0x3fe8000000000000, %7
	%9 = fptosi double %8 to i64
	; SelectorExpr
	; SelectorExpr
	%10 = getelementptr inbounds %__Map_Header, %__Map_Header* %h, i64 0, i32 0
	%11 = load %raw-6.Map*, %raw-6.Map** %10, align 8
	%12 = getelementptr inbounds %raw-6.Map, %raw-6.Map* %11, i64 0
	%13 = getelementptr inbounds %raw-6.Map, %raw-6.Map* %12, i64 0, i32 1
	%14 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %13, i64 0, i32 2
	%15 = load i64, i64* %14, align 8
	%16 = icmp sle i64 %9, %15
	ret i1 %16
}

define i1 @__dynamic_map_hash_equal(%__Map_Header* %h, %__Map_Key* %a, %__Map_Key* %b, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = load %__Map_Header, %__Map_Header* %h, align 8
	%1 = load %__Map_Key, %__Map_Key* %a, align 8
	%2 = load %__Map_Key, %__Map_Key* %b, align 8
	; IfStmt
	; SelectorExpr
	%3 = getelementptr inbounds %__Map_Key, %__Map_Key* %a, i64 0, i32 0
	%4 = load i128, i128* %3, align 8
	; SelectorExpr
	%5 = getelementptr inbounds %__Map_Key, %__Map_Key* %b, i64 0, i32 0
	%6 = load i128, i128* %5, align 8
	%7 = icmp eq i128 %4, %6
	br i1 %7, label %if.then-1, label %if.done-4

if.then-1:
	; IfStmt
	; SelectorExpr
	%8 = getelementptr inbounds %__Map_Header, %__Map_Header* %h, i64 0, i32 1
	%9 = load i1, i1* %8, align 1
	br i1 %9, label %if.then-2, label %if.done-3

if.then-2:
	; ReturnStmt
	; SelectorExpr
	%10 = getelementptr inbounds %__Map_Key, %__Map_Key* %a, i64 0, i32 1
	%11 = load %..string, %..string* %10, align 8
	; SelectorExpr
	%12 = getelementptr inbounds %__Map_Key, %__Map_Key* %b, i64 0, i32 1
	%13 = load %..string, %..string* %12, align 8
	%14 = call i1 @__string_eq(%..string %11, %..string %13)
	ret i1 %14

if.done-3:
	; ReturnStmt
	ret i1 true

if.done-4:
	; ReturnStmt
	ret i1 false
}

define %__Map_Find_Result @__dynamic_map_find(%__Map_Header* %h, %__Map_Key* %key, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca %__Map_Find_Result, align 8
	%1 = alloca i128, align 16
	%2 = alloca i128, align 16
	%3 = alloca i128, align 8
	%4 = alloca %__Map_Entry_Header*, align 8
	%5 = alloca %__Map_Header, align 16
	%6 = alloca %__Map_Header, align 16
	%7 = alloca %__Map_Key, align 16
	%8 = alloca %__Map_Key, align 16
	%9 = load %__Map_Header, %__Map_Header* %h, align 8
	%10 = load %__Map_Key, %__Map_Key* %key, align 8
	; fr
		store %__Map_Find_Result {i64 -1, i64 -1, i64 -1}, %__Map_Find_Result* %0
	; IfStmt
	; SelectorExpr
	%11 = getelementptr inbounds %__Map_Header, %__Map_Header* %h, i64 0, i32 0
	%12 = load %raw-6.Map*, %raw-6.Map** %11, align 8
	%13 = getelementptr inbounds %raw-6.Map, %raw-6.Map* %12, i64 0
	%14 = getelementptr inbounds %raw-6.Map, %raw-6.Map* %13, i64 0, i32 0
	%15 = load {i64*, i64, i64, %Allocator}, {i64*, i64, i64, %Allocator}* %14, align 8
	%16 = extractvalue {i64*, i64, i64, %Allocator} %15, 1
	%17 = icmp sgt i64 %16, 0
	br i1 %17, label %if.then-1, label %if.done-7

if.then-1:
	; AssignStmt
	; SelectorExpr
	%18 = getelementptr inbounds %__Map_Find_Result, %__Map_Find_Result* %0, i64 0, i32 0
	; SelectorExpr
	%19 = getelementptr inbounds %__Map_Key, %__Map_Key* %key, i64 0, i32 0
	%20 = load i128, i128* %19, align 8
	; SelectorExpr
	%21 = getelementptr inbounds %__Map_Header, %__Map_Header* %h, i64 0, i32 0
	%22 = load %raw-6.Map*, %raw-6.Map** %21, align 8
	%23 = getelementptr inbounds %raw-6.Map, %raw-6.Map* %22, i64 0
	%24 = getelementptr inbounds %raw-6.Map, %raw-6.Map* %23, i64 0, i32 0
	%25 = load {i64*, i64, i64, %Allocator}, {i64*, i64, i64, %Allocator}* %24, align 8
	%26 = extractvalue {i64*, i64, i64, %Allocator} %25, 1
	%27 = sext i64 %26 to i128
	store i128 zeroinitializer, i128* %1
	store i128 %20, i128* %1
	store i128 zeroinitializer, i128* %2
	store i128 %27, i128* %2
	store i128 zeroinitializer, i128* %3
	call ccc void @__umodti3(i128* %3, i128* %1, i128* %2)
	%28 = load i128, i128* %3, align 8
	%29 = trunc i128 %28 to i64
	store i64 %29, i64* %18
	; AssignStmt
	; SelectorExpr
	%30 = getelementptr inbounds %__Map_Find_Result, %__Map_Find_Result* %0, i64 0, i32 2
	; IndexExpr
	; SelectorExpr
	%31 = getelementptr inbounds %__Map_Header, %__Map_Header* %h, i64 0, i32 0
	%32 = load %raw-6.Map*, %raw-6.Map** %31, align 8
	%33 = getelementptr inbounds %raw-6.Map, %raw-6.Map* %32, i64 0
	%34 = getelementptr inbounds %raw-6.Map, %raw-6.Map* %33, i64 0, i32 0
	%35 = load {i64*, i64, i64, %Allocator}, {i64*, i64, i64, %Allocator}* %34, align 8
	%36 = extractvalue {i64*, i64, i64, %Allocator} %35, 0
	%37 = extractvalue {i64*, i64, i64, %Allocator} %35, 1
	; SelectorExpr
	%38 = getelementptr inbounds %__Map_Find_Result, %__Map_Find_Result* %0, i64 0, i32 0
	%39 = load i64, i64* %38, align 8
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([34 x i8], [34 x i8]* @__str$20, i64 0, i32 0), i64 33}, i64 992, i64 32, i64 %39, i64 %37)
	%40 = getelementptr inbounds i64, i64* %36, i64 %39
	%41 = load i64, i64* %40, align 8
	store i64 %41, i64* %30
	; ForStmt
	br label %for.loop-2

for.loop-2:
	; SelectorExpr
	%42 = getelementptr inbounds %__Map_Find_Result, %__Map_Find_Result* %0, i64 0, i32 2
	%43 = load i64, i64* %42, align 8
	%44 = icmp sge i64 %43, 0
	br i1 %44, label %for.body-3, label %for.done-6

for.body-3:
	; entry
		%45 = load %__Map_Header, %__Map_Header* %h, align 8
	; SelectorExpr
	%46 = getelementptr inbounds %__Map_Find_Result, %__Map_Find_Result* %0, i64 0, i32 2
	%47 = load i64, i64* %46, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %5
	store %__Map_Header %45, %__Map_Header* %5
	%48 = call %__Map_Entry_Header* @__dynamic_map_get_entry(%__Map_Header* %5, i64 %47, %Context* noalias nonnull %__.context_ptr)
	store %__Map_Entry_Header* %48, %__Map_Entry_Header** %4
	; IfStmt
	%49 = load %__Map_Header, %__Map_Header* %h, align 8
	; SelectorExpr
	%50 = load %__Map_Entry_Header*, %__Map_Entry_Header** %4, align 8
	%51 = getelementptr inbounds %__Map_Entry_Header, %__Map_Entry_Header* %50, i64 0
	%52 = getelementptr inbounds %__Map_Entry_Header, %__Map_Entry_Header* %51, i64 0, i32 0
	%53 = load %__Map_Key, %__Map_Key* %52, align 8
	%54 = load %__Map_Key, %__Map_Key* %key, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %6
	store %__Map_Header %49, %__Map_Header* %6
	store %__Map_Key zeroinitializer, %__Map_Key* %7
	store %__Map_Key %53, %__Map_Key* %7
	store %__Map_Key zeroinitializer, %__Map_Key* %8
	store %__Map_Key %54, %__Map_Key* %8
	%55 = call i1 @__dynamic_map_hash_equal(%__Map_Header* %6, %__Map_Key* %7, %__Map_Key* %8, %Context* noalias nonnull %__.context_ptr)
	br i1 %55, label %if.then-4, label %if.done-5

if.then-4:
	; ReturnStmt
	%56 = load %__Map_Find_Result, %__Map_Find_Result* %0, align 8
	ret %__Map_Find_Result %56

if.done-5:
	; AssignStmt
	; SelectorExpr
	%57 = getelementptr inbounds %__Map_Find_Result, %__Map_Find_Result* %0, i64 0, i32 1
	; SelectorExpr
	%58 = getelementptr inbounds %__Map_Find_Result, %__Map_Find_Result* %0, i64 0, i32 2
	%59 = load i64, i64* %58, align 8
	store i64 %59, i64* %57
	; AssignStmt
	; SelectorExpr
	%60 = getelementptr inbounds %__Map_Find_Result, %__Map_Find_Result* %0, i64 0, i32 2
	; SelectorExpr
	%61 = load %__Map_Entry_Header*, %__Map_Entry_Header** %4, align 8
	%62 = getelementptr inbounds %__Map_Entry_Header, %__Map_Entry_Header* %61, i64 0
	%63 = getelementptr inbounds %__Map_Entry_Header, %__Map_Entry_Header* %62, i64 0, i32 1
	%64 = load i64, i64* %63, align 8
	store i64 %64, i64* %60
	br label %for.loop-2

for.done-6:
	br label %if.done-7

if.done-7:
	; ReturnStmt
	%65 = load %__Map_Find_Result, %__Map_Find_Result* %0, align 8
	ret %__Map_Find_Result %65
}

define i64 @__dynamic_map_add_entry(%__Map_Header* %h, %__Map_Key* %key, %Source_Code_Location* %loc, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca i64, align 8
	%1 = alloca i64, align 8
	%2 = alloca %Source_Code_Location, align 16
	%3 = alloca %__Map_Entry_Header*, align 8
	%4 = alloca %__Map_Header, align 16
	%5 = load %__Map_Header, %__Map_Header* %h, align 8
	%6 = load %__Map_Key, %__Map_Key* %key, align 8
	%7 = load %Source_Code_Location, %Source_Code_Location* %loc, align 8
	; prev
		; SelectorExpr
	; SelectorExpr
	%8 = getelementptr inbounds %__Map_Header, %__Map_Header* %h, i64 0, i32 0
	%9 = load %raw-6.Map*, %raw-6.Map** %8, align 8
	%10 = getelementptr inbounds %raw-6.Map, %raw-6.Map* %9, i64 0
	%11 = getelementptr inbounds %raw-6.Map, %raw-6.Map* %10, i64 0, i32 1
	%12 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %11, i64 0, i32 1
	%13 = load i64, i64* %12, align 8
	store i64 %13, i64* %0
	; c
		; SelectorExpr
	%14 = getelementptr inbounds %__Map_Header, %__Map_Header* %h, i64 0, i32 0
	%15 = load %raw-6.Map*, %raw-6.Map** %14, align 8
	%16 = getelementptr inbounds %raw-6.Map, %raw-6.Map* %15, i64 0
	%17 = getelementptr inbounds %raw-6.Map, %raw-6.Map* %16, i64 0, i32 1
	%18 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %17, i64 0
	%19 = getelementptr inbounds %__Map_Header, %__Map_Header* %h, i64 0, i32 2
	%20 = load i64, i64* %19, align 8
	%21 = getelementptr inbounds %__Map_Header, %__Map_Header* %h, i64 0, i32 3
	%22 = load i64, i64* %21, align 8
	%23 = load %Source_Code_Location, %Source_Code_Location* %loc, align 8
	%24 = bitcast %raw-6.Dynamic_Array* %18 to %..rawptr
	store %Source_Code_Location zeroinitializer, %Source_Code_Location* %2
	store %Source_Code_Location %23, %Source_Code_Location* %2
	%25 = call i64 @__dynamic_array_append_nothing(%..rawptr %24, i64 %20, i64 %22, %Source_Code_Location* %2, %Context* noalias nonnull %__.context_ptr)
	store i64 %25, i64* %1
	; IfStmt
	%26 = load i64, i64* %1, align 8
	%27 = load i64, i64* %0, align 8
	%28 = icmp ne i64 %26, %27
	br i1 %28, label %if.then-1, label %if.done-2

if.then-1:
	; end
		%29 = load %__Map_Header, %__Map_Header* %h, align 8
	%30 = load i64, i64* %1, align 8
	%31 = sub i64 %30, 1
	store %__Map_Header zeroinitializer, %__Map_Header* %4
	store %__Map_Header %29, %__Map_Header* %4
	%32 = call %__Map_Entry_Header* @__dynamic_map_get_entry(%__Map_Header* %4, i64 %31, %Context* noalias nonnull %__.context_ptr)
	store %__Map_Entry_Header* %32, %__Map_Entry_Header** %3
	; AssignStmt
	; SelectorExpr
	%33 = load %__Map_Entry_Header*, %__Map_Entry_Header** %3, align 8
	%34 = getelementptr inbounds %__Map_Entry_Header, %__Map_Entry_Header* %33, i64 0
	%35 = getelementptr inbounds %__Map_Entry_Header, %__Map_Entry_Header* %34, i64 0, i32 0
	%36 = load %__Map_Key, %__Map_Key* %key, align 8
	store %__Map_Key %36, %__Map_Key* %35
	; AssignStmt
	; SelectorExpr
	%37 = load %__Map_Entry_Header*, %__Map_Entry_Header** %3, align 8
	%38 = getelementptr inbounds %__Map_Entry_Header, %__Map_Entry_Header* %37, i64 0
	%39 = getelementptr inbounds %__Map_Entry_Header, %__Map_Entry_Header* %38, i64 0, i32 1
	store i64 -1, i64* %39
	br label %if.done-2

if.done-2:
	; ReturnStmt
	%40 = load i64, i64* %0, align 8
	ret i64 %40
}

define void @__dynamic_map_delete(%__Map_Header* %h, %__Map_Key* %key, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca %__Map_Find_Result, align 8
	%1 = alloca %__Map_Header, align 16
	%2 = alloca %__Map_Key, align 16
	%3 = alloca %__Map_Header, align 16
	%4 = alloca %__Map_Find_Result, align 16
	%5 = load %__Map_Header, %__Map_Header* %h, align 8
	%6 = load %__Map_Key, %__Map_Key* %key, align 8
	; fr
		%7 = load %__Map_Header, %__Map_Header* %h, align 8
	%8 = load %__Map_Key, %__Map_Key* %key, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %1
	store %__Map_Header %7, %__Map_Header* %1
	store %__Map_Key zeroinitializer, %__Map_Key* %2
	store %__Map_Key %8, %__Map_Key* %2
	%9 = call %__Map_Find_Result @__dynamic_map_find(%__Map_Header* %1, %__Map_Key* %2, %Context* noalias nonnull %__.context_ptr)
	store %__Map_Find_Result %9, %__Map_Find_Result* %0
	; IfStmt
	; SelectorExpr
	%10 = getelementptr inbounds %__Map_Find_Result, %__Map_Find_Result* %0, i64 0, i32 2
	%11 = load i64, i64* %10, align 8
	%12 = icmp sge i64 %11, 0
	br i1 %12, label %if.then-1, label %if.done-2

if.then-1:
	%13 = load %__Map_Header, %__Map_Header* %h, align 8
	%14 = load %__Map_Find_Result, %__Map_Find_Result* %0, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %3
	store %__Map_Header %13, %__Map_Header* %3
	store %__Map_Find_Result zeroinitializer, %__Map_Find_Result* %4
	store %__Map_Find_Result %14, %__Map_Find_Result* %4
	call void @__dynamic_map_erase(%__Map_Header* %3, %__Map_Find_Result* %4, %Context* noalias nonnull %__.context_ptr)
	br label %if.done-2

if.done-2:
	ret void
}

define %__Map_Entry_Header* @__dynamic_map_get_entry(%__Map_Header* %h, i64 %index, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca i64, align 8
	%1 = load %__Map_Header, %__Map_Header* %h, align 8
		store i64 %index, i64* %0
	; ReturnStmt
	; SelectorExpr
	; SelectorExpr
	%2 = getelementptr inbounds %__Map_Header, %__Map_Header* %h, i64 0, i32 0
	%3 = load %raw-6.Map*, %raw-6.Map** %2, align 8
	%4 = getelementptr inbounds %raw-6.Map, %raw-6.Map* %3, i64 0
	%5 = getelementptr inbounds %raw-6.Map, %raw-6.Map* %4, i64 0, i32 1
	%6 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %5, i64 0, i32 0
	%7 = load %..rawptr, %..rawptr* %6, align 8
	%8 = bitcast %..rawptr %7 to i8*
	%9 = load i64, i64* %0, align 8
	%10 = getelementptr inbounds %__Map_Header, %__Map_Header* %h, i64 0, i32 2
	%11 = load i64, i64* %10, align 8
	%12 = mul i64 %9, %11
	%13 = getelementptr inbounds i8, i8* %8, i64 %12
	%14 = bitcast i8* %13 to %__Map_Entry_Header*
	ret %__Map_Entry_Header* %14
}

define void @__dynamic_map_erase(%__Map_Header* %h, %__Map_Find_Result* %fr, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca %__Map_Header, align 16
	%1 = alloca %__Map_Entry_Header*, align 8
	%2 = alloca %__Map_Header, align 16
	%3 = alloca %__Map_Entry_Header*, align 8
	%4 = alloca %__Map_Header, align 16
	%5 = alloca %__Map_Entry_Header*, align 8
	%6 = alloca %__Map_Header, align 16
	%7 = alloca %__Map_Header, align 16
	%8 = alloca %__Map_Find_Result, align 8
	%9 = alloca %__Map_Header, align 16
	%10 = alloca %__Map_Entry_Header*, align 8
	%11 = alloca %__Map_Header, align 16
	%12 = alloca %__Map_Key, align 16
	%13 = alloca %__Map_Header, align 16
	%14 = alloca %__Map_Entry_Header*, align 8
	%15 = load %__Map_Header, %__Map_Header* %h, align 8
	%16 = load %__Map_Find_Result, %__Map_Find_Result* %fr, align 8
	; IfStmt
	; SelectorExpr
	%17 = getelementptr inbounds %__Map_Find_Result, %__Map_Find_Result* %fr, i64 0, i32 1
	%18 = load i64, i64* %17, align 8
	%19 = icmp slt i64 %18, 0
	br i1 %19, label %if.then-1, label %if.else-2

if.then-1:
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%20 = getelementptr inbounds %__Map_Header, %__Map_Header* %h, i64 0, i32 0
	%21 = load %raw-6.Map*, %raw-6.Map** %20, align 8
	%22 = getelementptr inbounds %raw-6.Map, %raw-6.Map* %21, i64 0
	%23 = getelementptr inbounds %raw-6.Map, %raw-6.Map* %22, i64 0, i32 0
	%24 = load {i64*, i64, i64, %Allocator}, {i64*, i64, i64, %Allocator}* %23, align 8
	%25 = extractvalue {i64*, i64, i64, %Allocator} %24, 0
	%26 = extractvalue {i64*, i64, i64, %Allocator} %24, 1
	; SelectorExpr
	%27 = getelementptr inbounds %__Map_Find_Result, %__Map_Find_Result* %fr, i64 0, i32 0
	%28 = load i64, i64* %27, align 8
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([34 x i8], [34 x i8]* @__str$21, i64 0, i32 0), i64 33}, i64 1027, i64 15, i64 %28, i64 %26)
	%29 = getelementptr inbounds i64, i64* %25, i64 %28
	; SelectorExpr
	%30 = load %__Map_Header, %__Map_Header* %h, align 8
	; SelectorExpr
	%31 = getelementptr inbounds %__Map_Find_Result, %__Map_Find_Result* %fr, i64 0, i32 2
	%32 = load i64, i64* %31, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %0
	store %__Map_Header %30, %__Map_Header* %0
	%33 = call %__Map_Entry_Header* @__dynamic_map_get_entry(%__Map_Header* %0, i64 %32, %Context* noalias nonnull %__.context_ptr)
	store %__Map_Entry_Header* zeroinitializer, %__Map_Entry_Header** %1
	store %__Map_Entry_Header* %33, %__Map_Entry_Header** %1
	%34 = load %__Map_Entry_Header*, %__Map_Entry_Header** %1, align 8
	%35 = getelementptr inbounds %__Map_Entry_Header, %__Map_Entry_Header* %34, i64 0
	%36 = getelementptr inbounds %__Map_Entry_Header, %__Map_Entry_Header* %35, i64 0, i32 1
	%37 = load i64, i64* %36, align 8
	store i64 %37, i64* %29
	br label %if.done-3

if.else-2:
	; AssignStmt
	; SelectorExpr
	%38 = load %__Map_Header, %__Map_Header* %h, align 8
	; SelectorExpr
	%39 = getelementptr inbounds %__Map_Find_Result, %__Map_Find_Result* %fr, i64 0, i32 1
	%40 = load i64, i64* %39, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %2
	store %__Map_Header %38, %__Map_Header* %2
	%41 = call %__Map_Entry_Header* @__dynamic_map_get_entry(%__Map_Header* %2, i64 %40, %Context* noalias nonnull %__.context_ptr)
	store %__Map_Entry_Header* zeroinitializer, %__Map_Entry_Header** %3
	store %__Map_Entry_Header* %41, %__Map_Entry_Header** %3
	%42 = load %__Map_Entry_Header*, %__Map_Entry_Header** %3, align 8
	%43 = getelementptr inbounds %__Map_Entry_Header, %__Map_Entry_Header* %42, i64 0
	%44 = getelementptr inbounds %__Map_Entry_Header, %__Map_Entry_Header* %43, i64 0, i32 1
	; SelectorExpr
	%45 = load %__Map_Header, %__Map_Header* %h, align 8
	; SelectorExpr
	%46 = getelementptr inbounds %__Map_Find_Result, %__Map_Find_Result* %fr, i64 0, i32 2
	%47 = load i64, i64* %46, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %4
	store %__Map_Header %45, %__Map_Header* %4
	%48 = call %__Map_Entry_Header* @__dynamic_map_get_entry(%__Map_Header* %4, i64 %47, %Context* noalias nonnull %__.context_ptr)
	store %__Map_Entry_Header* zeroinitializer, %__Map_Entry_Header** %5
	store %__Map_Entry_Header* %48, %__Map_Entry_Header** %5
	%49 = load %__Map_Entry_Header*, %__Map_Entry_Header** %5, align 8
	%50 = getelementptr inbounds %__Map_Entry_Header, %__Map_Entry_Header* %49, i64 0
	%51 = getelementptr inbounds %__Map_Entry_Header, %__Map_Entry_Header* %50, i64 0, i32 1
	%52 = load i64, i64* %51, align 8
	store i64 %52, i64* %44
	br label %if.done-3

if.done-3:
	; IfStmt
	; SelectorExpr
	%53 = getelementptr inbounds %__Map_Find_Result, %__Map_Find_Result* %fr, i64 0, i32 2
	%54 = load i64, i64* %53, align 8
	; SelectorExpr
	; SelectorExpr
	%55 = getelementptr inbounds %__Map_Header, %__Map_Header* %h, i64 0, i32 0
	%56 = load %raw-6.Map*, %raw-6.Map** %55, align 8
	%57 = getelementptr inbounds %raw-6.Map, %raw-6.Map* %56, i64 0
	%58 = getelementptr inbounds %raw-6.Map, %raw-6.Map* %57, i64 0, i32 1
	%59 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %58, i64 0, i32 1
	%60 = load i64, i64* %59, align 8
	%61 = sub i64 %60, 1
	%62 = icmp eq i64 %54, %61
	br i1 %62, label %if.then-4, label %if.done-5

if.then-4:
	; AssignStmt
	; SelectorExpr
	; SelectorExpr
	%63 = getelementptr inbounds %__Map_Header, %__Map_Header* %h, i64 0, i32 0
	%64 = load %raw-6.Map*, %raw-6.Map** %63, align 8
	%65 = getelementptr inbounds %raw-6.Map, %raw-6.Map* %64, i64 0
	%66 = getelementptr inbounds %raw-6.Map, %raw-6.Map* %65, i64 0, i32 1
	%67 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %66, i64 0, i32 1
	%68 = load i64, i64* %67, align 8
	%69 = sub i64 %68, 1
	store i64 %69, i64* %67
	br label %if.done-5

if.done-5:
	%70 = load %__Map_Header, %__Map_Header* %h, align 8
	; SelectorExpr
	%71 = getelementptr inbounds %__Map_Find_Result, %__Map_Find_Result* %fr, i64 0, i32 2
	%72 = load i64, i64* %71, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %6
	store %__Map_Header %70, %__Map_Header* %6
	%73 = call %__Map_Entry_Header* @__dynamic_map_get_entry(%__Map_Header* %6, i64 %72, %Context* noalias nonnull %__.context_ptr)
	%74 = load %__Map_Header, %__Map_Header* %h, align 8
	; SelectorExpr
	; SelectorExpr
	%75 = getelementptr inbounds %__Map_Header, %__Map_Header* %h, i64 0, i32 0
	%76 = load %raw-6.Map*, %raw-6.Map** %75, align 8
	%77 = getelementptr inbounds %raw-6.Map, %raw-6.Map* %76, i64 0
	%78 = getelementptr inbounds %raw-6.Map, %raw-6.Map* %77, i64 0, i32 1
	%79 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %78, i64 0, i32 1
	%80 = load i64, i64* %79, align 8
	%81 = sub i64 %80, 1
	store %__Map_Header zeroinitializer, %__Map_Header* %7
	store %__Map_Header %74, %__Map_Header* %7
	%82 = call %__Map_Entry_Header* @__dynamic_map_get_entry(%__Map_Header* %7, i64 %81, %Context* noalias nonnull %__.context_ptr)
	%83 = getelementptr inbounds %__Map_Header, %__Map_Header* %h, i64 0, i32 2
	%84 = load i64, i64* %83, align 8
	%85 = bitcast %__Map_Entry_Header* %73 to %..rawptr
	%86 = bitcast %__Map_Entry_Header* %82 to %..rawptr
	%87 = call %..rawptr @__mem_copy(%..rawptr %85, %..rawptr %86, i64 %84)
	; last
		%88 = load %__Map_Header, %__Map_Header* %h, align 8
	; SelectorExpr
	%89 = load %__Map_Header, %__Map_Header* %h, align 8
	; SelectorExpr
	%90 = getelementptr inbounds %__Map_Find_Result, %__Map_Find_Result* %fr, i64 0, i32 2
	%91 = load i64, i64* %90, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %9
	store %__Map_Header %89, %__Map_Header* %9
	%92 = call %__Map_Entry_Header* @__dynamic_map_get_entry(%__Map_Header* %9, i64 %91, %Context* noalias nonnull %__.context_ptr)
	store %__Map_Entry_Header* zeroinitializer, %__Map_Entry_Header** %10
	store %__Map_Entry_Header* %92, %__Map_Entry_Header** %10
	%93 = load %__Map_Entry_Header*, %__Map_Entry_Header** %10, align 8
	%94 = getelementptr inbounds %__Map_Entry_Header, %__Map_Entry_Header* %93, i64 0
	%95 = getelementptr inbounds %__Map_Entry_Header, %__Map_Entry_Header* %94, i64 0, i32 0
	%96 = load %__Map_Key, %__Map_Key* %95, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %11
	store %__Map_Header %88, %__Map_Header* %11
	store %__Map_Key zeroinitializer, %__Map_Key* %12
	store %__Map_Key %96, %__Map_Key* %12
	%97 = call %__Map_Find_Result @__dynamic_map_find(%__Map_Header* %11, %__Map_Key* %12, %Context* noalias nonnull %__.context_ptr)
	store %__Map_Find_Result %97, %__Map_Find_Result* %8
	; IfStmt
	; SelectorExpr
	%98 = getelementptr inbounds %__Map_Find_Result, %__Map_Find_Result* %8, i64 0, i32 1
	%99 = load i64, i64* %98, align 8
	%100 = icmp sge i64 %99, 0
	br i1 %100, label %if.then-6, label %if.else-7

if.then-6:
	; AssignStmt
	; SelectorExpr
	%101 = load %__Map_Header, %__Map_Header* %h, align 8
	; SelectorExpr
	%102 = getelementptr inbounds %__Map_Find_Result, %__Map_Find_Result* %8, i64 0, i32 1
	%103 = load i64, i64* %102, align 8
	store %__Map_Header zeroinitializer, %__Map_Header* %13
	store %__Map_Header %101, %__Map_Header* %13
	%104 = call %__Map_Entry_Header* @__dynamic_map_get_entry(%__Map_Header* %13, i64 %103, %Context* noalias nonnull %__.context_ptr)
	store %__Map_Entry_Header* zeroinitializer, %__Map_Entry_Header** %14
	store %__Map_Entry_Header* %104, %__Map_Entry_Header** %14
	%105 = load %__Map_Entry_Header*, %__Map_Entry_Header** %14, align 8
	%106 = getelementptr inbounds %__Map_Entry_Header, %__Map_Entry_Header* %105, i64 0
	%107 = getelementptr inbounds %__Map_Entry_Header, %__Map_Entry_Header* %106, i64 0, i32 1
	; SelectorExpr
	%108 = getelementptr inbounds %__Map_Find_Result, %__Map_Find_Result* %fr, i64 0, i32 2
	%109 = load i64, i64* %108, align 8
	store i64 %109, i64* %107
	br label %if.done-8

if.else-7:
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%110 = getelementptr inbounds %__Map_Header, %__Map_Header* %h, i64 0, i32 0
	%111 = load %raw-6.Map*, %raw-6.Map** %110, align 8
	%112 = getelementptr inbounds %raw-6.Map, %raw-6.Map* %111, i64 0
	%113 = getelementptr inbounds %raw-6.Map, %raw-6.Map* %112, i64 0, i32 0
	%114 = load {i64*, i64, i64, %Allocator}, {i64*, i64, i64, %Allocator}* %113, align 8
	%115 = extractvalue {i64*, i64, i64, %Allocator} %114, 0
	%116 = extractvalue {i64*, i64, i64, %Allocator} %114, 1
	; SelectorExpr
	%117 = getelementptr inbounds %__Map_Find_Result, %__Map_Find_Result* %8, i64 0, i32 0
	%118 = load i64, i64* %117, align 8
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([34 x i8], [34 x i8]* @__str$22, i64 0, i32 0), i64 33}, i64 1040, i64 17, i64 %118, i64 %116)
	%119 = getelementptr inbounds i64, i64* %115, i64 %118
	; SelectorExpr
	%120 = getelementptr inbounds %__Map_Find_Result, %__Map_Find_Result* %fr, i64 0, i32 2
	%121 = load i64, i64* %120, align 8
	store i64 %121, i64* %119
	br label %if.done-8

if.done-8:
	ret void
}

define ccc void @__multi3(i128* sret noalias %agg.result, i128* %a, i128* %b) #0 {
decls-0:
	%0 = alloca %__multi3.TWords-1044, align 8
	%1 = alloca i64, align 8
	%2 = load i128, i128* %a, align 8
	%3 = load i128, i128* %b, align 8
	; r
	store %__multi3.TWords-1044 zeroinitializer, %__multi3.TWords-1044* %0
		; t
	store i64 zeroinitializer, i64* %1
		; AssignStmt
	; SelectorExpr
	%4 = bitcast %__multi3.TWords-1044* %0 to {i64, i64}*
	%5 = getelementptr inbounds {i64, i64}, {i64, i64}* %4, i64 0, i32 1
	%6 = load i128, i128* %a, align 8
	%7 = and i128 %6, 4294967295
	%8 = trunc i128 %7 to i64
	%9 = load i128, i128* %b, align 8
	%10 = and i128 %9, 4294967295
	%11 = trunc i128 %10 to i64
	%12 = mul i64 %8, %11
	store i64 %12, i64* %5
	; AssignStmt
	; SelectorExpr
	%13 = bitcast %__multi3.TWords-1044* %0 to {i64, i64}*
	%14 = getelementptr inbounds {i64, i64}, {i64, i64}* %13, i64 0, i32 1
	%15 = load i64, i64* %14, align 8
	%16 = lshr i64 %15, 32
	store i64 %16, i64* %1
	; AssignStmt
	; SelectorExpr
	%17 = bitcast %__multi3.TWords-1044* %0 to {i64, i64}*
	%18 = getelementptr inbounds {i64, i64}, {i64, i64}* %17, i64 0, i32 1
	%19 = load i64, i64* %18, align 8
	%20 = and i64 %19, 4294967295
	store i64 %20, i64* %18
	; AssignStmt
	%21 = load i128, i128* %a, align 8
	%22 = lshr i128 %21, 32
	%23 = trunc i128 %22 to i64
	%24 = load i128, i128* %b, align 8
	%25 = and i128 %24, 4294967295
	%26 = trunc i128 %25 to i64
	%27 = mul i64 %23, %26
	%28 = load i64, i64* %1, align 8
	%29 = add i64 %28, %27
	store i64 %29, i64* %1
	; AssignStmt
	; SelectorExpr
	%30 = bitcast %__multi3.TWords-1044* %0 to {i64, i64}*
	%31 = getelementptr inbounds {i64, i64}, {i64, i64}* %30, i64 0, i32 1
	%32 = load i64, i64* %1, align 8
	%33 = and i64 %32, 4294967295
	%34 = shl i64 %33, 32
	%35 = load i64, i64* %31, align 8
	%36 = add i64 %35, %34
	store i64 %36, i64* %31
	; AssignStmt
	; SelectorExpr
	%37 = bitcast %__multi3.TWords-1044* %0 to {i64, i64}*
	%38 = getelementptr inbounds {i64, i64}, {i64, i64}* %37, i64 0, i32 0
	%39 = load i64, i64* %1, align 8
	%40 = lshr i64 %39, 32
	store i64 %40, i64* %38
	; AssignStmt
	; SelectorExpr
	%41 = bitcast %__multi3.TWords-1044* %0 to {i64, i64}*
	%42 = getelementptr inbounds {i64, i64}, {i64, i64}* %41, i64 0, i32 1
	%43 = load i64, i64* %42, align 8
	%44 = lshr i64 %43, 32
	store i64 %44, i64* %1
	; AssignStmt
	; SelectorExpr
	%45 = bitcast %__multi3.TWords-1044* %0 to {i64, i64}*
	%46 = getelementptr inbounds {i64, i64}, {i64, i64}* %45, i64 0, i32 1
	%47 = load i64, i64* %46, align 8
	%48 = and i64 %47, 4294967295
	store i64 %48, i64* %46
	; AssignStmt
	%49 = load i128, i128* %b, align 8
	%50 = lshr i128 %49, 32
	%51 = trunc i128 %50 to i64
	%52 = load i128, i128* %a, align 8
	%53 = and i128 %52, 4294967295
	%54 = trunc i128 %53 to i64
	%55 = mul i64 %51, %54
	%56 = load i64, i64* %1, align 8
	%57 = add i64 %56, %55
	store i64 %57, i64* %1
	; AssignStmt
	; SelectorExpr
	%58 = bitcast %__multi3.TWords-1044* %0 to {i64, i64}*
	%59 = getelementptr inbounds {i64, i64}, {i64, i64}* %58, i64 0, i32 1
	%60 = load i64, i64* %1, align 8
	%61 = and i64 %60, 4294967295
	%62 = shl i64 %61, 32
	%63 = load i64, i64* %59, align 8
	%64 = add i64 %63, %62
	store i64 %64, i64* %59
	; AssignStmt
	; SelectorExpr
	%65 = bitcast %__multi3.TWords-1044* %0 to {i64, i64}*
	%66 = getelementptr inbounds {i64, i64}, {i64, i64}* %65, i64 0, i32 0
	%67 = load i64, i64* %1, align 8
	%68 = lshr i64 %67, 32
	%69 = load i64, i64* %66, align 8
	%70 = add i64 %69, %68
	store i64 %70, i64* %66
	; AssignStmt
	; SelectorExpr
	%71 = bitcast %__multi3.TWords-1044* %0 to {i64, i64}*
	%72 = getelementptr inbounds {i64, i64}, {i64, i64}* %71, i64 0, i32 0
	%73 = load i128, i128* %a, align 8
	%74 = lshr i128 %73, 32
	%75 = trunc i128 %74 to i64
	%76 = load i128, i128* %b, align 8
	%77 = lshr i128 %76, 32
	%78 = trunc i128 %77 to i64
	%79 = mul i64 %75, %78
	%80 = load i64, i64* %72, align 8
	%81 = add i64 %80, %79
	store i64 %81, i64* %72
	; ReturnStmt
	; SelectorExpr
	%82 = bitcast %__multi3.TWords-1044* %0 to i128*
	%83 = load i128, i128* %82, align 8
	store i128 %83, i128* %agg.result
	ret void
}

define ccc void @__umodti3(i128* sret noalias %agg.result, i128* %a, i128* %b) #0 {
decls-0:
	%0 = alloca i128, align 8
	%1 = alloca i128, align 16
	%2 = alloca i128, align 16
	%3 = alloca i128, align 8
	%4 = load i128, i128* %a, align 8
	%5 = load i128, i128* %b, align 8
	; r
	store i128 zeroinitializer, i128* %0
		%6 = load i128, i128* %a, align 8
	%7 = load i128, i128* %b, align 8
	%8 = getelementptr inbounds i128, i128* %0, i64 0
	store i128 zeroinitializer, i128* %1
	store i128 %6, i128* %1
	store i128 zeroinitializer, i128* %2
	store i128 %7, i128* %2
	store i128 zeroinitializer, i128* %3
	call ccc void @__udivmodti4(i128* %3, i128* %1, i128* %2, i128* %8)
	%9 = load i128, i128* %3, align 8
	; ReturnStmt
	%10 = load i128, i128* %0, align 8
	store i128 %10, i128* %agg.result
	ret void
}

define ccc void @__udivti3(i128* sret noalias %agg.result, i128* %a, i128* %b) #0 {
decls-0:
	%0 = alloca i128, align 16
	%1 = alloca i128, align 16
	%2 = alloca i128, align 8
	%3 = load i128, i128* %a, align 8
	%4 = load i128, i128* %b, align 8
	; ReturnStmt
	%5 = load i128, i128* %a, align 8
	%6 = load i128, i128* %b, align 8
	store i128 zeroinitializer, i128* %0
	store i128 %5, i128* %0
	store i128 zeroinitializer, i128* %1
	store i128 %6, i128* %1
	store i128 zeroinitializer, i128* %2
	call ccc void @__udivmodti4(i128* %2, i128* %0, i128* %1, i128* zeroinitializer)
	%7 = load i128, i128* %2, align 8
	store i128 %7, i128* %agg.result
	ret void
}

define ccc void @__modti3(i128* sret noalias %agg.result, i128* %a, i128* %b) #0 {
decls-0:
	%0 = alloca i128, align 8
	%1 = alloca i128, align 16
	%2 = alloca i128, align 16
	%3 = alloca i128, align 8
	%4 = load i128, i128* %a, align 8
	%5 = load i128, i128* %b, align 8
	; r
	store i128 zeroinitializer, i128* %0
		%6 = load i128, i128* %a, align 8
	%7 = load i128, i128* %b, align 8
	%8 = getelementptr inbounds i128, i128* %0, i64 0
	store i128 zeroinitializer, i128* %1
	store i128 %6, i128* %1
	store i128 zeroinitializer, i128* %2
	store i128 %7, i128* %2
	store i128 zeroinitializer, i128* %3
	call ccc void @__divmodti4(i128* %3, i128* %1, i128* %2, i128* %8)
	%9 = load i128, i128* %3, align 8
	; ReturnStmt
	%10 = load i128, i128* %0, align 8
	store i128 %10, i128* %agg.result
	ret void
}

define ccc void @__divti3(i128* sret noalias %agg.result, i128* %a, i128* %b) #0 {
decls-0:
	%0 = alloca i128, align 16
	%1 = alloca i128, align 16
	%2 = alloca i128, align 8
	%3 = load i128, i128* %a, align 8
	%4 = load i128, i128* %b, align 8
	; ReturnStmt
	%5 = load i128, i128* %a, align 8
	%6 = load i128, i128* %b, align 8
	store i128 zeroinitializer, i128* %0
	store i128 %5, i128* %0
	store i128 zeroinitializer, i128* %1
	store i128 %6, i128* %1
	store i128 zeroinitializer, i128* %2
	call ccc void @__divmodti4(i128* %2, i128* %0, i128* %1, i128* zeroinitializer)
	%7 = load i128, i128* %2, align 8
	store i128 %7, i128* %agg.result
	ret void
}

define ccc void @__divmodti4(i128* sret noalias %agg.result, i128* %a, i128* %b, i128* %rem) #0 {
decls-0:
	%0 = alloca i128*, align 8
	%1 = alloca i128, align 8
	%2 = alloca i128, align 8
	%3 = alloca i128, align 8
	%4 = alloca i128, align 16
	%5 = alloca i128, align 16
	%6 = alloca i128, align 8
	%7 = alloca i128, align 8
	%8 = alloca i128, align 8
	%9 = load i128, i128* %a, align 8
	%10 = load i128, i128* %b, align 8
		store i128* %rem, i128** %0
	; s
	store i128 zeroinitializer, i128* %1
		; AssignStmt
	%11 = load i128, i128* %b, align 8
	%12 = lshr i128 %11, 127
	store i128 %12, i128* %1
	; AssignStmt
	%13 = load i128, i128* %b, align 8
	%14 = load i128, i128* %1, align 8
	%15 = xor i128 %13, %14
	%16 = load i128, i128* %1, align 8
	%17 = sub i128 %15, %16
	store i128 %17, i128* %b
	; AssignStmt
	%18 = load i128, i128* %a, align 8
	%19 = lshr i128 %18, 127
	store i128 %19, i128* %1
	; AssignStmt
	%20 = load i128, i128* %a, align 8
	%21 = load i128, i128* %1, align 8
	%22 = xor i128 %20, %21
	%23 = load i128, i128* %1, align 8
	%24 = sub i128 %22, %23
	store i128 %24, i128* %b
	; uquo
	store i128 zeroinitializer, i128* %2
		; urem
		%25 = load i128, i128* %a, align 8
	%26 = bitcast i128 %25 to i128
	%27 = load i128, i128* %b, align 8
	%28 = bitcast i128 %27 to i128
	%29 = getelementptr inbounds i128, i128* %2, i64 0
	store i128 zeroinitializer, i128* %4
	store i128 %26, i128* %4
	store i128 zeroinitializer, i128* %5
	store i128 %28, i128* %5
	store i128 zeroinitializer, i128* %6
	call ccc void @__udivmodti4(i128* %6, i128* %4, i128* %5, i128* %29)
	%30 = load i128, i128* %6, align 8
	store i128 %30, i128* %3
	; iquo
		%31 = load i128, i128* %2, align 8
	%32 = bitcast i128 %31 to i128
	store i128 %32, i128* %7
	; irem
		%33 = load i128, i128* %3, align 8
	%34 = bitcast i128 %33 to i128
	store i128 %34, i128* %8
	; AssignStmt
	%35 = load i128, i128* %7, align 8
	%36 = load i128, i128* %1, align 8
	%37 = xor i128 %35, %36
	%38 = load i128, i128* %1, align 8
	%39 = sub i128 %37, %38
	store i128 %39, i128* %7
	; AssignStmt
	%40 = load i128, i128* %8, align 8
	%41 = load i128, i128* %1, align 8
	%42 = xor i128 %40, %41
	%43 = load i128, i128* %1, align 8
	%44 = sub i128 %42, %43
	store i128 %44, i128* %8
	; IfStmt
	%45 = load i128*, i128** %0, align 8
	%46 = icmp ne i128* %45, zeroinitializer
	br i1 %46, label %if.then-1, label %if.done-2

if.then-1:
	; AssignStmt
	%47 = load i128*, i128** %0, align 8
	%48 = getelementptr inbounds i128, i128* %47, i64 0
	%49 = load i128, i128* %8, align 8
	store i128 %49, i128* %48
	br label %if.done-2

if.done-2:
	; ReturnStmt
	%50 = load i128, i128* %7, align 8
	store i128 %50, i128* %agg.result
	ret void
}

define ccc void @__udivmodti4(i128* sret noalias %agg.result, i128* %a, i128* %b, i128* %rem) #0 {
decls-0:
	%0 = alloca i128*, align 8
	%1 = alloca i64, align 8
	%2 = alloca i64, align 8
	%3 = alloca i128, align 8
	%4 = alloca i128, align 8
	%5 = alloca i128, align 8
	%6 = alloca i128, align 8
	%7 = load i128, i128* %a, align 8
	%8 = load i128, i128* %b, align 8
		store i128* %rem, i128** %0
	; alo
		%9 = load i128, i128* %a, align 8
	%10 = trunc i128 %9 to i64
	store i64 %10, i64* %1
	; blo
		%11 = load i128, i128* %b, align 8
	%12 = trunc i128 %11 to i64
	store i64 %12, i64* %2
	; IfStmt
	%13 = load i128, i128* %b, align 8
	%14 = icmp eq i128 %13, 0
	br i1 %14, label %if.then-1, label %if.done-4

if.then-1:
	; IfStmt
	%15 = load i128*, i128** %0, align 8
	%16 = icmp ne i128* %15, zeroinitializer
	br i1 %16, label %if.then-2, label %if.done-3

if.then-2:
	; AssignStmt
	%17 = load i128*, i128** %0, align 8
	%18 = getelementptr inbounds i128, i128* %17, i64 0
	store i128 0, i128* %18
	br label %if.done-3

if.done-3:
	; ReturnStmt
	%19 = load i64, i64* %1, align 8
	%20 = load i64, i64* %2, align 8
	%21 = udiv i64 %19, %20
	%22 = zext i64 %21 to i128
	store i128 %22, i128* %agg.result
	ret void

if.done-4:
	; r
		; d
		; x
		; q
		%23 = load i128, i128* %a, align 8
	%24 = load i128, i128* %b, align 8
	store i128 %23, i128* %3
	store i128 %24, i128* %4
	store i128 1, i128* %5
	store i128 0, i128* %6
	; ForStmt
	br label %for.loop-5

for.loop-5:
	%25 = load i128, i128* %3, align 8
	%26 = load i128, i128* %4, align 8
	%27 = icmp uge i128 %25, %26
	br i1 %27, label %cmp.and-6, label %for.done-8

cmp.and-6:
	%28 = load i128, i128* %4, align 8
	%29 = lshr i128 %28, 127
	%30 = and i128 %29, 1
	%31 = icmp eq i128 %30, 0
	br i1 %31, label %for.body-7, label %for.done-8

for.body-7:
	; AssignStmt
	%32 = load i128, i128* %5, align 8
	%33 = shl i128 %32, 1
	store i128 %33, i128* %5
	; AssignStmt
	%34 = load i128, i128* %4, align 8
	%35 = shl i128 %34, 1
	store i128 %35, i128* %4
	br label %for.loop-5

for.done-8:
	; ForStmt
	br label %for.loop-9

for.loop-9:
	%36 = load i128, i128* %5, align 8
	%37 = icmp ne i128 %36, 0
	br i1 %37, label %for.body-10, label %for.done-13

for.body-10:
	; IfStmt
	%38 = load i128, i128* %3, align 8
	%39 = load i128, i128* %4, align 8
	%40 = icmp uge i128 %38, %39
	br i1 %40, label %if.then-11, label %if.done-12

if.then-11:
	; AssignStmt
	%41 = load i128, i128* %4, align 8
	%42 = load i128, i128* %3, align 8
	%43 = sub i128 %42, %41
	store i128 %43, i128* %3
	; AssignStmt
	%44 = load i128, i128* %5, align 8
	%45 = load i128, i128* %6, align 8
	%46 = or i128 %45, %44
	store i128 %46, i128* %6
	br label %if.done-12

if.done-12:
	; AssignStmt
	%47 = load i128, i128* %5, align 8
	%48 = lshr i128 %47, 1
	store i128 %48, i128* %5
	; AssignStmt
	%49 = load i128, i128* %4, align 8
	%50 = lshr i128 %49, 1
	store i128 %50, i128* %4
	br label %for.loop-9

for.done-13:
	; IfStmt
	%51 = load i128*, i128** %0, align 8
	%52 = icmp ne i128* %51, zeroinitializer
	br i1 %52, label %if.then-14, label %if.done-15

if.then-14:
	; AssignStmt
	%53 = load i128*, i128** %0, align 8
	%54 = getelementptr inbounds i128, i128* %53, i64 0
	%55 = load i128, i128* %3, align 8
	store i128 %55, i128* %54
	br label %if.done-15

if.done-15:
	; ReturnStmt
	%56 = load i128, i128* %6, align 8
	store i128 %56, i128* %agg.result
	ret void
}

define void @main-0.main() #0 {
decls-0:
	%0 = alloca %engine-10.Engine_Config, align 8
	%1 = alloca %Context, align 8
	%2 = alloca %engine-10.Engine_Config, align 16
	; config
	store %engine-10.Engine_Config {%..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$23, i64 0, i32 0), i64 10}, void (%Context*)* zeroinitializer, void (%Context*)* zeroinitializer, i32 zeroinitializer, i32 zeroinitializer, i32 3, i32 3, float 0x4024000000000000}, %engine-10.Engine_Config* %0
		; AssignStmt
	; SelectorExpr
	%3 = getelementptr inbounds %engine-10.Engine_Config, %engine-10.Engine_Config* %0, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$24, i64 0, i32 0), i64 14}, %..string* %3
	; AssignStmt
	; SelectorExpr
	%4 = getelementptr inbounds %engine-10.Engine_Config, %engine-10.Engine_Config* %0, i64 0, i32 1
	store void (%Context*)* @main-0.init, void (%Context*)** %4
	; AssignStmt
	; SelectorExpr
	%5 = getelementptr inbounds %engine-10.Engine_Config, %engine-10.Engine_Config* %0, i64 0, i32 2
	store void (%Context*)* @main-0.update, void (%Context*)** %5
	; AssignStmt
	; SelectorExpr
	%6 = getelementptr inbounds %engine-10.Engine_Config, %engine-10.Engine_Config* %0, i64 0, i32 3
	store i32 1600, i32* %6
	; AssignStmt
	; SelectorExpr
	%7 = getelementptr inbounds %engine-10.Engine_Config, %engine-10.Engine_Config* %0, i64 0, i32 4
	store i32 900, i32* %7
	; AssignStmt
	; SelectorExpr
	%8 = getelementptr inbounds %engine-10.Engine_Config, %engine-10.Engine_Config* %0, i64 0, i32 7
	store float 0x408f400000000000, float* %8
	; SelectorExpr
	%9 = load %engine-10.Engine_Config, %engine-10.Engine_Config* %0, align 8
	store %Context zeroinitializer, %Context* %1
	%10 = load %Context, %Context* @__ggv$0, align 8
	store %Context %10, %Context* %1
	store %engine-10.Engine_Config {%..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$25, i64 0, i32 0), i64 10}, void (%Context*)* zeroinitializer, void (%Context*)* zeroinitializer, i32 zeroinitializer, i32 zeroinitializer, i32 3, i32 3, float 0x4024000000000000}, %engine-10.Engine_Config* %2
	store %engine-10.Engine_Config %9, %engine-10.Engine_Config* %2
	call void @engine-10.start(%engine-10.Engine_Config* %2, %Context* noalias nonnull %1)
	ret void
}

define void @main-0.init(%Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca {%engine-10.Sprite*, i64}, align 8
	%1 = alloca [1 x %engine-10.Sprite], align 4
	%2 = alloca {%engine-10.Sprite*, i64}, align 16
	%3 = alloca %Source_Code_Location, align 16
	%4 = alloca i64, align 8
	%5 = alloca i64, align 8
	%6 = alloca i64, align 8
	%7 = alloca i64, align 8
	%8 = alloca %main-0.Entity, align 8
	%9 = alloca {%main-0.Entity*, i64}, align 8
	%10 = alloca [1 x %main-0.Entity], align 8
	%11 = alloca {%main-0.Entity*, i64}, align 16
	%12 = alloca %Source_Code_Location, align 16
	%13 = getelementptr inbounds {%engine-10.Sprite*, i64, i64, %Allocator}, {%engine-10.Sprite*, i64, i64, %Allocator}* @main-0.all_sprites, i64 0
	%14 = call %engine-10.Sprite @engine-10.load_sprite(%..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$26, i64 0, i32 0), i64 7}, %Context* noalias nonnull %__.context_ptr)
	; variadic call argument generation
	store {%engine-10.Sprite*, i64} zeroinitializer, {%engine-10.Sprite*, i64}* %0
	store [1 x %engine-10.Sprite] zeroinitializer, [1 x %engine-10.Sprite]* %1
	%15 = getelementptr inbounds [1 x %engine-10.Sprite], [1 x %engine-10.Sprite]* %1, i64 0, i32 0
	store %engine-10.Sprite %14, %engine-10.Sprite* %15
	%16 = getelementptr inbounds [1 x %engine-10.Sprite], [1 x %engine-10.Sprite]* %1, i64 0, i32 0
	%17 = getelementptr inbounds {%engine-10.Sprite*, i64}, {%engine-10.Sprite*, i64}* %0, i64 0, i32 0
	store %engine-10.Sprite* %16, %engine-10.Sprite** %17
	%18 = getelementptr inbounds {%engine-10.Sprite*, i64}, {%engine-10.Sprite*, i64}* %0, i64 0, i32 1
	store i64 1, i64* %18
	%19 = load {%engine-10.Sprite*, i64}, {%engine-10.Sprite*, i64}* %0, align 8
	%20 = call %Source_Code_Location @make_source_code_location(%..string {i8* getelementptr inbounds ([40 x i8], [40 x i8]* @__str$27, i64 0, i32 0), i64 39}, i64 32, i64 2, %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$28, i64 0, i32 0), i64 4})
	store {%engine-10.Sprite*, i64} zeroinitializer, {%engine-10.Sprite*, i64}* %2
	store {%engine-10.Sprite*, i64} %19, {%engine-10.Sprite*, i64}* %2
	store %Source_Code_Location zeroinitializer, %Source_Code_Location* %3
	store %Source_Code_Location %20, %Source_Code_Location* %3
	%21 = call i64 @_preload-0.append-12671({%engine-10.Sprite*, i64, i64, %Allocator}* %13, {%engine-10.Sprite*, i64}* %2, %Source_Code_Location* %3, %Context* noalias nonnull %__.context_ptr)
	; sprite_idx
		store i64 0, i64* %4
	; RangeStmt
	; i
	store i64 zeroinitializer, i64* %5
		store i64 zeroinitializer, i64* %6
	store i64 0, i64* %6
	store i64 zeroinitializer, i64* %7
	store i64 0, i64* %7
	br label %for.interval.loop-1

for.interval.loop-1:
	%22 = load i64, i64* %6, align 8
	%23 = icmp slt i64 %22, 100
	br i1 %23, label %for.interval.body-2, label %for.interval.done-3

for.interval.body-2:
	%24 = load i64, i64* %6, align 8
	%25 = load i64, i64* %7, align 8
	%26 = load i64, i64* %6, align 8
	%27 = add i64 %26, 1
	store i64 %27, i64* %6
	%28 = load i64, i64* %7, align 8
	%29 = add i64 %28, 1
	store i64 %29, i64* %7
	store i64 %24, i64* %5
	%30 = getelementptr inbounds {%main-0.Entity*, i64, i64, %Allocator}, {%main-0.Entity*, i64, i64, %Allocator}* @main-0.entities, i64 0
	; CompoundLit
	store %main-0.Entity zeroinitializer, %main-0.Entity* %8
	store %main-0.Entity {{[0 x <8 x i8>], [2 x float]} {[0 x <8 x i8>] zeroinitializer, [2 x float][float 0x0000000000000000, float 0x0000000000000000]}, {[0 x <8 x i8>], [2 x float]} {[0 x <8 x i8>] zeroinitializer, [2 x float][float 0x3ff0000000000000, float 0x3ff0000000000000]}, %engine-10.Sprite zeroinitializer}, %main-0.Entity* %8
	; IndexExpr
	%31 = load {%engine-10.Sprite*, i64, i64, %Allocator}, {%engine-10.Sprite*, i64, i64, %Allocator}* @main-0.all_sprites, align 8
	%32 = extractvalue {%engine-10.Sprite*, i64, i64, %Allocator} %31, 0
	%33 = extractvalue {%engine-10.Sprite*, i64, i64, %Allocator} %31, 1
	%34 = load i64, i64* %4, align 8
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([40 x i8], [40 x i8]* @__str$29, i64 0, i32 0), i64 39}, i64 37, i64 70, i64 %34, i64 %33)
	%35 = getelementptr inbounds %engine-10.Sprite, %engine-10.Sprite* %32, i64 %34
	%36 = load %engine-10.Sprite, %engine-10.Sprite* %35, align 4
	%37 = getelementptr inbounds %main-0.Entity, %main-0.Entity* %8, i64 0, i32 2
	store %engine-10.Sprite %36, %engine-10.Sprite* %37
	%38 = load %main-0.Entity, %main-0.Entity* %8, align 8
	; variadic call argument generation
	store {%main-0.Entity*, i64} zeroinitializer, {%main-0.Entity*, i64}* %9
	store [1 x %main-0.Entity] zeroinitializer, [1 x %main-0.Entity]* %10
	%39 = getelementptr inbounds [1 x %main-0.Entity], [1 x %main-0.Entity]* %10, i64 0, i32 0
	store %main-0.Entity %38, %main-0.Entity* %39
	%40 = getelementptr inbounds [1 x %main-0.Entity], [1 x %main-0.Entity]* %10, i64 0, i32 0
	%41 = getelementptr inbounds {%main-0.Entity*, i64}, {%main-0.Entity*, i64}* %9, i64 0, i32 0
	store %main-0.Entity* %40, %main-0.Entity** %41
	%42 = getelementptr inbounds {%main-0.Entity*, i64}, {%main-0.Entity*, i64}* %9, i64 0, i32 1
	store i64 1, i64* %42
	%43 = load {%main-0.Entity*, i64}, {%main-0.Entity*, i64}* %9, align 8
	%44 = call %Source_Code_Location @make_source_code_location(%..string {i8* getelementptr inbounds ([40 x i8], [40 x i8]* @__str$2a, i64 0, i32 0), i64 39}, i64 37, i64 3, %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$2b, i64 0, i32 0), i64 4})
	store {%main-0.Entity*, i64} zeroinitializer, {%main-0.Entity*, i64}* %11
	store {%main-0.Entity*, i64} %43, {%main-0.Entity*, i64}* %11
	store %Source_Code_Location zeroinitializer, %Source_Code_Location* %12
	store %Source_Code_Location %44, %Source_Code_Location* %12
	%45 = call i64 @_preload-0.append-12681({%main-0.Entity*, i64, i64, %Allocator}* %30, {%main-0.Entity*, i64}* %11, %Source_Code_Location* %12, %Context* noalias nonnull %__.context_ptr)
	; AssignStmt
	%46 = load i64, i64* %4, align 8
	%47 = add i64 %46, 1
	%48 = load {%engine-10.Sprite*, i64, i64, %Allocator}, {%engine-10.Sprite*, i64, i64, %Allocator}* @main-0.all_sprites, align 8
	%49 = extractvalue {%engine-10.Sprite*, i64, i64, %Allocator} %48, 1
	%50 = srem i64 %47, %49
	store i64 %50, i64* %4
	br label %for.interval.loop-1

for.interval.done-3:
	ret void
}

define void @main-0.update(%Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca i64, align 8
	%1 = alloca i64, align 8
	%2 = alloca i64, align 8
	%3 = alloca %main-0.Entity, align 8
	%4 = alloca float, align 4
	%5 = alloca float, align 4
	%6 = alloca {[0 x <8 x i8>], [2 x float]}, align 8
	%7 = alloca {[0 x <8 x i8>], [2 x float]}, align 8
	%8 = alloca {[0 x <8 x i8>], [2 x float]}, align 8
	%9 = alloca %engine-10.Sprite, align 16
	; RangeStmt
	; i
	store i64 zeroinitializer, i64* %0
		store i64 zeroinitializer, i64* %1
	store i64 0, i64* %1
	store i64 zeroinitializer, i64* %2
	store i64 0, i64* %2
	br label %for.interval.loop-1

for.interval.loop-1:
	%10 = load {%main-0.Entity*, i64, i64, %Allocator}, {%main-0.Entity*, i64, i64, %Allocator}* @main-0.entities, align 8
	%11 = extractvalue {%main-0.Entity*, i64, i64, %Allocator} %10, 1
	%12 = load i64, i64* %1, align 8
	%13 = icmp slt i64 %12, %11
	br i1 %13, label %for.interval.body-2, label %for.interval.done-3

for.interval.body-2:
	%14 = load i64, i64* %1, align 8
	%15 = load i64, i64* %2, align 8
	%16 = load i64, i64* %1, align 8
	%17 = add i64 %16, 1
	store i64 %17, i64* %1
	%18 = load i64, i64* %2, align 8
	%19 = add i64 %18, 1
	store i64 %19, i64* %2
	store i64 %14, i64* %0
	; entity
		; IndexExpr
	%20 = load {%main-0.Entity*, i64, i64, %Allocator}, {%main-0.Entity*, i64, i64, %Allocator}* @main-0.entities, align 8
	%21 = extractvalue {%main-0.Entity*, i64, i64, %Allocator} %20, 0
	%22 = extractvalue {%main-0.Entity*, i64, i64, %Allocator} %20, 1
	%23 = load i64, i64* %0, align 8
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([40 x i8], [40 x i8]* @__str$2c, i64 0, i32 0), i64 39}, i64 44, i64 28, i64 %23, i64 %22)
	%24 = getelementptr inbounds %main-0.Entity, %main-0.Entity* %21, i64 %23
	%25 = load %main-0.Entity, %main-0.Entity* %24, align 8
	store %main-0.Entity %25, %main-0.Entity* %3
	; x
		; SelectorExpr
	%26 = call ccc double @glfwGetTime()
	%27 = load i64, i64* %0, align 8
	%28 = sitofp i64 %27 to double
	%29 = fadd double %26, %28
	%30 = call ccc double @llvm.sin.f64(double %29)
	%31 = fptrunc double %30 to float
	%32 = load i64, i64* %0, align 8
	%33 = sitofp i64 %32 to float
	%34 = fmul float %31, %33
	store float %34, float* %4
	; y
		; SelectorExpr
	%35 = call ccc double @glfwGetTime()
	%36 = load i64, i64* %0, align 8
	%37 = sitofp i64 %36 to double
	%38 = fadd double %35, %37
	%39 = call ccc double @llvm.cos.f64(double %38)
	%40 = fptrunc double %39 to float
	%41 = load i64, i64* %0, align 8
	%42 = sitofp i64 %41 to float
	%43 = fmul float %40, %42
	store float %43, float* %5
	; AssignStmt
	%44 = getelementptr inbounds %main-0.Entity, %main-0.Entity* %3, i64 0, i32 0
	; CompoundLit
	store {[0 x <8 x i8>], [2 x float]} zeroinitializer, {[0 x <8 x i8>], [2 x float]}* %6
	store {[0 x <8 x i8>], [2 x float]} {[0 x <8 x i8>] zeroinitializer, [2 x float][float zeroinitializer, float zeroinitializer]}, {[0 x <8 x i8>], [2 x float]}* %6
	%45 = load float, float* %4, align 4
	%46 = getelementptr inbounds {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %6, i64 0, i32 1, i32 0
	store float %45, float* %46
	%47 = load float, float* %5, align 4
	%48 = getelementptr inbounds {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %6, i64 0, i32 1, i32 1
	store float %47, float* %48
	%49 = load {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %6, align 8
	store {[0 x <8 x i8>], [2 x float]} zeroinitializer, {[0 x <8 x i8>], [2 x float]}* %7
	%50 = getelementptr inbounds {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %7, i64 0, i32 1, i32 0
	store float 0x4024000000000000, float* %50
	%51 = getelementptr inbounds {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %7, i64 0, i32 1, i32 1
	store float 0x4024000000000000, float* %51
	%52 = load {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %7, align 8
	; vector.arith.begin
	store {[0 x <8 x i8>], [2 x float]} zeroinitializer, {[0 x <8 x i8>], [2 x float]}* %8
	%53 = getelementptr inbounds {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %6, i64 0, i32 1, i32 0
	%54 = load float, float* %53, align 4
	%55 = getelementptr inbounds {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %7, i64 0, i32 1, i32 0
	%56 = load float, float* %55, align 4
	%57 = fmul float %54, %56
	%58 = getelementptr inbounds {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %8, i64 0, i32 1, i32 0
	store float %57, float* %58
	%59 = getelementptr inbounds {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %6, i64 0, i32 1, i32 1
	%60 = load float, float* %59, align 4
	%61 = getelementptr inbounds {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %7, i64 0, i32 1, i32 1
	%62 = load float, float* %61, align 4
	%63 = fmul float %60, %62
	%64 = getelementptr inbounds {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %8, i64 0, i32 1, i32 1
	store float %63, float* %64
	; vector.arith.end
	%65 = load {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %8, align 8
	store {[0 x <8 x i8>], [2 x float]} %65, {[0 x <8 x i8>], [2 x float]}* %44
	%66 = getelementptr inbounds %main-0.Entity, %main-0.Entity* %3, i64 0, i32 2
	%67 = load %engine-10.Sprite, %engine-10.Sprite* %66, align 4
	%68 = getelementptr inbounds %main-0.Entity, %main-0.Entity* %3, i64 0, i32 0
	%69 = load {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %68, align 8
	%70 = getelementptr inbounds %main-0.Entity, %main-0.Entity* %3, i64 0, i32 1
	%71 = load {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %70, align 8
	store %engine-10.Sprite zeroinitializer, %engine-10.Sprite* %9
	store %engine-10.Sprite %67, %engine-10.Sprite* %9
	%72 = bitcast {[0 x <8 x i8>], [2 x float]}* %68 to i64*
	%73 = load i64, i64* %72, align 8
	%74 = bitcast {[0 x <8 x i8>], [2 x float]}* %70 to i64*
	%75 = load i64, i64* %74, align 8
	call void @engine-10.submit_sprite(%engine-10.Sprite* %9, i64 %73, i64 %75, %Context* noalias nonnull %__.context_ptr)
	br label %for.interval.loop-1

for.interval.done-3:
	call void @engine-10.flush_sprites(%Context* noalias nonnull %__.context_ptr)
	ret void
}

define {i64, i64} @os-3.write_string(i64 %fd, %..string %str, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca i64, align 8
	%1 = alloca %..string, align 8
	%2 = alloca i8*, align 8
	%3 = alloca {i8*, i64}, align 8
	%4 = alloca {i8*, i64}, align 16
	%5 = alloca {i64, i64}, align 8
		store i64 %fd, i64* %0
		store %..string %str, %..string* %1
	; ReturnStmt
	%6 = load i64, i64* %0, align 8
	%7 = load %..string, %..string* %1, align 8
	%8 = extractvalue %..string %7, 0
	store i8* zeroinitializer, i8** %2
	store i8* %8, i8** %2
	%9 = extractvalue %..string %7, 1
	%10 = sub i64 %9, 0
	%11 = load i8*, i8** %2, align 8
	%12 = getelementptr inbounds i8, i8* %11, i64 0
	store {i8*, i64} zeroinitializer, {i8*, i64}* %3
	%13 = getelementptr inbounds {i8*, i64}, {i8*, i64}* %3, i64 0, i32 0
	store i8* %12, i8** %13
	%14 = getelementptr inbounds {i8*, i64}, {i8*, i64}* %3, i64 0, i32 1
	store i64 %10, i64* %14
	%15 = load {i8*, i64}, {i8*, i64}* %3, align 8
	store {i8*, i64} zeroinitializer, {i8*, i64}* %4
	store {i8*, i64} %15, {i8*, i64}* %4
	%16 = call {i64, i64} @os_windows-12.write(i64 %6, {i8*, i64}* %4, %Context* noalias nonnull %__.context_ptr)
	%17 = extractvalue {i64, i64} %16, 0
	%18 = extractvalue {i64, i64} %16, 1
	store {i64, i64} zeroinitializer, {i64, i64}* %5
	%19 = getelementptr inbounds {i64, i64}, {i64, i64}* %5, i64 0, i32 0
	store i64 %17, i64* %19
	%20 = getelementptr inbounds {i64, i64}, {i64, i64}* %5, i64 0, i32 1
	store i64 %18, i64* %20
	%21 = load {i64, i64}, {i64, i64}* %5, align 8
	ret {i64, i64} %21
}

define {{i8*, i64}, i1} @os-3.read_entire_file(%..string %name, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca %..string, align 8
	%1 = alloca i64, align 8
	%2 = alloca i64, align 8
	%3 = alloca {{i8*, i64}, i1}, align 8
	%4 = alloca i64, align 8
	%5 = alloca {{i8*, i64}, i1}, align 8
	%6 = alloca {{i8*, i64}, i1}, align 8
	%7 = alloca {i8*, i64}, align 8
	%8 = alloca %Source_Code_Location, align 16
	%9 = alloca {i8*, i64}, align 8
	%10 = alloca {{i8*, i64}, i1}, align 8
	%11 = alloca i64, align 8
	%12 = alloca i64, align 8
	%13 = alloca {i8*, i64}, align 16
	%14 = alloca {i8*, i64}, align 16
	%15 = alloca %Source_Code_Location, align 16
	%16 = alloca {{i8*, i64}, i1}, align 8
	%17 = alloca {i8*, i64}, align 8
	%18 = alloca {{i8*, i64}, i1}, align 8
		store %..string %name, %..string* %0
	; fd
		; err
		%19 = load %..string, %..string* %0, align 8
	%20 = call {i64, i64} @os_windows-12.open(%..string %19, i64 0, i32 0, %Context* noalias nonnull %__.context_ptr)
	%21 = extractvalue {i64, i64} %20, 0
	%22 = extractvalue {i64, i64} %20, 1
	store i64 %21, i64* %1
	store i64 %22, i64* %2
	; IfStmt
	%23 = load i64, i64* %2, align 8
	%24 = icmp ne i64 %23, 0
	br i1 %24, label %if.then-1, label %if.done-2

if.then-1:
	; ReturnStmt
	store {{i8*, i64}, i1} zeroinitializer, {{i8*, i64}, i1}* %3
	%25 = getelementptr inbounds {{i8*, i64}, i1}, {{i8*, i64}, i1}* %3, i64 0, i32 0
	store {i8*, i64} zeroinitializer, {i8*, i64}* %25
	%26 = getelementptr inbounds {{i8*, i64}, i1}, {{i8*, i64}, i1}* %3, i64 0, i32 1
	store i1 false, i1* %26
	%27 = load {{i8*, i64}, i1}, {{i8*, i64}, i1}* %3, align 8
	ret {{i8*, i64}, i1} %27

if.done-2:
	; DeferStmt
	; length
	store i64 zeroinitializer, i64* %4
		; IfStmt
	; AssignStmt
	%28 = load i64, i64* %1, align 8
	%29 = call {i64, i64} @os_windows-12.file_size(i64 %28, %Context* noalias nonnull %__.context_ptr)
	%30 = extractvalue {i64, i64} %29, 0
	%31 = extractvalue {i64, i64} %29, 1
	store i64 %30, i64* %4
	store i64 %31, i64* %2
	%32 = load i64, i64* %2, align 8
	%33 = icmp ne i64 %32, 0
	br i1 %33, label %if.then-3, label %if.done-4

if.then-3:
	; ReturnStmt
	store {{i8*, i64}, i1} zeroinitializer, {{i8*, i64}, i1}* %5
	%34 = getelementptr inbounds {{i8*, i64}, i1}, {{i8*, i64}, i1}* %5, i64 0, i32 0
	store {i8*, i64} zeroinitializer, {i8*, i64}* %34
	%35 = getelementptr inbounds {{i8*, i64}, i1}, {{i8*, i64}, i1}* %5, i64 0, i32 1
	store i1 false, i1* %35
	%36 = load {{i8*, i64}, i1}, {{i8*, i64}, i1}* %5, align 8
	; defer
	%37 = load i64, i64* %1, align 8
	call void @os_windows-12.close(i64 %37, %Context* noalias nonnull %__.context_ptr)
	ret {{i8*, i64}, i1} %36

if.done-4:
	; IfStmt
	%38 = load i64, i64* %4, align 8
	%39 = icmp sle i64 %38, 0
	br i1 %39, label %if.then-5, label %if.done-6

if.then-5:
	; ReturnStmt
	store {{i8*, i64}, i1} zeroinitializer, {{i8*, i64}, i1}* %6
	%40 = getelementptr inbounds {{i8*, i64}, i1}, {{i8*, i64}, i1}* %6, i64 0, i32 0
	store {i8*, i64} zeroinitializer, {i8*, i64}* %40
	%41 = getelementptr inbounds {{i8*, i64}, i1}, {{i8*, i64}, i1}* %6, i64 0, i32 1
	store i1 true, i1* %41
	%42 = load {{i8*, i64}, i1}, {{i8*, i64}, i1}* %6, align 8
	; defer
	%43 = load i64, i64* %1, align 8
	call void @os_windows-12.close(i64 %43, %Context* noalias nonnull %__.context_ptr)
	ret {{i8*, i64}, i1} %42

if.done-6:
	; data
		; make
	%44 = load i64, i64* %4, align 8
	%45 = bitcast i64 %44 to i64
	call void @__slice_expr_error(%..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$2d, i64 0, i32 0), i64 27}, i64 28, i64 23, i64 0, i64 %45)
	%46 = call %Source_Code_Location @make_source_code_location(%..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$2e, i64 0, i32 0), i64 27}, i64 28, i64 15, %..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$2f, i64 0, i32 0), i64 16})
	store %Source_Code_Location zeroinitializer, %Source_Code_Location* %8
	store %Source_Code_Location %46, %Source_Code_Location* %8
	%47 = call %..rawptr @alloc(i64 %45, i64 1, %Source_Code_Location* %8, %Context* noalias nonnull %__.context_ptr)
	%48 = bitcast %..rawptr %47 to i8*
	store {i8*, i64} zeroinitializer, {i8*, i64}* %9
	%49 = getelementptr inbounds {i8*, i64}, {i8*, i64}* %9, i64 0, i32 0
	store i8* %48, i8** %49
	%50 = getelementptr inbounds {i8*, i64}, {i8*, i64}* %9, i64 0, i32 1
	store i64 %45, i64* %50
	%51 = load {i8*, i64}, {i8*, i64}* %9, align 8
	store {i8*, i64} %51, {i8*, i64}* %7
	; IfStmt
	%52 = load {i8*, i64}, {i8*, i64}* %7, align 8
	%53 = extractvalue {i8*, i64} %52, 0
	%54 = extractvalue {i8*, i64} %52, 1
	%55 = bitcast %..rawptr null to i8*
	%56 = icmp eq i8* %53, %55
	%57 = icmp eq i64 %54, 0
	%58 = or i1 %56, %57
	br i1 %58, label %if.then-7, label %if.done-8

if.then-7:
	; ReturnStmt
	store {{i8*, i64}, i1} zeroinitializer, {{i8*, i64}, i1}* %10
	%59 = getelementptr inbounds {{i8*, i64}, i1}, {{i8*, i64}, i1}* %10, i64 0, i32 0
	store {i8*, i64} zeroinitializer, {i8*, i64}* %59
	%60 = getelementptr inbounds {{i8*, i64}, i1}, {{i8*, i64}, i1}* %10, i64 0, i32 1
	store i1 false, i1* %60
	%61 = load {{i8*, i64}, i1}, {{i8*, i64}, i1}* %10, align 8
	; defer
	%62 = load i64, i64* %1, align 8
	call void @os_windows-12.close(i64 %62, %Context* noalias nonnull %__.context_ptr)
	ret {{i8*, i64}, i1} %61

if.done-8:
	; bytes_read
		; read_err
		%63 = load i64, i64* %1, align 8
	%64 = load {i8*, i64}, {i8*, i64}* %7, align 8
	store {i8*, i64} zeroinitializer, {i8*, i64}* %13
	store {i8*, i64} %64, {i8*, i64}* %13
	%65 = call {i64, i64} @os_windows-12.read(i64 %63, {i8*, i64}* %13, %Context* noalias nonnull %__.context_ptr)
	%66 = extractvalue {i64, i64} %65, 0
	%67 = extractvalue {i64, i64} %65, 1
	store i64 %66, i64* %11
	store i64 %67, i64* %12
	; IfStmt
	%68 = load i64, i64* %12, align 8
	%69 = icmp ne i64 %68, 0
	br i1 %69, label %if.then-9, label %if.done-10

if.then-9:
	%70 = load {i8*, i64}, {i8*, i64}* %7, align 8
	%71 = call %Source_Code_Location @make_source_code_location(%..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$30, i64 0, i32 0), i64 27}, i64 35, i64 3, %..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$31, i64 0, i32 0), i64 16})
	store {i8*, i64} zeroinitializer, {i8*, i64}* %14
	store {i8*, i64} %70, {i8*, i64}* %14
	store %Source_Code_Location zeroinitializer, %Source_Code_Location* %15
	store %Source_Code_Location %71, %Source_Code_Location* %15
	call void @_preload-0.free-12719({i8*, i64}* %14, %Source_Code_Location* %15, %Context* noalias nonnull %__.context_ptr)
	; ReturnStmt
	store {{i8*, i64}, i1} zeroinitializer, {{i8*, i64}, i1}* %16
	%72 = getelementptr inbounds {{i8*, i64}, i1}, {{i8*, i64}, i1}* %16, i64 0, i32 0
	store {i8*, i64} zeroinitializer, {i8*, i64}* %72
	%73 = getelementptr inbounds {{i8*, i64}, i1}, {{i8*, i64}, i1}* %16, i64 0, i32 1
	store i1 false, i1* %73
	%74 = load {{i8*, i64}, i1}, {{i8*, i64}, i1}* %16, align 8
	; defer
	%75 = load i64, i64* %1, align 8
	call void @os_windows-12.close(i64 %75, %Context* noalias nonnull %__.context_ptr)
	ret {{i8*, i64}, i1} %74

if.done-10:
	; ReturnStmt
	; SliceExpr
	%76 = load i64, i64* %11, align 8
	%77 = load {i8*, i64}, {i8*, i64}* %7, align 8
	call void @__slice_expr_error(%..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$32, i64 0, i32 0), i64 27}, i64 38, i64 13, i64 0, i64 %76)
	%78 = extractvalue {i8*, i64} %77, 0
	%79 = getelementptr inbounds i8, i8* %78, i64 0
	%80 = sub i64 %76, 0
	store {i8*, i64} zeroinitializer, {i8*, i64}* %17
	%81 = getelementptr inbounds {i8*, i64}, {i8*, i64}* %17, i64 0, i32 0
	store i8* %79, i8** %81
	%82 = getelementptr inbounds {i8*, i64}, {i8*, i64}* %17, i64 0, i32 1
	store i64 %80, i64* %82
	%83 = load {i8*, i64}, {i8*, i64}* %17, align 8
	store {{i8*, i64}, i1} zeroinitializer, {{i8*, i64}, i1}* %18
	%84 = getelementptr inbounds {{i8*, i64}, i1}, {{i8*, i64}, i1}* %18, i64 0, i32 0
	store {i8*, i64} %83, {i8*, i64}* %84
	%85 = getelementptr inbounds {{i8*, i64}, i1}, {{i8*, i64}, i1}* %18, i64 0, i32 1
	store i1 true, i1* %85
	%86 = load {{i8*, i64}, i1}, {{i8*, i64}, i1}* %18, align 8
	; defer
	%87 = load i64, i64* %1, align 8
	call void @os_windows-12.close(i64 %87, %Context* noalias nonnull %__.context_ptr)
	ret {{i8*, i64}, i1} %86
}

define {i8*, i64, i64, %Allocator} @fmt-4.string_buffer_from_slice({i8*, i64}* %backing, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca %raw-6.Slice, align 8
	%1 = alloca %raw-6.Dynamic_Array, align 8
	%2 = load {i8*, i64}, {i8*, i64}* %backing, align 8
	; s
		%3 = load {i8*, i64}, {i8*, i64}* %backing, align 8
	%4 = bitcast {i8*, i64}* %backing to %raw-6.Slice*
	%5 = load %raw-6.Slice, %raw-6.Slice* %4, align 8
	store %raw-6.Slice %5, %raw-6.Slice* %0
	; d
	store %raw-6.Dynamic_Array zeroinitializer, %raw-6.Dynamic_Array* %1
		; AssignStmt
	; SelectorExpr
	%6 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %1, i64 0, i32 0
	; SelectorExpr
	%7 = getelementptr inbounds %raw-6.Slice, %raw-6.Slice* %0, i64 0, i32 0
	%8 = load %..rawptr, %..rawptr* %7, align 8
	store %..rawptr %8, %..rawptr* %6
	; AssignStmt
	; SelectorExpr
	%9 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %1, i64 0, i32 1
	store i64 0, i64* %9
	; AssignStmt
	; SelectorExpr
	%10 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %1, i64 0, i32 2
	; SelectorExpr
	%11 = getelementptr inbounds %raw-6.Slice, %raw-6.Slice* %0, i64 0, i32 1
	%12 = load i64, i64* %11, align 8
	store i64 %12, i64* %10
	; AssignStmt
	; SelectorExpr
	%13 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %1, i64 0, i32 3
	%14 = call %Allocator @nil_allocator(%Context* noalias nonnull %__.context_ptr)
	store %Allocator %14, %Allocator* %13
	; ReturnStmt
	%15 = load %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %1, align 8
	%16 = bitcast %raw-6.Dynamic_Array* %1 to {i8*, i64, i64, %Allocator}*
	%17 = load {i8*, i64, i64, %Allocator}, {i8*, i64, i64, %Allocator}* %16, align 8
	ret {i8*, i64, i64, %Allocator} %17
}

define %..string @fmt-4.to_string({i8*, i64, i64, %Allocator}* %buf, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca {i8*, i64}, align 8
	%1 = alloca %..string, align 8
	%2 = load {i8*, i64, i64, %Allocator}, {i8*, i64, i64, %Allocator}* %buf, align 8
	; ReturnStmt
	; SliceExpr
	%3 = load {i8*, i64, i64, %Allocator}, {i8*, i64, i64, %Allocator}* %buf, align 8
	%4 = extractvalue {i8*, i64, i64, %Allocator} %3, 1
	%5 = extractvalue {i8*, i64, i64, %Allocator} %3, 2
	call void @__dynamic_array_expr_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$33, i64 0, i32 0), i64 28}, i64 45, i64 19, i64 0, i64 %4, i64 %5)
	%6 = extractvalue {i8*, i64, i64, %Allocator} %3, 0
	%7 = getelementptr inbounds i8, i8* %6, i64 0
	%8 = sub i64 %4, 0
	store {i8*, i64} zeroinitializer, {i8*, i64}* %0
	%9 = getelementptr inbounds {i8*, i64}, {i8*, i64}* %0, i64 0, i32 0
	store i8* %7, i8** %9
	%10 = getelementptr inbounds {i8*, i64}, {i8*, i64}* %0, i64 0, i32 1
	store i64 %8, i64* %10
	%11 = load {i8*, i64}, {i8*, i64}* %0, align 8
	%12 = extractvalue {i8*, i64} %11, 0
	%13 = extractvalue {i8*, i64} %11, 1
	store %..string zeroinitializer, %..string* %1
	%14 = getelementptr inbounds %..string, %..string* %1, i64 0, i32 0
	store i8* %12, i8** %14
	%15 = getelementptr inbounds %..string, %..string* %1, i64 0, i32 1
	store i64 %13, i64* %15
	%16 = load %..string, %..string* %1, align 8
	ret %..string %16
}

define void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %buf, %..string %s, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca {i8*, i64, i64, %Allocator}*, align 8
	%1 = alloca %..string, align 8
	%2 = alloca {%..string*, i64}, align 8
	%3 = alloca [1 x %..string], align 8
	%4 = alloca {%..string*, i64}, align 16
	%5 = alloca %Source_Code_Location, align 16
		store {i8*, i64, i64, %Allocator}* %buf, {i8*, i64, i64, %Allocator}** %0
		store %..string %s, %..string* %1
	%6 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	%7 = load %..string, %..string* %1, align 8
	; variadic call argument generation
	store {%..string*, i64} zeroinitializer, {%..string*, i64}* %2
	store [1 x %..string] zeroinitializer, [1 x %..string]* %3
	%8 = getelementptr inbounds [1 x %..string], [1 x %..string]* %3, i64 0, i32 0
	store %..string %7, %..string* %8
	%9 = getelementptr inbounds [1 x %..string], [1 x %..string]* %3, i64 0, i32 0
	%10 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %2, i64 0, i32 0
	store %..string* %9, %..string** %10
	%11 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %2, i64 0, i32 1
	store i64 1, i64* %11
	%12 = load {%..string*, i64}, {%..string*, i64}* %2, align 8
	%13 = call %Source_Code_Location @make_source_code_location(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$34, i64 0, i32 0), i64 28}, i64 50, i64 2, %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$35, i64 0, i32 0), i64 12})
	store {%..string*, i64} zeroinitializer, {%..string*, i64}* %4
	store {%..string*, i64} %12, {%..string*, i64}* %4
	store %Source_Code_Location zeroinitializer, %Source_Code_Location* %5
	store %Source_Code_Location %13, %Source_Code_Location* %5
	%14 = call i64 @_preload-0.append_string-12757({i8*, i64, i64, %Allocator}* %6, {%..string*, i64}* %4, %Source_Code_Location* %5, %Context* noalias nonnull %__.context_ptr)
	ret void
}

define void @fmt-4.write_bytes({i8*, i64, i64, %Allocator}* %buf, {i8*, i64}* %data, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca {i8*, i64, i64, %Allocator}*, align 8
	%1 = alloca {i8*, i64}, align 16
	%2 = alloca %Source_Code_Location, align 16
		store {i8*, i64, i64, %Allocator}* %buf, {i8*, i64, i64, %Allocator}** %0
	%3 = load {i8*, i64}, {i8*, i64}* %data, align 8
	%4 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	%5 = load {i8*, i64}, {i8*, i64}* %data, align 8
	%6 = call %Source_Code_Location @make_source_code_location(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$36, i64 0, i32 0), i64 28}, i64 53, i64 2, %..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$37, i64 0, i32 0), i64 11})
	store {i8*, i64} zeroinitializer, {i8*, i64}* %1
	store {i8*, i64} %5, {i8*, i64}* %1
	store %Source_Code_Location zeroinitializer, %Source_Code_Location* %2
	store %Source_Code_Location %6, %Source_Code_Location* %2
	%7 = call i64 @_preload-0.append-12765({i8*, i64, i64, %Allocator}* %4, {i8*, i64}* %1, %Source_Code_Location* %2, %Context* noalias nonnull %__.context_ptr)
	ret void
}

define void @fmt-4.write_byte({i8*, i64, i64, %Allocator}* %buf, i8 %data, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca {i8*, i64, i64, %Allocator}*, align 8
	%1 = alloca i8, align 1
	%2 = alloca {i8*, i64}, align 8
	%3 = alloca [1 x i8], align 1
	%4 = alloca {i8*, i64}, align 16
	%5 = alloca %Source_Code_Location, align 16
		store {i8*, i64, i64, %Allocator}* %buf, {i8*, i64, i64, %Allocator}** %0
		store i8 %data, i8* %1
	%6 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	%7 = load i8, i8* %1, align 1
	; variadic call argument generation
	store {i8*, i64} zeroinitializer, {i8*, i64}* %2
	store [1 x i8] zeroinitializer, [1 x i8]* %3
	%8 = getelementptr inbounds [1 x i8], [1 x i8]* %3, i64 0, i32 0
	store i8 %7, i8* %8
	%9 = getelementptr inbounds [1 x i8], [1 x i8]* %3, i64 0, i32 0
	%10 = getelementptr inbounds {i8*, i64}, {i8*, i64}* %2, i64 0, i32 0
	store i8* %9, i8** %10
	%11 = getelementptr inbounds {i8*, i64}, {i8*, i64}* %2, i64 0, i32 1
	store i64 1, i64* %11
	%12 = load {i8*, i64}, {i8*, i64}* %2, align 8
	%13 = call %Source_Code_Location @make_source_code_location(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$38, i64 0, i32 0), i64 28}, i64 56, i64 2, %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$39, i64 0, i32 0), i64 10})
	store {i8*, i64} zeroinitializer, {i8*, i64}* %4
	store {i8*, i64} %12, {i8*, i64}* %4
	store %Source_Code_Location zeroinitializer, %Source_Code_Location* %5
	store %Source_Code_Location %13, %Source_Code_Location* %5
	%14 = call i64 @_preload-0.append-12765({i8*, i64, i64, %Allocator}* %6, {i8*, i64}* %4, %Source_Code_Location* %5, %Context* noalias nonnull %__.context_ptr)
	ret void
}

define void @fmt-4.write_rune({i8*, i64, i64, %Allocator}* %buf, i32 %r, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca {i8*, i64, i64, %Allocator}*, align 8
	%1 = alloca i32, align 4
	%2 = alloca [4 x i8], align 1
	%3 = alloca i64, align 8
	%4 = alloca {i8*, i64}, align 8
	%5 = alloca {i8*, i64}, align 16
		store {i8*, i64, i64, %Allocator}* %buf, {i8*, i64, i64, %Allocator}** %0
		store i32 %r, i32* %1
	; IfStmt
	%6 = load i32, i32* %1, align 4
	%7 = icmp slt i32 %6, 128
	br i1 %7, label %if.then-1, label %if.done-2

if.then-1:
	%8 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	%9 = load i32, i32* %1, align 4
	%10 = trunc i32 %9 to i8
	call void @fmt-4.write_byte({i8*, i64, i64, %Allocator}* %8, i8 %10, %Context* noalias nonnull %__.context_ptr)
	; ReturnStmt
	ret void

if.done-2:
	; b
		; n
		; SelectorExpr
	%11 = load i32, i32* %1, align 4
	%12 = call {[4 x i8], i64} @utf8-5.encode_rune(i32 %11, %Context* noalias nonnull %__.context_ptr)
	%13 = extractvalue {[4 x i8], i64} %12, 0
	%14 = extractvalue {[4 x i8], i64} %12, 1
	store [4 x i8] %13, [4 x i8]* %2
	store i64 %14, i64* %3
	%15 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	; SliceExpr
	%16 = load i64, i64* %3, align 8
	%17 = load [4 x i8], [4 x i8]* %2, align 1
	call void @__slice_expr_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$3a, i64 0, i32 0), i64 28}, i64 65, i64 20, i64 0, i64 %16)
	%18 = getelementptr inbounds [4 x i8], [4 x i8]* %2, i64 0, i32 0
	%19 = getelementptr inbounds i8, i8* %18, i64 0
	%20 = sub i64 %16, 0
	store {i8*, i64} zeroinitializer, {i8*, i64}* %4
	%21 = getelementptr inbounds {i8*, i64}, {i8*, i64}* %4, i64 0, i32 0
	store i8* %19, i8** %21
	%22 = getelementptr inbounds {i8*, i64}, {i8*, i64}* %4, i64 0, i32 1
	store i64 %20, i64* %22
	%23 = load {i8*, i64}, {i8*, i64}* %4, align 8
	store {i8*, i64} zeroinitializer, {i8*, i64}* %5
	store {i8*, i64} %23, {i8*, i64}* %5
	call void @fmt-4.write_bytes({i8*, i64, i64, %Allocator}* %15, {i8*, i64}* %5, %Context* noalias nonnull %__.context_ptr)
	ret void
}

define void @fmt-4.write_int-222({i8*, i64, i64, %Allocator}* %buf, i64 %i, i64 %base, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca {i8*, i64, i64, %Allocator}*, align 8
	%1 = alloca i64, align 8
	%2 = alloca i64, align 8
	%3 = alloca [129 x i8], align 1
	%4 = alloca %..string, align 8
	%5 = alloca {i8*, i64}, align 8
	%6 = alloca {i8*, i64}, align 16
	%7 = alloca i128, align 16
		store {i8*, i64, i64, %Allocator}* %buf, {i8*, i64, i64, %Allocator}** %0
		store i64 %i, i64* %1
		store i64 %base, i64* %2
	; b
	store [129 x i8] zeroinitializer, [129 x i8]* %3
		; s
		; SelectorExpr
	; SliceExpr
	%8 = load [129 x i8], [129 x i8]* %3, align 1
	call void @__slice_expr_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$3b, i64 0, i32 0), i64 28}, i64 75, i64 28, i64 0, i64 129)
	%9 = getelementptr inbounds [129 x i8], [129 x i8]* %3, i64 0, i32 0
	%10 = getelementptr inbounds i8, i8* %9, i64 0
	%11 = sub i64 129, 0
	store {i8*, i64} zeroinitializer, {i8*, i64}* %5
	%12 = getelementptr inbounds {i8*, i64}, {i8*, i64}* %5, i64 0, i32 0
	store i8* %10, i8** %12
	%13 = getelementptr inbounds {i8*, i64}, {i8*, i64}* %5, i64 0, i32 1
	store i64 %11, i64* %13
	%14 = load {i8*, i64}, {i8*, i64}* %5, align 8
	%15 = load i64, i64* %1, align 8
	%16 = sext i64 %15 to i128
	%17 = load i64, i64* %2, align 8
	; SelectorExpr
	%18 = load %..string, %..string* @strconv-18.digits, align 8
	store {i8*, i64} zeroinitializer, {i8*, i64}* %6
	store {i8*, i64} %14, {i8*, i64}* %6
	store i128 zeroinitializer, i128* %7
	store i128 %16, i128* %7
	%19 = call %..string @strconv-18.append_bits({i8*, i64}* %6, i128* %7, i64 %17, i1 true, i64 64, %..string %18, i64 0, %Context* noalias nonnull %__.context_ptr)
	store %..string %19, %..string* %4
	%20 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	%21 = load %..string, %..string* %4, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %20, %..string %21, %Context* noalias nonnull %__.context_ptr)
	ret void
}

define i64 @fmt-4.fprint(i64 %fd, {%..any*, i64}* %args, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca i64, align 8
	%1 = alloca [4096 x i8], align 1
	%2 = alloca {i8*, i64, i64, %Allocator}, align 8
	%3 = alloca {i8*, i64}, align 8
	%4 = alloca {i8*, i64}, align 16
	%5 = alloca %..string, align 8
	%6 = alloca {%..any*, i64}, align 16
		store i64 %fd, i64* %0
	%7 = load {%..any*, i64}, {%..any*, i64}* %args, align 8
	; data
	store [4096 x i8] zeroinitializer, [4096 x i8]* %1
		; buf
		; SliceExpr
	%8 = load [4096 x i8], [4096 x i8]* %1, align 1
	call void @__slice_expr_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$3c, i64 0, i32 0), i64 28}, i64 81, i64 38, i64 0, i64 4096)
	%9 = getelementptr inbounds [4096 x i8], [4096 x i8]* %1, i64 0, i32 0
	%10 = getelementptr inbounds i8, i8* %9, i64 0
	%11 = sub i64 4096, 0
	store {i8*, i64} zeroinitializer, {i8*, i64}* %3
	%12 = getelementptr inbounds {i8*, i64}, {i8*, i64}* %3, i64 0, i32 0
	store i8* %10, i8** %12
	%13 = getelementptr inbounds {i8*, i64}, {i8*, i64}* %3, i64 0, i32 1
	store i64 %11, i64* %13
	%14 = load {i8*, i64}, {i8*, i64}* %3, align 8
	store {i8*, i64} zeroinitializer, {i8*, i64}* %4
	store {i8*, i64} %14, {i8*, i64}* %4
	%15 = call {i8*, i64, i64, %Allocator} @fmt-4.string_buffer_from_slice({i8*, i64}* %4, %Context* noalias nonnull %__.context_ptr)
	store {i8*, i64, i64, %Allocator} %15, {i8*, i64, i64, %Allocator}* %2
	; res
		%16 = getelementptr inbounds {i8*, i64, i64, %Allocator}, {i8*, i64, i64, %Allocator}* %2, i64 0
	%17 = load {%..any*, i64}, {%..any*, i64}* %args, align 8
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %6
	store {%..any*, i64} %17, {%..any*, i64}* %6
	%18 = call %..string @fmt-4.sbprint({i8*, i64, i64, %Allocator}* %16, {%..any*, i64}* %6, %Context* noalias nonnull %__.context_ptr)
	store %..string %18, %..string* %5
	; SelectorExpr
	%19 = load i64, i64* %0, align 8
	%20 = load %..string, %..string* %5, align 8
	%21 = call {i64, i64} @os-3.write_string(i64 %19, %..string %20, %Context* noalias nonnull %__.context_ptr)
	; ReturnStmt
	%22 = load %..string, %..string* %5, align 8
	%23 = extractvalue %..string %22, 1
	ret i64 %23
}

define i64 @fmt-4.fprintln(i64 %fd, {%..any*, i64}* %args, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca i64, align 8
	%1 = alloca [4096 x i8], align 1
	%2 = alloca {i8*, i64, i64, %Allocator}, align 8
	%3 = alloca {i8*, i64}, align 8
	%4 = alloca {i8*, i64}, align 16
	%5 = alloca %..string, align 8
	%6 = alloca {%..any*, i64}, align 16
		store i64 %fd, i64* %0
	%7 = load {%..any*, i64}, {%..any*, i64}* %args, align 8
	; data
	store [4096 x i8] zeroinitializer, [4096 x i8]* %1
		; buf
		; SliceExpr
	%8 = load [4096 x i8], [4096 x i8]* %1, align 1
	call void @__slice_expr_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$3d, i64 0, i32 0), i64 28}, i64 89, i64 38, i64 0, i64 4096)
	%9 = getelementptr inbounds [4096 x i8], [4096 x i8]* %1, i64 0, i32 0
	%10 = getelementptr inbounds i8, i8* %9, i64 0
	%11 = sub i64 4096, 0
	store {i8*, i64} zeroinitializer, {i8*, i64}* %3
	%12 = getelementptr inbounds {i8*, i64}, {i8*, i64}* %3, i64 0, i32 0
	store i8* %10, i8** %12
	%13 = getelementptr inbounds {i8*, i64}, {i8*, i64}* %3, i64 0, i32 1
	store i64 %11, i64* %13
	%14 = load {i8*, i64}, {i8*, i64}* %3, align 8
	store {i8*, i64} zeroinitializer, {i8*, i64}* %4
	store {i8*, i64} %14, {i8*, i64}* %4
	%15 = call {i8*, i64, i64, %Allocator} @fmt-4.string_buffer_from_slice({i8*, i64}* %4, %Context* noalias nonnull %__.context_ptr)
	store {i8*, i64, i64, %Allocator} %15, {i8*, i64, i64, %Allocator}* %2
	; res
		%16 = getelementptr inbounds {i8*, i64, i64, %Allocator}, {i8*, i64, i64, %Allocator}* %2, i64 0
	%17 = load {%..any*, i64}, {%..any*, i64}* %args, align 8
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %6
	store {%..any*, i64} %17, {%..any*, i64}* %6
	%18 = call %..string @fmt-4.sbprintln({i8*, i64, i64, %Allocator}* %16, {%..any*, i64}* %6, %Context* noalias nonnull %__.context_ptr)
	store %..string %18, %..string* %5
	; SelectorExpr
	%19 = load i64, i64* %0, align 8
	%20 = load %..string, %..string* %5, align 8
	%21 = call {i64, i64} @os-3.write_string(i64 %19, %..string %20, %Context* noalias nonnull %__.context_ptr)
	; ReturnStmt
	%22 = load %..string, %..string* %5, align 8
	%23 = extractvalue %..string %22, 1
	ret i64 %23
}

define i64 @fmt-4.fprintf(i64 %fd, %..string %fmt, {%..any*, i64}* %args, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca i64, align 8
	%1 = alloca %..string, align 8
	%2 = alloca [4096 x i8], align 1
	%3 = alloca {i8*, i64, i64, %Allocator}, align 8
	%4 = alloca {i8*, i64}, align 8
	%5 = alloca {i8*, i64}, align 16
	%6 = alloca %..string, align 8
	%7 = alloca {%..any*, i64}, align 16
		store i64 %fd, i64* %0
		store %..string %fmt, %..string* %1
	%8 = load {%..any*, i64}, {%..any*, i64}* %args, align 8
	; data
	store [4096 x i8] zeroinitializer, [4096 x i8]* %2
		; buf
		; SliceExpr
	%9 = load [4096 x i8], [4096 x i8]* %2, align 1
	call void @__slice_expr_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$3e, i64 0, i32 0), i64 28}, i64 96, i64 38, i64 0, i64 4096)
	%10 = getelementptr inbounds [4096 x i8], [4096 x i8]* %2, i64 0, i32 0
	%11 = getelementptr inbounds i8, i8* %10, i64 0
	%12 = sub i64 4096, 0
	store {i8*, i64} zeroinitializer, {i8*, i64}* %4
	%13 = getelementptr inbounds {i8*, i64}, {i8*, i64}* %4, i64 0, i32 0
	store i8* %11, i8** %13
	%14 = getelementptr inbounds {i8*, i64}, {i8*, i64}* %4, i64 0, i32 1
	store i64 %12, i64* %14
	%15 = load {i8*, i64}, {i8*, i64}* %4, align 8
	store {i8*, i64} zeroinitializer, {i8*, i64}* %5
	store {i8*, i64} %15, {i8*, i64}* %5
	%16 = call {i8*, i64, i64, %Allocator} @fmt-4.string_buffer_from_slice({i8*, i64}* %5, %Context* noalias nonnull %__.context_ptr)
	store {i8*, i64, i64, %Allocator} %16, {i8*, i64, i64, %Allocator}* %3
	; res
		%17 = getelementptr inbounds {i8*, i64, i64, %Allocator}, {i8*, i64, i64, %Allocator}* %3, i64 0
	%18 = load %..string, %..string* %1, align 8
	%19 = load {%..any*, i64}, {%..any*, i64}* %args, align 8
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %7
	store {%..any*, i64} %19, {%..any*, i64}* %7
	%20 = call %..string @fmt-4.sbprintf({i8*, i64, i64, %Allocator}* %17, %..string %18, {%..any*, i64}* %7, %Context* noalias nonnull %__.context_ptr)
	store %..string %20, %..string* %6
	; SelectorExpr
	%21 = load i64, i64* %0, align 8
	%22 = load %..string, %..string* %6, align 8
	%23 = call {i64, i64} @os-3.write_string(i64 %21, %..string %22, %Context* noalias nonnull %__.context_ptr)
	; ReturnStmt
	%24 = load %..string, %..string* %6, align 8
	%25 = extractvalue %..string %24, 1
	ret i64 %25
}

define i64 @fmt-4.println({%..any*, i64}* %args, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca {%..any*, i64}, align 16
	%1 = load {%..any*, i64}, {%..any*, i64}* %args, align 8
	; ReturnStmt
	; SelectorExpr
	%2 = load i64, i64* @os_windows-12.stdout, align 8
	%3 = load {%..any*, i64}, {%..any*, i64}* %args, align 8
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %0
	store {%..any*, i64} %3, {%..any*, i64}* %0
	%4 = call i64 @fmt-4.fprintln(i64 %2, {%..any*, i64}* %0, %Context* noalias nonnull %__.context_ptr)
	ret i64 %4
}

define i64 @fmt-4.printf(%..string %fmt, {%..any*, i64}* %args, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca %..string, align 8
	%1 = alloca {%..any*, i64}, align 16
		store %..string %fmt, %..string* %0
	%2 = load {%..any*, i64}, {%..any*, i64}* %args, align 8
	; ReturnStmt
	; SelectorExpr
	%3 = load i64, i64* @os_windows-12.stdout, align 8
	%4 = load %..string, %..string* %0, align 8
	%5 = load {%..any*, i64}, {%..any*, i64}* %args, align 8
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %1
	store {%..any*, i64} %5, {%..any*, i64}* %1
	%6 = call i64 @fmt-4.fprintf(i64 %3, %..string %4, {%..any*, i64}* %1, %Context* noalias nonnull %__.context_ptr)
	ret i64 %6
}

define i64 @fmt-4.printf_err(%..string %fmt, {%..any*, i64}* %args, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca %..string, align 8
	%1 = alloca {%..any*, i64}, align 16
		store %..string %fmt, %..string* %0
	%2 = load {%..any*, i64}, {%..any*, i64}* %args, align 8
	; ReturnStmt
	; SelectorExpr
	%3 = load i64, i64* @os_windows-12.stderr, align 8
	%4 = load %..string, %..string* %0, align 8
	%5 = load {%..any*, i64}, {%..any*, i64}* %args, align 8
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %1
	store {%..any*, i64} %5, {%..any*, i64}* %1
	%6 = call i64 @fmt-4.fprintf(i64 %3, %..string %4, {%..any*, i64}* %1, %Context* noalias nonnull %__.context_ptr)
	ret i64 %6
}

define %..string @fmt-4.bprintf({i8*, i64}* %buf, %..string %fmt, {%..any*, i64}* %args, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca %..string, align 8
	%1 = alloca {i8*, i64, i64, %Allocator}, align 8
	%2 = alloca {i8*, i64}, align 8
	%3 = alloca {i8*, i64}, align 16
	%4 = alloca {%..any*, i64}, align 16
	%5 = load {i8*, i64}, {i8*, i64}* %buf, align 8
		store %..string %fmt, %..string* %0
	%6 = load {%..any*, i64}, {%..any*, i64}* %args, align 8
	; sb
		; SliceExpr
	%7 = load {i8*, i64}, {i8*, i64}* %buf, align 8
	%8 = extractvalue {i8*, i64} %7, 1
	%9 = load {i8*, i64}, {i8*, i64}* %buf, align 8
	call void @__slice_expr_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$3f, i64 0, i32 0), i64 28}, i64 141, i64 36, i64 0, i64 %8)
	%10 = extractvalue {i8*, i64} %9, 0
	%11 = getelementptr inbounds i8, i8* %10, i64 0
	%12 = sub i64 %8, 0
	store {i8*, i64} zeroinitializer, {i8*, i64}* %2
	%13 = getelementptr inbounds {i8*, i64}, {i8*, i64}* %2, i64 0, i32 0
	store i8* %11, i8** %13
	%14 = getelementptr inbounds {i8*, i64}, {i8*, i64}* %2, i64 0, i32 1
	store i64 %12, i64* %14
	%15 = load {i8*, i64}, {i8*, i64}* %2, align 8
	store {i8*, i64} zeroinitializer, {i8*, i64}* %3
	store {i8*, i64} %15, {i8*, i64}* %3
	%16 = call {i8*, i64, i64, %Allocator} @fmt-4.string_buffer_from_slice({i8*, i64}* %3, %Context* noalias nonnull %__.context_ptr)
	store {i8*, i64, i64, %Allocator} %16, {i8*, i64, i64, %Allocator}* %1
	; ReturnStmt
	%17 = getelementptr inbounds {i8*, i64, i64, %Allocator}, {i8*, i64, i64, %Allocator}* %1, i64 0
	%18 = load %..string, %..string* %0, align 8
	%19 = load {%..any*, i64}, {%..any*, i64}* %args, align 8
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %4
	store {%..any*, i64} %19, {%..any*, i64}* %4
	%20 = call %..string @fmt-4.sbprintf({i8*, i64, i64, %Allocator}* %17, %..string %18, {%..any*, i64}* %4, %Context* noalias nonnull %__.context_ptr)
	ret %..string %20
}

define void @fmt-4.write_type({i8*, i64, i64, %Allocator}* %buf, %Type_Info* %ti, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca {i8*, i64, i64, %Allocator}*, align 8
	%1 = alloca %Type_Info*, align 8
	%2 = alloca %Type_Info_Named, align 8
	%3 = alloca %Type_Info_Integer, align 1
	%4 = alloca %Type_Info_Rune, align 1
	%5 = alloca %Type_Info_Float, align 1
	%6 = alloca %Type_Info_Complex, align 1
	%7 = alloca %Type_Info_String, align 1
	%8 = alloca %Type_Info_Boolean, align 1
	%9 = alloca %Type_Info_Any, align 1
	%10 = alloca %Type_Info_Pointer, align 8
	%11 = alloca %Type_Info_Procedure, align 8
	%12 = alloca %Type_Info_Tuple, align 8
	%13 = alloca {%Type_Info_Tuple, i1}, align 8
	%14 = alloca %Type_Info*, align 8
	%15 = alloca i64, align 8
	%16 = alloca i64, align 8
	%17 = alloca i64, align 8
	%18 = alloca %Type_Info_Tuple, align 8
	%19 = alloca i64, align 8
	%20 = alloca %..string, align 8
	%21 = alloca i64, align 8
	%22 = alloca i64, align 8
	%23 = alloca i64, align 8
	%24 = alloca %Type_Info*, align 8
	%25 = alloca %Type_Info_Array, align 8
	%26 = alloca %fmt-4.Fmt_Info, align 8
	%27 = alloca %fmt-4.Fmt_Info, align 8
	%28 = alloca %Type_Info_Dynamic_Array, align 8
	%29 = alloca %Type_Info_Slice, align 8
	%30 = alloca %Type_Info_Vector, align 8
	%31 = alloca %Type_Info_Map, align 8
	%32 = alloca %Type_Info_Struct, align 8
	%33 = alloca %..string, align 8
	%34 = alloca i64, align 8
	%35 = alloca i64, align 8
	%36 = alloca i64, align 8
	%37 = alloca %Type_Info_Union, align 8
	%38 = alloca %Type_Info*, align 8
	%39 = alloca i64, align 8
	%40 = alloca i64, align 8
	%41 = alloca i64, align 8
	%42 = alloca %Type_Info_Enum, align 8
	%43 = alloca %..string, align 8
	%44 = alloca i64, align 8
	%45 = alloca i64, align 8
	%46 = alloca i64, align 8
	%47 = alloca %Type_Info_Bit_Field, align 8
	%48 = alloca %..string, align 8
	%49 = alloca i64, align 8
	%50 = alloca i64, align 8
	%51 = alloca i64, align 8
		store {i8*, i64, i64, %Allocator}* %buf, {i8*, i64, i64, %Allocator}** %0
		store %Type_Info* %ti, %Type_Info** %1
	; IfStmt
	%52 = load %Type_Info*, %Type_Info** %1, align 8
	%53 = icmp eq %Type_Info* %52, zeroinitializer
	br i1 %53, label %if.then-1, label %if.done-2

if.then-1:
	%54 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %54, %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$40, i64 0, i32 0), i64 3}, %Context* noalias nonnull %__.context_ptr)
	; ReturnStmt
	ret void

if.done-2:
	; TypeSwitchStmt
	; SelectorExpr
	%55 = load %Type_Info*, %Type_Info** %1, align 8
	%56 = getelementptr inbounds %Type_Info, %Type_Info* %55, i64 0
	%57 = getelementptr inbounds %Type_Info, %Type_Info* %56, i64 0, i32 2
	%58 = load {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %57, align 8
	; get union's tag
	%59 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %57, i64 0, i32 2 ; UnionTagPtr
	%60 = load i8, i8* %59, align 1
	%61 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %57 to %..rawptr
	%62 = icmp eq i8 %60, 1
	br i1 %62, label %typeswitch.body-4, label %typeswitch.next-3

typeswitch.next-3:
	%63 = icmp eq i8 %60, 2
	br i1 %63, label %typeswitch.body-6, label %typeswitch.next-5

typeswitch.body-4:
	%64 = bitcast %..rawptr %61 to %Type_Info_Named*
	%65 = load %Type_Info_Named, %Type_Info_Named* %64, align 8
	store %Type_Info_Named %65, %Type_Info_Named* %2
	%66 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	; SelectorExpr
	%67 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %2, i64 0, i32 0
	%68 = load %..string, %..string* %67, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %66, %..string %68, %Context* noalias nonnull %__.context_ptr)
	br label %typeswitch.done-123

typeswitch.next-5:
	%69 = icmp eq i8 %60, 3
	br i1 %69, label %typeswitch.body-18, label %typeswitch.next-17

typeswitch.body-6:
	%70 = bitcast %..rawptr %61 to %Type_Info_Integer*
	%71 = load %Type_Info_Integer, %Type_Info_Integer* %70, align 1
	store %Type_Info_Integer %71, %Type_Info_Integer* %3
	; SwitchStmt
	%72 = load %Type_Info*, %Type_Info** %1, align 8
	%73 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%74 = icmp eq %Type_Info* %72, %73
	%75 = icmp eq i1 true, %74
	br i1 %75, label %switch.case.body-8, label %switch.case.next-7

switch.case.next-7:
	%76 = load %Type_Info*, %Type_Info** %1, align 8
	%77 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	%78 = icmp eq %Type_Info* %76, %77
	%79 = icmp eq i1 true, %78
	br i1 %79, label %switch.fall.body-10, label %switch.case.next-9

switch.case.body-8:
	%80 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %80, %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$41, i64 0, i32 0), i64 3}, %Context* noalias nonnull %__.context_ptr)
	br label %switch.done-16

switch.case.next-9:
	%81 = load %Type_Info*, %Type_Info** %1, align 8
	%82 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 42
	%83 = icmp eq %Type_Info* %81, %82
	%84 = icmp eq i1 true, %83
	br i1 %84, label %switch.fall.body-12, label %switch.case.next-11

switch.fall.body-10:
	%85 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %85, %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$42, i64 0, i32 0), i64 4}, %Context* noalias nonnull %__.context_ptr)
	br label %switch.done-16

switch.case.next-11:
	; IfStmt
	; SelectorExpr
	%86 = getelementptr inbounds %Type_Info_Integer, %Type_Info_Integer* %3, i64 0, i32 0
	%87 = load i1, i1* %86, align 1
	br i1 %87, label %if.then-13, label %if.else-14

switch.fall.body-12:
	%88 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %88, %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$43, i64 0, i32 0), i64 7}, %Context* noalias nonnull %__.context_ptr)
	br label %switch.done-16

if.then-13:
	%89 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	call void @fmt-4.write_byte({i8*, i64, i64, %Allocator}* %89, i8 105, %Context* noalias nonnull %__.context_ptr)
	br label %if.done-15

if.else-14:
	%90 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	call void @fmt-4.write_byte({i8*, i64, i64, %Allocator}* %90, i8 117, %Context* noalias nonnull %__.context_ptr)
	br label %if.done-15

if.done-15:
	%91 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	; SelectorExpr
	%92 = load %Type_Info*, %Type_Info** %1, align 8
	%93 = getelementptr inbounds %Type_Info, %Type_Info* %92, i64 0
	%94 = getelementptr inbounds %Type_Info, %Type_Info* %93, i64 0, i32 0
	%95 = load i64, i64* %94, align 8
	%96 = mul i64 8, %95
	%97 = bitcast i64 %96 to i64
	call void @fmt-4.write_int-222({i8*, i64, i64, %Allocator}* %91, i64 %97, i64 10, %Context* noalias nonnull %__.context_ptr)
	br label %switch.done-16

switch.done-16:
	br label %typeswitch.done-123

typeswitch.next-17:
	%98 = icmp eq i8 %60, 4
	br i1 %98, label %typeswitch.body-20, label %typeswitch.next-19

typeswitch.body-18:
	%99 = bitcast %..rawptr %61 to %Type_Info_Rune*
	%100 = load %Type_Info_Rune, %Type_Info_Rune* %99, align 1
	store %Type_Info_Rune %100, %Type_Info_Rune* %4
	%101 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %101, %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$44, i64 0, i32 0), i64 4}, %Context* noalias nonnull %__.context_ptr)
	br label %typeswitch.done-123

typeswitch.next-19:
	%102 = icmp eq i8 %60, 5
	br i1 %102, label %typeswitch.body-29, label %typeswitch.next-28

typeswitch.body-20:
	%103 = bitcast %..rawptr %61 to %Type_Info_Float*
	%104 = load %Type_Info_Float, %Type_Info_Float* %103, align 1
	store %Type_Info_Float %104, %Type_Info_Float* %5
	; SwitchStmt
	; SelectorExpr
	%105 = load %Type_Info*, %Type_Info** %1, align 8
	%106 = getelementptr inbounds %Type_Info, %Type_Info* %105, i64 0
	%107 = getelementptr inbounds %Type_Info, %Type_Info* %106, i64 0, i32 0
	%108 = load i64, i64* %107, align 8
	%109 = icmp eq i64 %108, 2
	br i1 %109, label %switch.case.body-22, label %switch.case.next-21

switch.case.next-21:
	%110 = icmp eq i64 %108, 4
	br i1 %110, label %switch.fall.body-24, label %switch.case.next-23

switch.case.body-22:
	%111 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %111, %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$45, i64 0, i32 0), i64 3}, %Context* noalias nonnull %__.context_ptr)
	br label %switch.done-27

switch.case.next-23:
	%112 = icmp eq i64 %108, 8
	br i1 %112, label %switch.fall.body-26, label %switch.case.next-25

switch.fall.body-24:
	%113 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %113, %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$46, i64 0, i32 0), i64 3}, %Context* noalias nonnull %__.context_ptr)
	br label %switch.done-27

switch.case.next-25:
	br label %switch.done-27

switch.fall.body-26:
	%114 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %114, %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$47, i64 0, i32 0), i64 3}, %Context* noalias nonnull %__.context_ptr)
	br label %switch.done-27

switch.done-27:
	br label %typeswitch.done-123

typeswitch.next-28:
	%115 = icmp eq i8 %60, 6
	br i1 %115, label %typeswitch.body-38, label %typeswitch.next-37

typeswitch.body-29:
	%116 = bitcast %..rawptr %61 to %Type_Info_Complex*
	%117 = load %Type_Info_Complex, %Type_Info_Complex* %116, align 1
	store %Type_Info_Complex %117, %Type_Info_Complex* %6
	; SwitchStmt
	; SelectorExpr
	%118 = load %Type_Info*, %Type_Info** %1, align 8
	%119 = getelementptr inbounds %Type_Info, %Type_Info* %118, i64 0
	%120 = getelementptr inbounds %Type_Info, %Type_Info* %119, i64 0, i32 0
	%121 = load i64, i64* %120, align 8
	%122 = icmp eq i64 %121, 4
	br i1 %122, label %switch.case.body-31, label %switch.case.next-30

switch.case.next-30:
	%123 = icmp eq i64 %121, 8
	br i1 %123, label %switch.fall.body-33, label %switch.case.next-32

switch.case.body-31:
	%124 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %124, %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$48, i64 0, i32 0), i64 9}, %Context* noalias nonnull %__.context_ptr)
	br label %switch.done-36

switch.case.next-32:
	%125 = icmp eq i64 %121, 16
	br i1 %125, label %switch.fall.body-35, label %switch.case.next-34

switch.fall.body-33:
	%126 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %126, %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$49, i64 0, i32 0), i64 9}, %Context* noalias nonnull %__.context_ptr)
	br label %switch.done-36

switch.case.next-34:
	br label %switch.done-36

switch.fall.body-35:
	%127 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %127, %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$4a, i64 0, i32 0), i64 10}, %Context* noalias nonnull %__.context_ptr)
	br label %switch.done-36

switch.done-36:
	br label %typeswitch.done-123

typeswitch.next-37:
	%128 = icmp eq i8 %60, 7
	br i1 %128, label %typeswitch.body-40, label %typeswitch.next-39

typeswitch.body-38:
	%129 = bitcast %..rawptr %61 to %Type_Info_String*
	%130 = load %Type_Info_String, %Type_Info_String* %129, align 1
	store %Type_Info_String %130, %Type_Info_String* %7
	%131 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %131, %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$4b, i64 0, i32 0), i64 6}, %Context* noalias nonnull %__.context_ptr)
	br label %typeswitch.done-123

typeswitch.next-39:
	%132 = icmp eq i8 %60, 8
	br i1 %132, label %typeswitch.body-42, label %typeswitch.next-41

typeswitch.body-40:
	%133 = bitcast %..rawptr %61 to %Type_Info_Boolean*
	%134 = load %Type_Info_Boolean, %Type_Info_Boolean* %133, align 1
	store %Type_Info_Boolean %134, %Type_Info_Boolean* %8
	%135 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %135, %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$4c, i64 0, i32 0), i64 4}, %Context* noalias nonnull %__.context_ptr)
	br label %typeswitch.done-123

typeswitch.next-41:
	%136 = icmp eq i8 %60, 9
	br i1 %136, label %typeswitch.body-44, label %typeswitch.next-43

typeswitch.body-42:
	%137 = bitcast %..rawptr %61 to %Type_Info_Any*
	%138 = load %Type_Info_Any, %Type_Info_Any* %137, align 1
	store %Type_Info_Any %138, %Type_Info_Any* %9
	%139 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %139, %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$4d, i64 0, i32 0), i64 3}, %Context* noalias nonnull %__.context_ptr)
	br label %typeswitch.done-123

typeswitch.next-43:
	%140 = icmp eq i8 %60, 10
	br i1 %140, label %typeswitch.body-49, label %typeswitch.next-48

typeswitch.body-44:
	%141 = bitcast %..rawptr %61 to %Type_Info_Pointer*
	%142 = load %Type_Info_Pointer, %Type_Info_Pointer* %141, align 8
	store %Type_Info_Pointer %142, %Type_Info_Pointer* %10
	; IfStmt
	; SelectorExpr
	%143 = getelementptr inbounds %Type_Info_Pointer, %Type_Info_Pointer* %10, i64 0, i32 0
	%144 = load %Type_Info*, %Type_Info** %143, align 8
	%145 = icmp eq %Type_Info* %144, zeroinitializer
	br i1 %145, label %if.then-45, label %if.else-46

if.then-45:
	%146 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %146, %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$4e, i64 0, i32 0), i64 6}, %Context* noalias nonnull %__.context_ptr)
	br label %if.done-47

if.else-46:
	%147 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %147, %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$4f, i64 0, i32 0), i64 1}, %Context* noalias nonnull %__.context_ptr)
	%148 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	; SelectorExpr
	%149 = getelementptr inbounds %Type_Info_Pointer, %Type_Info_Pointer* %10, i64 0, i32 0
	%150 = load %Type_Info*, %Type_Info** %149, align 8
	call void @fmt-4.write_type({i8*, i64, i64, %Allocator}* %148, %Type_Info* %150, %Context* noalias nonnull %__.context_ptr)
	br label %if.done-47

if.done-47:
	br label %typeswitch.done-123

typeswitch.next-48:
	%151 = icmp eq i8 %60, 15
	br i1 %151, label %typeswitch.body-63, label %typeswitch.next-62

typeswitch.body-49:
	%152 = bitcast %..rawptr %61 to %Type_Info_Procedure*
	%153 = load %Type_Info_Procedure, %Type_Info_Procedure* %152, align 8
	store %Type_Info_Procedure %153, %Type_Info_Procedure* %11
	%154 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %154, %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$50, i64 0, i32 0), i64 4}, %Context* noalias nonnull %__.context_ptr)
	; IfStmt
	; SelectorExpr
	%155 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %11, i64 0, i32 0
	%156 = load %Type_Info*, %Type_Info** %155, align 8
	%157 = icmp eq %Type_Info* %156, zeroinitializer
	br i1 %157, label %if.then-50, label %if.else-51

if.then-50:
	%158 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %158, %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$51, i64 0, i32 0), i64 2}, %Context* noalias nonnull %__.context_ptr)
	br label %if.done-59

if.else-51:
	; t
		; SelectorExpr
	; SelectorExpr
	%159 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %11, i64 0, i32 0
	%160 = load %Type_Info*, %Type_Info** %159, align 8
	%161 = getelementptr inbounds %Type_Info, %Type_Info* %160, i64 0
	%162 = getelementptr inbounds %Type_Info, %Type_Info* %161, i64 0, i32 2
	%163 = load {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %162, align 8
	; cast - union_cast
	store {%Type_Info_Tuple, i1} zeroinitializer, {%Type_Info_Tuple, i1}* %13
	%164 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %162, i64 0, i32 2 ; UnionTagPtr
	%165 = load i8, i8* %164, align 1
	%166 = icmp eq i8 %165, 15
	br i1 %166, label %union_cast.ok-52, label %union_cast.end-53

union_cast.ok-52:
	%167 = getelementptr inbounds {%Type_Info_Tuple, i1}, {%Type_Info_Tuple, i1}* %13, i64 0, i32 0
	%168 = getelementptr inbounds {%Type_Info_Tuple, i1}, {%Type_Info_Tuple, i1}* %13, i64 0, i32 1
	%169 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %162 to %Type_Info_Tuple*
	%170 = load %Type_Info_Tuple, %Type_Info_Tuple* %169, align 8
	store %Type_Info_Tuple %170, %Type_Info_Tuple* %167
	store i1 true, i1* %168
	br label %union_cast.end-53

union_cast.end-53:
	%171 = getelementptr inbounds {%Type_Info_Tuple, i1}, {%Type_Info_Tuple, i1}* %13, i64 0, i32 1
	%172 = load i1, i1* %171, align 1
	%173 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 10
	%174 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 33
	call void @__type_assertion_check(i1 %172, %..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$52, i64 0, i32 0), i64 28}, i64 207, i64 21, %Type_Info* %173, %Type_Info* %174)
	%175 = getelementptr inbounds {%Type_Info_Tuple, i1}, {%Type_Info_Tuple, i1}* %13, i64 0, i32 0
	%176 = load %Type_Info_Tuple, %Type_Info_Tuple* %175, align 8
	store %Type_Info_Tuple %176, %Type_Info_Tuple* %12
	%177 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %177, %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$53, i64 0, i32 0), i64 1}, %Context* noalias nonnull %__.context_ptr)
	; RangeStmt
	; t
	store %Type_Info* zeroinitializer, %Type_Info** %14
		; i
	store i64 zeroinitializer, i64* %15
		; SelectorExpr
	%178 = getelementptr inbounds %Type_Info_Tuple, %Type_Info_Tuple* %12, i64 0, i32 0
	%179 = load {%Type_Info**, i64}, {%Type_Info**, i64}* %178, align 8
	store i64 zeroinitializer, i64* %16
	%180 = extractvalue {%Type_Info**, i64} %179, 1
	store i64 %180, i64* %16
	store i64 zeroinitializer, i64* %17
	store i64 -1, i64* %17
	br label %for.index.loop-54

for.index.loop-54:
	%181 = load i64, i64* %17, align 8
	%182 = add i64 %181, 1
	store i64 %182, i64* %17
	%183 = load i64, i64* %16, align 8
	%184 = icmp slt i64 %182, %183
	br i1 %184, label %for.index.body-55, label %for.index.done-58

for.index.body-55:
	%185 = load i64, i64* %17, align 8
	%186 = extractvalue {%Type_Info**, i64} %179, 0
	%187 = getelementptr inbounds %Type_Info*, %Type_Info** %186, i64 %185
	%188 = load %Type_Info*, %Type_Info** %187, align 8
	store %Type_Info* %188, %Type_Info** %14
	store i64 %185, i64* %15
	; IfStmt
	%189 = load i64, i64* %15, align 8
	%190 = icmp sgt i64 %189, 0
	br i1 %190, label %if.then-56, label %if.done-57

if.then-56:
	%191 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %191, %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$54, i64 0, i32 0), i64 2}, %Context* noalias nonnull %__.context_ptr)
	br label %if.done-57

if.done-57:
	%192 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	%193 = load %Type_Info*, %Type_Info** %14, align 8
	call void @fmt-4.write_type({i8*, i64, i64, %Allocator}* %192, %Type_Info* %193, %Context* noalias nonnull %__.context_ptr)
	br label %for.index.loop-54

for.index.done-58:
	%194 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %194, %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$55, i64 0, i32 0), i64 1}, %Context* noalias nonnull %__.context_ptr)
	br label %if.done-59

if.done-59:
	; IfStmt
	; SelectorExpr
	%195 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %11, i64 0, i32 1
	%196 = load %Type_Info*, %Type_Info** %195, align 8
	%197 = icmp ne %Type_Info* %196, zeroinitializer
	br i1 %197, label %if.then-60, label %if.done-61

if.then-60:
	%198 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %198, %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$56, i64 0, i32 0), i64 4}, %Context* noalias nonnull %__.context_ptr)
	%199 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	; SelectorExpr
	%200 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %11, i64 0, i32 1
	%201 = load %Type_Info*, %Type_Info** %200, align 8
	call void @fmt-4.write_type({i8*, i64, i64, %Allocator}* %199, %Type_Info* %201, %Context* noalias nonnull %__.context_ptr)
	br label %if.done-61

if.done-61:
	br label %typeswitch.done-123

typeswitch.next-62:
	%202 = icmp eq i8 %60, 11
	br i1 %202, label %typeswitch.body-76, label %typeswitch.next-75

typeswitch.body-63:
	%203 = bitcast %..rawptr %61 to %Type_Info_Tuple*
	%204 = load %Type_Info_Tuple, %Type_Info_Tuple* %203, align 8
	store %Type_Info_Tuple %204, %Type_Info_Tuple* %18
	; count
		; SelectorExpr
	%205 = getelementptr inbounds %Type_Info_Tuple, %Type_Info_Tuple* %18, i64 0, i32 1
	%206 = load {%..string*, i64}, {%..string*, i64}* %205, align 8
	%207 = extractvalue {%..string*, i64} %206, 1
	store i64 %207, i64* %19
	; IfStmt
	%208 = load i64, i64* %19, align 8
	%209 = icmp ne i64 %208, 1
	br i1 %209, label %if.then-64, label %if.done-65

if.then-64:
	%210 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %210, %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$57, i64 0, i32 0), i64 1}, %Context* noalias nonnull %__.context_ptr)
	br label %if.done-65

if.done-65:
	; RangeStmt
	; name
	store %..string zeroinitializer, %..string* %20
		; i
	store i64 zeroinitializer, i64* %21
		; SelectorExpr
	%211 = getelementptr inbounds %Type_Info_Tuple, %Type_Info_Tuple* %18, i64 0, i32 1
	%212 = load {%..string*, i64}, {%..string*, i64}* %211, align 8
	store i64 zeroinitializer, i64* %22
	%213 = extractvalue {%..string*, i64} %212, 1
	store i64 %213, i64* %22
	store i64 zeroinitializer, i64* %23
	store i64 -1, i64* %23
	br label %for.index.loop-66

for.index.loop-66:
	%214 = load i64, i64* %23, align 8
	%215 = add i64 %214, 1
	store i64 %215, i64* %23
	%216 = load i64, i64* %22, align 8
	%217 = icmp slt i64 %215, %216
	br i1 %217, label %for.index.body-67, label %for.index.done-72

for.index.body-67:
	%218 = load i64, i64* %23, align 8
	%219 = extractvalue {%..string*, i64} %212, 0
	%220 = getelementptr inbounds %..string, %..string* %219, i64 %218
	%221 = load %..string, %..string* %220, align 8
	store %..string %221, %..string* %20
	store i64 %218, i64* %21
	; IfStmt
	%222 = load i64, i64* %21, align 8
	%223 = icmp sgt i64 %222, 0
	br i1 %223, label %if.then-68, label %if.done-69

if.then-68:
	%224 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %224, %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$58, i64 0, i32 0), i64 2}, %Context* noalias nonnull %__.context_ptr)
	br label %if.done-69

if.done-69:
	; t
		; IndexExpr
	; SelectorExpr
	%225 = getelementptr inbounds %Type_Info_Tuple, %Type_Info_Tuple* %18, i64 0, i32 0
	%226 = load {%Type_Info**, i64}, {%Type_Info**, i64}* %225, align 8
	%227 = extractvalue {%Type_Info**, i64} %226, 0
	%228 = load i64, i64* %21, align 8
	%229 = extractvalue {%Type_Info**, i64} %226, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$59, i64 0, i32 0), i64 28}, i64 225, i64 20, i64 %228, i64 %229)
	%230 = getelementptr inbounds %Type_Info*, %Type_Info** %227, i64 %228
	%231 = load %Type_Info*, %Type_Info** %230, align 8
	store %Type_Info* %231, %Type_Info** %24
	; IfStmt
	%232 = load %..string, %..string* %20, align 8
	%233 = extractvalue %..string %232, 1
	%234 = icmp sgt i64 %233, 0
	br i1 %234, label %if.then-70, label %if.done-71

if.then-70:
	%235 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	%236 = load %..string, %..string* %20, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %235, %..string %236, %Context* noalias nonnull %__.context_ptr)
	%237 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %237, %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$5a, i64 0, i32 0), i64 2}, %Context* noalias nonnull %__.context_ptr)
	br label %if.done-71

if.done-71:
	%238 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	%239 = load %Type_Info*, %Type_Info** %24, align 8
	call void @fmt-4.write_type({i8*, i64, i64, %Allocator}* %238, %Type_Info* %239, %Context* noalias nonnull %__.context_ptr)
	br label %for.index.loop-66

for.index.done-72:
	; IfStmt
	%240 = load i64, i64* %19, align 8
	%241 = icmp ne i64 %240, 1
	br i1 %241, label %if.then-73, label %if.done-74

if.then-73:
	%242 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %242, %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$5b, i64 0, i32 0), i64 1}, %Context* noalias nonnull %__.context_ptr)
	br label %if.done-74

if.done-74:
	br label %typeswitch.done-123

typeswitch.next-75:
	%243 = icmp eq i8 %60, 12
	br i1 %243, label %typeswitch.body-78, label %typeswitch.next-77

typeswitch.body-76:
	%244 = bitcast %..rawptr %61 to %Type_Info_Array*
	%245 = load %Type_Info_Array, %Type_Info_Array* %244, align 8
	store %Type_Info_Array %245, %Type_Info_Array* %25
	%246 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %246, %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$5c, i64 0, i32 0), i64 1}, %Context* noalias nonnull %__.context_ptr)
	; fi
		; CompoundLit
	store %fmt-4.Fmt_Info zeroinitializer, %fmt-4.Fmt_Info* %27
	store %fmt-4.Fmt_Info {%..any zeroinitializer, i64 zeroinitializer, i64 zeroinitializer, i64 zeroinitializer, {i8*, i64, i64, %Allocator}* zeroinitializer, i1 zeroinitializer, i1 zeroinitializer, i1 zeroinitializer, i1 zeroinitializer, i1 zeroinitializer, i1 zeroinitializer, i1 zeroinitializer, i1 zeroinitializer, i1 zeroinitializer}, %fmt-4.Fmt_Info* %27
	%247 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	%248 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %27, i64 0, i32 4
	store {i8*, i64, i64, %Allocator}* %247, {i8*, i64, i64, %Allocator}** %248
	%249 = load %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %27, align 8
	store %fmt-4.Fmt_Info %249, %fmt-4.Fmt_Info* %26
	%250 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	; SelectorExpr
	%251 = getelementptr inbounds %Type_Info_Array, %Type_Info_Array* %25, i64 0, i32 2
	%252 = load i64, i64* %251, align 8
	%253 = bitcast i64 %252 to i64
	call void @fmt-4.write_int-222({i8*, i64, i64, %Allocator}* %250, i64 %253, i64 10, %Context* noalias nonnull %__.context_ptr)
	%254 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %254, %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$5d, i64 0, i32 0), i64 1}, %Context* noalias nonnull %__.context_ptr)
	%255 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	; SelectorExpr
	%256 = getelementptr inbounds %Type_Info_Array, %Type_Info_Array* %25, i64 0, i32 0
	%257 = load %Type_Info*, %Type_Info** %256, align 8
	call void @fmt-4.write_type({i8*, i64, i64, %Allocator}* %255, %Type_Info* %257, %Context* noalias nonnull %__.context_ptr)
	br label %typeswitch.done-123

typeswitch.next-77:
	%258 = icmp eq i8 %60, 13
	br i1 %258, label %typeswitch.body-80, label %typeswitch.next-79

typeswitch.body-78:
	%259 = bitcast %..rawptr %61 to %Type_Info_Dynamic_Array*
	%260 = load %Type_Info_Dynamic_Array, %Type_Info_Dynamic_Array* %259, align 8
	store %Type_Info_Dynamic_Array %260, %Type_Info_Dynamic_Array* %28
	%261 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %261, %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$5e, i64 0, i32 0), i64 9}, %Context* noalias nonnull %__.context_ptr)
	%262 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	; SelectorExpr
	%263 = getelementptr inbounds %Type_Info_Dynamic_Array, %Type_Info_Dynamic_Array* %28, i64 0, i32 0
	%264 = load %Type_Info*, %Type_Info** %263, align 8
	call void @fmt-4.write_type({i8*, i64, i64, %Allocator}* %262, %Type_Info* %264, %Context* noalias nonnull %__.context_ptr)
	br label %typeswitch.done-123

typeswitch.next-79:
	%265 = icmp eq i8 %60, 14
	br i1 %265, label %typeswitch.body-82, label %typeswitch.next-81

typeswitch.body-80:
	%266 = bitcast %..rawptr %61 to %Type_Info_Slice*
	%267 = load %Type_Info_Slice, %Type_Info_Slice* %266, align 8
	store %Type_Info_Slice %267, %Type_Info_Slice* %29
	%268 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %268, %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$5f, i64 0, i32 0), i64 2}, %Context* noalias nonnull %__.context_ptr)
	%269 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	; SelectorExpr
	%270 = getelementptr inbounds %Type_Info_Slice, %Type_Info_Slice* %29, i64 0, i32 0
	%271 = load %Type_Info*, %Type_Info** %270, align 8
	call void @fmt-4.write_type({i8*, i64, i64, %Allocator}* %269, %Type_Info* %271, %Context* noalias nonnull %__.context_ptr)
	br label %typeswitch.done-123

typeswitch.next-81:
	%272 = icmp eq i8 %60, 19
	br i1 %272, label %typeswitch.body-84, label %typeswitch.next-83

typeswitch.body-82:
	%273 = bitcast %..rawptr %61 to %Type_Info_Vector*
	%274 = load %Type_Info_Vector, %Type_Info_Vector* %273, align 8
	store %Type_Info_Vector %274, %Type_Info_Vector* %30
	%275 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %275, %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$60, i64 0, i32 0), i64 8}, %Context* noalias nonnull %__.context_ptr)
	%276 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	; SelectorExpr
	%277 = getelementptr inbounds %Type_Info_Vector, %Type_Info_Vector* %30, i64 0, i32 2
	%278 = load i64, i64* %277, align 8
	%279 = bitcast i64 %278 to i64
	call void @fmt-4.write_int-222({i8*, i64, i64, %Allocator}* %276, i64 %279, i64 10, %Context* noalias nonnull %__.context_ptr)
	%280 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %280, %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$61, i64 0, i32 0), i64 1}, %Context* noalias nonnull %__.context_ptr)
	%281 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	; SelectorExpr
	%282 = getelementptr inbounds %Type_Info_Vector, %Type_Info_Vector* %30, i64 0, i32 0
	%283 = load %Type_Info*, %Type_Info** %282, align 8
	call void @fmt-4.write_type({i8*, i64, i64, %Allocator}* %281, %Type_Info* %283, %Context* noalias nonnull %__.context_ptr)
	br label %typeswitch.done-123

typeswitch.next-83:
	%284 = icmp eq i8 %60, 16
	br i1 %284, label %typeswitch.body-86, label %typeswitch.next-85

typeswitch.body-84:
	%285 = bitcast %..rawptr %61 to %Type_Info_Map*
	%286 = load %Type_Info_Map, %Type_Info_Map* %285, align 8
	store %Type_Info_Map %286, %Type_Info_Map* %31
	%287 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %287, %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$62, i64 0, i32 0), i64 4}, %Context* noalias nonnull %__.context_ptr)
	%288 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	; SelectorExpr
	%289 = getelementptr inbounds %Type_Info_Map, %Type_Info_Map* %31, i64 0, i32 0
	%290 = load %Type_Info*, %Type_Info** %289, align 8
	call void @fmt-4.write_type({i8*, i64, i64, %Allocator}* %288, %Type_Info* %290, %Context* noalias nonnull %__.context_ptr)
	%291 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	call void @fmt-4.write_byte({i8*, i64, i64, %Allocator}* %291, i8 93, %Context* noalias nonnull %__.context_ptr)
	%292 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	; SelectorExpr
	%293 = getelementptr inbounds %Type_Info_Map, %Type_Info_Map* %31, i64 0, i32 1
	%294 = load %Type_Info*, %Type_Info** %293, align 8
	call void @fmt-4.write_type({i8*, i64, i64, %Allocator}* %292, %Type_Info* %294, %Context* noalias nonnull %__.context_ptr)
	br label %typeswitch.done-123

typeswitch.next-85:
	%295 = icmp eq i8 %60, 17
	br i1 %295, label %typeswitch.body-101, label %typeswitch.next-100

typeswitch.body-86:
	%296 = bitcast %..rawptr %61 to %Type_Info_Struct*
	%297 = load %Type_Info_Struct, %Type_Info_Struct* %296, align 8
	store %Type_Info_Struct %297, %Type_Info_Struct* %32
	%298 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %298, %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$63, i64 0, i32 0), i64 7}, %Context* noalias nonnull %__.context_ptr)
	; IfStmt
	; SelectorExpr
	%299 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %32, i64 0, i32 4
	%300 = load i1, i1* %299, align 1
	br i1 %300, label %if.then-87, label %if.done-88

if.then-87:
	%301 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %301, %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$64, i64 0, i32 0), i64 8}, %Context* noalias nonnull %__.context_ptr)
	br label %if.done-88

if.done-88:
	; IfStmt
	; SelectorExpr
	%302 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %32, i64 0, i32 5
	%303 = load i1, i1* %302, align 1
	br i1 %303, label %if.then-89, label %if.done-90

if.then-89:
	%304 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %304, %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$65, i64 0, i32 0), i64 9}, %Context* noalias nonnull %__.context_ptr)
	br label %if.done-90

if.done-90:
	; IfStmt
	; SelectorExpr
	%305 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %32, i64 0, i32 6
	%306 = load i1, i1* %305, align 1
	br i1 %306, label %if.then-91, label %if.done-92

if.then-91:
	%307 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %307, %..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$66, i64 0, i32 0), i64 11}, %Context* noalias nonnull %__.context_ptr)
	br label %if.done-92

if.done-92:
	; IfStmt
	; SelectorExpr
	%308 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %32, i64 0, i32 7
	%309 = load i1, i1* %308, align 1
	br i1 %309, label %if.then-93, label %if.done-94

if.then-93:
	%310 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %310, %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$67, i64 0, i32 0), i64 7}, %Context* noalias nonnull %__.context_ptr)
	%311 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	; SelectorExpr
	%312 = load %Type_Info*, %Type_Info** %1, align 8
	%313 = getelementptr inbounds %Type_Info, %Type_Info* %312, i64 0
	%314 = getelementptr inbounds %Type_Info, %Type_Info* %313, i64 0, i32 1
	%315 = load i64, i64* %314, align 8
	%316 = bitcast i64 %315 to i64
	call void @fmt-4.write_int-222({i8*, i64, i64, %Allocator}* %311, i64 %316, i64 10, %Context* noalias nonnull %__.context_ptr)
	%317 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	call void @fmt-4.write_byte({i8*, i64, i64, %Allocator}* %317, i8 32, %Context* noalias nonnull %__.context_ptr)
	br label %if.done-94

if.done-94:
	%318 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	call void @fmt-4.write_byte({i8*, i64, i64, %Allocator}* %318, i8 123, %Context* noalias nonnull %__.context_ptr)
	; RangeStmt
	; name
	store %..string zeroinitializer, %..string* %33
		; i
	store i64 zeroinitializer, i64* %34
		; SelectorExpr
	%319 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %32, i64 0, i32 1
	%320 = load {%..string*, i64}, {%..string*, i64}* %319, align 8
	store i64 zeroinitializer, i64* %35
	%321 = extractvalue {%..string*, i64} %320, 1
	store i64 %321, i64* %35
	store i64 zeroinitializer, i64* %36
	store i64 -1, i64* %36
	br label %for.index.loop-95

for.index.loop-95:
	%322 = load i64, i64* %36, align 8
	%323 = add i64 %322, 1
	store i64 %323, i64* %36
	%324 = load i64, i64* %35, align 8
	%325 = icmp slt i64 %323, %324
	br i1 %325, label %for.index.body-96, label %for.index.done-99

for.index.body-96:
	%326 = load i64, i64* %36, align 8
	%327 = extractvalue {%..string*, i64} %320, 0
	%328 = getelementptr inbounds %..string, %..string* %327, i64 %326
	%329 = load %..string, %..string* %328, align 8
	store %..string %329, %..string* %33
	store i64 %326, i64* %34
	; IfStmt
	%330 = load i64, i64* %34, align 8
	%331 = icmp sgt i64 %330, 0
	br i1 %331, label %if.then-97, label %if.done-98

if.then-97:
	%332 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %332, %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$68, i64 0, i32 0), i64 2}, %Context* noalias nonnull %__.context_ptr)
	br label %if.done-98

if.done-98:
	%333 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	%334 = load %..string, %..string* %33, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %333, %..string %334, %Context* noalias nonnull %__.context_ptr)
	%335 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %335, %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$69, i64 0, i32 0), i64 2}, %Context* noalias nonnull %__.context_ptr)
	%336 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	; IndexExpr
	; SelectorExpr
	%337 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %32, i64 0, i32 0
	%338 = load {%Type_Info**, i64}, {%Type_Info**, i64}* %337, align 8
	%339 = extractvalue {%Type_Info**, i64} %338, 0
	%340 = load i64, i64* %34, align 8
	%341 = extractvalue {%Type_Info**, i64} %338, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$6a, i64 0, i32 0), i64 28}, i64 274, i64 31, i64 %340, i64 %341)
	%342 = getelementptr inbounds %Type_Info*, %Type_Info** %339, i64 %340
	%343 = load %Type_Info*, %Type_Info** %342, align 8
	call void @fmt-4.write_type({i8*, i64, i64, %Allocator}* %336, %Type_Info* %343, %Context* noalias nonnull %__.context_ptr)
	br label %for.index.loop-95

for.index.done-99:
	%344 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	call void @fmt-4.write_byte({i8*, i64, i64, %Allocator}* %344, i8 125, %Context* noalias nonnull %__.context_ptr)
	br label %typeswitch.done-123

typeswitch.next-100:
	%345 = icmp eq i8 %60, 18
	br i1 %345, label %typeswitch.body-108, label %typeswitch.next-107

typeswitch.body-101:
	%346 = bitcast %..rawptr %61 to %Type_Info_Union*
	%347 = load %Type_Info_Union, %Type_Info_Union* %346, align 8
	store %Type_Info_Union %347, %Type_Info_Union* %37
	%348 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %348, %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$6b, i64 0, i32 0), i64 7}, %Context* noalias nonnull %__.context_ptr)
	; RangeStmt
	; variant
	store %Type_Info* zeroinitializer, %Type_Info** %38
		; i
	store i64 zeroinitializer, i64* %39
		; SelectorExpr
	%349 = getelementptr inbounds %Type_Info_Union, %Type_Info_Union* %37, i64 0, i32 0
	%350 = load {%Type_Info**, i64}, {%Type_Info**, i64}* %349, align 8
	store i64 zeroinitializer, i64* %40
	%351 = extractvalue {%Type_Info**, i64} %350, 1
	store i64 %351, i64* %40
	store i64 zeroinitializer, i64* %41
	store i64 -1, i64* %41
	br label %for.index.loop-102

for.index.loop-102:
	%352 = load i64, i64* %41, align 8
	%353 = add i64 %352, 1
	store i64 %353, i64* %41
	%354 = load i64, i64* %40, align 8
	%355 = icmp slt i64 %353, %354
	br i1 %355, label %for.index.body-103, label %for.index.done-106

for.index.body-103:
	%356 = load i64, i64* %41, align 8
	%357 = extractvalue {%Type_Info**, i64} %350, 0
	%358 = getelementptr inbounds %Type_Info*, %Type_Info** %357, i64 %356
	%359 = load %Type_Info*, %Type_Info** %358, align 8
	store %Type_Info* %359, %Type_Info** %38
	store i64 %356, i64* %39
	; IfStmt
	%360 = load i64, i64* %39, align 8
	%361 = icmp sgt i64 %360, 0
	br i1 %361, label %if.then-104, label %if.done-105

if.then-104:
	%362 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %362, %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$6c, i64 0, i32 0), i64 2}, %Context* noalias nonnull %__.context_ptr)
	br label %if.done-105

if.done-105:
	%363 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	%364 = load %Type_Info*, %Type_Info** %38, align 8
	call void @fmt-4.write_type({i8*, i64, i64, %Allocator}* %363, %Type_Info* %364, %Context* noalias nonnull %__.context_ptr)
	br label %for.index.loop-102

for.index.done-106:
	%365 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %365, %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$6d, i64 0, i32 0), i64 1}, %Context* noalias nonnull %__.context_ptr)
	br label %typeswitch.done-123

typeswitch.next-107:
	%366 = icmp eq i8 %60, 20
	br i1 %366, label %typeswitch.body-115, label %typeswitch.next-114

typeswitch.body-108:
	%367 = bitcast %..rawptr %61 to %Type_Info_Enum*
	%368 = load %Type_Info_Enum, %Type_Info_Enum* %367, align 8
	store %Type_Info_Enum %368, %Type_Info_Enum* %42
	%369 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %369, %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$6e, i64 0, i32 0), i64 5}, %Context* noalias nonnull %__.context_ptr)
	%370 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	; SelectorExpr
	%371 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %42, i64 0, i32 0
	%372 = load %Type_Info*, %Type_Info** %371, align 8
	call void @fmt-4.write_type({i8*, i64, i64, %Allocator}* %370, %Type_Info* %372, %Context* noalias nonnull %__.context_ptr)
	%373 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %373, %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$6f, i64 0, i32 0), i64 2}, %Context* noalias nonnull %__.context_ptr)
	; RangeStmt
	; name
	store %..string zeroinitializer, %..string* %43
		; i
	store i64 zeroinitializer, i64* %44
		; SelectorExpr
	%374 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %42, i64 0, i32 1
	%375 = load {%..string*, i64}, {%..string*, i64}* %374, align 8
	store i64 zeroinitializer, i64* %45
	%376 = extractvalue {%..string*, i64} %375, 1
	store i64 %376, i64* %45
	store i64 zeroinitializer, i64* %46
	store i64 -1, i64* %46
	br label %for.index.loop-109

for.index.loop-109:
	%377 = load i64, i64* %46, align 8
	%378 = add i64 %377, 1
	store i64 %378, i64* %46
	%379 = load i64, i64* %45, align 8
	%380 = icmp slt i64 %378, %379
	br i1 %380, label %for.index.body-110, label %for.index.done-113

for.index.body-110:
	%381 = load i64, i64* %46, align 8
	%382 = extractvalue {%..string*, i64} %375, 0
	%383 = getelementptr inbounds %..string, %..string* %382, i64 %381
	%384 = load %..string, %..string* %383, align 8
	store %..string %384, %..string* %43
	store i64 %381, i64* %44
	; IfStmt
	%385 = load i64, i64* %44, align 8
	%386 = icmp sgt i64 %385, 0
	br i1 %386, label %if.then-111, label %if.done-112

if.then-111:
	%387 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %387, %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$70, i64 0, i32 0), i64 2}, %Context* noalias nonnull %__.context_ptr)
	br label %if.done-112

if.done-112:
	%388 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	%389 = load %..string, %..string* %43, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %388, %..string %389, %Context* noalias nonnull %__.context_ptr)
	br label %for.index.loop-109

for.index.done-113:
	%390 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %390, %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$71, i64 0, i32 0), i64 1}, %Context* noalias nonnull %__.context_ptr)
	br label %typeswitch.done-123

typeswitch.next-114:
	br label %typeswitch.done-123

typeswitch.body-115:
	%391 = bitcast %..rawptr %61 to %Type_Info_Bit_Field*
	%392 = load %Type_Info_Bit_Field, %Type_Info_Bit_Field* %391, align 8
	store %Type_Info_Bit_Field %392, %Type_Info_Bit_Field* %47
	%393 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %393, %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$72, i64 0, i32 0), i64 10}, %Context* noalias nonnull %__.context_ptr)
	; IfStmt
	; SelectorExpr
	%394 = load %Type_Info*, %Type_Info** %1, align 8
	%395 = getelementptr inbounds %Type_Info, %Type_Info* %394, i64 0
	%396 = getelementptr inbounds %Type_Info, %Type_Info* %395, i64 0, i32 1
	%397 = load i64, i64* %396, align 8
	%398 = icmp ne i64 %397, 1
	br i1 %398, label %if.then-116, label %if.done-117

if.then-116:
	%399 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %399, %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$73, i64 0, i32 0), i64 7}, %Context* noalias nonnull %__.context_ptr)
	%400 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	; SelectorExpr
	%401 = load %Type_Info*, %Type_Info** %1, align 8
	%402 = getelementptr inbounds %Type_Info, %Type_Info* %401, i64 0
	%403 = getelementptr inbounds %Type_Info, %Type_Info* %402, i64 0, i32 1
	%404 = load i64, i64* %403, align 8
	%405 = bitcast i64 %404 to i64
	call void @fmt-4.write_int-222({i8*, i64, i64, %Allocator}* %400, i64 %405, i64 10, %Context* noalias nonnull %__.context_ptr)
	%406 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	call void @fmt-4.write_rune({i8*, i64, i64, %Allocator}* %406, i32 32, %Context* noalias nonnull %__.context_ptr)
	br label %if.done-117

if.done-117:
	%407 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %407, %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$74, i64 0, i32 0), i64 2}, %Context* noalias nonnull %__.context_ptr)
	; RangeStmt
	; name
	store %..string zeroinitializer, %..string* %48
		; i
	store i64 zeroinitializer, i64* %49
		; SelectorExpr
	%408 = getelementptr inbounds %Type_Info_Bit_Field, %Type_Info_Bit_Field* %47, i64 0, i32 0
	%409 = load {%..string*, i64}, {%..string*, i64}* %408, align 8
	store i64 zeroinitializer, i64* %50
	%410 = extractvalue {%..string*, i64} %409, 1
	store i64 %410, i64* %50
	store i64 zeroinitializer, i64* %51
	store i64 -1, i64* %51
	br label %for.index.loop-118

for.index.loop-118:
	%411 = load i64, i64* %51, align 8
	%412 = add i64 %411, 1
	store i64 %412, i64* %51
	%413 = load i64, i64* %50, align 8
	%414 = icmp slt i64 %412, %413
	br i1 %414, label %for.index.body-119, label %for.index.done-122

for.index.body-119:
	%415 = load i64, i64* %51, align 8
	%416 = extractvalue {%..string*, i64} %409, 0
	%417 = getelementptr inbounds %..string, %..string* %416, i64 %415
	%418 = load %..string, %..string* %417, align 8
	store %..string %418, %..string* %48
	store i64 %415, i64* %49
	; IfStmt
	%419 = load i64, i64* %49, align 8
	%420 = icmp sgt i64 %419, 0
	br i1 %420, label %if.then-120, label %if.done-121

if.then-120:
	%421 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %421, %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$75, i64 0, i32 0), i64 2}, %Context* noalias nonnull %__.context_ptr)
	br label %if.done-121

if.done-121:
	%422 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	%423 = load %..string, %..string* %48, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %422, %..string %423, %Context* noalias nonnull %__.context_ptr)
	%424 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %424, %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$76, i64 0, i32 0), i64 2}, %Context* noalias nonnull %__.context_ptr)
	%425 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	; IndexExpr
	; SelectorExpr
	%426 = getelementptr inbounds %Type_Info_Bit_Field, %Type_Info_Bit_Field* %47, i64 0, i32 1
	%427 = load {i32*, i64}, {i32*, i64}* %426, align 8
	%428 = extractvalue {i32*, i64} %427, 0
	%429 = load i64, i64* %49, align 8
	%430 = extractvalue {i32*, i64} %427, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$77, i64 0, i32 0), i64 28}, i64 308, i64 33, i64 %429, i64 %430)
	%431 = getelementptr inbounds i32, i32* %428, i64 %429
	%432 = load i32, i32* %431, align 4
	%433 = sext i32 %432 to i64
	call void @fmt-4.write_int-222({i8*, i64, i64, %Allocator}* %425, i64 %433, i64 10, %Context* noalias nonnull %__.context_ptr)
	br label %for.index.loop-118

for.index.done-122:
	%434 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %434, %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$78, i64 0, i32 0), i64 1}, %Context* noalias nonnull %__.context_ptr)
	br label %typeswitch.done-123

typeswitch.done-123:
	ret void
}

define {i64, i64, i1} @fmt-4._parse_int(%..string %s, i64 %offset, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca %..string, align 8
	%1 = alloca i64, align 8
	%2 = alloca i64, align 8
	%3 = alloca i1, align 1
	%4 = alloca i64, align 8
	%5 = alloca %..string, align 8
	%6 = alloca i32, align 4
	%7 = alloca {i64, i64, i1}, align 8
		store %..string %s, %..string* %0
		store i64 %offset, i64* %1
	; result
		store i64 0, i64* %2
	; ok
		store i1 true, i1* %3
	; i
		store i64 0, i64* %4
	; ForStmt
	br label %for.loop-1

for.loop-1:
	%8 = load i64, i64* %4, align 8
	; SliceExpr
	%9 = load i64, i64* %1, align 8
	%10 = load %..string, %..string* %0, align 8
	%11 = extractvalue %..string %10, 1
	call void @__substring_expr_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$79, i64 0, i32 0), i64 28}, i64 324, i64 15, i64 %9, i64 %11)
	%12 = extractvalue %..string %10, 0
	%13 = getelementptr inbounds i8, i8* %12, i64 %9
	%14 = sub i64 %11, %9
	store %..string zeroinitializer, %..string* %5
	%15 = getelementptr inbounds %..string, %..string* %5, i64 0, i32 0
	store i8* %13, i8** %15
	%16 = getelementptr inbounds %..string, %..string* %5, i64 0, i32 1
	store i64 %14, i64* %16
	%17 = load %..string, %..string* %5, align 8
	%18 = extractvalue %..string %17, 1
	%19 = icmp slt i64 %8, %18
	br i1 %19, label %for.body-2, label %for.done-5

for.body-2:
	; c
		; IndexExpr
	%20 = load %..string, %..string* %0, align 8
	%21 = extractvalue %..string %20, 0
	%22 = extractvalue %..string %20, 1
	%23 = load i64, i64* %1, align 8
	%24 = load i64, i64* %4, align 8
	%25 = add i64 %23, %24
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$7a, i64 0, i32 0), i64 28}, i64 325, i64 15, i64 %25, i64 %22)
	%26 = getelementptr inbounds i8, i8* %21, i64 %25
	%27 = load i8, i8* %26, align 1
	%28 = zext i8 %27 to i32
	store i32 %28, i32* %6
	; IfStmt
	%29 = load i32, i32* %6, align 4
	%30 = call i1 @fmt-4._parse_int.is_digit-0(i32 %29, %Context* noalias nonnull %__.context_ptr)
	br i1 %30, label %if.done-4, label %if.then-3

if.then-3:
	; break
	br label %for.done-5

if.done-4:
	; AssignStmt
	%31 = load i64, i64* %4, align 8
	%32 = add i64 %31, 1
	store i64 %32, i64* %4
	; AssignStmt
	%33 = load i64, i64* %2, align 8
	%34 = mul i64 %33, 10
	store i64 %34, i64* %2
	; AssignStmt
	%35 = load i32, i32* %6, align 4
	%36 = sext i32 %35 to i64
	%37 = sub i64 %36, 48
	%38 = load i64, i64* %2, align 8
	%39 = add i64 %38, %37
	store i64 %39, i64* %2
	br label %for.loop-1

for.done-5:
	; ReturnStmt
	%40 = load i64, i64* %2, align 8
	%41 = load i64, i64* %1, align 8
	%42 = load i64, i64* %4, align 8
	%43 = add i64 %41, %42
	%44 = load i64, i64* %4, align 8
	%45 = icmp ne i64 %44, 0
	store {i64, i64, i1} zeroinitializer, {i64, i64, i1}* %7
	%46 = getelementptr inbounds {i64, i64, i1}, {i64, i64, i1}* %7, i64 0, i32 0
	store i64 %40, i64* %46
	%47 = getelementptr inbounds {i64, i64, i1}, {i64, i64, i1}* %7, i64 0, i32 1
	store i64 %43, i64* %47
	%48 = getelementptr inbounds {i64, i64, i1}, {i64, i64, i1}* %7, i64 0, i32 2
	store i1 %45, i1* %48
	%49 = load {i64, i64, i1}, {i64, i64, i1}* %7, align 8
	ret {i64, i64, i1} %49
}

define i1 @fmt-4._parse_int.is_digit-0(i32 %r, %Context* noalias nonnull %__.context_ptr) alwaysinline #1 {
decls-0:
	%0 = alloca i32, align 4
		store i32 %r, i32* %0
	; ReturnStmt
	%1 = load i32, i32* %0, align 4
	%2 = icmp sle i32 48, %1
	%3 = load i32, i32* %0, align 4
	%4 = icmp sle i32 48, %3
	br i1 %4, label %logical.cmp.rhs-1, label %logical.cmp.done-2

logical.cmp.rhs-1:
	%5 = load i32, i32* %0, align 4
	%6 = icmp sle i32 %5, 57
	br label %logical.cmp.done-2

logical.cmp.done-2:
	%7 = phi i1 [ false, %decls-0 ], [ %6, %logical.cmp.rhs-1 ]
	ret i1 %7
}

define {i64, i64, i1} @fmt-4._arg_number(%fmt-4.Fmt_Info* %fi, i64 %arg_index, %..string %format, i64 %offset, i64 %arg_count, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca %fmt-4.Fmt_Info*, align 8
	%1 = alloca i64, align 8
	%2 = alloca %..string, align 8
	%3 = alloca i64, align 8
	%4 = alloca i64, align 8
	%5 = alloca {i64, i64, i1}, align 8
	%6 = alloca i64, align 8
	%7 = alloca i64, align 8
	%8 = alloca i1, align 1
	%9 = alloca %..string, align 8
	%10 = alloca {i64, i64, i1}, align 8
	%11 = alloca {i64, i64, i1}, align 8
		store %fmt-4.Fmt_Info* %fi, %fmt-4.Fmt_Info** %0
		store i64 %arg_index, i64* %1
		store %..string %format, %..string* %2
		store i64 %offset, i64* %3
		store i64 %arg_count, i64* %4
	; IfStmt
	%12 = load %..string, %..string* %2, align 8
	%13 = extractvalue %..string %12, 1
	%14 = load i64, i64* %3, align 8
	%15 = icmp sle i64 %13, %14
	br i1 %15, label %if.then-2, label %cmp.or-1

cmp.or-1:
	; IndexExpr
	%16 = load %..string, %..string* %2, align 8
	%17 = extractvalue %..string %16, 0
	%18 = extractvalue %..string %16, 1
	%19 = load i64, i64* %3, align 8
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$7b, i64 0, i32 0), i64 28}, i64 354, i64 37, i64 %19, i64 %18)
	%20 = getelementptr inbounds i8, i8* %17, i64 %19
	%21 = load i8, i8* %20, align 1
	%22 = icmp ne i8 %21, 91
	br i1 %22, label %if.then-2, label %if.done-3

if.then-2:
	; ReturnStmt
	%23 = load i64, i64* %1, align 8
	%24 = load i64, i64* %3, align 8
	store {i64, i64, i1} zeroinitializer, {i64, i64, i1}* %5
	%25 = getelementptr inbounds {i64, i64, i1}, {i64, i64, i1}* %5, i64 0, i32 0
	store i64 %23, i64* %25
	%26 = getelementptr inbounds {i64, i64, i1}, {i64, i64, i1}* %5, i64 0, i32 1
	store i64 %24, i64* %26
	%27 = getelementptr inbounds {i64, i64, i1}, {i64, i64, i1}* %5, i64 0, i32 2
	store i1 false, i1* %27
	%28 = load {i64, i64, i1}, {i64, i64, i1}* %5, align 8
	ret {i64, i64, i1} %28

if.done-3:
	; AssignStmt
	; SelectorExpr
	%29 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%30 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %29, i64 0
	%31 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %30, i64 0, i32 12
	store i1 true, i1* %31
	; index
		; width
		; ok
		; SliceExpr
	%32 = load i64, i64* %3, align 8
	%33 = load %..string, %..string* %2, align 8
	%34 = extractvalue %..string %33, 1
	call void @__substring_expr_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$7c, i64 0, i32 0), i64 28}, i64 358, i64 45, i64 %32, i64 %34)
	%35 = extractvalue %..string %33, 0
	%36 = getelementptr inbounds i8, i8* %35, i64 %32
	%37 = sub i64 %34, %32
	store %..string zeroinitializer, %..string* %9
	%38 = getelementptr inbounds %..string, %..string* %9, i64 0, i32 0
	store i8* %36, i8** %38
	%39 = getelementptr inbounds %..string, %..string* %9, i64 0, i32 1
	store i64 %37, i64* %39
	%40 = load %..string, %..string* %9, align 8
	%41 = call {i64, i64, i1} @fmt-4._arg_number.parse_arg_number-0(%..string %40, %Context* noalias nonnull %__.context_ptr)
	%42 = extractvalue {i64, i64, i1} %41, 0
	%43 = extractvalue {i64, i64, i1} %41, 1
	%44 = extractvalue {i64, i64, i1} %41, 2
	store i64 %42, i64* %6
	store i64 %43, i64* %7
	store i1 %44, i1* %8
	; IfStmt
	%45 = load i1, i1* %8, align 1
	br i1 %45, label %cmp.and-4, label %if.done-7

cmp.and-4:
	%46 = load i64, i64* %6, align 8
	%47 = icmp sle i64 0, %46
	br i1 %47, label %cmp.and-5, label %if.done-7

cmp.and-5:
	%48 = load i64, i64* %6, align 8
	%49 = load i64, i64* %4, align 8
	%50 = icmp slt i64 %48, %49
	br i1 %50, label %if.then-6, label %if.done-7

if.then-6:
	; ReturnStmt
	%51 = load i64, i64* %6, align 8
	%52 = load i64, i64* %3, align 8
	%53 = load i64, i64* %7, align 8
	%54 = add i64 %52, %53
	store {i64, i64, i1} zeroinitializer, {i64, i64, i1}* %10
	%55 = getelementptr inbounds {i64, i64, i1}, {i64, i64, i1}* %10, i64 0, i32 0
	store i64 %51, i64* %55
	%56 = getelementptr inbounds {i64, i64, i1}, {i64, i64, i1}* %10, i64 0, i32 1
	store i64 %54, i64* %56
	%57 = getelementptr inbounds {i64, i64, i1}, {i64, i64, i1}* %10, i64 0, i32 2
	store i1 true, i1* %57
	%58 = load {i64, i64, i1}, {i64, i64, i1}* %10, align 8
	ret {i64, i64, i1} %58

if.done-7:
	; AssignStmt
	; SelectorExpr
	%59 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%60 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %59, i64 0
	%61 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %60, i64 0, i32 13
	store i1 false, i1* %61
	; ReturnStmt
	%62 = load i64, i64* %1, align 8
	%63 = load i64, i64* %3, align 8
	%64 = load i64, i64* %7, align 8
	%65 = add i64 %63, %64
	store {i64, i64, i1} zeroinitializer, {i64, i64, i1}* %11
	%66 = getelementptr inbounds {i64, i64, i1}, {i64, i64, i1}* %11, i64 0, i32 0
	store i64 %62, i64* %66
	%67 = getelementptr inbounds {i64, i64, i1}, {i64, i64, i1}* %11, i64 0, i32 1
	store i64 %65, i64* %67
	%68 = getelementptr inbounds {i64, i64, i1}, {i64, i64, i1}* %11, i64 0, i32 2
	store i1 false, i1* %68
	%69 = load {i64, i64, i1}, {i64, i64, i1}* %11, align 8
	ret {i64, i64, i1} %69
}

define {i64, i64, i1} @fmt-4._arg_number.parse_arg_number-0(%..string %format, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca %..string, align 8
	%1 = alloca {i64, i64, i1}, align 8
	%2 = alloca i64, align 8
	%3 = alloca i64, align 8
	%4 = alloca i64, align 8
	%5 = alloca i64, align 8
	%6 = alloca i64, align 8
	%7 = alloca i1, align 1
	%8 = alloca {i64, i64, i1}, align 8
	%9 = alloca {i64, i64, i1}, align 8
	%10 = alloca {i64, i64, i1}, align 8
		store %..string %format, %..string* %0
	; IfStmt
	%11 = load %..string, %..string* %0, align 8
	%12 = extractvalue %..string %11, 1
	%13 = icmp slt i64 %12, 3
	br i1 %13, label %if.then-1, label %if.done-2

if.then-1:
	; ReturnStmt
	store {i64, i64, i1} zeroinitializer, {i64, i64, i1}* %1
	%14 = getelementptr inbounds {i64, i64, i1}, {i64, i64, i1}* %1, i64 0, i32 0
	store i64 0, i64* %14
	%15 = getelementptr inbounds {i64, i64, i1}, {i64, i64, i1}* %1, i64 0, i32 1
	store i64 1, i64* %15
	%16 = getelementptr inbounds {i64, i64, i1}, {i64, i64, i1}* %1, i64 0, i32 2
	store i1 false, i1* %16
	%17 = load {i64, i64, i1}, {i64, i64, i1}* %1, align 8
	ret {i64, i64, i1} %17

if.done-2:
	; RangeStmt
	; i
	store i64 zeroinitializer, i64* %2
		store i64 zeroinitializer, i64* %3
	store i64 1, i64* %3
	store i64 zeroinitializer, i64* %4
	store i64 0, i64* %4
	br label %for.interval.loop-3

for.interval.loop-3:
	%18 = load %..string, %..string* %0, align 8
	%19 = extractvalue %..string %18, 1
	%20 = load i64, i64* %3, align 8
	%21 = icmp sle i64 %20, %19
	br i1 %21, label %for.interval.body-4, label %for.interval.done-10

for.interval.body-4:
	%22 = load i64, i64* %3, align 8
	%23 = load i64, i64* %4, align 8
	%24 = load i64, i64* %3, align 8
	%25 = add i64 %24, 1
	store i64 %25, i64* %3
	%26 = load i64, i64* %4, align 8
	%27 = add i64 %26, 1
	store i64 %27, i64* %4
	store i64 %22, i64* %2
	; IfStmt
	; IndexExpr
	%28 = load %..string, %..string* %0, align 8
	%29 = extractvalue %..string %28, 0
	%30 = extractvalue %..string %28, 1
	%31 = load i64, i64* %2, align 8
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$7d, i64 0, i32 0), i64 28}, i64 341, i64 14, i64 %31, i64 %30)
	%32 = getelementptr inbounds i8, i8* %29, i64 %31
	%33 = load i8, i8* %32, align 1
	%34 = icmp eq i8 %33, 93
	br i1 %34, label %if.then-5, label %if.done-9

if.then-5:
	; width
		; new_index
		; ok
		%35 = load %..string, %..string* %0, align 8
	%36 = call {i64, i64, i1} @fmt-4._parse_int(%..string %35, i64 1, %Context* noalias nonnull %__.context_ptr)
	%37 = extractvalue {i64, i64, i1} %36, 0
	%38 = extractvalue {i64, i64, i1} %36, 1
	%39 = extractvalue {i64, i64, i1} %36, 2
	store i64 %37, i64* %5
	store i64 %38, i64* %6
	store i1 %39, i1* %7
	; IfStmt
	%40 = load i1, i1* %7, align 1
	br i1 %40, label %cmp.or-6, label %if.then-7

cmp.or-6:
	%41 = load i64, i64* %6, align 8
	%42 = load i64, i64* %2, align 8
	%43 = icmp ne i64 %41, %42
	br i1 %43, label %if.then-7, label %if.done-8

if.then-7:
	; ReturnStmt
	%44 = load i64, i64* %2, align 8
	%45 = add i64 %44, 1
	store {i64, i64, i1} zeroinitializer, {i64, i64, i1}* %8
	%46 = getelementptr inbounds {i64, i64, i1}, {i64, i64, i1}* %8, i64 0, i32 0
	store i64 0, i64* %46
	%47 = getelementptr inbounds {i64, i64, i1}, {i64, i64, i1}* %8, i64 0, i32 1
	store i64 %45, i64* %47
	%48 = getelementptr inbounds {i64, i64, i1}, {i64, i64, i1}* %8, i64 0, i32 2
	store i1 false, i1* %48
	%49 = load {i64, i64, i1}, {i64, i64, i1}* %8, align 8
	ret {i64, i64, i1} %49

if.done-8:
	; ReturnStmt
	%50 = load i64, i64* %5, align 8
	%51 = sub i64 %50, 1
	%52 = load i64, i64* %2, align 8
	%53 = add i64 %52, 1
	store {i64, i64, i1} zeroinitializer, {i64, i64, i1}* %9
	%54 = getelementptr inbounds {i64, i64, i1}, {i64, i64, i1}* %9, i64 0, i32 0
	store i64 %51, i64* %54
	%55 = getelementptr inbounds {i64, i64, i1}, {i64, i64, i1}* %9, i64 0, i32 1
	store i64 %53, i64* %55
	%56 = getelementptr inbounds {i64, i64, i1}, {i64, i64, i1}* %9, i64 0, i32 2
	store i1 true, i1* %56
	%57 = load {i64, i64, i1}, {i64, i64, i1}* %9, align 8
	ret {i64, i64, i1} %57

if.done-9:
	br label %for.interval.loop-3

for.interval.done-10:
	; ReturnStmt
	store {i64, i64, i1} zeroinitializer, {i64, i64, i1}* %10
	%58 = getelementptr inbounds {i64, i64, i1}, {i64, i64, i1}* %10, i64 0, i32 0
	store i64 0, i64* %58
	%59 = getelementptr inbounds {i64, i64, i1}, {i64, i64, i1}* %10, i64 0, i32 1
	store i64 1, i64* %59
	%60 = getelementptr inbounds {i64, i64, i1}, {i64, i64, i1}* %10, i64 0, i32 2
	store i1 false, i1* %60
	%61 = load {i64, i64, i1}, {i64, i64, i1}* %10, align 8
	ret {i64, i64, i1} %61
}

define {i64, i64, i1} @fmt-4.int_from_arg({%..any*, i64}* %args, i64 %arg_index, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca i64, align 8
	%1 = alloca i64, align 8
	%2 = alloca i64, align 8
	%3 = alloca i1, align 1
	%4 = alloca %..any, align 8
	%5 = alloca i64, align 8
	%6 = alloca i8, align 1
	%7 = alloca i16, align 2
	%8 = alloca i32, align 4
	%9 = alloca i64, align 8
	%10 = alloca i8, align 1
	%11 = alloca i16, align 2
	%12 = alloca i32, align 4
	%13 = alloca i64, align 8
	%14 = alloca %..any, align 8
	%15 = alloca {i64, i64, i1}, align 8
	%16 = load {%..any*, i64}, {%..any*, i64}* %args, align 8
		store i64 %arg_index, i64* %0
	; num
		store i64 0, i64* %1
	; new_arg_index
		%17 = load i64, i64* %0, align 8
	store i64 %17, i64* %2
	; ok
		store i1 true, i1* %3
	; IfStmt
	%18 = load i64, i64* %0, align 8
	%19 = load {%..any*, i64}, {%..any*, i64}* %args, align 8
	%20 = extractvalue {%..any*, i64} %19, 1
	%21 = icmp slt i64 %18, %20
	br i1 %21, label %if.then-1, label %if.done-21

if.then-1:
	; arg
		; IndexExpr
	%22 = load {%..any*, i64}, {%..any*, i64}* %args, align 8
	%23 = extractvalue {%..any*, i64} %22, 0
	%24 = load i64, i64* %0, align 8
	%25 = extractvalue {%..any*, i64} %22, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$7e, i64 0, i32 0), i64 28}, i64 371, i64 15, i64 %24, i64 %25)
	%26 = getelementptr inbounds %..any, %..any* %23, i64 %24
	%27 = load %..any, %..any* %26, align 8
	store %..any %27, %..any* %4
	; AssignStmt
	; SelectorExpr
	%28 = getelementptr inbounds %..any, %..any* %4, i64 0, i32 1
	; SelectorExpr
	%29 = getelementptr inbounds %..any, %..any* %4, i64 0, i32 1
	%30 = load %Type_Info*, %Type_Info** %29, align 8
	%31 = call %Type_Info* @type_info_base(%Type_Info* %30, %Context* noalias nonnull %__.context_ptr)
	store %Type_Info* %31, %Type_Info** %28
	; TypeSwitchStmt
	%32 = load %..any, %..any* %4, align 8
	%33 = getelementptr inbounds %..any, %..any* %4, i64 0, i32 1
	%34 = load %Type_Info*, %Type_Info** %33, align 8
	%35 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%36 = icmp eq %Type_Info* %34, %35
	br i1 %36, label %typeswitch.body-3, label %typeswitch.next-2

typeswitch.next-2:
	%37 = getelementptr inbounds %..any, %..any* %4, i64 0, i32 1
	%38 = load %Type_Info*, %Type_Info** %37, align 8
	%39 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 54
	%40 = icmp eq %Type_Info* %38, %39
	br i1 %40, label %typeswitch.body-5, label %typeswitch.next-4

typeswitch.body-3:
	%41 = getelementptr inbounds %..any, %..any* %4, i64 0, i32 0
	%42 = load %..rawptr, %..rawptr* %41, align 8
	%43 = bitcast %..rawptr %42 to i64*
	%44 = load i64, i64* %43, align 8
	store i64 %44, i64* %5
	; AssignStmt
	%45 = load i64, i64* %5, align 8
	store i64 %45, i64* %1
	br label %typeswitch.done-20

typeswitch.next-4:
	%46 = getelementptr inbounds %..any, %..any* %4, i64 0, i32 1
	%47 = load %Type_Info*, %Type_Info** %46, align 8
	%48 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 55
	%49 = icmp eq %Type_Info* %47, %48
	br i1 %49, label %typeswitch.body-7, label %typeswitch.next-6

typeswitch.body-5:
	%50 = getelementptr inbounds %..any, %..any* %4, i64 0, i32 0
	%51 = load %..rawptr, %..rawptr* %50, align 8
	%52 = bitcast %..rawptr %51 to i8*
	%53 = load i8, i8* %52, align 1
	store i8 %53, i8* %6
	; AssignStmt
	%54 = load i8, i8* %6, align 1
	%55 = sext i8 %54 to i64
	store i64 %55, i64* %1
	br label %typeswitch.done-20

typeswitch.next-6:
	%56 = getelementptr inbounds %..any, %..any* %4, i64 0, i32 1
	%57 = load %Type_Info*, %Type_Info** %56, align 8
	%58 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	%59 = icmp eq %Type_Info* %57, %58
	br i1 %59, label %typeswitch.body-9, label %typeswitch.next-8

typeswitch.body-7:
	%60 = getelementptr inbounds %..any, %..any* %4, i64 0, i32 0
	%61 = load %..rawptr, %..rawptr* %60, align 8
	%62 = bitcast %..rawptr %61 to i16*
	%63 = load i16, i16* %62, align 2
	store i16 %63, i16* %7
	; AssignStmt
	%64 = load i16, i16* %7, align 2
	%65 = sext i16 %64 to i64
	store i64 %65, i64* %1
	br label %typeswitch.done-20

typeswitch.next-8:
	%66 = getelementptr inbounds %..any, %..any* %4, i64 0, i32 1
	%67 = load %Type_Info*, %Type_Info** %66, align 8
	%68 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 57
	%69 = icmp eq %Type_Info* %67, %68
	br i1 %69, label %typeswitch.body-11, label %typeswitch.next-10

typeswitch.body-9:
	%70 = getelementptr inbounds %..any, %..any* %4, i64 0, i32 0
	%71 = load %..rawptr, %..rawptr* %70, align 8
	%72 = bitcast %..rawptr %71 to i32*
	%73 = load i32, i32* %72, align 4
	store i32 %73, i32* %8
	; AssignStmt
	%74 = load i32, i32* %8, align 4
	%75 = sext i32 %74 to i64
	store i64 %75, i64* %1
	br label %typeswitch.done-20

typeswitch.next-10:
	%76 = getelementptr inbounds %..any, %..any* %4, i64 0, i32 1
	%77 = load %Type_Info*, %Type_Info** %76, align 8
	%78 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	%79 = icmp eq %Type_Info* %77, %78
	br i1 %79, label %typeswitch.body-13, label %typeswitch.next-12

typeswitch.body-11:
	%80 = getelementptr inbounds %..any, %..any* %4, i64 0, i32 0
	%81 = load %..rawptr, %..rawptr* %80, align 8
	%82 = bitcast %..rawptr %81 to i64*
	%83 = load i64, i64* %82, align 8
	store i64 %83, i64* %9
	; AssignStmt
	%84 = load i64, i64* %9, align 8
	%85 = bitcast i64 %84 to i64
	store i64 %85, i64* %1
	br label %typeswitch.done-20

typeswitch.next-12:
	%86 = getelementptr inbounds %..any, %..any* %4, i64 0, i32 1
	%87 = load %Type_Info*, %Type_Info** %86, align 8
	%88 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 59
	%89 = icmp eq %Type_Info* %87, %88
	br i1 %89, label %typeswitch.body-15, label %typeswitch.next-14

typeswitch.body-13:
	%90 = getelementptr inbounds %..any, %..any* %4, i64 0, i32 0
	%91 = load %..rawptr, %..rawptr* %90, align 8
	%92 = bitcast %..rawptr %91 to i8*
	%93 = load i8, i8* %92, align 1
	store i8 %93, i8* %10
	; AssignStmt
	%94 = load i8, i8* %10, align 1
	%95 = zext i8 %94 to i64
	store i64 %95, i64* %1
	br label %typeswitch.done-20

typeswitch.next-14:
	%96 = getelementptr inbounds %..any, %..any* %4, i64 0, i32 1
	%97 = load %Type_Info*, %Type_Info** %96, align 8
	%98 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	%99 = icmp eq %Type_Info* %97, %98
	br i1 %99, label %typeswitch.body-17, label %typeswitch.next-16

typeswitch.body-15:
	%100 = getelementptr inbounds %..any, %..any* %4, i64 0, i32 0
	%101 = load %..rawptr, %..rawptr* %100, align 8
	%102 = bitcast %..rawptr %101 to i16*
	%103 = load i16, i16* %102, align 2
	store i16 %103, i16* %11
	; AssignStmt
	%104 = load i16, i16* %11, align 2
	%105 = zext i16 %104 to i64
	store i64 %105, i64* %1
	br label %typeswitch.done-20

typeswitch.next-16:
	%106 = getelementptr inbounds %..any, %..any* %4, i64 0, i32 1
	%107 = load %Type_Info*, %Type_Info** %106, align 8
	%108 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 61
	%109 = icmp eq %Type_Info* %107, %108
	br i1 %109, label %typeswitch.body-19, label %typeswitch.next-18

typeswitch.body-17:
	%110 = getelementptr inbounds %..any, %..any* %4, i64 0, i32 0
	%111 = load %..rawptr, %..rawptr* %110, align 8
	%112 = bitcast %..rawptr %111 to i32*
	%113 = load i32, i32* %112, align 4
	store i32 %113, i32* %12
	; AssignStmt
	%114 = load i32, i32* %12, align 4
	%115 = zext i32 %114 to i64
	store i64 %115, i64* %1
	br label %typeswitch.done-20

typeswitch.next-18:
	store %..any %32, %..any* %14
	; AssignStmt
	store i1 false, i1* %3
	br label %typeswitch.done-20

typeswitch.body-19:
	%116 = getelementptr inbounds %..any, %..any* %4, i64 0, i32 0
	%117 = load %..rawptr, %..rawptr* %116, align 8
	%118 = bitcast %..rawptr %117 to i64*
	%119 = load i64, i64* %118, align 8
	store i64 %119, i64* %13
	; AssignStmt
	%120 = load i64, i64* %13, align 8
	%121 = bitcast i64 %120 to i64
	store i64 %121, i64* %1
	br label %typeswitch.done-20

typeswitch.done-20:
	br label %if.done-21

if.done-21:
	; ReturnStmt
	%122 = load i64, i64* %1, align 8
	%123 = load i64, i64* %2, align 8
	%124 = load i1, i1* %3, align 1
	store {i64, i64, i1} zeroinitializer, {i64, i64, i1}* %15
	%125 = getelementptr inbounds {i64, i64, i1}, {i64, i64, i1}* %15, i64 0, i32 0
	store i64 %122, i64* %125
	%126 = getelementptr inbounds {i64, i64, i1}, {i64, i64, i1}* %15, i64 0, i32 1
	store i64 %123, i64* %126
	%127 = getelementptr inbounds {i64, i64, i1}, {i64, i64, i1}* %15, i64 0, i32 2
	store i1 %124, i1* %127
	%128 = load {i64, i64, i1}, {i64, i64, i1}* %15, align 8
	ret {i64, i64, i1} %128
}

define void @fmt-4.fmt_bad_verb(%fmt-4.Fmt_Info* %fi, i32 %verb, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca %fmt-4.Fmt_Info*, align 8
	%1 = alloca i32, align 4
	%2 = alloca {%..any*, i64}, align 8
	%3 = alloca {%..any*, i64}, align 16
	%4 = alloca %Source_Code_Location, align 16
		store %fmt-4.Fmt_Info* %fi, %fmt-4.Fmt_Info** %0
		store i32 %verb, i32* %1
	%5 = load i32, i32* %1, align 4
	%6 = icmp ne i32 %5, 118
	; variadic call argument generation
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %2
	%7 = load {%..any*, i64}, {%..any*, i64}* %2, align 8
	%8 = call %Source_Code_Location @make_source_code_location(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$7f, i64 0, i32 0), i64 28}, i64 393, i64 2, %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$80, i64 0, i32 0), i64 12})
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %3
	store {%..any*, i64} %7, {%..any*, i64}* %3
	store %Source_Code_Location zeroinitializer, %Source_Code_Location* %4
	store %Source_Code_Location %8, %Source_Code_Location* %4
	%9 = call i1 @assert(i1 %6, %..string zeroinitializer, {%..any*, i64}* %3, %Source_Code_Location* %4)
	%10 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%11 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %10, i64 0
	%12 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %11, i64 0, i32 4
	%13 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %12, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %13, %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$81, i64 0, i32 0), i64 2}, %Context* noalias nonnull %__.context_ptr)
	%14 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%15 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %14, i64 0
	%16 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %15, i64 0, i32 4
	%17 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %16, align 8
	%18 = load i32, i32* %1, align 4
	call void @fmt-4.write_rune({i8*, i64, i64, %Allocator}* %17, i32 %18, %Context* noalias nonnull %__.context_ptr)
	%19 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%20 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %19, i64 0
	%21 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %20, i64 0, i32 4
	%22 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %21, align 8
	call void @fmt-4.write_byte({i8*, i64, i64, %Allocator}* %22, i8 40, %Context* noalias nonnull %__.context_ptr)
	; IfStmt
	; SelectorExpr
	%23 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%24 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %23, i64 0
	%25 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %24, i64 0, i32 0
	%26 = getelementptr inbounds %..any, %..any* %25, i64 0, i32 1
	%27 = load %Type_Info*, %Type_Info** %26, align 8
	%28 = icmp ne %Type_Info* %27, zeroinitializer
	br i1 %28, label %if.then-1, label %if.else-2

if.then-1:
	%29 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%30 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %29, i64 0
	%31 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %30, i64 0, i32 4
	%32 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %31, align 8
	; SelectorExpr
	%33 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%34 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %33, i64 0
	%35 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %34, i64 0, i32 0
	%36 = getelementptr inbounds %..any, %..any* %35, i64 0, i32 1
	%37 = load %Type_Info*, %Type_Info** %36, align 8
	call void @fmt-4.write_type({i8*, i64, i64, %Allocator}* %32, %Type_Info* %37, %Context* noalias nonnull %__.context_ptr)
	%38 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%39 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %38, i64 0
	%40 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %39, i64 0, i32 4
	%41 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %40, align 8
	call void @fmt-4.write_byte({i8*, i64, i64, %Allocator}* %41, i8 61, %Context* noalias nonnull %__.context_ptr)
	%42 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%43 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%44 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %43, i64 0
	%45 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %44, i64 0, i32 0
	%46 = load %..any, %..any* %45, align 8
	call void @fmt-4.fmt_value(%fmt-4.Fmt_Info* %42, %..any %46, i32 118, %Context* noalias nonnull %__.context_ptr)
	br label %if.done-3

if.else-2:
	%47 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%48 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %47, i64 0
	%49 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %48, i64 0, i32 4
	%50 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %49, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %50, %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$82, i64 0, i32 0), i64 5}, %Context* noalias nonnull %__.context_ptr)
	br label %if.done-3

if.done-3:
	%51 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%52 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %51, i64 0
	%53 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %52, i64 0, i32 4
	%54 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %53, align 8
	call void @fmt-4.write_byte({i8*, i64, i64, %Allocator}* %54, i8 41, %Context* noalias nonnull %__.context_ptr)
	ret void
}

define void @fmt-4.fmt_bool(%fmt-4.Fmt_Info* %fi, i1 %b, i32 %verb, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca %fmt-4.Fmt_Info*, align 8
	%1 = alloca i1, align 1
	%2 = alloca i32, align 4
	%3 = alloca %..string, align 8
		store %fmt-4.Fmt_Info* %fi, %fmt-4.Fmt_Info** %0
		store i1 %b, i1* %1
		store i32 %verb, i32* %2
	; SwitchStmt
	%4 = load i32, i32* %2, align 4
	%5 = icmp eq i32 %4, 116
	br i1 %5, label %switch.case.body-3, label %switch.case.next-1

switch.case.next-1:
	%6 = icmp eq i32 %4, 118
	br i1 %6, label %switch.case.body-3, label %switch.case.next-2

switch.case.next-2:
	%7 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%8 = load i32, i32* %2, align 4
	call void @fmt-4.fmt_bad_verb(%fmt-4.Fmt_Info* %7, i32 %8, %Context* noalias nonnull %__.context_ptr)
	br label %switch.done-6

switch.case.body-3:
	; s
		store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$83, i64 0, i32 0), i64 5}, %..string* %3
	; IfStmt
	%9 = load i1, i1* %1, align 1
	br i1 %9, label %if.then-4, label %if.done-5

if.then-4:
	; AssignStmt
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$84, i64 0, i32 0), i64 4}, %..string* %3
	br label %if.done-5

if.done-5:
	%10 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%11 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %10, i64 0
	%12 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %11, i64 0, i32 4
	%13 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %12, align 8
	%14 = load %..string, %..string* %3, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %13, %..string %14, %Context* noalias nonnull %__.context_ptr)
	br label %switch.done-6

switch.done-6:
	ret void
}

define void @fmt-4.fmt_write_padding(%fmt-4.Fmt_Info* %fi, i64 %width, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca %fmt-4.Fmt_Info*, align 8
	%1 = alloca i64, align 8
	%2 = alloca i8, align 1
	%3 = alloca i64, align 8
	%4 = alloca i64, align 8
		store %fmt-4.Fmt_Info* %fi, %fmt-4.Fmt_Info** %0
		store i64 %width, i64* %1
	; IfStmt
	%5 = load i64, i64* %1, align 8
	%6 = icmp sle i64 %5, 0
	br i1 %6, label %if.then-1, label %if.done-2

if.then-1:
	; ReturnStmt
	ret void

if.done-2:
	; pad_byte
		store i8 48, i8* %2
	; IfStmt
	; SelectorExpr
	%7 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%8 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %7, i64 0
	%9 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %8, i64 0, i32 7
	%10 = load i1, i1* %9, align 1
	br i1 %10, label %if.then-3, label %if.done-4

if.then-3:
	; AssignStmt
	store i8 32, i8* %2
	br label %if.done-4

if.done-4:
	; RangeStmt
	store i64 zeroinitializer, i64* %3
	store i64 0, i64* %3
	store i64 zeroinitializer, i64* %4
	store i64 0, i64* %4
	br label %for.interval.loop-5

for.interval.loop-5:
	%11 = load i64, i64* %1, align 8
	%12 = load i64, i64* %3, align 8
	%13 = icmp slt i64 %12, %11
	br i1 %13, label %for.interval.body-6, label %for.interval.done-7

for.interval.body-6:
	%14 = load i64, i64* %3, align 8
	%15 = load i64, i64* %4, align 8
	%16 = load i64, i64* %3, align 8
	%17 = add i64 %16, 1
	store i64 %17, i64* %3
	%18 = load i64, i64* %4, align 8
	%19 = add i64 %18, 1
	store i64 %19, i64* %4
	; SelectorExpr
	%20 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%21 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %20, i64 0
	%22 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %21, i64 0, i32 4
	%23 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %22, align 8
	%24 = load i8, i8* %2, align 1
	call void @fmt-4.write_byte({i8*, i64, i64, %Allocator}* %23, i8 %24, %Context* noalias nonnull %__.context_ptr)
	br label %for.interval.loop-5

for.interval.done-7:
	ret void
}

define void @fmt-4._fmt_int(%fmt-4.Fmt_Info* %fi, i128* %u, i64 %base, i1 %is_signed, i64 %bit_size, %..string %digits, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca %fmt-4.Fmt_Info*, align 8
	%1 = alloca i64, align 8
	%2 = alloca i1, align 1
	%3 = alloca i64, align 8
	%4 = alloca %..string, align 8
	%5 = alloca i1, align 1
	%6 = alloca i128, align 16
	%7 = alloca i64, align 8
	%8 = alloca {%..any*, i64}, align 8
	%9 = alloca {%..any*, i64}, align 16
	%10 = alloca %Source_Code_Location, align 16
	%11 = alloca i64, align 8
	%12 = alloca i1, align 1
	%13 = alloca {%..any*, i64}, align 8
	%14 = alloca {%..any*, i64}, align 16
	%15 = alloca %Source_Code_Location, align 16
	%16 = alloca [256 x i8], align 1
	%17 = alloca i64, align 8
	%18 = alloca i64, align 8
	%19 = alloca %..string, align 8
	%20 = alloca {i8*, i64}, align 8
	%21 = alloca {i8*, i64}, align 16
	%22 = alloca i128, align 16
	%23 = alloca i8, align 1
	%24 = alloca i1, align 1
		store %fmt-4.Fmt_Info* %fi, %fmt-4.Fmt_Info** %0
	%25 = load i128, i128* %u, align 8
		store i64 %base, i64* %1
		store i1 %is_signed, i1* %2
		store i64 %bit_size, i64* %3
		store %..string %digits, %..string* %4
	; neg
		; SelectorExpr
	%26 = load i128, i128* %u, align 8
	%27 = load i1, i1* %2, align 1
	%28 = load i64, i64* %3, align 8
	store i128 zeroinitializer, i128* %6
	store i128 %26, i128* %6
	%29 = call {i128, i1} @strconv-18.is_integer_negative(i128* %6, i1 %27, i64 %28, %Context* noalias nonnull %__.context_ptr)
	%30 = extractvalue {i128, i1} %29, 0
	%31 = extractvalue {i128, i1} %29, 1
	store i1 %31, i1* %5
	; IfStmt
	; SelectorExpr
	%32 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%33 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %32, i64 0
	%34 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %33, i64 0, i32 10
	%35 = load i1, i1* %34, align 1
	br i1 %35, label %if.then-2, label %cmp.or-1

cmp.or-1:
	; SelectorExpr
	%36 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%37 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %36, i64 0
	%38 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %37, i64 0, i32 11
	%39 = load i1, i1* %38, align 1
	br i1 %39, label %if.then-2, label %if.done-5

if.then-2:
	; width
		; SelectorExpr
	%40 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%41 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %40, i64 0
	%42 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %41, i64 0, i32 1
	%43 = load i64, i64* %42, align 8
	; SelectorExpr
	%44 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%45 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %44, i64 0
	%46 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %45, i64 0, i32 2
	%47 = load i64, i64* %46, align 8
	%48 = add i64 %43, %47
	%49 = add i64 %48, 3
	store i64 %49, i64* %7
	; IfStmt
	%50 = load i64, i64* %7, align 8
	%51 = icmp sgt i64 %50, 256
	br i1 %51, label %if.then-3, label %if.done-4

if.then-3:
	; variadic call argument generation
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %8
	%52 = load {%..any*, i64}, {%..any*, i64}* %8, align 8
	%53 = call %Source_Code_Location @make_source_code_location(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$85, i64 0, i32 0), i64 28}, i64 438, i64 4, %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$86, i64 0, i32 0), i64 8})
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %9
	store {%..any*, i64} %52, {%..any*, i64}* %9
	store %Source_Code_Location zeroinitializer, %Source_Code_Location* %10
	store %Source_Code_Location %53, %Source_Code_Location* %10
	call void @panic(%..string {i8* getelementptr inbounds ([54 x i8], [54 x i8]* @__str$87, i64 0, i32 0), i64 53}, {%..any*, i64}* %9, %Source_Code_Location* %10)
	br label %if.done-4

if.done-4:
	br label %if.done-5

if.done-5:
	; prec
		store i64 0, i64* %11
	; IfStmt
	; SelectorExpr
	%54 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%55 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %54, i64 0
	%56 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %55, i64 0, i32 11
	%57 = load i1, i1* %56, align 1
	br i1 %57, label %if.then-6, label %if.else-10

if.then-6:
	; AssignStmt
	; SelectorExpr
	%58 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%59 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %58, i64 0
	%60 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %59, i64 0, i32 2
	%61 = load i64, i64* %60, align 8
	store i64 %61, i64* %11
	; IfStmt
	%62 = load i64, i64* %11, align 8
	%63 = icmp eq i64 %62, 0
	br i1 %63, label %cmp.and-7, label %if.done-9

cmp.and-7:
	%64 = load i128, i128* %u, align 8
	%65 = icmp eq i128 %64, 0
	br i1 %65, label %if.then-8, label %if.done-9

if.then-8:
	; prev_zero
		; SelectorExpr
	%66 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%67 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %66, i64 0
	%68 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %67, i64 0, i32 8
	%69 = load i1, i1* %68, align 1
	store i1 %69, i1* %12
	; AssignStmt
	; SelectorExpr
	%70 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%71 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %70, i64 0
	%72 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %71, i64 0, i32 8
	store i1 false, i1* %72
	%73 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	; SelectorExpr
	%74 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%75 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %74, i64 0
	%76 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %75, i64 0, i32 1
	%77 = load i64, i64* %76, align 8
	call void @fmt-4.fmt_write_padding(%fmt-4.Fmt_Info* %73, i64 %77, %Context* noalias nonnull %__.context_ptr)
	; AssignStmt
	; SelectorExpr
	%78 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%79 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %78, i64 0
	%80 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %79, i64 0, i32 8
	%81 = load i1, i1* %12, align 1
	store i1 %81, i1* %80
	; ReturnStmt
	ret void

if.done-9:
	br label %if.done-18

if.else-10:
	; IfStmt
	; SelectorExpr
	%82 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%83 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %82, i64 0
	%84 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %83, i64 0, i32 8
	%85 = load i1, i1* %84, align 1
	br i1 %85, label %cmp.and-11, label %if.done-17

cmp.and-11:
	; SelectorExpr
	%86 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%87 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %86, i64 0
	%88 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %87, i64 0, i32 10
	%89 = load i1, i1* %88, align 1
	br i1 %89, label %if.then-12, label %if.done-17

if.then-12:
	; AssignStmt
	; SelectorExpr
	%90 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%91 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %90, i64 0
	%92 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %91, i64 0, i32 1
	%93 = load i64, i64* %92, align 8
	store i64 %93, i64* %11
	; IfStmt
	%94 = load i1, i1* %5, align 1
	br i1 %94, label %if.then-15, label %cmp.or-13

cmp.or-13:
	; SelectorExpr
	%95 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%96 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %95, i64 0
	%97 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %96, i64 0, i32 6
	%98 = load i1, i1* %97, align 1
	br i1 %98, label %if.then-15, label %cmp.or-14

cmp.or-14:
	; SelectorExpr
	%99 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%100 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %99, i64 0
	%101 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %100, i64 0, i32 7
	%102 = load i1, i1* %101, align 1
	br i1 %102, label %if.then-15, label %if.done-16

if.then-15:
	; AssignStmt
	%103 = load i64, i64* %11, align 8
	%104 = sub i64 %103, 1
	store i64 %104, i64* %11
	br label %if.done-16

if.done-16:
	br label %if.done-17

if.done-17:
	br label %if.done-18

if.done-18:
	; SwitchStmt
	%105 = load i64, i64* %1, align 8
	%106 = icmp eq i64 %105, 2
	br i1 %106, label %switch.case.body-24, label %switch.case.next-19

switch.case.next-19:
	%107 = icmp eq i64 %105, 8
	br i1 %107, label %switch.case.body-24, label %switch.case.next-20

switch.case.next-20:
	%108 = icmp eq i64 %105, 10
	br i1 %108, label %switch.case.body-24, label %switch.case.next-21

switch.case.next-21:
	%109 = icmp eq i64 %105, 12
	br i1 %109, label %switch.case.body-24, label %switch.case.next-22

switch.case.next-22:
	%110 = icmp eq i64 %105, 16
	br i1 %110, label %switch.case.body-24, label %switch.case.next-23

switch.case.next-23:
	; variadic call argument generation
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %13
	%111 = load {%..any*, i64}, {%..any*, i64}* %13, align 8
	%112 = call %Source_Code_Location @make_source_code_location(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$88, i64 0, i32 0), i64 28}, i64 464, i64 3, %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$89, i64 0, i32 0), i64 8})
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %14
	store {%..any*, i64} %111, {%..any*, i64}* %14
	store %Source_Code_Location zeroinitializer, %Source_Code_Location* %15
	store %Source_Code_Location %112, %Source_Code_Location* %15
	call void @panic(%..string {i8* getelementptr inbounds ([31 x i8], [31 x i8]* @__str$8a, i64 0, i32 0), i64 30}, {%..any*, i64}* %14, %Source_Code_Location* %15)
	br label %switch.done-25

switch.case.body-24:
	; break
	br label %switch.done-25

switch.done-25:
	; buf
	store [256 x i8] zeroinitializer, [256 x i8]* %16
		; start
		store i64 0, i64* %17
	; flags
	store i64 zeroinitializer, i64* %18
		; IfStmt
	; SelectorExpr
	%113 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%114 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %113, i64 0
	%115 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %114, i64 0, i32 9
	%116 = load i1, i1* %115, align 1
	br i1 %116, label %cmp.and-26, label %if.done-28

cmp.and-26:
	; SelectorExpr
	%117 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%118 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %117, i64 0
	%119 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %118, i64 0, i32 8
	%120 = load i1, i1* %119, align 1
	br i1 %120, label %if.done-28, label %if.then-27

if.then-27:
	; AssignStmt
	%121 = load i64, i64* %18, align 8
	%122 = or i64 %121, 1
	store i64 %122, i64* %18
	br label %if.done-28

if.done-28:
	; IfStmt
	; SelectorExpr
	%123 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%124 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %123, i64 0
	%125 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %124, i64 0, i32 6
	%126 = load i1, i1* %125, align 1
	br i1 %126, label %if.then-29, label %if.done-30

if.then-29:
	; AssignStmt
	%127 = load i64, i64* %18, align 8
	%128 = or i64 %127, 2
	store i64 %128, i64* %18
	br label %if.done-30

if.done-30:
	; IfStmt
	; SelectorExpr
	%129 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%130 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %129, i64 0
	%131 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %130, i64 0, i32 7
	%132 = load i1, i1* %131, align 1
	br i1 %132, label %if.then-31, label %if.done-32

if.then-31:
	; AssignStmt
	%133 = load i64, i64* %18, align 8
	%134 = or i64 %133, 4
	store i64 %134, i64* %18
	br label %if.done-32

if.done-32:
	; s
		; SelectorExpr
	; SliceExpr
	%135 = load i64, i64* %17, align 8
	%136 = load [256 x i8], [256 x i8]* %16, align 1
	call void @__slice_expr_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$8b, i64 0, i32 0), i64 28}, i64 474, i64 30, i64 %135, i64 256)
	%137 = getelementptr inbounds [256 x i8], [256 x i8]* %16, i64 0, i32 0
	%138 = getelementptr inbounds i8, i8* %137, i64 %135
	%139 = sub i64 256, %135
	store {i8*, i64} zeroinitializer, {i8*, i64}* %20
	%140 = getelementptr inbounds {i8*, i64}, {i8*, i64}* %20, i64 0, i32 0
	store i8* %138, i8** %140
	%141 = getelementptr inbounds {i8*, i64}, {i8*, i64}* %20, i64 0, i32 1
	store i64 %139, i64* %141
	%142 = load {i8*, i64}, {i8*, i64}* %20, align 8
	%143 = load i128, i128* %u, align 8
	%144 = load i64, i64* %1, align 8
	%145 = load i1, i1* %2, align 1
	%146 = load i64, i64* %3, align 8
	%147 = load %..string, %..string* %4, align 8
	%148 = load i64, i64* %18, align 8
	store {i8*, i64} zeroinitializer, {i8*, i64}* %21
	store {i8*, i64} %142, {i8*, i64}* %21
	store i128 zeroinitializer, i128* %22
	store i128 %143, i128* %22
	%149 = call %..string @strconv-18.append_bits({i8*, i64}* %21, i128* %22, i64 %144, i1 %145, i64 %146, %..string %147, i64 %148, %Context* noalias nonnull %__.context_ptr)
	store %..string %149, %..string* %19
	; IfStmt
	; SelectorExpr
	%150 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%151 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %150, i64 0
	%152 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %151, i64 0, i32 9
	%153 = load i1, i1* %152, align 1
	br i1 %153, label %cmp.and-33, label %if.done-46

cmp.and-33:
	; SelectorExpr
	%154 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%155 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %154, i64 0
	%156 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %155, i64 0, i32 8
	%157 = load i1, i1* %156, align 1
	br i1 %157, label %if.then-34, label %if.done-46

if.then-34:
	; c
	store i8 zeroinitializer, i8* %23
		; SwitchStmt
	%158 = load i64, i64* %1, align 8
	%159 = icmp eq i64 %158, 2
	br i1 %159, label %switch.case.body-36, label %switch.case.next-35

switch.case.next-35:
	%160 = icmp eq i64 %158, 8
	br i1 %160, label %switch.fall.body-38, label %switch.case.next-37

switch.case.body-36:
	; AssignStmt
	store i8 98, i8* %23
	br label %switch.done-43

switch.case.next-37:
	%161 = icmp eq i64 %158, 12
	br i1 %161, label %switch.fall.body-40, label %switch.case.next-39

switch.fall.body-38:
	; AssignStmt
	store i8 111, i8* %23
	br label %switch.done-43

switch.case.next-39:
	%162 = icmp eq i64 %158, 16
	br i1 %162, label %switch.fall.body-42, label %switch.case.next-41

switch.fall.body-40:
	; AssignStmt
	store i8 122, i8* %23
	br label %switch.done-43

switch.case.next-41:
	br label %switch.done-43

switch.fall.body-42:
	; AssignStmt
	store i8 120, i8* %23
	br label %switch.done-43

switch.done-43:
	; IfStmt
	%163 = load i8, i8* %23, align 1
	%164 = icmp ne i8 %163, 0
	br i1 %164, label %if.then-44, label %if.done-45

if.then-44:
	; SelectorExpr
	%165 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%166 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %165, i64 0
	%167 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %166, i64 0, i32 4
	%168 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %167, align 8
	call void @fmt-4.write_byte({i8*, i64, i64, %Allocator}* %168, i8 48, %Context* noalias nonnull %__.context_ptr)
	; SelectorExpr
	%169 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%170 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %169, i64 0
	%171 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %170, i64 0, i32 4
	%172 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %171, align 8
	%173 = load i8, i8* %23, align 1
	call void @fmt-4.write_byte({i8*, i64, i64, %Allocator}* %172, i8 %173, %Context* noalias nonnull %__.context_ptr)
	br label %if.done-45

if.done-45:
	br label %if.done-46

if.done-46:
	; prev_zero
		; SelectorExpr
	%174 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%175 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %174, i64 0
	%176 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %175, i64 0, i32 8
	%177 = load i1, i1* %176, align 1
	store i1 %177, i1* %24
	; DeferStmt
	; AssignStmt
	; SelectorExpr
	%178 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%179 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %178, i64 0
	%180 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %179, i64 0, i32 8
	store i1 false, i1* %180
	%181 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%182 = load %..string, %..string* %19, align 8
	call void @fmt-4._pad(%fmt-4.Fmt_Info* %181, %..string %182, %Context* noalias nonnull %__.context_ptr)
	; defer
	; AssignStmt
	; SelectorExpr
	%183 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%184 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %183, i64 0
	%185 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %184, i64 0, i32 8
	%186 = load i1, i1* %24, align 1
	store i1 %186, i1* %185
	ret void
}

define void @fmt-4.fmt_rune(%fmt-4.Fmt_Info* %fi, i32 %r, i32 %verb, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca %fmt-4.Fmt_Info*, align 8
	%1 = alloca i32, align 4
	%2 = alloca i32, align 4
	%3 = alloca i128, align 16
		store %fmt-4.Fmt_Info* %fi, %fmt-4.Fmt_Info** %0
		store i32 %r, i32* %1
		store i32 %verb, i32* %2
	; SwitchStmt
	%4 = load i32, i32* %2, align 4
	%5 = icmp eq i32 %4, 99
	br i1 %5, label %switch.case.body-4, label %switch.case.next-1

switch.case.next-1:
	%6 = icmp eq i32 %4, 114
	br i1 %6, label %switch.case.body-4, label %switch.case.next-2

switch.case.next-2:
	%7 = icmp eq i32 %4, 118
	br i1 %7, label %switch.case.body-4, label %switch.case.next-3

switch.case.next-3:
	%8 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%9 = load i32, i32* %1, align 4
	%10 = sext i32 %9 to i128
	%11 = load i32, i32* %2, align 4
	store i128 zeroinitializer, i128* %3
	store i128 %10, i128* %3
	call void @fmt-4.fmt_int(%fmt-4.Fmt_Info* %8, i128* %3, i1 false, i64 32, i32 %11, %Context* noalias nonnull %__.context_ptr)
	br label %switch.done-5

switch.case.body-4:
	; SelectorExpr
	%12 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%13 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %12, i64 0
	%14 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %13, i64 0, i32 4
	%15 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %14, align 8
	%16 = load i32, i32* %1, align 4
	call void @fmt-4.write_rune({i8*, i64, i64, %Allocator}* %15, i32 %16, %Context* noalias nonnull %__.context_ptr)
	br label %switch.done-5

switch.done-5:
	ret void
}

define void @fmt-4.fmt_int(%fmt-4.Fmt_Info* %fi, i128* %u, i1 %is_signed, i64 %bit_size, i32 %verb, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca %fmt-4.Fmt_Info*, align 8
	%1 = alloca i1, align 1
	%2 = alloca i64, align 8
	%3 = alloca i32, align 4
	%4 = alloca i128, align 16
	%5 = alloca i128, align 16
	%6 = alloca i128, align 16
	%7 = alloca i128, align 16
	%8 = alloca i128, align 16
	%9 = alloca i128, align 16
	%10 = alloca i128, align 16
	%11 = alloca i32, align 4
	%12 = alloca i128, align 16
		store %fmt-4.Fmt_Info* %fi, %fmt-4.Fmt_Info** %0
	%13 = load i128, i128* %u, align 8
		store i1 %is_signed, i1* %1
		store i64 %bit_size, i64* %2
		store i32 %verb, i32* %3
	; SwitchStmt
	%14 = load i32, i32* %3, align 4
	%15 = icmp eq i32 %14, 118
	br i1 %15, label %switch.case.body-2, label %switch.case.next-1

switch.case.next-1:
	%16 = icmp eq i32 %14, 98
	br i1 %16, label %switch.fall.body-4, label %switch.case.next-3

switch.case.body-2:
	%17 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%18 = load i128, i128* %u, align 8
	%19 = load i1, i1* %1, align 1
	%20 = load i64, i64* %2, align 8
	%21 = load %..string, %..string* @fmt-4.__DIGITS_LOWER, align 8
	store i128 zeroinitializer, i128* %4
	store i128 %18, i128* %4
	call void @fmt-4._fmt_int(%fmt-4.Fmt_Info* %17, i128* %4, i64 10, i1 %19, i64 %20, %..string %21, %Context* noalias nonnull %__.context_ptr)
	br label %switch.done-24

switch.case.next-3:
	%22 = icmp eq i32 %14, 111
	br i1 %22, label %switch.fall.body-6, label %switch.case.next-5

switch.fall.body-4:
	%23 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%24 = load i128, i128* %u, align 8
	%25 = load i1, i1* %1, align 1
	%26 = load i64, i64* %2, align 8
	%27 = load %..string, %..string* @fmt-4.__DIGITS_LOWER, align 8
	store i128 zeroinitializer, i128* %5
	store i128 %24, i128* %5
	call void @fmt-4._fmt_int(%fmt-4.Fmt_Info* %23, i128* %5, i64 2, i1 %25, i64 %26, %..string %27, %Context* noalias nonnull %__.context_ptr)
	br label %switch.done-24

switch.case.next-5:
	%28 = icmp eq i32 %14, 100
	br i1 %28, label %switch.fall.body-8, label %switch.case.next-7

switch.fall.body-6:
	%29 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%30 = load i128, i128* %u, align 8
	%31 = load i1, i1* %1, align 1
	%32 = load i64, i64* %2, align 8
	%33 = load %..string, %..string* @fmt-4.__DIGITS_LOWER, align 8
	store i128 zeroinitializer, i128* %6
	store i128 %30, i128* %6
	call void @fmt-4._fmt_int(%fmt-4.Fmt_Info* %29, i128* %6, i64 8, i1 %31, i64 %32, %..string %33, %Context* noalias nonnull %__.context_ptr)
	br label %switch.done-24

switch.case.next-7:
	%34 = icmp eq i32 %14, 122
	br i1 %34, label %switch.fall.body-10, label %switch.case.next-9

switch.fall.body-8:
	%35 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%36 = load i128, i128* %u, align 8
	%37 = load i1, i1* %1, align 1
	%38 = load i64, i64* %2, align 8
	%39 = load %..string, %..string* @fmt-4.__DIGITS_LOWER, align 8
	store i128 zeroinitializer, i128* %7
	store i128 %36, i128* %7
	call void @fmt-4._fmt_int(%fmt-4.Fmt_Info* %35, i128* %7, i64 10, i1 %37, i64 %38, %..string %39, %Context* noalias nonnull %__.context_ptr)
	br label %switch.done-24

switch.case.next-9:
	%40 = icmp eq i32 %14, 120
	br i1 %40, label %switch.fall.body-12, label %switch.case.next-11

switch.fall.body-10:
	%41 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%42 = load i128, i128* %u, align 8
	%43 = load i1, i1* %1, align 1
	%44 = load i64, i64* %2, align 8
	%45 = load %..string, %..string* @fmt-4.__DIGITS_LOWER, align 8
	store i128 zeroinitializer, i128* %8
	store i128 %42, i128* %8
	call void @fmt-4._fmt_int(%fmt-4.Fmt_Info* %41, i128* %8, i64 12, i1 %43, i64 %44, %..string %45, %Context* noalias nonnull %__.context_ptr)
	br label %switch.done-24

switch.case.next-11:
	%46 = icmp eq i32 %14, 88
	br i1 %46, label %switch.fall.body-14, label %switch.case.next-13

switch.fall.body-12:
	%47 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%48 = load i128, i128* %u, align 8
	%49 = load i1, i1* %1, align 1
	%50 = load i64, i64* %2, align 8
	%51 = load %..string, %..string* @fmt-4.__DIGITS_LOWER, align 8
	store i128 zeroinitializer, i128* %9
	store i128 %48, i128* %9
	call void @fmt-4._fmt_int(%fmt-4.Fmt_Info* %47, i128* %9, i64 16, i1 %49, i64 %50, %..string %51, %Context* noalias nonnull %__.context_ptr)
	br label %switch.done-24

switch.case.next-13:
	%52 = icmp eq i32 %14, 99
	br i1 %52, label %switch.fall.body-17, label %switch.case.next-15

switch.fall.body-14:
	%53 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%54 = load i128, i128* %u, align 8
	%55 = load i1, i1* %1, align 1
	%56 = load i64, i64* %2, align 8
	%57 = load %..string, %..string* @fmt-4.__DIGITS_UPPER, align 8
	store i128 zeroinitializer, i128* %10
	store i128 %54, i128* %10
	call void @fmt-4._fmt_int(%fmt-4.Fmt_Info* %53, i128* %10, i64 16, i1 %55, i64 %56, %..string %57, %Context* noalias nonnull %__.context_ptr)
	br label %switch.done-24

switch.case.next-15:
	%58 = icmp eq i32 %14, 114
	br i1 %58, label %switch.fall.body-17, label %switch.case.next-16

switch.case.next-16:
	%59 = icmp eq i32 %14, 85
	br i1 %59, label %switch.fall.body-19, label %switch.case.next-18

switch.fall.body-17:
	%60 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%61 = load i128, i128* %u, align 8
	%62 = trunc i128 %61 to i32
	%63 = load i32, i32* %3, align 4
	call void @fmt-4.fmt_rune(%fmt-4.Fmt_Info* %60, i32 %62, i32 %63, %Context* noalias nonnull %__.context_ptr)
	br label %switch.done-24

switch.case.next-18:
	%64 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%65 = load i32, i32* %3, align 4
	call void @fmt-4.fmt_bad_verb(%fmt-4.Fmt_Info* %64, i32 %65, %Context* noalias nonnull %__.context_ptr)
	br label %switch.done-24

switch.fall.body-19:
	; r
		%66 = load i128, i128* %u, align 8
	%67 = trunc i128 %66 to i32
	store i32 %67, i32* %11
	; IfStmt
	%68 = load i32, i32* %11, align 4
	%69 = icmp slt i32 %68, 0
	br i1 %69, label %if.then-21, label %cmp.or-20

cmp.or-20:
	%70 = load i32, i32* %11, align 4
	%71 = icmp sgt i32 %70, 1114111
	br i1 %71, label %if.then-21, label %if.else-22

if.then-21:
	%72 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%73 = load i32, i32* %3, align 4
	call void @fmt-4.fmt_bad_verb(%fmt-4.Fmt_Info* %72, i32 %73, %Context* noalias nonnull %__.context_ptr)
	br label %if.done-23

if.else-22:
	; SelectorExpr
	%74 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%75 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %74, i64 0
	%76 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %75, i64 0, i32 4
	%77 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %76, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %77, %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$8c, i64 0, i32 0), i64 2}, %Context* noalias nonnull %__.context_ptr)
	%78 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%79 = load i128, i128* %u, align 8
	%80 = load i64, i64* %2, align 8
	%81 = load %..string, %..string* @fmt-4.__DIGITS_UPPER, align 8
	store i128 zeroinitializer, i128* %12
	store i128 %79, i128* %12
	call void @fmt-4._fmt_int(%fmt-4.Fmt_Info* %78, i128* %12, i64 16, i1 false, i64 %80, %..string %81, %Context* noalias nonnull %__.context_ptr)
	br label %if.done-23

if.done-23:
	br label %switch.done-24

switch.done-24:
	ret void
}

define void @fmt-4._pad(%fmt-4.Fmt_Info* %fi, %..string %s, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca %fmt-4.Fmt_Info*, align 8
	%1 = alloca %..string, align 8
	%2 = alloca i64, align 8
		store %fmt-4.Fmt_Info* %fi, %fmt-4.Fmt_Info** %0
		store %..string %s, %..string* %1
	; IfStmt
	; SelectorExpr
	%3 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%4 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %3, i64 0
	%5 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %4, i64 0, i32 10
	%6 = load i1, i1* %5, align 1
	br i1 %6, label %if.done-2, label %if.then-1

if.then-1:
	; SelectorExpr
	%7 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%8 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %7, i64 0
	%9 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %8, i64 0, i32 4
	%10 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %9, align 8
	%11 = load %..string, %..string* %1, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %10, %..string %11, %Context* noalias nonnull %__.context_ptr)
	; ReturnStmt
	ret void

if.done-2:
	; width
		; SelectorExpr
	%12 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%13 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %12, i64 0
	%14 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %13, i64 0, i32 1
	%15 = load i64, i64* %14, align 8
	; SelectorExpr
	%16 = load %..string, %..string* %1, align 8
	%17 = call i64 @utf8-5.rune_count-300(%..string %16, %Context* noalias nonnull %__.context_ptr)
	%18 = sub i64 %15, %17
	store i64 %18, i64* %2
	; IfStmt
	; SelectorExpr
	%19 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%20 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %19, i64 0
	%21 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %20, i64 0, i32 5
	%22 = load i1, i1* %21, align 1
	br i1 %22, label %if.then-3, label %if.else-4

if.then-3:
	; SelectorExpr
	%23 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%24 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %23, i64 0
	%25 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %24, i64 0, i32 4
	%26 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %25, align 8
	%27 = load %..string, %..string* %1, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %26, %..string %27, %Context* noalias nonnull %__.context_ptr)
	%28 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%29 = load i64, i64* %2, align 8
	call void @fmt-4.fmt_write_padding(%fmt-4.Fmt_Info* %28, i64 %29, %Context* noalias nonnull %__.context_ptr)
	br label %if.done-5

if.else-4:
	%30 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%31 = load i64, i64* %2, align 8
	call void @fmt-4.fmt_write_padding(%fmt-4.Fmt_Info* %30, i64 %31, %Context* noalias nonnull %__.context_ptr)
	; SelectorExpr
	%32 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%33 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %32, i64 0
	%34 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %33, i64 0, i32 4
	%35 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %34, align 8
	%36 = load %..string, %..string* %1, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %35, %..string %36, %Context* noalias nonnull %__.context_ptr)
	br label %if.done-5

if.done-5:
	ret void
}

define void @fmt-4.fmt_float(%fmt-4.Fmt_Info* %fi, double %v, i64 %bit_size, i32 %verb, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca %fmt-4.Fmt_Info*, align 8
	%1 = alloca double, align 8
	%2 = alloca i64, align 8
	%3 = alloca i32, align 4
	%4 = alloca i64, align 8
	%5 = alloca [386 x i8], align 1
	%6 = alloca %..string, align 8
	%7 = alloca {i8*, i64}, align 8
	%8 = alloca {i8*, i64}, align 16
	%9 = alloca {i8*, i64}, align 8
	%10 = alloca %..string, align 8
	%11 = alloca %..string, align 8
	%12 = alloca %..string, align 8
	%13 = alloca %..string, align 8
		store %fmt-4.Fmt_Info* %fi, %fmt-4.Fmt_Info** %0
		store double %v, double* %1
		store i64 %bit_size, i64* %2
		store i32 %verb, i32* %3
	; SwitchStmt
	%14 = load i32, i32* %3, align 4
	%15 = icmp eq i32 %14, 102
	br i1 %15, label %switch.case.body-4, label %switch.case.next-1

switch.case.next-1:
	%16 = icmp eq i32 %14, 70
	br i1 %16, label %switch.case.body-4, label %switch.case.next-2

switch.case.next-2:
	%17 = icmp eq i32 %14, 118
	br i1 %17, label %switch.case.body-4, label %switch.case.next-3

switch.case.next-3:
	%18 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%19 = load i32, i32* %3, align 4
	call void @fmt-4.fmt_bad_verb(%fmt-4.Fmt_Info* %18, i32 %19, %Context* noalias nonnull %__.context_ptr)
	br label %switch.done-28

switch.case.body-4:
	; prec
		store i64 3, i64* %4
	; IfStmt
	; SelectorExpr
	%20 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%21 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %20, i64 0
	%22 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %21, i64 0, i32 11
	%23 = load i1, i1* %22, align 1
	br i1 %23, label %if.then-5, label %if.done-6

if.then-5:
	; AssignStmt
	; SelectorExpr
	%24 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%25 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %24, i64 0
	%26 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %25, i64 0, i32 2
	%27 = load i64, i64* %26, align 8
	store i64 %27, i64* %4
	br label %if.done-6

if.done-6:
	; buf
	store [386 x i8] zeroinitializer, [386 x i8]* %5
		; str
		; SelectorExpr
	; SliceExpr
	%28 = load [386 x i8], [386 x i8]* %5, align 1
	call void @__slice_expr_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$8d, i64 0, i32 0), i64 28}, i64 562, i64 34, i64 1, i64 386)
	%29 = getelementptr inbounds [386 x i8], [386 x i8]* %5, i64 0, i32 0
	%30 = getelementptr inbounds i8, i8* %29, i64 1
	%31 = sub i64 386, 1
	store {i8*, i64} zeroinitializer, {i8*, i64}* %7
	%32 = getelementptr inbounds {i8*, i64}, {i8*, i64}* %7, i64 0, i32 0
	store i8* %30, i8** %32
	%33 = getelementptr inbounds {i8*, i64}, {i8*, i64}* %7, i64 0, i32 1
	store i64 %31, i64* %33
	%34 = load {i8*, i64}, {i8*, i64}* %7, align 8
	%35 = load double, double* %1, align 8
	%36 = load i64, i64* %4, align 8
	%37 = load i64, i64* %2, align 8
	store {i8*, i64} zeroinitializer, {i8*, i64}* %8
	store {i8*, i64} %34, {i8*, i64}* %8
	%38 = call %..string @strconv-18.append_float({i8*, i64}* %8, double %35, i8 102, i64 %36, i64 %37, %Context* noalias nonnull %__.context_ptr)
	store %..string %38, %..string* %6
	; AssignStmt
	; SliceExpr
	%39 = load %..string, %..string* %6, align 8
	%40 = extractvalue %..string %39, 1
	%41 = add i64 %40, 1
	%42 = load [386 x i8], [386 x i8]* %5, align 1
	call void @__slice_expr_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$8e, i64 0, i32 0), i64 28}, i64 563, i64 19, i64 0, i64 %41)
	%43 = getelementptr inbounds [386 x i8], [386 x i8]* %5, i64 0, i32 0
	%44 = getelementptr inbounds i8, i8* %43, i64 0
	%45 = sub i64 %41, 0
	store {i8*, i64} zeroinitializer, {i8*, i64}* %9
	%46 = getelementptr inbounds {i8*, i64}, {i8*, i64}* %9, i64 0, i32 0
	store i8* %44, i8** %46
	%47 = getelementptr inbounds {i8*, i64}, {i8*, i64}* %9, i64 0, i32 1
	store i64 %45, i64* %47
	%48 = load {i8*, i64}, {i8*, i64}* %9, align 8
	%49 = extractvalue {i8*, i64} %48, 0
	%50 = extractvalue {i8*, i64} %48, 1
	store %..string zeroinitializer, %..string* %10
	%51 = getelementptr inbounds %..string, %..string* %10, i64 0, i32 0
	store i8* %49, i8** %51
	%52 = getelementptr inbounds %..string, %..string* %10, i64 0, i32 1
	store i64 %50, i64* %52
	%53 = load %..string, %..string* %10, align 8
	store %..string %53, %..string* %6
	; IfStmt
	; IndexExpr
	%54 = load %..string, %..string* %6, align 8
	%55 = extractvalue %..string %54, 0
	%56 = extractvalue %..string %54, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$8f, i64 0, i32 0), i64 28}, i64 564, i64 10, i64 1, i64 %56)
	%57 = getelementptr inbounds i8, i8* %55, i64 1
	%58 = load i8, i8* %57, align 1
	%59 = icmp eq i8 %58, 43
	br i1 %59, label %if.then-8, label %cmp.or-7

cmp.or-7:
	; IndexExpr
	%60 = load %..string, %..string* %6, align 8
	%61 = extractvalue %..string %60, 0
	%62 = extractvalue %..string %60, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$90, i64 0, i32 0), i64 28}, i64 564, i64 27, i64 1, i64 %62)
	%63 = getelementptr inbounds i8, i8* %61, i64 1
	%64 = load i8, i8* %63, align 1
	%65 = icmp eq i8 %64, 45
	br i1 %65, label %if.then-8, label %if.else-9

if.then-8:
	; AssignStmt
	; SliceExpr
	%66 = load %..string, %..string* %6, align 8
	%67 = extractvalue %..string %66, 1
	call void @__substring_expr_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$91, i64 0, i32 0), i64 28}, i64 565, i64 13, i64 1, i64 %67)
	%68 = extractvalue %..string %66, 0
	%69 = getelementptr inbounds i8, i8* %68, i64 1
	%70 = sub i64 %67, 1
	store %..string zeroinitializer, %..string* %11
	%71 = getelementptr inbounds %..string, %..string* %11, i64 0, i32 0
	store i8* %69, i8** %71
	%72 = getelementptr inbounds %..string, %..string* %11, i64 0, i32 1
	store i64 %70, i64* %72
	%73 = load %..string, %..string* %11, align 8
	store %..string %73, %..string* %6
	br label %if.done-10

if.else-9:
	; AssignStmt
	; IndexExpr
	%74 = load %..string, %..string* %6, align 8
	%75 = extractvalue %..string %74, 0
	%76 = extractvalue %..string %74, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$92, i64 0, i32 0), i64 28}, i64 567, i64 8, i64 0, i64 %76)
	%77 = getelementptr inbounds i8, i8* %75, i64 0
	store i8 43, i8* %77
	br label %if.done-10

if.done-10:
	; IfStmt
	; SelectorExpr
	%78 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%79 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %78, i64 0
	%80 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %79, i64 0, i32 7
	%81 = load i1, i1* %80, align 1
	br i1 %81, label %cmp.and-11, label %if.done-14

cmp.and-11:
	; SelectorExpr
	%82 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%83 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %82, i64 0
	%84 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %83, i64 0, i32 6
	%85 = load i1, i1* %84, align 1
	br i1 %85, label %if.done-14, label %cmp.and-12

cmp.and-12:
	; IndexExpr
	%86 = load %..string, %..string* %6, align 8
	%87 = extractvalue %..string %86, 0
	%88 = extractvalue %..string %86, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$93, i64 0, i32 0), i64 28}, i64 570, i64 34, i64 0, i64 %88)
	%89 = getelementptr inbounds i8, i8* %87, i64 0
	%90 = load i8, i8* %89, align 1
	%91 = icmp eq i8 %90, 43
	br i1 %91, label %if.then-13, label %if.done-14

if.then-13:
	; AssignStmt
	; IndexExpr
	%92 = load %..string, %..string* %6, align 8
	%93 = extractvalue %..string %92, 0
	%94 = extractvalue %..string %92, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$94, i64 0, i32 0), i64 28}, i64 571, i64 8, i64 0, i64 %94)
	%95 = getelementptr inbounds i8, i8* %93, i64 0
	store i8 32, i8* %95
	br label %if.done-14

if.done-14:
	; IfStmt
	%96 = load %..string, %..string* %6, align 8
	%97 = extractvalue %..string %96, 1
	%98 = icmp sgt i64 %97, 1
	br i1 %98, label %cmp.and-15, label %if.done-18

cmp.and-15:
	; IndexExpr
	%99 = load %..string, %..string* %6, align 8
	%100 = extractvalue %..string %99, 0
	%101 = extractvalue %..string %99, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$95, i64 0, i32 0), i64 28}, i64 574, i64 26, i64 1, i64 %101)
	%102 = getelementptr inbounds i8, i8* %100, i64 1
	%103 = load i8, i8* %102, align 1
	%104 = icmp eq i8 %103, 78
	br i1 %104, label %cmp.and-16, label %if.done-18

cmp.and-16:
	; IndexExpr
	%105 = load %..string, %..string* %6, align 8
	%106 = extractvalue %..string %105, 0
	%107 = extractvalue %..string %105, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$96, i64 0, i32 0), i64 28}, i64 574, i64 43, i64 1, i64 %107)
	%108 = getelementptr inbounds i8, i8* %106, i64 1
	%109 = load i8, i8* %108, align 1
	%110 = icmp eq i8 %109, 73
	br i1 %110, label %if.then-17, label %if.done-18

if.then-17:
	; SelectorExpr
	%111 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%112 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %111, i64 0
	%113 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %112, i64 0, i32 4
	%114 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %113, align 8
	%115 = load %..string, %..string* %6, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %114, %..string %115, %Context* noalias nonnull %__.context_ptr)
	; ReturnStmt
	ret void

if.done-18:
	; IfStmt
	; SelectorExpr
	%116 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%117 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %116, i64 0
	%118 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %117, i64 0, i32 6
	%119 = load i1, i1* %118, align 1
	br i1 %119, label %if.then-20, label %cmp.or-19

cmp.or-19:
	; IndexExpr
	%120 = load %..string, %..string* %6, align 8
	%121 = extractvalue %..string %120, 0
	%122 = extractvalue %..string %120, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$97, i64 0, i32 0), i64 28}, i64 579, i64 21, i64 0, i64 %122)
	%123 = getelementptr inbounds i8, i8* %121, i64 0
	%124 = load i8, i8* %123, align 1
	%125 = icmp ne i8 %124, 43
	br i1 %125, label %if.then-20, label %if.else-26

if.then-20:
	; IfStmt
	; SelectorExpr
	%126 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%127 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %126, i64 0
	%128 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %127, i64 0, i32 8
	%129 = load i1, i1* %128, align 1
	br i1 %129, label %cmp.and-21, label %if.else-24

cmp.and-21:
	; SelectorExpr
	%130 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%131 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %130, i64 0
	%132 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %131, i64 0, i32 10
	%133 = load i1, i1* %132, align 1
	br i1 %133, label %cmp.and-22, label %if.else-24

cmp.and-22:
	; SelectorExpr
	%134 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%135 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %134, i64 0
	%136 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %135, i64 0, i32 1
	%137 = load i64, i64* %136, align 8
	%138 = load %..string, %..string* %6, align 8
	%139 = extractvalue %..string %138, 1
	%140 = icmp sgt i64 %137, %139
	br i1 %140, label %if.then-23, label %if.else-24

if.then-23:
	; SelectorExpr
	%141 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%142 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %141, i64 0
	%143 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %142, i64 0, i32 4
	%144 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %143, align 8
	; IndexExpr
	%145 = load %..string, %..string* %6, align 8
	%146 = extractvalue %..string %145, 0
	%147 = extractvalue %..string %145, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$98, i64 0, i32 0), i64 28}, i64 581, i64 28, i64 0, i64 %147)
	%148 = getelementptr inbounds i8, i8* %146, i64 0
	%149 = load i8, i8* %148, align 1
	call void @fmt-4.write_byte({i8*, i64, i64, %Allocator}* %144, i8 %149, %Context* noalias nonnull %__.context_ptr)
	%150 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	; SelectorExpr
	%151 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%152 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %151, i64 0
	%153 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %152, i64 0, i32 1
	%154 = load i64, i64* %153, align 8
	%155 = load %..string, %..string* %6, align 8
	%156 = extractvalue %..string %155, 1
	%157 = sub i64 %154, %156
	call void @fmt-4.fmt_write_padding(%fmt-4.Fmt_Info* %150, i64 %157, %Context* noalias nonnull %__.context_ptr)
	; SelectorExpr
	%158 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%159 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %158, i64 0
	%160 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %159, i64 0, i32 4
	%161 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %160, align 8
	; SliceExpr
	%162 = load %..string, %..string* %6, align 8
	%163 = extractvalue %..string %162, 1
	call void @__substring_expr_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$99, i64 0, i32 0), i64 28}, i64 583, i64 29, i64 1, i64 %163)
	%164 = extractvalue %..string %162, 0
	%165 = getelementptr inbounds i8, i8* %164, i64 1
	%166 = sub i64 %163, 1
	store %..string zeroinitializer, %..string* %12
	%167 = getelementptr inbounds %..string, %..string* %12, i64 0, i32 0
	store i8* %165, i8** %167
	%168 = getelementptr inbounds %..string, %..string* %12, i64 0, i32 1
	store i64 %166, i64* %168
	%169 = load %..string, %..string* %12, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %161, %..string %169, %Context* noalias nonnull %__.context_ptr)
	br label %if.done-25

if.else-24:
	%170 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%171 = load %..string, %..string* %6, align 8
	call void @fmt-4._pad(%fmt-4.Fmt_Info* %170, %..string %171, %Context* noalias nonnull %__.context_ptr)
	br label %if.done-25

if.done-25:
	br label %if.done-27

if.else-26:
	%172 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	; SliceExpr
	%173 = load %..string, %..string* %6, align 8
	%174 = extractvalue %..string %173, 1
	call void @__substring_expr_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$9a, i64 0, i32 0), i64 28}, i64 588, i64 16, i64 1, i64 %174)
	%175 = extractvalue %..string %173, 0
	%176 = getelementptr inbounds i8, i8* %175, i64 1
	%177 = sub i64 %174, 1
	store %..string zeroinitializer, %..string* %13
	%178 = getelementptr inbounds %..string, %..string* %13, i64 0, i32 0
	store i8* %176, i8** %178
	%179 = getelementptr inbounds %..string, %..string* %13, i64 0, i32 1
	store i64 %177, i64* %179
	%180 = load %..string, %..string* %13, align 8
	call void @fmt-4._pad(%fmt-4.Fmt_Info* %172, %..string %180, %Context* noalias nonnull %__.context_ptr)
	br label %if.done-27

if.done-27:
	br label %switch.done-28

switch.done-28:
	ret void
}

define void @fmt-4.fmt_string(%fmt-4.Fmt_Info* %fi, %..string %s, i32 %verb, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca %fmt-4.Fmt_Info*, align 8
	%1 = alloca %..string, align 8
	%2 = alloca i32, align 4
	%3 = alloca i1, align 1
	%4 = alloca i64, align 8
	%5 = alloca i64, align 8
	%6 = alloca i64, align 8
	%7 = alloca %..string, align 8
	%8 = alloca i128, align 16
		store %fmt-4.Fmt_Info* %fi, %fmt-4.Fmt_Info** %0
		store %..string %s, %..string* %1
		store i32 %verb, i32* %2
	; SwitchStmt
	%9 = load i32, i32* %2, align 4
	%10 = icmp eq i32 %9, 115
	br i1 %10, label %switch.case.body-3, label %switch.case.next-1

switch.case.next-1:
	%11 = icmp eq i32 %9, 118
	br i1 %11, label %switch.case.body-3, label %switch.case.next-2

switch.case.next-2:
	%12 = icmp eq i32 %9, 120
	br i1 %12, label %switch.fall.body-6, label %switch.case.next-4

switch.case.body-3:
	; SelectorExpr
	%13 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%14 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %13, i64 0
	%15 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %14, i64 0, i32 4
	%16 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %15, align 8
	%17 = load %..string, %..string* %1, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %16, %..string %17, %Context* noalias nonnull %__.context_ptr)
	br label %switch.done-15

switch.case.next-4:
	%18 = icmp eq i32 %9, 88
	br i1 %18, label %switch.fall.body-6, label %switch.case.next-5

switch.case.next-5:
	%19 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%20 = load i32, i32* %2, align 4
	call void @fmt-4.fmt_bad_verb(%fmt-4.Fmt_Info* %19, i32 %20, %Context* noalias nonnull %__.context_ptr)
	br label %switch.done-15

switch.fall.body-6:
	; space
		; SelectorExpr
	%21 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%22 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %21, i64 0
	%23 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %22, i64 0, i32 7
	%24 = load i1, i1* %23, align 1
	store i1 %24, i1* %3
	; AssignStmt
	; SelectorExpr
	%25 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%26 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %25, i64 0
	%27 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %26, i64 0, i32 7
	store i1 false, i1* %27
	; DeferStmt
	; RangeStmt
	; i
	store i64 zeroinitializer, i64* %4
		store i64 zeroinitializer, i64* %5
	store i64 0, i64* %5
	store i64 zeroinitializer, i64* %6
	store i64 0, i64* %6
	br label %for.interval.loop-7

for.interval.loop-7:
	%28 = load %..string, %..string* %1, align 8
	%29 = extractvalue %..string %28, 1
	%30 = load i64, i64* %5, align 8
	%31 = icmp slt i64 %30, %29
	br i1 %31, label %for.interval.body-8, label %for.interval.done-14

for.interval.body-8:
	%32 = load i64, i64* %5, align 8
	%33 = load i64, i64* %6, align 8
	%34 = load i64, i64* %5, align 8
	%35 = add i64 %34, 1
	store i64 %35, i64* %5
	%36 = load i64, i64* %6, align 8
	%37 = add i64 %36, 1
	store i64 %37, i64* %6
	store i64 %32, i64* %4
	; IfStmt
	%38 = load i64, i64* %4, align 8
	%39 = icmp sgt i64 %38, 0
	br i1 %39, label %cmp.and-9, label %if.done-11

cmp.and-9:
	%40 = load i1, i1* %3, align 1
	br i1 %40, label %if.then-10, label %if.done-11

if.then-10:
	; SelectorExpr
	%41 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%42 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %41, i64 0
	%43 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %42, i64 0, i32 4
	%44 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %43, align 8
	call void @fmt-4.write_byte({i8*, i64, i64, %Allocator}* %44, i8 32, %Context* noalias nonnull %__.context_ptr)
	br label %if.done-11

if.done-11:
	; char_set
		%45 = load %..string, %..string* @fmt-4.__DIGITS_UPPER, align 8
	store %..string %45, %..string* %7
	; IfStmt
	%46 = load i32, i32* %2, align 4
	%47 = icmp eq i32 %46, 120
	br i1 %47, label %if.then-12, label %if.done-13

if.then-12:
	; AssignStmt
	%48 = load %..string, %..string* @fmt-4.__DIGITS_LOWER, align 8
	store %..string %48, %..string* %7
	br label %if.done-13

if.done-13:
	%49 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	; IndexExpr
	%50 = load %..string, %..string* %1, align 8
	%51 = extractvalue %..string %50, 0
	%52 = extractvalue %..string %50, 1
	%53 = load i64, i64* %4, align 8
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$9b, i64 0, i32 0), i64 28}, i64 609, i64 24, i64 %53, i64 %52)
	%54 = getelementptr inbounds i8, i8* %51, i64 %53
	%55 = load i8, i8* %54, align 1
	%56 = zext i8 %55 to i128
	%57 = load %..string, %..string* %7, align 8
	store i128 zeroinitializer, i128* %8
	store i128 %56, i128* %8
	call void @fmt-4._fmt_int(%fmt-4.Fmt_Info* %49, i128* %8, i64 16, i1 false, i64 8, %..string %57, %Context* noalias nonnull %__.context_ptr)
	br label %for.interval.loop-7

for.interval.done-14:
	; defer
	; AssignStmt
	; SelectorExpr
	%58 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%59 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %58, i64 0
	%60 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %59, i64 0, i32 7
	%61 = load i1, i1* %3, align 1
	store i1 %61, i1* %60
	br label %switch.done-15

switch.done-15:
	ret void
}

define void @fmt-4.fmt_pointer(%fmt-4.Fmt_Info* %fi, %..rawptr %p, i32 %verb, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca %fmt-4.Fmt_Info*, align 8
	%1 = alloca %..rawptr, align 8
	%2 = alloca i32, align 4
	%3 = alloca i128, align 8
	%4 = alloca i128, align 16
		store %fmt-4.Fmt_Info* %fi, %fmt-4.Fmt_Info** %0
		store %..rawptr %p, %..rawptr* %1
		store i32 %verb, i32* %2
	; SwitchStmt
	%5 = load i32, i32* %2, align 4
	%6 = icmp eq i32 %5, 112
	br i1 %6, label %switch.case.body-3, label %switch.case.next-1

switch.case.next-1:
	%7 = icmp eq i32 %5, 118
	br i1 %7, label %switch.case.body-3, label %switch.case.next-2

switch.case.next-2:
	%8 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%9 = load i32, i32* %2, align 4
	call void @fmt-4.fmt_bad_verb(%fmt-4.Fmt_Info* %8, i32 %9, %Context* noalias nonnull %__.context_ptr)
	; ReturnStmt
	ret void

switch.case.body-3:
	; u
		%10 = load %..rawptr, %..rawptr* %1, align 8
	%11 = ptrtoint %..rawptr %10 to i64
	%12 = zext i64 %11 to i128
	store i128 %12, i128* %3
	; IfStmt
	; SelectorExpr
	%13 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%14 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %13, i64 0
	%15 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %14, i64 0, i32 9
	%16 = load i1, i1* %15, align 1
	br i1 %16, label %cmp.or-4, label %if.then-5

cmp.or-4:
	%17 = load i32, i32* %2, align 4
	%18 = icmp eq i32 %17, 118
	br i1 %18, label %if.then-5, label %if.done-6

if.then-5:
	; SelectorExpr
	%19 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%20 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %19, i64 0
	%21 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %20, i64 0, i32 4
	%22 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %21, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %22, %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$9c, i64 0, i32 0), i64 2}, %Context* noalias nonnull %__.context_ptr)
	br label %if.done-6

if.done-6:
	%23 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%24 = load i128, i128* %3, align 8
	%25 = load %..string, %..string* @fmt-4.__DIGITS_UPPER, align 8
	store i128 zeroinitializer, i128* %4
	store i128 %24, i128* %4
	call void @fmt-4._fmt_int(%fmt-4.Fmt_Info* %23, i128* %4, i64 16, i1 false, i64 64, %..string %25, %Context* noalias nonnull %__.context_ptr)
	ret void
}

define {%..string, i1} @fmt-4.enum_value_to_string(%..any %v, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca %..any, align 8
	%1 = alloca %Type_Info_Enum, align 8
	%2 = alloca %..any, align 8
	%3 = alloca %..any, align 8
	%4 = alloca i32, align 4
	%5 = alloca %Type_Info_Enum, align 16
	%6 = alloca {%..string, i1}, align 8
	%7 = alloca i8, align 1
	%8 = alloca %Type_Info_Enum, align 16
	%9 = alloca {%..string, i1}, align 8
	%10 = alloca i16, align 2
	%11 = alloca %Type_Info_Enum, align 16
	%12 = alloca {%..string, i1}, align 8
	%13 = alloca i32, align 4
	%14 = alloca %Type_Info_Enum, align 16
	%15 = alloca {%..string, i1}, align 8
	%16 = alloca i64, align 8
	%17 = alloca %Type_Info_Enum, align 16
	%18 = alloca {%..string, i1}, align 8
	%19 = alloca i128, align 8
	%20 = alloca i128, align 16
	%21 = alloca %Type_Info_Enum, align 16
	%22 = alloca {%..string, i1}, align 8
	%23 = alloca i64, align 8
	%24 = alloca %Type_Info_Enum, align 16
	%25 = alloca {%..string, i1}, align 8
	%26 = alloca i8, align 1
	%27 = alloca %Type_Info_Enum, align 16
	%28 = alloca {%..string, i1}, align 8
	%29 = alloca i16, align 2
	%30 = alloca %Type_Info_Enum, align 16
	%31 = alloca {%..string, i1}, align 8
	%32 = alloca i32, align 4
	%33 = alloca %Type_Info_Enum, align 16
	%34 = alloca {%..string, i1}, align 8
	%35 = alloca i64, align 8
	%36 = alloca %Type_Info_Enum, align 16
	%37 = alloca {%..string, i1}, align 8
	%38 = alloca i128, align 8
	%39 = alloca i128, align 16
	%40 = alloca %Type_Info_Enum, align 16
	%41 = alloca {%..string, i1}, align 8
	%42 = alloca i64, align 8
	%43 = alloca %Type_Info_Enum, align 16
	%44 = alloca {%..string, i1}, align 8
	%45 = alloca i64, align 8
	%46 = alloca %Type_Info_Enum, align 16
	%47 = alloca {%..string, i1}, align 8
	%48 = alloca float, align 4
	%49 = alloca %Type_Info_Enum, align 16
	%50 = alloca {%..string, i1}, align 8
	%51 = alloca double, align 8
	%52 = alloca %Type_Info_Enum, align 16
	%53 = alloca {%..string, i1}, align 8
	%54 = alloca {[0 x <8 x i8>], [72 x i8], i8}, align 8
	%55 = alloca {%..string, i1}, align 8
	%56 = alloca {%..string, i1}, align 8
		store %..any %v, %..any* %0
	; AssignStmt
	; SelectorExpr
	%57 = getelementptr inbounds %..any, %..any* %0, i64 0, i32 1
	; SelectorExpr
	%58 = getelementptr inbounds %..any, %..any* %0, i64 0, i32 1
	%59 = load %Type_Info*, %Type_Info** %58, align 8
	%60 = call %Type_Info* @type_info_base(%Type_Info* %59, %Context* noalias nonnull %__.context_ptr)
	store %Type_Info* %60, %Type_Info** %57
	; TypeSwitchStmt
	; SelectorExpr
	; SelectorExpr
	%61 = getelementptr inbounds %..any, %..any* %0, i64 0, i32 1
	%62 = load %Type_Info*, %Type_Info** %61, align 8
	%63 = getelementptr inbounds %Type_Info, %Type_Info* %62, i64 0
	%64 = getelementptr inbounds %Type_Info, %Type_Info* %63, i64 0, i32 2
	%65 = load {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %64, align 8
	; get union's tag
	%66 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %64, i64 0, i32 2 ; UnionTagPtr
	%67 = load i8, i8* %66, align 1
	%68 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %64 to %..rawptr
	%69 = icmp eq i8 %67, 18
	br i1 %69, label %typeswitch.body-2, label %typeswitch.next-1

typeswitch.next-1:
	store {[0 x <8 x i8>], [72 x i8], i8} %65, {[0 x <8 x i8>], [72 x i8], i8}* %54
	; ReturnStmt
	store {%..string, i1} zeroinitializer, {%..string, i1}* %55
	%70 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %55, i64 0, i32 0
	store %..string zeroinitializer, %..string* %70
	%71 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %55, i64 0, i32 1
	store i1 false, i1* %71
	%72 = load {%..string, i1}, {%..string, i1}* %55, align 8
	ret {%..string, i1} %72

typeswitch.body-2:
	%73 = bitcast %..rawptr %68 to %Type_Info_Enum*
	%74 = load %Type_Info_Enum, %Type_Info_Enum* %73, align 8
	store %Type_Info_Enum %74, %Type_Info_Enum* %1
	; a
		; CompoundLit
	store %..any zeroinitializer, %..any* %3
	store %..any zeroinitializer, %..any* %3
	; SelectorExpr
	%75 = getelementptr inbounds %..any, %..any* %0, i64 0, i32 0
	%76 = load %..rawptr, %..rawptr* %75, align 8
	%77 = getelementptr inbounds %..any, %..any* %3, i64 0, i32 0
	store %..rawptr %76, %..rawptr* %77
	; SelectorExpr
	%78 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %1, i64 0, i32 0
	%79 = load %Type_Info*, %Type_Info** %78, align 8
	%80 = call %Type_Info* @type_info_base(%Type_Info* %79, %Context* noalias nonnull %__.context_ptr)
	%81 = getelementptr inbounds %..any, %..any* %3, i64 0, i32 1
	store %Type_Info* %80, %Type_Info** %81
	%82 = load %..any, %..any* %3, align 8
	store %..any %82, %..any* %2
	; TypeSwitchStmt
	%83 = load %..any, %..any* %2, align 8
	%84 = getelementptr inbounds %..any, %..any* %2, i64 0, i32 1
	%85 = load %Type_Info*, %Type_Info** %84, align 8
	%86 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 53
	%87 = icmp eq %Type_Info* %85, %86
	br i1 %87, label %typeswitch.body-4, label %typeswitch.next-3

typeswitch.next-3:
	%88 = getelementptr inbounds %..any, %..any* %2, i64 0, i32 1
	%89 = load %Type_Info*, %Type_Info** %88, align 8
	%90 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 54
	%91 = icmp eq %Type_Info* %89, %90
	br i1 %91, label %typeswitch.body-6, label %typeswitch.next-5

typeswitch.body-4:
	%92 = getelementptr inbounds %..any, %..any* %2, i64 0, i32 0
	%93 = load %..rawptr, %..rawptr* %92, align 8
	%94 = bitcast %..rawptr %93 to i32*
	%95 = load i32, i32* %94, align 4
	store i32 %95, i32* %4
	; ReturnStmt
	%96 = load i32, i32* %4, align 4
	%97 = load %Type_Info_Enum, %Type_Info_Enum* %1, align 8
	store %Type_Info_Enum zeroinitializer, %Type_Info_Enum* %5
	store %Type_Info_Enum %97, %Type_Info_Enum* %5
	%98 = call {%..string, i1} @fmt-4.enum_value_to_string.get_str-0(i32 %96, %Type_Info_Enum* %5, %Context* noalias nonnull %__.context_ptr)
	%99 = extractvalue {%..string, i1} %98, 0
	%100 = extractvalue {%..string, i1} %98, 1
	store {%..string, i1} zeroinitializer, {%..string, i1}* %6
	%101 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %6, i64 0, i32 0
	store %..string %99, %..string* %101
	%102 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %6, i64 0, i32 1
	store i1 %100, i1* %102
	%103 = load {%..string, i1}, {%..string, i1}* %6, align 8
	ret {%..string, i1} %103

typeswitch.next-5:
	%104 = getelementptr inbounds %..any, %..any* %2, i64 0, i32 1
	%105 = load %Type_Info*, %Type_Info** %104, align 8
	%106 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 55
	%107 = icmp eq %Type_Info* %105, %106
	br i1 %107, label %typeswitch.body-8, label %typeswitch.next-7

typeswitch.body-6:
	%108 = getelementptr inbounds %..any, %..any* %2, i64 0, i32 0
	%109 = load %..rawptr, %..rawptr* %108, align 8
	%110 = bitcast %..rawptr %109 to i8*
	%111 = load i8, i8* %110, align 1
	store i8 %111, i8* %7
	; ReturnStmt
	%112 = load i8, i8* %7, align 1
	%113 = load %Type_Info_Enum, %Type_Info_Enum* %1, align 8
	store %Type_Info_Enum zeroinitializer, %Type_Info_Enum* %8
	store %Type_Info_Enum %113, %Type_Info_Enum* %8
	%114 = call {%..string, i1} @fmt-4.enum_value_to_string.get_str-1(i8 %112, %Type_Info_Enum* %8, %Context* noalias nonnull %__.context_ptr)
	%115 = extractvalue {%..string, i1} %114, 0
	%116 = extractvalue {%..string, i1} %114, 1
	store {%..string, i1} zeroinitializer, {%..string, i1}* %9
	%117 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %9, i64 0, i32 0
	store %..string %115, %..string* %117
	%118 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %9, i64 0, i32 1
	store i1 %116, i1* %118
	%119 = load {%..string, i1}, {%..string, i1}* %9, align 8
	ret {%..string, i1} %119

typeswitch.next-7:
	%120 = getelementptr inbounds %..any, %..any* %2, i64 0, i32 1
	%121 = load %Type_Info*, %Type_Info** %120, align 8
	%122 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	%123 = icmp eq %Type_Info* %121, %122
	br i1 %123, label %typeswitch.body-10, label %typeswitch.next-9

typeswitch.body-8:
	%124 = getelementptr inbounds %..any, %..any* %2, i64 0, i32 0
	%125 = load %..rawptr, %..rawptr* %124, align 8
	%126 = bitcast %..rawptr %125 to i16*
	%127 = load i16, i16* %126, align 2
	store i16 %127, i16* %10
	; ReturnStmt
	%128 = load i16, i16* %10, align 2
	%129 = load %Type_Info_Enum, %Type_Info_Enum* %1, align 8
	store %Type_Info_Enum zeroinitializer, %Type_Info_Enum* %11
	store %Type_Info_Enum %129, %Type_Info_Enum* %11
	%130 = call {%..string, i1} @fmt-4.enum_value_to_string.get_str-2(i16 %128, %Type_Info_Enum* %11, %Context* noalias nonnull %__.context_ptr)
	%131 = extractvalue {%..string, i1} %130, 0
	%132 = extractvalue {%..string, i1} %130, 1
	store {%..string, i1} zeroinitializer, {%..string, i1}* %12
	%133 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %12, i64 0, i32 0
	store %..string %131, %..string* %133
	%134 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %12, i64 0, i32 1
	store i1 %132, i1* %134
	%135 = load {%..string, i1}, {%..string, i1}* %12, align 8
	ret {%..string, i1} %135

typeswitch.next-9:
	%136 = getelementptr inbounds %..any, %..any* %2, i64 0, i32 1
	%137 = load %Type_Info*, %Type_Info** %136, align 8
	%138 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 57
	%139 = icmp eq %Type_Info* %137, %138
	br i1 %139, label %typeswitch.body-12, label %typeswitch.next-11

typeswitch.body-10:
	%140 = getelementptr inbounds %..any, %..any* %2, i64 0, i32 0
	%141 = load %..rawptr, %..rawptr* %140, align 8
	%142 = bitcast %..rawptr %141 to i32*
	%143 = load i32, i32* %142, align 4
	store i32 %143, i32* %13
	; ReturnStmt
	%144 = load i32, i32* %13, align 4
	%145 = load %Type_Info_Enum, %Type_Info_Enum* %1, align 8
	store %Type_Info_Enum zeroinitializer, %Type_Info_Enum* %14
	store %Type_Info_Enum %145, %Type_Info_Enum* %14
	%146 = call {%..string, i1} @fmt-4.enum_value_to_string.get_str-3(i32 %144, %Type_Info_Enum* %14, %Context* noalias nonnull %__.context_ptr)
	%147 = extractvalue {%..string, i1} %146, 0
	%148 = extractvalue {%..string, i1} %146, 1
	store {%..string, i1} zeroinitializer, {%..string, i1}* %15
	%149 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %15, i64 0, i32 0
	store %..string %147, %..string* %149
	%150 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %15, i64 0, i32 1
	store i1 %148, i1* %150
	%151 = load {%..string, i1}, {%..string, i1}* %15, align 8
	ret {%..string, i1} %151

typeswitch.next-11:
	%152 = getelementptr inbounds %..any, %..any* %2, i64 0, i32 1
	%153 = load %Type_Info*, %Type_Info** %152, align 8
	%154 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 58
	%155 = icmp eq %Type_Info* %153, %154
	br i1 %155, label %typeswitch.body-14, label %typeswitch.next-13

typeswitch.body-12:
	%156 = getelementptr inbounds %..any, %..any* %2, i64 0, i32 0
	%157 = load %..rawptr, %..rawptr* %156, align 8
	%158 = bitcast %..rawptr %157 to i64*
	%159 = load i64, i64* %158, align 8
	store i64 %159, i64* %16
	; ReturnStmt
	%160 = load i64, i64* %16, align 8
	%161 = load %Type_Info_Enum, %Type_Info_Enum* %1, align 8
	store %Type_Info_Enum zeroinitializer, %Type_Info_Enum* %17
	store %Type_Info_Enum %161, %Type_Info_Enum* %17
	%162 = call {%..string, i1} @fmt-4.enum_value_to_string.get_str-4(i64 %160, %Type_Info_Enum* %17, %Context* noalias nonnull %__.context_ptr)
	%163 = extractvalue {%..string, i1} %162, 0
	%164 = extractvalue {%..string, i1} %162, 1
	store {%..string, i1} zeroinitializer, {%..string, i1}* %18
	%165 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %18, i64 0, i32 0
	store %..string %163, %..string* %165
	%166 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %18, i64 0, i32 1
	store i1 %164, i1* %166
	%167 = load {%..string, i1}, {%..string, i1}* %18, align 8
	ret {%..string, i1} %167

typeswitch.next-13:
	%168 = getelementptr inbounds %..any, %..any* %2, i64 0, i32 1
	%169 = load %Type_Info*, %Type_Info** %168, align 8
	%170 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%171 = icmp eq %Type_Info* %169, %170
	br i1 %171, label %typeswitch.body-16, label %typeswitch.next-15

typeswitch.body-14:
	%172 = getelementptr inbounds %..any, %..any* %2, i64 0, i32 0
	%173 = load %..rawptr, %..rawptr* %172, align 8
	%174 = bitcast %..rawptr %173 to i128*
	%175 = load i128, i128* %174, align 8
	store i128 %175, i128* %19
	; ReturnStmt
	%176 = load i128, i128* %19, align 8
	%177 = load %Type_Info_Enum, %Type_Info_Enum* %1, align 8
	store i128 zeroinitializer, i128* %20
	store i128 %176, i128* %20
	store %Type_Info_Enum zeroinitializer, %Type_Info_Enum* %21
	store %Type_Info_Enum %177, %Type_Info_Enum* %21
	%178 = call {%..string, i1} @fmt-4.enum_value_to_string.get_str-5(i128* %20, %Type_Info_Enum* %21, %Context* noalias nonnull %__.context_ptr)
	%179 = extractvalue {%..string, i1} %178, 0
	%180 = extractvalue {%..string, i1} %178, 1
	store {%..string, i1} zeroinitializer, {%..string, i1}* %22
	%181 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %22, i64 0, i32 0
	store %..string %179, %..string* %181
	%182 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %22, i64 0, i32 1
	store i1 %180, i1* %182
	%183 = load {%..string, i1}, {%..string, i1}* %22, align 8
	ret {%..string, i1} %183

typeswitch.next-15:
	%184 = getelementptr inbounds %..any, %..any* %2, i64 0, i32 1
	%185 = load %Type_Info*, %Type_Info** %184, align 8
	%186 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	%187 = icmp eq %Type_Info* %185, %186
	br i1 %187, label %typeswitch.body-18, label %typeswitch.next-17

typeswitch.body-16:
	%188 = getelementptr inbounds %..any, %..any* %2, i64 0, i32 0
	%189 = load %..rawptr, %..rawptr* %188, align 8
	%190 = bitcast %..rawptr %189 to i64*
	%191 = load i64, i64* %190, align 8
	store i64 %191, i64* %23
	; ReturnStmt
	%192 = load i64, i64* %23, align 8
	%193 = load %Type_Info_Enum, %Type_Info_Enum* %1, align 8
	store %Type_Info_Enum zeroinitializer, %Type_Info_Enum* %24
	store %Type_Info_Enum %193, %Type_Info_Enum* %24
	%194 = call {%..string, i1} @fmt-4.enum_value_to_string.get_str-6(i64 %192, %Type_Info_Enum* %24, %Context* noalias nonnull %__.context_ptr)
	%195 = extractvalue {%..string, i1} %194, 0
	%196 = extractvalue {%..string, i1} %194, 1
	store {%..string, i1} zeroinitializer, {%..string, i1}* %25
	%197 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %25, i64 0, i32 0
	store %..string %195, %..string* %197
	%198 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %25, i64 0, i32 1
	store i1 %196, i1* %198
	%199 = load {%..string, i1}, {%..string, i1}* %25, align 8
	ret {%..string, i1} %199

typeswitch.next-17:
	%200 = getelementptr inbounds %..any, %..any* %2, i64 0, i32 1
	%201 = load %Type_Info*, %Type_Info** %200, align 8
	%202 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 59
	%203 = icmp eq %Type_Info* %201, %202
	br i1 %203, label %typeswitch.body-20, label %typeswitch.next-19

typeswitch.body-18:
	%204 = getelementptr inbounds %..any, %..any* %2, i64 0, i32 0
	%205 = load %..rawptr, %..rawptr* %204, align 8
	%206 = bitcast %..rawptr %205 to i8*
	%207 = load i8, i8* %206, align 1
	store i8 %207, i8* %26
	; ReturnStmt
	%208 = load i8, i8* %26, align 1
	%209 = load %Type_Info_Enum, %Type_Info_Enum* %1, align 8
	store %Type_Info_Enum zeroinitializer, %Type_Info_Enum* %27
	store %Type_Info_Enum %209, %Type_Info_Enum* %27
	%210 = call {%..string, i1} @fmt-4.enum_value_to_string.get_str-7(i8 %208, %Type_Info_Enum* %27, %Context* noalias nonnull %__.context_ptr)
	%211 = extractvalue {%..string, i1} %210, 0
	%212 = extractvalue {%..string, i1} %210, 1
	store {%..string, i1} zeroinitializer, {%..string, i1}* %28
	%213 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %28, i64 0, i32 0
	store %..string %211, %..string* %213
	%214 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %28, i64 0, i32 1
	store i1 %212, i1* %214
	%215 = load {%..string, i1}, {%..string, i1}* %28, align 8
	ret {%..string, i1} %215

typeswitch.next-19:
	%216 = getelementptr inbounds %..any, %..any* %2, i64 0, i32 1
	%217 = load %Type_Info*, %Type_Info** %216, align 8
	%218 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	%219 = icmp eq %Type_Info* %217, %218
	br i1 %219, label %typeswitch.body-22, label %typeswitch.next-21

typeswitch.body-20:
	%220 = getelementptr inbounds %..any, %..any* %2, i64 0, i32 0
	%221 = load %..rawptr, %..rawptr* %220, align 8
	%222 = bitcast %..rawptr %221 to i16*
	%223 = load i16, i16* %222, align 2
	store i16 %223, i16* %29
	; ReturnStmt
	%224 = load i16, i16* %29, align 2
	%225 = load %Type_Info_Enum, %Type_Info_Enum* %1, align 8
	store %Type_Info_Enum zeroinitializer, %Type_Info_Enum* %30
	store %Type_Info_Enum %225, %Type_Info_Enum* %30
	%226 = call {%..string, i1} @fmt-4.enum_value_to_string.get_str-8(i16 %224, %Type_Info_Enum* %30, %Context* noalias nonnull %__.context_ptr)
	%227 = extractvalue {%..string, i1} %226, 0
	%228 = extractvalue {%..string, i1} %226, 1
	store {%..string, i1} zeroinitializer, {%..string, i1}* %31
	%229 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %31, i64 0, i32 0
	store %..string %227, %..string* %229
	%230 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %31, i64 0, i32 1
	store i1 %228, i1* %230
	%231 = load {%..string, i1}, {%..string, i1}* %31, align 8
	ret {%..string, i1} %231

typeswitch.next-21:
	%232 = getelementptr inbounds %..any, %..any* %2, i64 0, i32 1
	%233 = load %Type_Info*, %Type_Info** %232, align 8
	%234 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 61
	%235 = icmp eq %Type_Info* %233, %234
	br i1 %235, label %typeswitch.body-24, label %typeswitch.next-23

typeswitch.body-22:
	%236 = getelementptr inbounds %..any, %..any* %2, i64 0, i32 0
	%237 = load %..rawptr, %..rawptr* %236, align 8
	%238 = bitcast %..rawptr %237 to i32*
	%239 = load i32, i32* %238, align 4
	store i32 %239, i32* %32
	; ReturnStmt
	%240 = load i32, i32* %32, align 4
	%241 = load %Type_Info_Enum, %Type_Info_Enum* %1, align 8
	store %Type_Info_Enum zeroinitializer, %Type_Info_Enum* %33
	store %Type_Info_Enum %241, %Type_Info_Enum* %33
	%242 = call {%..string, i1} @fmt-4.enum_value_to_string.get_str-9(i32 %240, %Type_Info_Enum* %33, %Context* noalias nonnull %__.context_ptr)
	%243 = extractvalue {%..string, i1} %242, 0
	%244 = extractvalue {%..string, i1} %242, 1
	store {%..string, i1} zeroinitializer, {%..string, i1}* %34
	%245 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %34, i64 0, i32 0
	store %..string %243, %..string* %245
	%246 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %34, i64 0, i32 1
	store i1 %244, i1* %246
	%247 = load {%..string, i1}, {%..string, i1}* %34, align 8
	ret {%..string, i1} %247

typeswitch.next-23:
	%248 = getelementptr inbounds %..any, %..any* %2, i64 0, i32 1
	%249 = load %Type_Info*, %Type_Info** %248, align 8
	%250 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 62
	%251 = icmp eq %Type_Info* %249, %250
	br i1 %251, label %typeswitch.body-26, label %typeswitch.next-25

typeswitch.body-24:
	%252 = getelementptr inbounds %..any, %..any* %2, i64 0, i32 0
	%253 = load %..rawptr, %..rawptr* %252, align 8
	%254 = bitcast %..rawptr %253 to i64*
	%255 = load i64, i64* %254, align 8
	store i64 %255, i64* %35
	; ReturnStmt
	%256 = load i64, i64* %35, align 8
	%257 = load %Type_Info_Enum, %Type_Info_Enum* %1, align 8
	store %Type_Info_Enum zeroinitializer, %Type_Info_Enum* %36
	store %Type_Info_Enum %257, %Type_Info_Enum* %36
	%258 = call {%..string, i1} @fmt-4.enum_value_to_string.get_str-10(i64 %256, %Type_Info_Enum* %36, %Context* noalias nonnull %__.context_ptr)
	%259 = extractvalue {%..string, i1} %258, 0
	%260 = extractvalue {%..string, i1} %258, 1
	store {%..string, i1} zeroinitializer, {%..string, i1}* %37
	%261 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %37, i64 0, i32 0
	store %..string %259, %..string* %261
	%262 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %37, i64 0, i32 1
	store i1 %260, i1* %262
	%263 = load {%..string, i1}, {%..string, i1}* %37, align 8
	ret {%..string, i1} %263

typeswitch.next-25:
	%264 = getelementptr inbounds %..any, %..any* %2, i64 0, i32 1
	%265 = load %Type_Info*, %Type_Info** %264, align 8
	%266 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	%267 = icmp eq %Type_Info* %265, %266
	br i1 %267, label %typeswitch.body-28, label %typeswitch.next-27

typeswitch.body-26:
	%268 = getelementptr inbounds %..any, %..any* %2, i64 0, i32 0
	%269 = load %..rawptr, %..rawptr* %268, align 8
	%270 = bitcast %..rawptr %269 to i128*
	%271 = load i128, i128* %270, align 8
	store i128 %271, i128* %38
	; ReturnStmt
	%272 = load i128, i128* %38, align 8
	%273 = load %Type_Info_Enum, %Type_Info_Enum* %1, align 8
	store i128 zeroinitializer, i128* %39
	store i128 %272, i128* %39
	store %Type_Info_Enum zeroinitializer, %Type_Info_Enum* %40
	store %Type_Info_Enum %273, %Type_Info_Enum* %40
	%274 = call {%..string, i1} @fmt-4.enum_value_to_string.get_str-11(i128* %39, %Type_Info_Enum* %40, %Context* noalias nonnull %__.context_ptr)
	%275 = extractvalue {%..string, i1} %274, 0
	%276 = extractvalue {%..string, i1} %274, 1
	store {%..string, i1} zeroinitializer, {%..string, i1}* %41
	%277 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %41, i64 0, i32 0
	store %..string %275, %..string* %277
	%278 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %41, i64 0, i32 1
	store i1 %276, i1* %278
	%279 = load {%..string, i1}, {%..string, i1}* %41, align 8
	ret {%..string, i1} %279

typeswitch.next-27:
	%280 = getelementptr inbounds %..any, %..any* %2, i64 0, i32 1
	%281 = load %Type_Info*, %Type_Info** %280, align 8
	%282 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 42
	%283 = icmp eq %Type_Info* %281, %282
	br i1 %283, label %typeswitch.body-30, label %typeswitch.next-29

typeswitch.body-28:
	%284 = getelementptr inbounds %..any, %..any* %2, i64 0, i32 0
	%285 = load %..rawptr, %..rawptr* %284, align 8
	%286 = bitcast %..rawptr %285 to i64*
	%287 = load i64, i64* %286, align 8
	store i64 %287, i64* %42
	; ReturnStmt
	%288 = load i64, i64* %42, align 8
	%289 = load %Type_Info_Enum, %Type_Info_Enum* %1, align 8
	store %Type_Info_Enum zeroinitializer, %Type_Info_Enum* %43
	store %Type_Info_Enum %289, %Type_Info_Enum* %43
	%290 = call {%..string, i1} @fmt-4.enum_value_to_string.get_str-12(i64 %288, %Type_Info_Enum* %43, %Context* noalias nonnull %__.context_ptr)
	%291 = extractvalue {%..string, i1} %290, 0
	%292 = extractvalue {%..string, i1} %290, 1
	store {%..string, i1} zeroinitializer, {%..string, i1}* %44
	%293 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %44, i64 0, i32 0
	store %..string %291, %..string* %293
	%294 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %44, i64 0, i32 1
	store i1 %292, i1* %294
	%295 = load {%..string, i1}, {%..string, i1}* %44, align 8
	ret {%..string, i1} %295

typeswitch.next-29:
	%296 = getelementptr inbounds %..any, %..any* %2, i64 0, i32 1
	%297 = load %Type_Info*, %Type_Info** %296, align 8
	%298 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 64
	%299 = icmp eq %Type_Info* %297, %298
	br i1 %299, label %typeswitch.body-32, label %typeswitch.next-31

typeswitch.body-30:
	%300 = getelementptr inbounds %..any, %..any* %2, i64 0, i32 0
	%301 = load %..rawptr, %..rawptr* %300, align 8
	%302 = bitcast %..rawptr %301 to i64*
	%303 = load i64, i64* %302, align 8
	store i64 %303, i64* %45
	; ReturnStmt
	%304 = load i64, i64* %45, align 8
	%305 = load %Type_Info_Enum, %Type_Info_Enum* %1, align 8
	store %Type_Info_Enum zeroinitializer, %Type_Info_Enum* %46
	store %Type_Info_Enum %305, %Type_Info_Enum* %46
	%306 = call {%..string, i1} @fmt-4.enum_value_to_string.get_str-13(i64 %304, %Type_Info_Enum* %46, %Context* noalias nonnull %__.context_ptr)
	%307 = extractvalue {%..string, i1} %306, 0
	%308 = extractvalue {%..string, i1} %306, 1
	store {%..string, i1} zeroinitializer, {%..string, i1}* %47
	%309 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %47, i64 0, i32 0
	store %..string %307, %..string* %309
	%310 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %47, i64 0, i32 1
	store i1 %308, i1* %310
	%311 = load {%..string, i1}, {%..string, i1}* %47, align 8
	ret {%..string, i1} %311

typeswitch.next-31:
	%312 = getelementptr inbounds %..any, %..any* %2, i64 0, i32 1
	%313 = load %Type_Info*, %Type_Info** %312, align 8
	%314 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 65
	%315 = icmp eq %Type_Info* %313, %314
	br i1 %315, label %typeswitch.body-34, label %typeswitch.next-33

typeswitch.body-32:
	%316 = getelementptr inbounds %..any, %..any* %2, i64 0, i32 0
	%317 = load %..rawptr, %..rawptr* %316, align 8
	%318 = bitcast %..rawptr %317 to float*
	%319 = load float, float* %318, align 4
	store float %319, float* %48
	; ReturnStmt
	%320 = load float, float* %48, align 4
	%321 = load %Type_Info_Enum, %Type_Info_Enum* %1, align 8
	store %Type_Info_Enum zeroinitializer, %Type_Info_Enum* %49
	store %Type_Info_Enum %321, %Type_Info_Enum* %49
	%322 = call {%..string, i1} @fmt-4.enum_value_to_string.get_str-14(float %320, %Type_Info_Enum* %49, %Context* noalias nonnull %__.context_ptr)
	%323 = extractvalue {%..string, i1} %322, 0
	%324 = extractvalue {%..string, i1} %322, 1
	store {%..string, i1} zeroinitializer, {%..string, i1}* %50
	%325 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %50, i64 0, i32 0
	store %..string %323, %..string* %325
	%326 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %50, i64 0, i32 1
	store i1 %324, i1* %326
	%327 = load {%..string, i1}, {%..string, i1}* %50, align 8
	ret {%..string, i1} %327

typeswitch.next-33:
	; ReturnStmt
	store {%..string, i1} zeroinitializer, {%..string, i1}* %56
	%328 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %56, i64 0, i32 0
	store %..string zeroinitializer, %..string* %328
	%329 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %56, i64 0, i32 1
	store i1 false, i1* %329
	%330 = load {%..string, i1}, {%..string, i1}* %56, align 8
	ret {%..string, i1} %330

typeswitch.body-34:
	%331 = getelementptr inbounds %..any, %..any* %2, i64 0, i32 0
	%332 = load %..rawptr, %..rawptr* %331, align 8
	%333 = bitcast %..rawptr %332 to double*
	%334 = load double, double* %333, align 8
	store double %334, double* %51
	; ReturnStmt
	%335 = load double, double* %51, align 8
	%336 = load %Type_Info_Enum, %Type_Info_Enum* %1, align 8
	store %Type_Info_Enum zeroinitializer, %Type_Info_Enum* %52
	store %Type_Info_Enum %336, %Type_Info_Enum* %52
	%337 = call {%..string, i1} @fmt-4.enum_value_to_string.get_str-15(double %335, %Type_Info_Enum* %52, %Context* noalias nonnull %__.context_ptr)
	%338 = extractvalue {%..string, i1} %337, 0
	%339 = extractvalue {%..string, i1} %337, 1
	store {%..string, i1} zeroinitializer, {%..string, i1}* %53
	%340 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %53, i64 0, i32 0
	store %..string %338, %..string* %340
	%341 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %53, i64 0, i32 1
	store i1 %339, i1* %341
	%342 = load {%..string, i1}, {%..string, i1}* %53, align 8
	ret {%..string, i1} %342
}

define {%..string, i1} @fmt-4.enum_value_to_string.get_str-0(i32 %i, %Type_Info_Enum* %e, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca i32, align 4
	%1 = alloca %Type_Info_Enum_Value, align 8
	%2 = alloca i64, align 8
	%3 = alloca i64, align 8
	%4 = alloca i64, align 8
	%5 = alloca i32, align 4
	%6 = alloca i1, align 1
	%7 = alloca {i32, i1}, align 4
	%8 = alloca {%..string, i1}, align 8
	%9 = alloca {%..string, i1}, align 8
	%10 = alloca %Type_Info_Enum_Value, align 8
	%11 = alloca i64, align 8
	%12 = alloca i64, align 8
	%13 = alloca i64, align 8
	%14 = alloca i32, align 4
	%15 = alloca i1, align 1
	%16 = alloca {i32, i1}, align 4
	%17 = alloca {%..string, i1}, align 8
	%18 = alloca {%..string, i1}, align 8
		store i32 %i, i32* %0
	%19 = load %Type_Info_Enum, %Type_Info_Enum* %e, align 8
	; IfStmt
	; SelectorExpr
	; SelectorExpr
	%20 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 0
	%21 = load %Type_Info*, %Type_Info** %20, align 8
	%22 = call i1 @types-17.is_string(%Type_Info* %21, %Context* noalias nonnull %__.context_ptr)
	br i1 %22, label %if.then-1, label %if.else-10

if.then-1:
	; RangeStmt
	; val
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %1
		; idx
	store i64 zeroinitializer, i64* %2
		; SelectorExpr
	%23 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 2
	%24 = load {%Type_Info_Enum_Value*, i64}, {%Type_Info_Enum_Value*, i64}* %23, align 8
	store i64 zeroinitializer, i64* %3
	%25 = extractvalue {%Type_Info_Enum_Value*, i64} %24, 1
	store i64 %25, i64* %3
	store i64 zeroinitializer, i64* %4
	store i64 -1, i64* %4
	br label %for.index.loop-2

for.index.loop-2:
	%26 = load i64, i64* %4, align 8
	%27 = add i64 %26, 1
	store i64 %27, i64* %4
	%28 = load i64, i64* %3, align 8
	%29 = icmp slt i64 %27, %28
	br i1 %29, label %for.index.body-3, label %for.index.done-9

for.index.body-3:
	%30 = load i64, i64* %4, align 8
	%31 = extractvalue {%Type_Info_Enum_Value*, i64} %24, 0
	%32 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %31, i64 %30
	%33 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %32, align 8
	store %Type_Info_Enum_Value %33, %Type_Info_Enum_Value* %1
	store i64 %30, i64* %2
	; IfStmt
	; v
		; ok
		%34 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %1, align 8
	; cast - union_cast
	store {i32, i1} zeroinitializer, {i32, i1}* %7
	%35 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %1, i64 0, i32 2 ; UnionTagPtr
	%36 = load i8, i8* %35, align 1
	%37 = icmp eq i8 %36, 1
	br i1 %37, label %union_cast.ok-4, label %union_cast.end-5

union_cast.ok-4:
	%38 = getelementptr inbounds {i32, i1}, {i32, i1}* %7, i64 0, i32 0
	%39 = getelementptr inbounds {i32, i1}, {i32, i1}* %7, i64 0, i32 1
	%40 = bitcast %Type_Info_Enum_Value* %1 to i32*
	%41 = load i32, i32* %40, align 4
	store i32 %41, i32* %38
	store i1 true, i1* %39
	br label %union_cast.end-5

union_cast.end-5:
	%42 = load {i32, i1}, {i32, i1}* %7, align 4
	%43 = extractvalue {i32, i1} %42, 0
	%44 = extractvalue {i32, i1} %42, 1
	store i32 %43, i32* %5
	store i1 %44, i1* %6
	%45 = load i1, i1* %6, align 1
	br i1 %45, label %cmp.and-6, label %if.done-8

cmp.and-6:
	%46 = load i32, i32* %5, align 4
	%47 = load i32, i32* %0, align 4
	%48 = icmp eq i32 %46, %47
	br i1 %48, label %if.then-7, label %if.done-8

if.then-7:
	; ReturnStmt
	; IndexExpr
	; SelectorExpr
	%49 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 1
	%50 = load {%..string*, i64}, {%..string*, i64}* %49, align 8
	%51 = extractvalue {%..string*, i64} %50, 0
	%52 = load i64, i64* %2, align 8
	%53 = extractvalue {%..string*, i64} %50, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$9d, i64 0, i32 0), i64 28}, i64 642, i64 22, i64 %52, i64 %53)
	%54 = getelementptr inbounds %..string, %..string* %51, i64 %52
	%55 = load %..string, %..string* %54, align 8
	store {%..string, i1} zeroinitializer, {%..string, i1}* %8
	%56 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %8, i64 0, i32 0
	store %..string %55, %..string* %56
	%57 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %8, i64 0, i32 1
	store i1 true, i1* %57
	%58 = load {%..string, i1}, {%..string, i1}* %8, align 8
	ret {%..string, i1} %58

if.done-8:
	br label %for.index.loop-2

for.index.done-9:
	br label %if.done-21

if.else-10:
	; IfStmt
	; SelectorExpr
	%59 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 2
	%60 = load {%Type_Info_Enum_Value*, i64}, {%Type_Info_Enum_Value*, i64}* %59, align 8
	%61 = extractvalue {%Type_Info_Enum_Value*, i64} %60, 1
	%62 = icmp eq i64 %61, 0
	br i1 %62, label %if.then-11, label %if.else-12

if.then-11:
	; ReturnStmt
	store {%..string, i1} zeroinitializer, {%..string, i1}* %9
	%63 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %9, i64 0, i32 0
	store %..string zeroinitializer, %..string* %63
	%64 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %9, i64 0, i32 1
	store i1 true, i1* %64
	%65 = load {%..string, i1}, {%..string, i1}* %9, align 8
	ret {%..string, i1} %65

if.else-12:
	; RangeStmt
	; val
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %10
		; idx
	store i64 zeroinitializer, i64* %11
		; SelectorExpr
	%66 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 2
	%67 = load {%Type_Info_Enum_Value*, i64}, {%Type_Info_Enum_Value*, i64}* %66, align 8
	store i64 zeroinitializer, i64* %12
	%68 = extractvalue {%Type_Info_Enum_Value*, i64} %67, 1
	store i64 %68, i64* %12
	store i64 zeroinitializer, i64* %13
	store i64 -1, i64* %13
	br label %for.index.loop-13

for.index.loop-13:
	%69 = load i64, i64* %13, align 8
	%70 = add i64 %69, 1
	store i64 %70, i64* %13
	%71 = load i64, i64* %12, align 8
	%72 = icmp slt i64 %70, %71
	br i1 %72, label %for.index.body-14, label %for.index.done-20

for.index.body-14:
	%73 = load i64, i64* %13, align 8
	%74 = extractvalue {%Type_Info_Enum_Value*, i64} %67, 0
	%75 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %74, i64 %73
	%76 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %75, align 8
	store %Type_Info_Enum_Value %76, %Type_Info_Enum_Value* %10
	store i64 %73, i64* %11
	; IfStmt
	; v
		; ok
		%77 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %10, align 8
	; cast - union_cast
	store {i32, i1} zeroinitializer, {i32, i1}* %16
	%78 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %10, i64 0, i32 2 ; UnionTagPtr
	%79 = load i8, i8* %78, align 1
	%80 = icmp eq i8 %79, 1
	br i1 %80, label %union_cast.ok-15, label %union_cast.end-16

union_cast.ok-15:
	%81 = getelementptr inbounds {i32, i1}, {i32, i1}* %16, i64 0, i32 0
	%82 = getelementptr inbounds {i32, i1}, {i32, i1}* %16, i64 0, i32 1
	%83 = bitcast %Type_Info_Enum_Value* %10 to i32*
	%84 = load i32, i32* %83, align 4
	store i32 %84, i32* %81
	store i1 true, i1* %82
	br label %union_cast.end-16

union_cast.end-16:
	%85 = load {i32, i1}, {i32, i1}* %16, align 4
	%86 = extractvalue {i32, i1} %85, 0
	%87 = extractvalue {i32, i1} %85, 1
	store i32 %86, i32* %14
	store i1 %87, i1* %15
	%88 = load i1, i1* %15, align 1
	br i1 %88, label %cmp.and-17, label %if.done-19

cmp.and-17:
	%89 = load i32, i32* %14, align 4
	%90 = load i32, i32* %0, align 4
	%91 = icmp eq i32 %89, %90
	br i1 %91, label %if.then-18, label %if.done-19

if.then-18:
	; ReturnStmt
	; IndexExpr
	; SelectorExpr
	%92 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 1
	%93 = load {%..string*, i64}, {%..string*, i64}* %92, align 8
	%94 = extractvalue {%..string*, i64} %93, 0
	%95 = load i64, i64* %11, align 8
	%96 = extractvalue {%..string*, i64} %93, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$9e, i64 0, i32 0), i64 28}, i64 650, i64 22, i64 %95, i64 %96)
	%97 = getelementptr inbounds %..string, %..string* %94, i64 %95
	%98 = load %..string, %..string* %97, align 8
	store {%..string, i1} zeroinitializer, {%..string, i1}* %17
	%99 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %17, i64 0, i32 0
	store %..string %98, %..string* %99
	%100 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %17, i64 0, i32 1
	store i1 true, i1* %100
	%101 = load {%..string, i1}, {%..string, i1}* %17, align 8
	ret {%..string, i1} %101

if.done-19:
	br label %for.index.loop-13

for.index.done-20:
	br label %if.done-21

if.done-21:
	; ReturnStmt
	store {%..string, i1} zeroinitializer, {%..string, i1}* %18
	%102 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %18, i64 0, i32 0
	store %..string zeroinitializer, %..string* %102
	%103 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %18, i64 0, i32 1
	store i1 false, i1* %103
	%104 = load {%..string, i1}, {%..string, i1}* %18, align 8
	ret {%..string, i1} %104
}

define {%..string, i1} @fmt-4.enum_value_to_string.get_str-1(i8 %i, %Type_Info_Enum* %e, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca i8, align 1
	%1 = alloca %Type_Info_Enum_Value, align 8
	%2 = alloca i64, align 8
	%3 = alloca i64, align 8
	%4 = alloca i64, align 8
	%5 = alloca i8, align 1
	%6 = alloca i1, align 1
	%7 = alloca {i8, i1}, align 1
	%8 = alloca {%..string, i1}, align 8
	%9 = alloca {%..string, i1}, align 8
	%10 = alloca %Type_Info_Enum_Value, align 8
	%11 = alloca i64, align 8
	%12 = alloca i64, align 8
	%13 = alloca i64, align 8
	%14 = alloca i8, align 1
	%15 = alloca i1, align 1
	%16 = alloca {i8, i1}, align 1
	%17 = alloca {%..string, i1}, align 8
	%18 = alloca {%..string, i1}, align 8
		store i8 %i, i8* %0
	%19 = load %Type_Info_Enum, %Type_Info_Enum* %e, align 8
	; IfStmt
	; SelectorExpr
	; SelectorExpr
	%20 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 0
	%21 = load %Type_Info*, %Type_Info** %20, align 8
	%22 = call i1 @types-17.is_string(%Type_Info* %21, %Context* noalias nonnull %__.context_ptr)
	br i1 %22, label %if.then-1, label %if.else-10

if.then-1:
	; RangeStmt
	; val
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %1
		; idx
	store i64 zeroinitializer, i64* %2
		; SelectorExpr
	%23 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 2
	%24 = load {%Type_Info_Enum_Value*, i64}, {%Type_Info_Enum_Value*, i64}* %23, align 8
	store i64 zeroinitializer, i64* %3
	%25 = extractvalue {%Type_Info_Enum_Value*, i64} %24, 1
	store i64 %25, i64* %3
	store i64 zeroinitializer, i64* %4
	store i64 -1, i64* %4
	br label %for.index.loop-2

for.index.loop-2:
	%26 = load i64, i64* %4, align 8
	%27 = add i64 %26, 1
	store i64 %27, i64* %4
	%28 = load i64, i64* %3, align 8
	%29 = icmp slt i64 %27, %28
	br i1 %29, label %for.index.body-3, label %for.index.done-9

for.index.body-3:
	%30 = load i64, i64* %4, align 8
	%31 = extractvalue {%Type_Info_Enum_Value*, i64} %24, 0
	%32 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %31, i64 %30
	%33 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %32, align 8
	store %Type_Info_Enum_Value %33, %Type_Info_Enum_Value* %1
	store i64 %30, i64* %2
	; IfStmt
	; v
		; ok
		%34 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %1, align 8
	; cast - union_cast
	store {i8, i1} zeroinitializer, {i8, i1}* %7
	%35 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %1, i64 0, i32 2 ; UnionTagPtr
	%36 = load i8, i8* %35, align 1
	%37 = icmp eq i8 %36, 2
	br i1 %37, label %union_cast.ok-4, label %union_cast.end-5

union_cast.ok-4:
	%38 = getelementptr inbounds {i8, i1}, {i8, i1}* %7, i64 0, i32 0
	%39 = getelementptr inbounds {i8, i1}, {i8, i1}* %7, i64 0, i32 1
	%40 = bitcast %Type_Info_Enum_Value* %1 to i8*
	%41 = load i8, i8* %40, align 1
	store i8 %41, i8* %38
	store i1 true, i1* %39
	br label %union_cast.end-5

union_cast.end-5:
	%42 = load {i8, i1}, {i8, i1}* %7, align 1
	%43 = extractvalue {i8, i1} %42, 0
	%44 = extractvalue {i8, i1} %42, 1
	store i8 %43, i8* %5
	store i1 %44, i1* %6
	%45 = load i1, i1* %6, align 1
	br i1 %45, label %cmp.and-6, label %if.done-8

cmp.and-6:
	%46 = load i8, i8* %5, align 1
	%47 = load i8, i8* %0, align 1
	%48 = icmp eq i8 %46, %47
	br i1 %48, label %if.then-7, label %if.done-8

if.then-7:
	; ReturnStmt
	; IndexExpr
	; SelectorExpr
	%49 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 1
	%50 = load {%..string*, i64}, {%..string*, i64}* %49, align 8
	%51 = extractvalue {%..string*, i64} %50, 0
	%52 = load i64, i64* %2, align 8
	%53 = extractvalue {%..string*, i64} %50, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$9f, i64 0, i32 0), i64 28}, i64 642, i64 22, i64 %52, i64 %53)
	%54 = getelementptr inbounds %..string, %..string* %51, i64 %52
	%55 = load %..string, %..string* %54, align 8
	store {%..string, i1} zeroinitializer, {%..string, i1}* %8
	%56 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %8, i64 0, i32 0
	store %..string %55, %..string* %56
	%57 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %8, i64 0, i32 1
	store i1 true, i1* %57
	%58 = load {%..string, i1}, {%..string, i1}* %8, align 8
	ret {%..string, i1} %58

if.done-8:
	br label %for.index.loop-2

for.index.done-9:
	br label %if.done-21

if.else-10:
	; IfStmt
	; SelectorExpr
	%59 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 2
	%60 = load {%Type_Info_Enum_Value*, i64}, {%Type_Info_Enum_Value*, i64}* %59, align 8
	%61 = extractvalue {%Type_Info_Enum_Value*, i64} %60, 1
	%62 = icmp eq i64 %61, 0
	br i1 %62, label %if.then-11, label %if.else-12

if.then-11:
	; ReturnStmt
	store {%..string, i1} zeroinitializer, {%..string, i1}* %9
	%63 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %9, i64 0, i32 0
	store %..string zeroinitializer, %..string* %63
	%64 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %9, i64 0, i32 1
	store i1 true, i1* %64
	%65 = load {%..string, i1}, {%..string, i1}* %9, align 8
	ret {%..string, i1} %65

if.else-12:
	; RangeStmt
	; val
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %10
		; idx
	store i64 zeroinitializer, i64* %11
		; SelectorExpr
	%66 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 2
	%67 = load {%Type_Info_Enum_Value*, i64}, {%Type_Info_Enum_Value*, i64}* %66, align 8
	store i64 zeroinitializer, i64* %12
	%68 = extractvalue {%Type_Info_Enum_Value*, i64} %67, 1
	store i64 %68, i64* %12
	store i64 zeroinitializer, i64* %13
	store i64 -1, i64* %13
	br label %for.index.loop-13

for.index.loop-13:
	%69 = load i64, i64* %13, align 8
	%70 = add i64 %69, 1
	store i64 %70, i64* %13
	%71 = load i64, i64* %12, align 8
	%72 = icmp slt i64 %70, %71
	br i1 %72, label %for.index.body-14, label %for.index.done-20

for.index.body-14:
	%73 = load i64, i64* %13, align 8
	%74 = extractvalue {%Type_Info_Enum_Value*, i64} %67, 0
	%75 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %74, i64 %73
	%76 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %75, align 8
	store %Type_Info_Enum_Value %76, %Type_Info_Enum_Value* %10
	store i64 %73, i64* %11
	; IfStmt
	; v
		; ok
		%77 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %10, align 8
	; cast - union_cast
	store {i8, i1} zeroinitializer, {i8, i1}* %16
	%78 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %10, i64 0, i32 2 ; UnionTagPtr
	%79 = load i8, i8* %78, align 1
	%80 = icmp eq i8 %79, 2
	br i1 %80, label %union_cast.ok-15, label %union_cast.end-16

union_cast.ok-15:
	%81 = getelementptr inbounds {i8, i1}, {i8, i1}* %16, i64 0, i32 0
	%82 = getelementptr inbounds {i8, i1}, {i8, i1}* %16, i64 0, i32 1
	%83 = bitcast %Type_Info_Enum_Value* %10 to i8*
	%84 = load i8, i8* %83, align 1
	store i8 %84, i8* %81
	store i1 true, i1* %82
	br label %union_cast.end-16

union_cast.end-16:
	%85 = load {i8, i1}, {i8, i1}* %16, align 1
	%86 = extractvalue {i8, i1} %85, 0
	%87 = extractvalue {i8, i1} %85, 1
	store i8 %86, i8* %14
	store i1 %87, i1* %15
	%88 = load i1, i1* %15, align 1
	br i1 %88, label %cmp.and-17, label %if.done-19

cmp.and-17:
	%89 = load i8, i8* %14, align 1
	%90 = load i8, i8* %0, align 1
	%91 = icmp eq i8 %89, %90
	br i1 %91, label %if.then-18, label %if.done-19

if.then-18:
	; ReturnStmt
	; IndexExpr
	; SelectorExpr
	%92 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 1
	%93 = load {%..string*, i64}, {%..string*, i64}* %92, align 8
	%94 = extractvalue {%..string*, i64} %93, 0
	%95 = load i64, i64* %11, align 8
	%96 = extractvalue {%..string*, i64} %93, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$a0, i64 0, i32 0), i64 28}, i64 650, i64 22, i64 %95, i64 %96)
	%97 = getelementptr inbounds %..string, %..string* %94, i64 %95
	%98 = load %..string, %..string* %97, align 8
	store {%..string, i1} zeroinitializer, {%..string, i1}* %17
	%99 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %17, i64 0, i32 0
	store %..string %98, %..string* %99
	%100 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %17, i64 0, i32 1
	store i1 true, i1* %100
	%101 = load {%..string, i1}, {%..string, i1}* %17, align 8
	ret {%..string, i1} %101

if.done-19:
	br label %for.index.loop-13

for.index.done-20:
	br label %if.done-21

if.done-21:
	; ReturnStmt
	store {%..string, i1} zeroinitializer, {%..string, i1}* %18
	%102 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %18, i64 0, i32 0
	store %..string zeroinitializer, %..string* %102
	%103 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %18, i64 0, i32 1
	store i1 false, i1* %103
	%104 = load {%..string, i1}, {%..string, i1}* %18, align 8
	ret {%..string, i1} %104
}

define {%..string, i1} @fmt-4.enum_value_to_string.get_str-2(i16 %i, %Type_Info_Enum* %e, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca i16, align 2
	%1 = alloca %Type_Info_Enum_Value, align 8
	%2 = alloca i64, align 8
	%3 = alloca i64, align 8
	%4 = alloca i64, align 8
	%5 = alloca i16, align 2
	%6 = alloca i1, align 1
	%7 = alloca {i16, i1}, align 2
	%8 = alloca {%..string, i1}, align 8
	%9 = alloca {%..string, i1}, align 8
	%10 = alloca %Type_Info_Enum_Value, align 8
	%11 = alloca i64, align 8
	%12 = alloca i64, align 8
	%13 = alloca i64, align 8
	%14 = alloca i16, align 2
	%15 = alloca i1, align 1
	%16 = alloca {i16, i1}, align 2
	%17 = alloca {%..string, i1}, align 8
	%18 = alloca {%..string, i1}, align 8
		store i16 %i, i16* %0
	%19 = load %Type_Info_Enum, %Type_Info_Enum* %e, align 8
	; IfStmt
	; SelectorExpr
	; SelectorExpr
	%20 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 0
	%21 = load %Type_Info*, %Type_Info** %20, align 8
	%22 = call i1 @types-17.is_string(%Type_Info* %21, %Context* noalias nonnull %__.context_ptr)
	br i1 %22, label %if.then-1, label %if.else-10

if.then-1:
	; RangeStmt
	; val
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %1
		; idx
	store i64 zeroinitializer, i64* %2
		; SelectorExpr
	%23 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 2
	%24 = load {%Type_Info_Enum_Value*, i64}, {%Type_Info_Enum_Value*, i64}* %23, align 8
	store i64 zeroinitializer, i64* %3
	%25 = extractvalue {%Type_Info_Enum_Value*, i64} %24, 1
	store i64 %25, i64* %3
	store i64 zeroinitializer, i64* %4
	store i64 -1, i64* %4
	br label %for.index.loop-2

for.index.loop-2:
	%26 = load i64, i64* %4, align 8
	%27 = add i64 %26, 1
	store i64 %27, i64* %4
	%28 = load i64, i64* %3, align 8
	%29 = icmp slt i64 %27, %28
	br i1 %29, label %for.index.body-3, label %for.index.done-9

for.index.body-3:
	%30 = load i64, i64* %4, align 8
	%31 = extractvalue {%Type_Info_Enum_Value*, i64} %24, 0
	%32 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %31, i64 %30
	%33 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %32, align 8
	store %Type_Info_Enum_Value %33, %Type_Info_Enum_Value* %1
	store i64 %30, i64* %2
	; IfStmt
	; v
		; ok
		%34 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %1, align 8
	; cast - union_cast
	store {i16, i1} zeroinitializer, {i16, i1}* %7
	%35 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %1, i64 0, i32 2 ; UnionTagPtr
	%36 = load i8, i8* %35, align 1
	%37 = icmp eq i8 %36, 3
	br i1 %37, label %union_cast.ok-4, label %union_cast.end-5

union_cast.ok-4:
	%38 = getelementptr inbounds {i16, i1}, {i16, i1}* %7, i64 0, i32 0
	%39 = getelementptr inbounds {i16, i1}, {i16, i1}* %7, i64 0, i32 1
	%40 = bitcast %Type_Info_Enum_Value* %1 to i16*
	%41 = load i16, i16* %40, align 2
	store i16 %41, i16* %38
	store i1 true, i1* %39
	br label %union_cast.end-5

union_cast.end-5:
	%42 = load {i16, i1}, {i16, i1}* %7, align 2
	%43 = extractvalue {i16, i1} %42, 0
	%44 = extractvalue {i16, i1} %42, 1
	store i16 %43, i16* %5
	store i1 %44, i1* %6
	%45 = load i1, i1* %6, align 1
	br i1 %45, label %cmp.and-6, label %if.done-8

cmp.and-6:
	%46 = load i16, i16* %5, align 2
	%47 = load i16, i16* %0, align 2
	%48 = icmp eq i16 %46, %47
	br i1 %48, label %if.then-7, label %if.done-8

if.then-7:
	; ReturnStmt
	; IndexExpr
	; SelectorExpr
	%49 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 1
	%50 = load {%..string*, i64}, {%..string*, i64}* %49, align 8
	%51 = extractvalue {%..string*, i64} %50, 0
	%52 = load i64, i64* %2, align 8
	%53 = extractvalue {%..string*, i64} %50, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$a1, i64 0, i32 0), i64 28}, i64 642, i64 22, i64 %52, i64 %53)
	%54 = getelementptr inbounds %..string, %..string* %51, i64 %52
	%55 = load %..string, %..string* %54, align 8
	store {%..string, i1} zeroinitializer, {%..string, i1}* %8
	%56 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %8, i64 0, i32 0
	store %..string %55, %..string* %56
	%57 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %8, i64 0, i32 1
	store i1 true, i1* %57
	%58 = load {%..string, i1}, {%..string, i1}* %8, align 8
	ret {%..string, i1} %58

if.done-8:
	br label %for.index.loop-2

for.index.done-9:
	br label %if.done-21

if.else-10:
	; IfStmt
	; SelectorExpr
	%59 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 2
	%60 = load {%Type_Info_Enum_Value*, i64}, {%Type_Info_Enum_Value*, i64}* %59, align 8
	%61 = extractvalue {%Type_Info_Enum_Value*, i64} %60, 1
	%62 = icmp eq i64 %61, 0
	br i1 %62, label %if.then-11, label %if.else-12

if.then-11:
	; ReturnStmt
	store {%..string, i1} zeroinitializer, {%..string, i1}* %9
	%63 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %9, i64 0, i32 0
	store %..string zeroinitializer, %..string* %63
	%64 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %9, i64 0, i32 1
	store i1 true, i1* %64
	%65 = load {%..string, i1}, {%..string, i1}* %9, align 8
	ret {%..string, i1} %65

if.else-12:
	; RangeStmt
	; val
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %10
		; idx
	store i64 zeroinitializer, i64* %11
		; SelectorExpr
	%66 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 2
	%67 = load {%Type_Info_Enum_Value*, i64}, {%Type_Info_Enum_Value*, i64}* %66, align 8
	store i64 zeroinitializer, i64* %12
	%68 = extractvalue {%Type_Info_Enum_Value*, i64} %67, 1
	store i64 %68, i64* %12
	store i64 zeroinitializer, i64* %13
	store i64 -1, i64* %13
	br label %for.index.loop-13

for.index.loop-13:
	%69 = load i64, i64* %13, align 8
	%70 = add i64 %69, 1
	store i64 %70, i64* %13
	%71 = load i64, i64* %12, align 8
	%72 = icmp slt i64 %70, %71
	br i1 %72, label %for.index.body-14, label %for.index.done-20

for.index.body-14:
	%73 = load i64, i64* %13, align 8
	%74 = extractvalue {%Type_Info_Enum_Value*, i64} %67, 0
	%75 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %74, i64 %73
	%76 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %75, align 8
	store %Type_Info_Enum_Value %76, %Type_Info_Enum_Value* %10
	store i64 %73, i64* %11
	; IfStmt
	; v
		; ok
		%77 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %10, align 8
	; cast - union_cast
	store {i16, i1} zeroinitializer, {i16, i1}* %16
	%78 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %10, i64 0, i32 2 ; UnionTagPtr
	%79 = load i8, i8* %78, align 1
	%80 = icmp eq i8 %79, 3
	br i1 %80, label %union_cast.ok-15, label %union_cast.end-16

union_cast.ok-15:
	%81 = getelementptr inbounds {i16, i1}, {i16, i1}* %16, i64 0, i32 0
	%82 = getelementptr inbounds {i16, i1}, {i16, i1}* %16, i64 0, i32 1
	%83 = bitcast %Type_Info_Enum_Value* %10 to i16*
	%84 = load i16, i16* %83, align 2
	store i16 %84, i16* %81
	store i1 true, i1* %82
	br label %union_cast.end-16

union_cast.end-16:
	%85 = load {i16, i1}, {i16, i1}* %16, align 2
	%86 = extractvalue {i16, i1} %85, 0
	%87 = extractvalue {i16, i1} %85, 1
	store i16 %86, i16* %14
	store i1 %87, i1* %15
	%88 = load i1, i1* %15, align 1
	br i1 %88, label %cmp.and-17, label %if.done-19

cmp.and-17:
	%89 = load i16, i16* %14, align 2
	%90 = load i16, i16* %0, align 2
	%91 = icmp eq i16 %89, %90
	br i1 %91, label %if.then-18, label %if.done-19

if.then-18:
	; ReturnStmt
	; IndexExpr
	; SelectorExpr
	%92 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 1
	%93 = load {%..string*, i64}, {%..string*, i64}* %92, align 8
	%94 = extractvalue {%..string*, i64} %93, 0
	%95 = load i64, i64* %11, align 8
	%96 = extractvalue {%..string*, i64} %93, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$a2, i64 0, i32 0), i64 28}, i64 650, i64 22, i64 %95, i64 %96)
	%97 = getelementptr inbounds %..string, %..string* %94, i64 %95
	%98 = load %..string, %..string* %97, align 8
	store {%..string, i1} zeroinitializer, {%..string, i1}* %17
	%99 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %17, i64 0, i32 0
	store %..string %98, %..string* %99
	%100 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %17, i64 0, i32 1
	store i1 true, i1* %100
	%101 = load {%..string, i1}, {%..string, i1}* %17, align 8
	ret {%..string, i1} %101

if.done-19:
	br label %for.index.loop-13

for.index.done-20:
	br label %if.done-21

if.done-21:
	; ReturnStmt
	store {%..string, i1} zeroinitializer, {%..string, i1}* %18
	%102 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %18, i64 0, i32 0
	store %..string zeroinitializer, %..string* %102
	%103 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %18, i64 0, i32 1
	store i1 false, i1* %103
	%104 = load {%..string, i1}, {%..string, i1}* %18, align 8
	ret {%..string, i1} %104
}

define {%..string, i1} @fmt-4.enum_value_to_string.get_str-3(i32 %i, %Type_Info_Enum* %e, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca i32, align 4
	%1 = alloca %Type_Info_Enum_Value, align 8
	%2 = alloca i64, align 8
	%3 = alloca i64, align 8
	%4 = alloca i64, align 8
	%5 = alloca i32, align 4
	%6 = alloca i1, align 1
	%7 = alloca {i32, i1}, align 4
	%8 = alloca {%..string, i1}, align 8
	%9 = alloca {%..string, i1}, align 8
	%10 = alloca %Type_Info_Enum_Value, align 8
	%11 = alloca i64, align 8
	%12 = alloca i64, align 8
	%13 = alloca i64, align 8
	%14 = alloca i32, align 4
	%15 = alloca i1, align 1
	%16 = alloca {i32, i1}, align 4
	%17 = alloca {%..string, i1}, align 8
	%18 = alloca {%..string, i1}, align 8
		store i32 %i, i32* %0
	%19 = load %Type_Info_Enum, %Type_Info_Enum* %e, align 8
	; IfStmt
	; SelectorExpr
	; SelectorExpr
	%20 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 0
	%21 = load %Type_Info*, %Type_Info** %20, align 8
	%22 = call i1 @types-17.is_string(%Type_Info* %21, %Context* noalias nonnull %__.context_ptr)
	br i1 %22, label %if.then-1, label %if.else-10

if.then-1:
	; RangeStmt
	; val
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %1
		; idx
	store i64 zeroinitializer, i64* %2
		; SelectorExpr
	%23 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 2
	%24 = load {%Type_Info_Enum_Value*, i64}, {%Type_Info_Enum_Value*, i64}* %23, align 8
	store i64 zeroinitializer, i64* %3
	%25 = extractvalue {%Type_Info_Enum_Value*, i64} %24, 1
	store i64 %25, i64* %3
	store i64 zeroinitializer, i64* %4
	store i64 -1, i64* %4
	br label %for.index.loop-2

for.index.loop-2:
	%26 = load i64, i64* %4, align 8
	%27 = add i64 %26, 1
	store i64 %27, i64* %4
	%28 = load i64, i64* %3, align 8
	%29 = icmp slt i64 %27, %28
	br i1 %29, label %for.index.body-3, label %for.index.done-9

for.index.body-3:
	%30 = load i64, i64* %4, align 8
	%31 = extractvalue {%Type_Info_Enum_Value*, i64} %24, 0
	%32 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %31, i64 %30
	%33 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %32, align 8
	store %Type_Info_Enum_Value %33, %Type_Info_Enum_Value* %1
	store i64 %30, i64* %2
	; IfStmt
	; v
		; ok
		%34 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %1, align 8
	; cast - union_cast
	store {i32, i1} zeroinitializer, {i32, i1}* %7
	%35 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %1, i64 0, i32 2 ; UnionTagPtr
	%36 = load i8, i8* %35, align 1
	%37 = icmp eq i8 %36, 4
	br i1 %37, label %union_cast.ok-4, label %union_cast.end-5

union_cast.ok-4:
	%38 = getelementptr inbounds {i32, i1}, {i32, i1}* %7, i64 0, i32 0
	%39 = getelementptr inbounds {i32, i1}, {i32, i1}* %7, i64 0, i32 1
	%40 = bitcast %Type_Info_Enum_Value* %1 to i32*
	%41 = load i32, i32* %40, align 4
	store i32 %41, i32* %38
	store i1 true, i1* %39
	br label %union_cast.end-5

union_cast.end-5:
	%42 = load {i32, i1}, {i32, i1}* %7, align 4
	%43 = extractvalue {i32, i1} %42, 0
	%44 = extractvalue {i32, i1} %42, 1
	store i32 %43, i32* %5
	store i1 %44, i1* %6
	%45 = load i1, i1* %6, align 1
	br i1 %45, label %cmp.and-6, label %if.done-8

cmp.and-6:
	%46 = load i32, i32* %5, align 4
	%47 = load i32, i32* %0, align 4
	%48 = icmp eq i32 %46, %47
	br i1 %48, label %if.then-7, label %if.done-8

if.then-7:
	; ReturnStmt
	; IndexExpr
	; SelectorExpr
	%49 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 1
	%50 = load {%..string*, i64}, {%..string*, i64}* %49, align 8
	%51 = extractvalue {%..string*, i64} %50, 0
	%52 = load i64, i64* %2, align 8
	%53 = extractvalue {%..string*, i64} %50, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$a3, i64 0, i32 0), i64 28}, i64 642, i64 22, i64 %52, i64 %53)
	%54 = getelementptr inbounds %..string, %..string* %51, i64 %52
	%55 = load %..string, %..string* %54, align 8
	store {%..string, i1} zeroinitializer, {%..string, i1}* %8
	%56 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %8, i64 0, i32 0
	store %..string %55, %..string* %56
	%57 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %8, i64 0, i32 1
	store i1 true, i1* %57
	%58 = load {%..string, i1}, {%..string, i1}* %8, align 8
	ret {%..string, i1} %58

if.done-8:
	br label %for.index.loop-2

for.index.done-9:
	br label %if.done-21

if.else-10:
	; IfStmt
	; SelectorExpr
	%59 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 2
	%60 = load {%Type_Info_Enum_Value*, i64}, {%Type_Info_Enum_Value*, i64}* %59, align 8
	%61 = extractvalue {%Type_Info_Enum_Value*, i64} %60, 1
	%62 = icmp eq i64 %61, 0
	br i1 %62, label %if.then-11, label %if.else-12

if.then-11:
	; ReturnStmt
	store {%..string, i1} zeroinitializer, {%..string, i1}* %9
	%63 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %9, i64 0, i32 0
	store %..string zeroinitializer, %..string* %63
	%64 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %9, i64 0, i32 1
	store i1 true, i1* %64
	%65 = load {%..string, i1}, {%..string, i1}* %9, align 8
	ret {%..string, i1} %65

if.else-12:
	; RangeStmt
	; val
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %10
		; idx
	store i64 zeroinitializer, i64* %11
		; SelectorExpr
	%66 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 2
	%67 = load {%Type_Info_Enum_Value*, i64}, {%Type_Info_Enum_Value*, i64}* %66, align 8
	store i64 zeroinitializer, i64* %12
	%68 = extractvalue {%Type_Info_Enum_Value*, i64} %67, 1
	store i64 %68, i64* %12
	store i64 zeroinitializer, i64* %13
	store i64 -1, i64* %13
	br label %for.index.loop-13

for.index.loop-13:
	%69 = load i64, i64* %13, align 8
	%70 = add i64 %69, 1
	store i64 %70, i64* %13
	%71 = load i64, i64* %12, align 8
	%72 = icmp slt i64 %70, %71
	br i1 %72, label %for.index.body-14, label %for.index.done-20

for.index.body-14:
	%73 = load i64, i64* %13, align 8
	%74 = extractvalue {%Type_Info_Enum_Value*, i64} %67, 0
	%75 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %74, i64 %73
	%76 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %75, align 8
	store %Type_Info_Enum_Value %76, %Type_Info_Enum_Value* %10
	store i64 %73, i64* %11
	; IfStmt
	; v
		; ok
		%77 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %10, align 8
	; cast - union_cast
	store {i32, i1} zeroinitializer, {i32, i1}* %16
	%78 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %10, i64 0, i32 2 ; UnionTagPtr
	%79 = load i8, i8* %78, align 1
	%80 = icmp eq i8 %79, 4
	br i1 %80, label %union_cast.ok-15, label %union_cast.end-16

union_cast.ok-15:
	%81 = getelementptr inbounds {i32, i1}, {i32, i1}* %16, i64 0, i32 0
	%82 = getelementptr inbounds {i32, i1}, {i32, i1}* %16, i64 0, i32 1
	%83 = bitcast %Type_Info_Enum_Value* %10 to i32*
	%84 = load i32, i32* %83, align 4
	store i32 %84, i32* %81
	store i1 true, i1* %82
	br label %union_cast.end-16

union_cast.end-16:
	%85 = load {i32, i1}, {i32, i1}* %16, align 4
	%86 = extractvalue {i32, i1} %85, 0
	%87 = extractvalue {i32, i1} %85, 1
	store i32 %86, i32* %14
	store i1 %87, i1* %15
	%88 = load i1, i1* %15, align 1
	br i1 %88, label %cmp.and-17, label %if.done-19

cmp.and-17:
	%89 = load i32, i32* %14, align 4
	%90 = load i32, i32* %0, align 4
	%91 = icmp eq i32 %89, %90
	br i1 %91, label %if.then-18, label %if.done-19

if.then-18:
	; ReturnStmt
	; IndexExpr
	; SelectorExpr
	%92 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 1
	%93 = load {%..string*, i64}, {%..string*, i64}* %92, align 8
	%94 = extractvalue {%..string*, i64} %93, 0
	%95 = load i64, i64* %11, align 8
	%96 = extractvalue {%..string*, i64} %93, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$a4, i64 0, i32 0), i64 28}, i64 650, i64 22, i64 %95, i64 %96)
	%97 = getelementptr inbounds %..string, %..string* %94, i64 %95
	%98 = load %..string, %..string* %97, align 8
	store {%..string, i1} zeroinitializer, {%..string, i1}* %17
	%99 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %17, i64 0, i32 0
	store %..string %98, %..string* %99
	%100 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %17, i64 0, i32 1
	store i1 true, i1* %100
	%101 = load {%..string, i1}, {%..string, i1}* %17, align 8
	ret {%..string, i1} %101

if.done-19:
	br label %for.index.loop-13

for.index.done-20:
	br label %if.done-21

if.done-21:
	; ReturnStmt
	store {%..string, i1} zeroinitializer, {%..string, i1}* %18
	%102 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %18, i64 0, i32 0
	store %..string zeroinitializer, %..string* %102
	%103 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %18, i64 0, i32 1
	store i1 false, i1* %103
	%104 = load {%..string, i1}, {%..string, i1}* %18, align 8
	ret {%..string, i1} %104
}

define {%..string, i1} @fmt-4.enum_value_to_string.get_str-4(i64 %i, %Type_Info_Enum* %e, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca i64, align 8
	%1 = alloca %Type_Info_Enum_Value, align 8
	%2 = alloca i64, align 8
	%3 = alloca i64, align 8
	%4 = alloca i64, align 8
	%5 = alloca i64, align 8
	%6 = alloca i1, align 1
	%7 = alloca {i64, i1}, align 8
	%8 = alloca {%..string, i1}, align 8
	%9 = alloca {%..string, i1}, align 8
	%10 = alloca %Type_Info_Enum_Value, align 8
	%11 = alloca i64, align 8
	%12 = alloca i64, align 8
	%13 = alloca i64, align 8
	%14 = alloca i64, align 8
	%15 = alloca i1, align 1
	%16 = alloca {i64, i1}, align 8
	%17 = alloca {%..string, i1}, align 8
	%18 = alloca {%..string, i1}, align 8
		store i64 %i, i64* %0
	%19 = load %Type_Info_Enum, %Type_Info_Enum* %e, align 8
	; IfStmt
	; SelectorExpr
	; SelectorExpr
	%20 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 0
	%21 = load %Type_Info*, %Type_Info** %20, align 8
	%22 = call i1 @types-17.is_string(%Type_Info* %21, %Context* noalias nonnull %__.context_ptr)
	br i1 %22, label %if.then-1, label %if.else-10

if.then-1:
	; RangeStmt
	; val
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %1
		; idx
	store i64 zeroinitializer, i64* %2
		; SelectorExpr
	%23 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 2
	%24 = load {%Type_Info_Enum_Value*, i64}, {%Type_Info_Enum_Value*, i64}* %23, align 8
	store i64 zeroinitializer, i64* %3
	%25 = extractvalue {%Type_Info_Enum_Value*, i64} %24, 1
	store i64 %25, i64* %3
	store i64 zeroinitializer, i64* %4
	store i64 -1, i64* %4
	br label %for.index.loop-2

for.index.loop-2:
	%26 = load i64, i64* %4, align 8
	%27 = add i64 %26, 1
	store i64 %27, i64* %4
	%28 = load i64, i64* %3, align 8
	%29 = icmp slt i64 %27, %28
	br i1 %29, label %for.index.body-3, label %for.index.done-9

for.index.body-3:
	%30 = load i64, i64* %4, align 8
	%31 = extractvalue {%Type_Info_Enum_Value*, i64} %24, 0
	%32 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %31, i64 %30
	%33 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %32, align 8
	store %Type_Info_Enum_Value %33, %Type_Info_Enum_Value* %1
	store i64 %30, i64* %2
	; IfStmt
	; v
		; ok
		%34 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %1, align 8
	; cast - union_cast
	store {i64, i1} zeroinitializer, {i64, i1}* %7
	%35 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %1, i64 0, i32 2 ; UnionTagPtr
	%36 = load i8, i8* %35, align 1
	%37 = icmp eq i8 %36, 5
	br i1 %37, label %union_cast.ok-4, label %union_cast.end-5

union_cast.ok-4:
	%38 = getelementptr inbounds {i64, i1}, {i64, i1}* %7, i64 0, i32 0
	%39 = getelementptr inbounds {i64, i1}, {i64, i1}* %7, i64 0, i32 1
	%40 = bitcast %Type_Info_Enum_Value* %1 to i64*
	%41 = load i64, i64* %40, align 8
	store i64 %41, i64* %38
	store i1 true, i1* %39
	br label %union_cast.end-5

union_cast.end-5:
	%42 = load {i64, i1}, {i64, i1}* %7, align 8
	%43 = extractvalue {i64, i1} %42, 0
	%44 = extractvalue {i64, i1} %42, 1
	store i64 %43, i64* %5
	store i1 %44, i1* %6
	%45 = load i1, i1* %6, align 1
	br i1 %45, label %cmp.and-6, label %if.done-8

cmp.and-6:
	%46 = load i64, i64* %5, align 8
	%47 = load i64, i64* %0, align 8
	%48 = icmp eq i64 %46, %47
	br i1 %48, label %if.then-7, label %if.done-8

if.then-7:
	; ReturnStmt
	; IndexExpr
	; SelectorExpr
	%49 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 1
	%50 = load {%..string*, i64}, {%..string*, i64}* %49, align 8
	%51 = extractvalue {%..string*, i64} %50, 0
	%52 = load i64, i64* %2, align 8
	%53 = extractvalue {%..string*, i64} %50, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$a5, i64 0, i32 0), i64 28}, i64 642, i64 22, i64 %52, i64 %53)
	%54 = getelementptr inbounds %..string, %..string* %51, i64 %52
	%55 = load %..string, %..string* %54, align 8
	store {%..string, i1} zeroinitializer, {%..string, i1}* %8
	%56 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %8, i64 0, i32 0
	store %..string %55, %..string* %56
	%57 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %8, i64 0, i32 1
	store i1 true, i1* %57
	%58 = load {%..string, i1}, {%..string, i1}* %8, align 8
	ret {%..string, i1} %58

if.done-8:
	br label %for.index.loop-2

for.index.done-9:
	br label %if.done-21

if.else-10:
	; IfStmt
	; SelectorExpr
	%59 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 2
	%60 = load {%Type_Info_Enum_Value*, i64}, {%Type_Info_Enum_Value*, i64}* %59, align 8
	%61 = extractvalue {%Type_Info_Enum_Value*, i64} %60, 1
	%62 = icmp eq i64 %61, 0
	br i1 %62, label %if.then-11, label %if.else-12

if.then-11:
	; ReturnStmt
	store {%..string, i1} zeroinitializer, {%..string, i1}* %9
	%63 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %9, i64 0, i32 0
	store %..string zeroinitializer, %..string* %63
	%64 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %9, i64 0, i32 1
	store i1 true, i1* %64
	%65 = load {%..string, i1}, {%..string, i1}* %9, align 8
	ret {%..string, i1} %65

if.else-12:
	; RangeStmt
	; val
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %10
		; idx
	store i64 zeroinitializer, i64* %11
		; SelectorExpr
	%66 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 2
	%67 = load {%Type_Info_Enum_Value*, i64}, {%Type_Info_Enum_Value*, i64}* %66, align 8
	store i64 zeroinitializer, i64* %12
	%68 = extractvalue {%Type_Info_Enum_Value*, i64} %67, 1
	store i64 %68, i64* %12
	store i64 zeroinitializer, i64* %13
	store i64 -1, i64* %13
	br label %for.index.loop-13

for.index.loop-13:
	%69 = load i64, i64* %13, align 8
	%70 = add i64 %69, 1
	store i64 %70, i64* %13
	%71 = load i64, i64* %12, align 8
	%72 = icmp slt i64 %70, %71
	br i1 %72, label %for.index.body-14, label %for.index.done-20

for.index.body-14:
	%73 = load i64, i64* %13, align 8
	%74 = extractvalue {%Type_Info_Enum_Value*, i64} %67, 0
	%75 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %74, i64 %73
	%76 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %75, align 8
	store %Type_Info_Enum_Value %76, %Type_Info_Enum_Value* %10
	store i64 %73, i64* %11
	; IfStmt
	; v
		; ok
		%77 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %10, align 8
	; cast - union_cast
	store {i64, i1} zeroinitializer, {i64, i1}* %16
	%78 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %10, i64 0, i32 2 ; UnionTagPtr
	%79 = load i8, i8* %78, align 1
	%80 = icmp eq i8 %79, 5
	br i1 %80, label %union_cast.ok-15, label %union_cast.end-16

union_cast.ok-15:
	%81 = getelementptr inbounds {i64, i1}, {i64, i1}* %16, i64 0, i32 0
	%82 = getelementptr inbounds {i64, i1}, {i64, i1}* %16, i64 0, i32 1
	%83 = bitcast %Type_Info_Enum_Value* %10 to i64*
	%84 = load i64, i64* %83, align 8
	store i64 %84, i64* %81
	store i1 true, i1* %82
	br label %union_cast.end-16

union_cast.end-16:
	%85 = load {i64, i1}, {i64, i1}* %16, align 8
	%86 = extractvalue {i64, i1} %85, 0
	%87 = extractvalue {i64, i1} %85, 1
	store i64 %86, i64* %14
	store i1 %87, i1* %15
	%88 = load i1, i1* %15, align 1
	br i1 %88, label %cmp.and-17, label %if.done-19

cmp.and-17:
	%89 = load i64, i64* %14, align 8
	%90 = load i64, i64* %0, align 8
	%91 = icmp eq i64 %89, %90
	br i1 %91, label %if.then-18, label %if.done-19

if.then-18:
	; ReturnStmt
	; IndexExpr
	; SelectorExpr
	%92 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 1
	%93 = load {%..string*, i64}, {%..string*, i64}* %92, align 8
	%94 = extractvalue {%..string*, i64} %93, 0
	%95 = load i64, i64* %11, align 8
	%96 = extractvalue {%..string*, i64} %93, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$a6, i64 0, i32 0), i64 28}, i64 650, i64 22, i64 %95, i64 %96)
	%97 = getelementptr inbounds %..string, %..string* %94, i64 %95
	%98 = load %..string, %..string* %97, align 8
	store {%..string, i1} zeroinitializer, {%..string, i1}* %17
	%99 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %17, i64 0, i32 0
	store %..string %98, %..string* %99
	%100 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %17, i64 0, i32 1
	store i1 true, i1* %100
	%101 = load {%..string, i1}, {%..string, i1}* %17, align 8
	ret {%..string, i1} %101

if.done-19:
	br label %for.index.loop-13

for.index.done-20:
	br label %if.done-21

if.done-21:
	; ReturnStmt
	store {%..string, i1} zeroinitializer, {%..string, i1}* %18
	%102 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %18, i64 0, i32 0
	store %..string zeroinitializer, %..string* %102
	%103 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %18, i64 0, i32 1
	store i1 false, i1* %103
	%104 = load {%..string, i1}, {%..string, i1}* %18, align 8
	ret {%..string, i1} %104
}

define {%..string, i1} @fmt-4.enum_value_to_string.get_str-5(i128* %i, %Type_Info_Enum* %e, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca %Type_Info_Enum_Value, align 8
	%1 = alloca i64, align 8
	%2 = alloca i64, align 8
	%3 = alloca i64, align 8
	%4 = alloca i128, align 8
	%5 = alloca i1, align 1
	%6 = alloca {i128, i1}, align 8
	%7 = alloca {%..string, i1}, align 8
	%8 = alloca {%..string, i1}, align 8
	%9 = alloca %Type_Info_Enum_Value, align 8
	%10 = alloca i64, align 8
	%11 = alloca i64, align 8
	%12 = alloca i64, align 8
	%13 = alloca i128, align 8
	%14 = alloca i1, align 1
	%15 = alloca {i128, i1}, align 8
	%16 = alloca {%..string, i1}, align 8
	%17 = alloca {%..string, i1}, align 8
	%18 = load i128, i128* %i, align 8
	%19 = load %Type_Info_Enum, %Type_Info_Enum* %e, align 8
	; IfStmt
	; SelectorExpr
	; SelectorExpr
	%20 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 0
	%21 = load %Type_Info*, %Type_Info** %20, align 8
	%22 = call i1 @types-17.is_string(%Type_Info* %21, %Context* noalias nonnull %__.context_ptr)
	br i1 %22, label %if.then-1, label %if.else-10

if.then-1:
	; RangeStmt
	; val
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %0
		; idx
	store i64 zeroinitializer, i64* %1
		; SelectorExpr
	%23 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 2
	%24 = load {%Type_Info_Enum_Value*, i64}, {%Type_Info_Enum_Value*, i64}* %23, align 8
	store i64 zeroinitializer, i64* %2
	%25 = extractvalue {%Type_Info_Enum_Value*, i64} %24, 1
	store i64 %25, i64* %2
	store i64 zeroinitializer, i64* %3
	store i64 -1, i64* %3
	br label %for.index.loop-2

for.index.loop-2:
	%26 = load i64, i64* %3, align 8
	%27 = add i64 %26, 1
	store i64 %27, i64* %3
	%28 = load i64, i64* %2, align 8
	%29 = icmp slt i64 %27, %28
	br i1 %29, label %for.index.body-3, label %for.index.done-9

for.index.body-3:
	%30 = load i64, i64* %3, align 8
	%31 = extractvalue {%Type_Info_Enum_Value*, i64} %24, 0
	%32 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %31, i64 %30
	%33 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %32, align 8
	store %Type_Info_Enum_Value %33, %Type_Info_Enum_Value* %0
	store i64 %30, i64* %1
	; IfStmt
	; v
		; ok
		%34 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %0, align 8
	; cast - union_cast
	store {i128, i1} zeroinitializer, {i128, i1}* %6
	%35 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %0, i64 0, i32 2 ; UnionTagPtr
	%36 = load i8, i8* %35, align 1
	%37 = icmp eq i8 %36, 6
	br i1 %37, label %union_cast.ok-4, label %union_cast.end-5

union_cast.ok-4:
	%38 = getelementptr inbounds {i128, i1}, {i128, i1}* %6, i64 0, i32 0
	%39 = getelementptr inbounds {i128, i1}, {i128, i1}* %6, i64 0, i32 1
	%40 = bitcast %Type_Info_Enum_Value* %0 to i128*
	%41 = load i128, i128* %40, align 8
	store i128 %41, i128* %38
	store i1 true, i1* %39
	br label %union_cast.end-5

union_cast.end-5:
	%42 = load {i128, i1}, {i128, i1}* %6, align 8
	%43 = extractvalue {i128, i1} %42, 0
	%44 = extractvalue {i128, i1} %42, 1
	store i128 %43, i128* %4
	store i1 %44, i1* %5
	%45 = load i1, i1* %5, align 1
	br i1 %45, label %cmp.and-6, label %if.done-8

cmp.and-6:
	%46 = load i128, i128* %4, align 8
	%47 = load i128, i128* %i, align 8
	%48 = icmp eq i128 %46, %47
	br i1 %48, label %if.then-7, label %if.done-8

if.then-7:
	; ReturnStmt
	; IndexExpr
	; SelectorExpr
	%49 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 1
	%50 = load {%..string*, i64}, {%..string*, i64}* %49, align 8
	%51 = extractvalue {%..string*, i64} %50, 0
	%52 = load i64, i64* %1, align 8
	%53 = extractvalue {%..string*, i64} %50, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$a7, i64 0, i32 0), i64 28}, i64 642, i64 22, i64 %52, i64 %53)
	%54 = getelementptr inbounds %..string, %..string* %51, i64 %52
	%55 = load %..string, %..string* %54, align 8
	store {%..string, i1} zeroinitializer, {%..string, i1}* %7
	%56 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %7, i64 0, i32 0
	store %..string %55, %..string* %56
	%57 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %7, i64 0, i32 1
	store i1 true, i1* %57
	%58 = load {%..string, i1}, {%..string, i1}* %7, align 8
	ret {%..string, i1} %58

if.done-8:
	br label %for.index.loop-2

for.index.done-9:
	br label %if.done-21

if.else-10:
	; IfStmt
	; SelectorExpr
	%59 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 2
	%60 = load {%Type_Info_Enum_Value*, i64}, {%Type_Info_Enum_Value*, i64}* %59, align 8
	%61 = extractvalue {%Type_Info_Enum_Value*, i64} %60, 1
	%62 = icmp eq i64 %61, 0
	br i1 %62, label %if.then-11, label %if.else-12

if.then-11:
	; ReturnStmt
	store {%..string, i1} zeroinitializer, {%..string, i1}* %8
	%63 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %8, i64 0, i32 0
	store %..string zeroinitializer, %..string* %63
	%64 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %8, i64 0, i32 1
	store i1 true, i1* %64
	%65 = load {%..string, i1}, {%..string, i1}* %8, align 8
	ret {%..string, i1} %65

if.else-12:
	; RangeStmt
	; val
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %9
		; idx
	store i64 zeroinitializer, i64* %10
		; SelectorExpr
	%66 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 2
	%67 = load {%Type_Info_Enum_Value*, i64}, {%Type_Info_Enum_Value*, i64}* %66, align 8
	store i64 zeroinitializer, i64* %11
	%68 = extractvalue {%Type_Info_Enum_Value*, i64} %67, 1
	store i64 %68, i64* %11
	store i64 zeroinitializer, i64* %12
	store i64 -1, i64* %12
	br label %for.index.loop-13

for.index.loop-13:
	%69 = load i64, i64* %12, align 8
	%70 = add i64 %69, 1
	store i64 %70, i64* %12
	%71 = load i64, i64* %11, align 8
	%72 = icmp slt i64 %70, %71
	br i1 %72, label %for.index.body-14, label %for.index.done-20

for.index.body-14:
	%73 = load i64, i64* %12, align 8
	%74 = extractvalue {%Type_Info_Enum_Value*, i64} %67, 0
	%75 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %74, i64 %73
	%76 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %75, align 8
	store %Type_Info_Enum_Value %76, %Type_Info_Enum_Value* %9
	store i64 %73, i64* %10
	; IfStmt
	; v
		; ok
		%77 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %9, align 8
	; cast - union_cast
	store {i128, i1} zeroinitializer, {i128, i1}* %15
	%78 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %9, i64 0, i32 2 ; UnionTagPtr
	%79 = load i8, i8* %78, align 1
	%80 = icmp eq i8 %79, 6
	br i1 %80, label %union_cast.ok-15, label %union_cast.end-16

union_cast.ok-15:
	%81 = getelementptr inbounds {i128, i1}, {i128, i1}* %15, i64 0, i32 0
	%82 = getelementptr inbounds {i128, i1}, {i128, i1}* %15, i64 0, i32 1
	%83 = bitcast %Type_Info_Enum_Value* %9 to i128*
	%84 = load i128, i128* %83, align 8
	store i128 %84, i128* %81
	store i1 true, i1* %82
	br label %union_cast.end-16

union_cast.end-16:
	%85 = load {i128, i1}, {i128, i1}* %15, align 8
	%86 = extractvalue {i128, i1} %85, 0
	%87 = extractvalue {i128, i1} %85, 1
	store i128 %86, i128* %13
	store i1 %87, i1* %14
	%88 = load i1, i1* %14, align 1
	br i1 %88, label %cmp.and-17, label %if.done-19

cmp.and-17:
	%89 = load i128, i128* %13, align 8
	%90 = load i128, i128* %i, align 8
	%91 = icmp eq i128 %89, %90
	br i1 %91, label %if.then-18, label %if.done-19

if.then-18:
	; ReturnStmt
	; IndexExpr
	; SelectorExpr
	%92 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 1
	%93 = load {%..string*, i64}, {%..string*, i64}* %92, align 8
	%94 = extractvalue {%..string*, i64} %93, 0
	%95 = load i64, i64* %10, align 8
	%96 = extractvalue {%..string*, i64} %93, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$a8, i64 0, i32 0), i64 28}, i64 650, i64 22, i64 %95, i64 %96)
	%97 = getelementptr inbounds %..string, %..string* %94, i64 %95
	%98 = load %..string, %..string* %97, align 8
	store {%..string, i1} zeroinitializer, {%..string, i1}* %16
	%99 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %16, i64 0, i32 0
	store %..string %98, %..string* %99
	%100 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %16, i64 0, i32 1
	store i1 true, i1* %100
	%101 = load {%..string, i1}, {%..string, i1}* %16, align 8
	ret {%..string, i1} %101

if.done-19:
	br label %for.index.loop-13

for.index.done-20:
	br label %if.done-21

if.done-21:
	; ReturnStmt
	store {%..string, i1} zeroinitializer, {%..string, i1}* %17
	%102 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %17, i64 0, i32 0
	store %..string zeroinitializer, %..string* %102
	%103 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %17, i64 0, i32 1
	store i1 false, i1* %103
	%104 = load {%..string, i1}, {%..string, i1}* %17, align 8
	ret {%..string, i1} %104
}

define {%..string, i1} @fmt-4.enum_value_to_string.get_str-6(i64 %i, %Type_Info_Enum* %e, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca i64, align 8
	%1 = alloca %Type_Info_Enum_Value, align 8
	%2 = alloca i64, align 8
	%3 = alloca i64, align 8
	%4 = alloca i64, align 8
	%5 = alloca i64, align 8
	%6 = alloca i1, align 1
	%7 = alloca {i64, i1}, align 8
	%8 = alloca {%..string, i1}, align 8
	%9 = alloca {%..string, i1}, align 8
	%10 = alloca %Type_Info_Enum_Value, align 8
	%11 = alloca i64, align 8
	%12 = alloca i64, align 8
	%13 = alloca i64, align 8
	%14 = alloca i64, align 8
	%15 = alloca i1, align 1
	%16 = alloca {i64, i1}, align 8
	%17 = alloca {%..string, i1}, align 8
	%18 = alloca {%..string, i1}, align 8
		store i64 %i, i64* %0
	%19 = load %Type_Info_Enum, %Type_Info_Enum* %e, align 8
	; IfStmt
	; SelectorExpr
	; SelectorExpr
	%20 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 0
	%21 = load %Type_Info*, %Type_Info** %20, align 8
	%22 = call i1 @types-17.is_string(%Type_Info* %21, %Context* noalias nonnull %__.context_ptr)
	br i1 %22, label %if.then-1, label %if.else-10

if.then-1:
	; RangeStmt
	; val
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %1
		; idx
	store i64 zeroinitializer, i64* %2
		; SelectorExpr
	%23 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 2
	%24 = load {%Type_Info_Enum_Value*, i64}, {%Type_Info_Enum_Value*, i64}* %23, align 8
	store i64 zeroinitializer, i64* %3
	%25 = extractvalue {%Type_Info_Enum_Value*, i64} %24, 1
	store i64 %25, i64* %3
	store i64 zeroinitializer, i64* %4
	store i64 -1, i64* %4
	br label %for.index.loop-2

for.index.loop-2:
	%26 = load i64, i64* %4, align 8
	%27 = add i64 %26, 1
	store i64 %27, i64* %4
	%28 = load i64, i64* %3, align 8
	%29 = icmp slt i64 %27, %28
	br i1 %29, label %for.index.body-3, label %for.index.done-9

for.index.body-3:
	%30 = load i64, i64* %4, align 8
	%31 = extractvalue {%Type_Info_Enum_Value*, i64} %24, 0
	%32 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %31, i64 %30
	%33 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %32, align 8
	store %Type_Info_Enum_Value %33, %Type_Info_Enum_Value* %1
	store i64 %30, i64* %2
	; IfStmt
	; v
		; ok
		%34 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %1, align 8
	; cast - union_cast
	store {i64, i1} zeroinitializer, {i64, i1}* %7
	%35 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %1, i64 0, i32 2 ; UnionTagPtr
	%36 = load i8, i8* %35, align 1
	%37 = icmp eq i8 %36, 7
	br i1 %37, label %union_cast.ok-4, label %union_cast.end-5

union_cast.ok-4:
	%38 = getelementptr inbounds {i64, i1}, {i64, i1}* %7, i64 0, i32 0
	%39 = getelementptr inbounds {i64, i1}, {i64, i1}* %7, i64 0, i32 1
	%40 = bitcast %Type_Info_Enum_Value* %1 to i64*
	%41 = load i64, i64* %40, align 8
	store i64 %41, i64* %38
	store i1 true, i1* %39
	br label %union_cast.end-5

union_cast.end-5:
	%42 = load {i64, i1}, {i64, i1}* %7, align 8
	%43 = extractvalue {i64, i1} %42, 0
	%44 = extractvalue {i64, i1} %42, 1
	store i64 %43, i64* %5
	store i1 %44, i1* %6
	%45 = load i1, i1* %6, align 1
	br i1 %45, label %cmp.and-6, label %if.done-8

cmp.and-6:
	%46 = load i64, i64* %5, align 8
	%47 = load i64, i64* %0, align 8
	%48 = icmp eq i64 %46, %47
	br i1 %48, label %if.then-7, label %if.done-8

if.then-7:
	; ReturnStmt
	; IndexExpr
	; SelectorExpr
	%49 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 1
	%50 = load {%..string*, i64}, {%..string*, i64}* %49, align 8
	%51 = extractvalue {%..string*, i64} %50, 0
	%52 = load i64, i64* %2, align 8
	%53 = extractvalue {%..string*, i64} %50, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$a9, i64 0, i32 0), i64 28}, i64 642, i64 22, i64 %52, i64 %53)
	%54 = getelementptr inbounds %..string, %..string* %51, i64 %52
	%55 = load %..string, %..string* %54, align 8
	store {%..string, i1} zeroinitializer, {%..string, i1}* %8
	%56 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %8, i64 0, i32 0
	store %..string %55, %..string* %56
	%57 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %8, i64 0, i32 1
	store i1 true, i1* %57
	%58 = load {%..string, i1}, {%..string, i1}* %8, align 8
	ret {%..string, i1} %58

if.done-8:
	br label %for.index.loop-2

for.index.done-9:
	br label %if.done-21

if.else-10:
	; IfStmt
	; SelectorExpr
	%59 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 2
	%60 = load {%Type_Info_Enum_Value*, i64}, {%Type_Info_Enum_Value*, i64}* %59, align 8
	%61 = extractvalue {%Type_Info_Enum_Value*, i64} %60, 1
	%62 = icmp eq i64 %61, 0
	br i1 %62, label %if.then-11, label %if.else-12

if.then-11:
	; ReturnStmt
	store {%..string, i1} zeroinitializer, {%..string, i1}* %9
	%63 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %9, i64 0, i32 0
	store %..string zeroinitializer, %..string* %63
	%64 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %9, i64 0, i32 1
	store i1 true, i1* %64
	%65 = load {%..string, i1}, {%..string, i1}* %9, align 8
	ret {%..string, i1} %65

if.else-12:
	; RangeStmt
	; val
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %10
		; idx
	store i64 zeroinitializer, i64* %11
		; SelectorExpr
	%66 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 2
	%67 = load {%Type_Info_Enum_Value*, i64}, {%Type_Info_Enum_Value*, i64}* %66, align 8
	store i64 zeroinitializer, i64* %12
	%68 = extractvalue {%Type_Info_Enum_Value*, i64} %67, 1
	store i64 %68, i64* %12
	store i64 zeroinitializer, i64* %13
	store i64 -1, i64* %13
	br label %for.index.loop-13

for.index.loop-13:
	%69 = load i64, i64* %13, align 8
	%70 = add i64 %69, 1
	store i64 %70, i64* %13
	%71 = load i64, i64* %12, align 8
	%72 = icmp slt i64 %70, %71
	br i1 %72, label %for.index.body-14, label %for.index.done-20

for.index.body-14:
	%73 = load i64, i64* %13, align 8
	%74 = extractvalue {%Type_Info_Enum_Value*, i64} %67, 0
	%75 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %74, i64 %73
	%76 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %75, align 8
	store %Type_Info_Enum_Value %76, %Type_Info_Enum_Value* %10
	store i64 %73, i64* %11
	; IfStmt
	; v
		; ok
		%77 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %10, align 8
	; cast - union_cast
	store {i64, i1} zeroinitializer, {i64, i1}* %16
	%78 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %10, i64 0, i32 2 ; UnionTagPtr
	%79 = load i8, i8* %78, align 1
	%80 = icmp eq i8 %79, 7
	br i1 %80, label %union_cast.ok-15, label %union_cast.end-16

union_cast.ok-15:
	%81 = getelementptr inbounds {i64, i1}, {i64, i1}* %16, i64 0, i32 0
	%82 = getelementptr inbounds {i64, i1}, {i64, i1}* %16, i64 0, i32 1
	%83 = bitcast %Type_Info_Enum_Value* %10 to i64*
	%84 = load i64, i64* %83, align 8
	store i64 %84, i64* %81
	store i1 true, i1* %82
	br label %union_cast.end-16

union_cast.end-16:
	%85 = load {i64, i1}, {i64, i1}* %16, align 8
	%86 = extractvalue {i64, i1} %85, 0
	%87 = extractvalue {i64, i1} %85, 1
	store i64 %86, i64* %14
	store i1 %87, i1* %15
	%88 = load i1, i1* %15, align 1
	br i1 %88, label %cmp.and-17, label %if.done-19

cmp.and-17:
	%89 = load i64, i64* %14, align 8
	%90 = load i64, i64* %0, align 8
	%91 = icmp eq i64 %89, %90
	br i1 %91, label %if.then-18, label %if.done-19

if.then-18:
	; ReturnStmt
	; IndexExpr
	; SelectorExpr
	%92 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 1
	%93 = load {%..string*, i64}, {%..string*, i64}* %92, align 8
	%94 = extractvalue {%..string*, i64} %93, 0
	%95 = load i64, i64* %11, align 8
	%96 = extractvalue {%..string*, i64} %93, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$aa, i64 0, i32 0), i64 28}, i64 650, i64 22, i64 %95, i64 %96)
	%97 = getelementptr inbounds %..string, %..string* %94, i64 %95
	%98 = load %..string, %..string* %97, align 8
	store {%..string, i1} zeroinitializer, {%..string, i1}* %17
	%99 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %17, i64 0, i32 0
	store %..string %98, %..string* %99
	%100 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %17, i64 0, i32 1
	store i1 true, i1* %100
	%101 = load {%..string, i1}, {%..string, i1}* %17, align 8
	ret {%..string, i1} %101

if.done-19:
	br label %for.index.loop-13

for.index.done-20:
	br label %if.done-21

if.done-21:
	; ReturnStmt
	store {%..string, i1} zeroinitializer, {%..string, i1}* %18
	%102 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %18, i64 0, i32 0
	store %..string zeroinitializer, %..string* %102
	%103 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %18, i64 0, i32 1
	store i1 false, i1* %103
	%104 = load {%..string, i1}, {%..string, i1}* %18, align 8
	ret {%..string, i1} %104
}

define {%..string, i1} @fmt-4.enum_value_to_string.get_str-7(i8 %i, %Type_Info_Enum* %e, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca i8, align 1
	%1 = alloca %Type_Info_Enum_Value, align 8
	%2 = alloca i64, align 8
	%3 = alloca i64, align 8
	%4 = alloca i64, align 8
	%5 = alloca i8, align 1
	%6 = alloca i1, align 1
	%7 = alloca {i8, i1}, align 1
	%8 = alloca {%..string, i1}, align 8
	%9 = alloca {%..string, i1}, align 8
	%10 = alloca %Type_Info_Enum_Value, align 8
	%11 = alloca i64, align 8
	%12 = alloca i64, align 8
	%13 = alloca i64, align 8
	%14 = alloca i8, align 1
	%15 = alloca i1, align 1
	%16 = alloca {i8, i1}, align 1
	%17 = alloca {%..string, i1}, align 8
	%18 = alloca {%..string, i1}, align 8
		store i8 %i, i8* %0
	%19 = load %Type_Info_Enum, %Type_Info_Enum* %e, align 8
	; IfStmt
	; SelectorExpr
	; SelectorExpr
	%20 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 0
	%21 = load %Type_Info*, %Type_Info** %20, align 8
	%22 = call i1 @types-17.is_string(%Type_Info* %21, %Context* noalias nonnull %__.context_ptr)
	br i1 %22, label %if.then-1, label %if.else-10

if.then-1:
	; RangeStmt
	; val
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %1
		; idx
	store i64 zeroinitializer, i64* %2
		; SelectorExpr
	%23 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 2
	%24 = load {%Type_Info_Enum_Value*, i64}, {%Type_Info_Enum_Value*, i64}* %23, align 8
	store i64 zeroinitializer, i64* %3
	%25 = extractvalue {%Type_Info_Enum_Value*, i64} %24, 1
	store i64 %25, i64* %3
	store i64 zeroinitializer, i64* %4
	store i64 -1, i64* %4
	br label %for.index.loop-2

for.index.loop-2:
	%26 = load i64, i64* %4, align 8
	%27 = add i64 %26, 1
	store i64 %27, i64* %4
	%28 = load i64, i64* %3, align 8
	%29 = icmp slt i64 %27, %28
	br i1 %29, label %for.index.body-3, label %for.index.done-9

for.index.body-3:
	%30 = load i64, i64* %4, align 8
	%31 = extractvalue {%Type_Info_Enum_Value*, i64} %24, 0
	%32 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %31, i64 %30
	%33 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %32, align 8
	store %Type_Info_Enum_Value %33, %Type_Info_Enum_Value* %1
	store i64 %30, i64* %2
	; IfStmt
	; v
		; ok
		%34 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %1, align 8
	; cast - union_cast
	store {i8, i1} zeroinitializer, {i8, i1}* %7
	%35 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %1, i64 0, i32 2 ; UnionTagPtr
	%36 = load i8, i8* %35, align 1
	%37 = icmp eq i8 %36, 8
	br i1 %37, label %union_cast.ok-4, label %union_cast.end-5

union_cast.ok-4:
	%38 = getelementptr inbounds {i8, i1}, {i8, i1}* %7, i64 0, i32 0
	%39 = getelementptr inbounds {i8, i1}, {i8, i1}* %7, i64 0, i32 1
	%40 = bitcast %Type_Info_Enum_Value* %1 to i8*
	%41 = load i8, i8* %40, align 1
	store i8 %41, i8* %38
	store i1 true, i1* %39
	br label %union_cast.end-5

union_cast.end-5:
	%42 = load {i8, i1}, {i8, i1}* %7, align 1
	%43 = extractvalue {i8, i1} %42, 0
	%44 = extractvalue {i8, i1} %42, 1
	store i8 %43, i8* %5
	store i1 %44, i1* %6
	%45 = load i1, i1* %6, align 1
	br i1 %45, label %cmp.and-6, label %if.done-8

cmp.and-6:
	%46 = load i8, i8* %5, align 1
	%47 = load i8, i8* %0, align 1
	%48 = icmp eq i8 %46, %47
	br i1 %48, label %if.then-7, label %if.done-8

if.then-7:
	; ReturnStmt
	; IndexExpr
	; SelectorExpr
	%49 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 1
	%50 = load {%..string*, i64}, {%..string*, i64}* %49, align 8
	%51 = extractvalue {%..string*, i64} %50, 0
	%52 = load i64, i64* %2, align 8
	%53 = extractvalue {%..string*, i64} %50, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$ab, i64 0, i32 0), i64 28}, i64 642, i64 22, i64 %52, i64 %53)
	%54 = getelementptr inbounds %..string, %..string* %51, i64 %52
	%55 = load %..string, %..string* %54, align 8
	store {%..string, i1} zeroinitializer, {%..string, i1}* %8
	%56 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %8, i64 0, i32 0
	store %..string %55, %..string* %56
	%57 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %8, i64 0, i32 1
	store i1 true, i1* %57
	%58 = load {%..string, i1}, {%..string, i1}* %8, align 8
	ret {%..string, i1} %58

if.done-8:
	br label %for.index.loop-2

for.index.done-9:
	br label %if.done-21

if.else-10:
	; IfStmt
	; SelectorExpr
	%59 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 2
	%60 = load {%Type_Info_Enum_Value*, i64}, {%Type_Info_Enum_Value*, i64}* %59, align 8
	%61 = extractvalue {%Type_Info_Enum_Value*, i64} %60, 1
	%62 = icmp eq i64 %61, 0
	br i1 %62, label %if.then-11, label %if.else-12

if.then-11:
	; ReturnStmt
	store {%..string, i1} zeroinitializer, {%..string, i1}* %9
	%63 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %9, i64 0, i32 0
	store %..string zeroinitializer, %..string* %63
	%64 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %9, i64 0, i32 1
	store i1 true, i1* %64
	%65 = load {%..string, i1}, {%..string, i1}* %9, align 8
	ret {%..string, i1} %65

if.else-12:
	; RangeStmt
	; val
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %10
		; idx
	store i64 zeroinitializer, i64* %11
		; SelectorExpr
	%66 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 2
	%67 = load {%Type_Info_Enum_Value*, i64}, {%Type_Info_Enum_Value*, i64}* %66, align 8
	store i64 zeroinitializer, i64* %12
	%68 = extractvalue {%Type_Info_Enum_Value*, i64} %67, 1
	store i64 %68, i64* %12
	store i64 zeroinitializer, i64* %13
	store i64 -1, i64* %13
	br label %for.index.loop-13

for.index.loop-13:
	%69 = load i64, i64* %13, align 8
	%70 = add i64 %69, 1
	store i64 %70, i64* %13
	%71 = load i64, i64* %12, align 8
	%72 = icmp slt i64 %70, %71
	br i1 %72, label %for.index.body-14, label %for.index.done-20

for.index.body-14:
	%73 = load i64, i64* %13, align 8
	%74 = extractvalue {%Type_Info_Enum_Value*, i64} %67, 0
	%75 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %74, i64 %73
	%76 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %75, align 8
	store %Type_Info_Enum_Value %76, %Type_Info_Enum_Value* %10
	store i64 %73, i64* %11
	; IfStmt
	; v
		; ok
		%77 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %10, align 8
	; cast - union_cast
	store {i8, i1} zeroinitializer, {i8, i1}* %16
	%78 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %10, i64 0, i32 2 ; UnionTagPtr
	%79 = load i8, i8* %78, align 1
	%80 = icmp eq i8 %79, 8
	br i1 %80, label %union_cast.ok-15, label %union_cast.end-16

union_cast.ok-15:
	%81 = getelementptr inbounds {i8, i1}, {i8, i1}* %16, i64 0, i32 0
	%82 = getelementptr inbounds {i8, i1}, {i8, i1}* %16, i64 0, i32 1
	%83 = bitcast %Type_Info_Enum_Value* %10 to i8*
	%84 = load i8, i8* %83, align 1
	store i8 %84, i8* %81
	store i1 true, i1* %82
	br label %union_cast.end-16

union_cast.end-16:
	%85 = load {i8, i1}, {i8, i1}* %16, align 1
	%86 = extractvalue {i8, i1} %85, 0
	%87 = extractvalue {i8, i1} %85, 1
	store i8 %86, i8* %14
	store i1 %87, i1* %15
	%88 = load i1, i1* %15, align 1
	br i1 %88, label %cmp.and-17, label %if.done-19

cmp.and-17:
	%89 = load i8, i8* %14, align 1
	%90 = load i8, i8* %0, align 1
	%91 = icmp eq i8 %89, %90
	br i1 %91, label %if.then-18, label %if.done-19

if.then-18:
	; ReturnStmt
	; IndexExpr
	; SelectorExpr
	%92 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 1
	%93 = load {%..string*, i64}, {%..string*, i64}* %92, align 8
	%94 = extractvalue {%..string*, i64} %93, 0
	%95 = load i64, i64* %11, align 8
	%96 = extractvalue {%..string*, i64} %93, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$ac, i64 0, i32 0), i64 28}, i64 650, i64 22, i64 %95, i64 %96)
	%97 = getelementptr inbounds %..string, %..string* %94, i64 %95
	%98 = load %..string, %..string* %97, align 8
	store {%..string, i1} zeroinitializer, {%..string, i1}* %17
	%99 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %17, i64 0, i32 0
	store %..string %98, %..string* %99
	%100 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %17, i64 0, i32 1
	store i1 true, i1* %100
	%101 = load {%..string, i1}, {%..string, i1}* %17, align 8
	ret {%..string, i1} %101

if.done-19:
	br label %for.index.loop-13

for.index.done-20:
	br label %if.done-21

if.done-21:
	; ReturnStmt
	store {%..string, i1} zeroinitializer, {%..string, i1}* %18
	%102 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %18, i64 0, i32 0
	store %..string zeroinitializer, %..string* %102
	%103 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %18, i64 0, i32 1
	store i1 false, i1* %103
	%104 = load {%..string, i1}, {%..string, i1}* %18, align 8
	ret {%..string, i1} %104
}

define {%..string, i1} @fmt-4.enum_value_to_string.get_str-8(i16 %i, %Type_Info_Enum* %e, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca i16, align 2
	%1 = alloca %Type_Info_Enum_Value, align 8
	%2 = alloca i64, align 8
	%3 = alloca i64, align 8
	%4 = alloca i64, align 8
	%5 = alloca i16, align 2
	%6 = alloca i1, align 1
	%7 = alloca {i16, i1}, align 2
	%8 = alloca {%..string, i1}, align 8
	%9 = alloca {%..string, i1}, align 8
	%10 = alloca %Type_Info_Enum_Value, align 8
	%11 = alloca i64, align 8
	%12 = alloca i64, align 8
	%13 = alloca i64, align 8
	%14 = alloca i16, align 2
	%15 = alloca i1, align 1
	%16 = alloca {i16, i1}, align 2
	%17 = alloca {%..string, i1}, align 8
	%18 = alloca {%..string, i1}, align 8
		store i16 %i, i16* %0
	%19 = load %Type_Info_Enum, %Type_Info_Enum* %e, align 8
	; IfStmt
	; SelectorExpr
	; SelectorExpr
	%20 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 0
	%21 = load %Type_Info*, %Type_Info** %20, align 8
	%22 = call i1 @types-17.is_string(%Type_Info* %21, %Context* noalias nonnull %__.context_ptr)
	br i1 %22, label %if.then-1, label %if.else-10

if.then-1:
	; RangeStmt
	; val
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %1
		; idx
	store i64 zeroinitializer, i64* %2
		; SelectorExpr
	%23 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 2
	%24 = load {%Type_Info_Enum_Value*, i64}, {%Type_Info_Enum_Value*, i64}* %23, align 8
	store i64 zeroinitializer, i64* %3
	%25 = extractvalue {%Type_Info_Enum_Value*, i64} %24, 1
	store i64 %25, i64* %3
	store i64 zeroinitializer, i64* %4
	store i64 -1, i64* %4
	br label %for.index.loop-2

for.index.loop-2:
	%26 = load i64, i64* %4, align 8
	%27 = add i64 %26, 1
	store i64 %27, i64* %4
	%28 = load i64, i64* %3, align 8
	%29 = icmp slt i64 %27, %28
	br i1 %29, label %for.index.body-3, label %for.index.done-9

for.index.body-3:
	%30 = load i64, i64* %4, align 8
	%31 = extractvalue {%Type_Info_Enum_Value*, i64} %24, 0
	%32 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %31, i64 %30
	%33 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %32, align 8
	store %Type_Info_Enum_Value %33, %Type_Info_Enum_Value* %1
	store i64 %30, i64* %2
	; IfStmt
	; v
		; ok
		%34 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %1, align 8
	; cast - union_cast
	store {i16, i1} zeroinitializer, {i16, i1}* %7
	%35 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %1, i64 0, i32 2 ; UnionTagPtr
	%36 = load i8, i8* %35, align 1
	%37 = icmp eq i8 %36, 9
	br i1 %37, label %union_cast.ok-4, label %union_cast.end-5

union_cast.ok-4:
	%38 = getelementptr inbounds {i16, i1}, {i16, i1}* %7, i64 0, i32 0
	%39 = getelementptr inbounds {i16, i1}, {i16, i1}* %7, i64 0, i32 1
	%40 = bitcast %Type_Info_Enum_Value* %1 to i16*
	%41 = load i16, i16* %40, align 2
	store i16 %41, i16* %38
	store i1 true, i1* %39
	br label %union_cast.end-5

union_cast.end-5:
	%42 = load {i16, i1}, {i16, i1}* %7, align 2
	%43 = extractvalue {i16, i1} %42, 0
	%44 = extractvalue {i16, i1} %42, 1
	store i16 %43, i16* %5
	store i1 %44, i1* %6
	%45 = load i1, i1* %6, align 1
	br i1 %45, label %cmp.and-6, label %if.done-8

cmp.and-6:
	%46 = load i16, i16* %5, align 2
	%47 = load i16, i16* %0, align 2
	%48 = icmp eq i16 %46, %47
	br i1 %48, label %if.then-7, label %if.done-8

if.then-7:
	; ReturnStmt
	; IndexExpr
	; SelectorExpr
	%49 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 1
	%50 = load {%..string*, i64}, {%..string*, i64}* %49, align 8
	%51 = extractvalue {%..string*, i64} %50, 0
	%52 = load i64, i64* %2, align 8
	%53 = extractvalue {%..string*, i64} %50, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$ad, i64 0, i32 0), i64 28}, i64 642, i64 22, i64 %52, i64 %53)
	%54 = getelementptr inbounds %..string, %..string* %51, i64 %52
	%55 = load %..string, %..string* %54, align 8
	store {%..string, i1} zeroinitializer, {%..string, i1}* %8
	%56 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %8, i64 0, i32 0
	store %..string %55, %..string* %56
	%57 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %8, i64 0, i32 1
	store i1 true, i1* %57
	%58 = load {%..string, i1}, {%..string, i1}* %8, align 8
	ret {%..string, i1} %58

if.done-8:
	br label %for.index.loop-2

for.index.done-9:
	br label %if.done-21

if.else-10:
	; IfStmt
	; SelectorExpr
	%59 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 2
	%60 = load {%Type_Info_Enum_Value*, i64}, {%Type_Info_Enum_Value*, i64}* %59, align 8
	%61 = extractvalue {%Type_Info_Enum_Value*, i64} %60, 1
	%62 = icmp eq i64 %61, 0
	br i1 %62, label %if.then-11, label %if.else-12

if.then-11:
	; ReturnStmt
	store {%..string, i1} zeroinitializer, {%..string, i1}* %9
	%63 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %9, i64 0, i32 0
	store %..string zeroinitializer, %..string* %63
	%64 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %9, i64 0, i32 1
	store i1 true, i1* %64
	%65 = load {%..string, i1}, {%..string, i1}* %9, align 8
	ret {%..string, i1} %65

if.else-12:
	; RangeStmt
	; val
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %10
		; idx
	store i64 zeroinitializer, i64* %11
		; SelectorExpr
	%66 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 2
	%67 = load {%Type_Info_Enum_Value*, i64}, {%Type_Info_Enum_Value*, i64}* %66, align 8
	store i64 zeroinitializer, i64* %12
	%68 = extractvalue {%Type_Info_Enum_Value*, i64} %67, 1
	store i64 %68, i64* %12
	store i64 zeroinitializer, i64* %13
	store i64 -1, i64* %13
	br label %for.index.loop-13

for.index.loop-13:
	%69 = load i64, i64* %13, align 8
	%70 = add i64 %69, 1
	store i64 %70, i64* %13
	%71 = load i64, i64* %12, align 8
	%72 = icmp slt i64 %70, %71
	br i1 %72, label %for.index.body-14, label %for.index.done-20

for.index.body-14:
	%73 = load i64, i64* %13, align 8
	%74 = extractvalue {%Type_Info_Enum_Value*, i64} %67, 0
	%75 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %74, i64 %73
	%76 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %75, align 8
	store %Type_Info_Enum_Value %76, %Type_Info_Enum_Value* %10
	store i64 %73, i64* %11
	; IfStmt
	; v
		; ok
		%77 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %10, align 8
	; cast - union_cast
	store {i16, i1} zeroinitializer, {i16, i1}* %16
	%78 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %10, i64 0, i32 2 ; UnionTagPtr
	%79 = load i8, i8* %78, align 1
	%80 = icmp eq i8 %79, 9
	br i1 %80, label %union_cast.ok-15, label %union_cast.end-16

union_cast.ok-15:
	%81 = getelementptr inbounds {i16, i1}, {i16, i1}* %16, i64 0, i32 0
	%82 = getelementptr inbounds {i16, i1}, {i16, i1}* %16, i64 0, i32 1
	%83 = bitcast %Type_Info_Enum_Value* %10 to i16*
	%84 = load i16, i16* %83, align 2
	store i16 %84, i16* %81
	store i1 true, i1* %82
	br label %union_cast.end-16

union_cast.end-16:
	%85 = load {i16, i1}, {i16, i1}* %16, align 2
	%86 = extractvalue {i16, i1} %85, 0
	%87 = extractvalue {i16, i1} %85, 1
	store i16 %86, i16* %14
	store i1 %87, i1* %15
	%88 = load i1, i1* %15, align 1
	br i1 %88, label %cmp.and-17, label %if.done-19

cmp.and-17:
	%89 = load i16, i16* %14, align 2
	%90 = load i16, i16* %0, align 2
	%91 = icmp eq i16 %89, %90
	br i1 %91, label %if.then-18, label %if.done-19

if.then-18:
	; ReturnStmt
	; IndexExpr
	; SelectorExpr
	%92 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 1
	%93 = load {%..string*, i64}, {%..string*, i64}* %92, align 8
	%94 = extractvalue {%..string*, i64} %93, 0
	%95 = load i64, i64* %11, align 8
	%96 = extractvalue {%..string*, i64} %93, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$ae, i64 0, i32 0), i64 28}, i64 650, i64 22, i64 %95, i64 %96)
	%97 = getelementptr inbounds %..string, %..string* %94, i64 %95
	%98 = load %..string, %..string* %97, align 8
	store {%..string, i1} zeroinitializer, {%..string, i1}* %17
	%99 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %17, i64 0, i32 0
	store %..string %98, %..string* %99
	%100 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %17, i64 0, i32 1
	store i1 true, i1* %100
	%101 = load {%..string, i1}, {%..string, i1}* %17, align 8
	ret {%..string, i1} %101

if.done-19:
	br label %for.index.loop-13

for.index.done-20:
	br label %if.done-21

if.done-21:
	; ReturnStmt
	store {%..string, i1} zeroinitializer, {%..string, i1}* %18
	%102 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %18, i64 0, i32 0
	store %..string zeroinitializer, %..string* %102
	%103 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %18, i64 0, i32 1
	store i1 false, i1* %103
	%104 = load {%..string, i1}, {%..string, i1}* %18, align 8
	ret {%..string, i1} %104
}

define {%..string, i1} @fmt-4.enum_value_to_string.get_str-9(i32 %i, %Type_Info_Enum* %e, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca i32, align 4
	%1 = alloca %Type_Info_Enum_Value, align 8
	%2 = alloca i64, align 8
	%3 = alloca i64, align 8
	%4 = alloca i64, align 8
	%5 = alloca i32, align 4
	%6 = alloca i1, align 1
	%7 = alloca {i32, i1}, align 4
	%8 = alloca {%..string, i1}, align 8
	%9 = alloca {%..string, i1}, align 8
	%10 = alloca %Type_Info_Enum_Value, align 8
	%11 = alloca i64, align 8
	%12 = alloca i64, align 8
	%13 = alloca i64, align 8
	%14 = alloca i32, align 4
	%15 = alloca i1, align 1
	%16 = alloca {i32, i1}, align 4
	%17 = alloca {%..string, i1}, align 8
	%18 = alloca {%..string, i1}, align 8
		store i32 %i, i32* %0
	%19 = load %Type_Info_Enum, %Type_Info_Enum* %e, align 8
	; IfStmt
	; SelectorExpr
	; SelectorExpr
	%20 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 0
	%21 = load %Type_Info*, %Type_Info** %20, align 8
	%22 = call i1 @types-17.is_string(%Type_Info* %21, %Context* noalias nonnull %__.context_ptr)
	br i1 %22, label %if.then-1, label %if.else-10

if.then-1:
	; RangeStmt
	; val
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %1
		; idx
	store i64 zeroinitializer, i64* %2
		; SelectorExpr
	%23 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 2
	%24 = load {%Type_Info_Enum_Value*, i64}, {%Type_Info_Enum_Value*, i64}* %23, align 8
	store i64 zeroinitializer, i64* %3
	%25 = extractvalue {%Type_Info_Enum_Value*, i64} %24, 1
	store i64 %25, i64* %3
	store i64 zeroinitializer, i64* %4
	store i64 -1, i64* %4
	br label %for.index.loop-2

for.index.loop-2:
	%26 = load i64, i64* %4, align 8
	%27 = add i64 %26, 1
	store i64 %27, i64* %4
	%28 = load i64, i64* %3, align 8
	%29 = icmp slt i64 %27, %28
	br i1 %29, label %for.index.body-3, label %for.index.done-9

for.index.body-3:
	%30 = load i64, i64* %4, align 8
	%31 = extractvalue {%Type_Info_Enum_Value*, i64} %24, 0
	%32 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %31, i64 %30
	%33 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %32, align 8
	store %Type_Info_Enum_Value %33, %Type_Info_Enum_Value* %1
	store i64 %30, i64* %2
	; IfStmt
	; v
		; ok
		%34 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %1, align 8
	; cast - union_cast
	store {i32, i1} zeroinitializer, {i32, i1}* %7
	%35 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %1, i64 0, i32 2 ; UnionTagPtr
	%36 = load i8, i8* %35, align 1
	%37 = icmp eq i8 %36, 10
	br i1 %37, label %union_cast.ok-4, label %union_cast.end-5

union_cast.ok-4:
	%38 = getelementptr inbounds {i32, i1}, {i32, i1}* %7, i64 0, i32 0
	%39 = getelementptr inbounds {i32, i1}, {i32, i1}* %7, i64 0, i32 1
	%40 = bitcast %Type_Info_Enum_Value* %1 to i32*
	%41 = load i32, i32* %40, align 4
	store i32 %41, i32* %38
	store i1 true, i1* %39
	br label %union_cast.end-5

union_cast.end-5:
	%42 = load {i32, i1}, {i32, i1}* %7, align 4
	%43 = extractvalue {i32, i1} %42, 0
	%44 = extractvalue {i32, i1} %42, 1
	store i32 %43, i32* %5
	store i1 %44, i1* %6
	%45 = load i1, i1* %6, align 1
	br i1 %45, label %cmp.and-6, label %if.done-8

cmp.and-6:
	%46 = load i32, i32* %5, align 4
	%47 = load i32, i32* %0, align 4
	%48 = icmp eq i32 %46, %47
	br i1 %48, label %if.then-7, label %if.done-8

if.then-7:
	; ReturnStmt
	; IndexExpr
	; SelectorExpr
	%49 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 1
	%50 = load {%..string*, i64}, {%..string*, i64}* %49, align 8
	%51 = extractvalue {%..string*, i64} %50, 0
	%52 = load i64, i64* %2, align 8
	%53 = extractvalue {%..string*, i64} %50, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$af, i64 0, i32 0), i64 28}, i64 642, i64 22, i64 %52, i64 %53)
	%54 = getelementptr inbounds %..string, %..string* %51, i64 %52
	%55 = load %..string, %..string* %54, align 8
	store {%..string, i1} zeroinitializer, {%..string, i1}* %8
	%56 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %8, i64 0, i32 0
	store %..string %55, %..string* %56
	%57 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %8, i64 0, i32 1
	store i1 true, i1* %57
	%58 = load {%..string, i1}, {%..string, i1}* %8, align 8
	ret {%..string, i1} %58

if.done-8:
	br label %for.index.loop-2

for.index.done-9:
	br label %if.done-21

if.else-10:
	; IfStmt
	; SelectorExpr
	%59 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 2
	%60 = load {%Type_Info_Enum_Value*, i64}, {%Type_Info_Enum_Value*, i64}* %59, align 8
	%61 = extractvalue {%Type_Info_Enum_Value*, i64} %60, 1
	%62 = icmp eq i64 %61, 0
	br i1 %62, label %if.then-11, label %if.else-12

if.then-11:
	; ReturnStmt
	store {%..string, i1} zeroinitializer, {%..string, i1}* %9
	%63 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %9, i64 0, i32 0
	store %..string zeroinitializer, %..string* %63
	%64 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %9, i64 0, i32 1
	store i1 true, i1* %64
	%65 = load {%..string, i1}, {%..string, i1}* %9, align 8
	ret {%..string, i1} %65

if.else-12:
	; RangeStmt
	; val
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %10
		; idx
	store i64 zeroinitializer, i64* %11
		; SelectorExpr
	%66 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 2
	%67 = load {%Type_Info_Enum_Value*, i64}, {%Type_Info_Enum_Value*, i64}* %66, align 8
	store i64 zeroinitializer, i64* %12
	%68 = extractvalue {%Type_Info_Enum_Value*, i64} %67, 1
	store i64 %68, i64* %12
	store i64 zeroinitializer, i64* %13
	store i64 -1, i64* %13
	br label %for.index.loop-13

for.index.loop-13:
	%69 = load i64, i64* %13, align 8
	%70 = add i64 %69, 1
	store i64 %70, i64* %13
	%71 = load i64, i64* %12, align 8
	%72 = icmp slt i64 %70, %71
	br i1 %72, label %for.index.body-14, label %for.index.done-20

for.index.body-14:
	%73 = load i64, i64* %13, align 8
	%74 = extractvalue {%Type_Info_Enum_Value*, i64} %67, 0
	%75 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %74, i64 %73
	%76 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %75, align 8
	store %Type_Info_Enum_Value %76, %Type_Info_Enum_Value* %10
	store i64 %73, i64* %11
	; IfStmt
	; v
		; ok
		%77 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %10, align 8
	; cast - union_cast
	store {i32, i1} zeroinitializer, {i32, i1}* %16
	%78 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %10, i64 0, i32 2 ; UnionTagPtr
	%79 = load i8, i8* %78, align 1
	%80 = icmp eq i8 %79, 10
	br i1 %80, label %union_cast.ok-15, label %union_cast.end-16

union_cast.ok-15:
	%81 = getelementptr inbounds {i32, i1}, {i32, i1}* %16, i64 0, i32 0
	%82 = getelementptr inbounds {i32, i1}, {i32, i1}* %16, i64 0, i32 1
	%83 = bitcast %Type_Info_Enum_Value* %10 to i32*
	%84 = load i32, i32* %83, align 4
	store i32 %84, i32* %81
	store i1 true, i1* %82
	br label %union_cast.end-16

union_cast.end-16:
	%85 = load {i32, i1}, {i32, i1}* %16, align 4
	%86 = extractvalue {i32, i1} %85, 0
	%87 = extractvalue {i32, i1} %85, 1
	store i32 %86, i32* %14
	store i1 %87, i1* %15
	%88 = load i1, i1* %15, align 1
	br i1 %88, label %cmp.and-17, label %if.done-19

cmp.and-17:
	%89 = load i32, i32* %14, align 4
	%90 = load i32, i32* %0, align 4
	%91 = icmp eq i32 %89, %90
	br i1 %91, label %if.then-18, label %if.done-19

if.then-18:
	; ReturnStmt
	; IndexExpr
	; SelectorExpr
	%92 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 1
	%93 = load {%..string*, i64}, {%..string*, i64}* %92, align 8
	%94 = extractvalue {%..string*, i64} %93, 0
	%95 = load i64, i64* %11, align 8
	%96 = extractvalue {%..string*, i64} %93, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$b0, i64 0, i32 0), i64 28}, i64 650, i64 22, i64 %95, i64 %96)
	%97 = getelementptr inbounds %..string, %..string* %94, i64 %95
	%98 = load %..string, %..string* %97, align 8
	store {%..string, i1} zeroinitializer, {%..string, i1}* %17
	%99 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %17, i64 0, i32 0
	store %..string %98, %..string* %99
	%100 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %17, i64 0, i32 1
	store i1 true, i1* %100
	%101 = load {%..string, i1}, {%..string, i1}* %17, align 8
	ret {%..string, i1} %101

if.done-19:
	br label %for.index.loop-13

for.index.done-20:
	br label %if.done-21

if.done-21:
	; ReturnStmt
	store {%..string, i1} zeroinitializer, {%..string, i1}* %18
	%102 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %18, i64 0, i32 0
	store %..string zeroinitializer, %..string* %102
	%103 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %18, i64 0, i32 1
	store i1 false, i1* %103
	%104 = load {%..string, i1}, {%..string, i1}* %18, align 8
	ret {%..string, i1} %104
}

define {%..string, i1} @fmt-4.enum_value_to_string.get_str-10(i64 %i, %Type_Info_Enum* %e, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca i64, align 8
	%1 = alloca %Type_Info_Enum_Value, align 8
	%2 = alloca i64, align 8
	%3 = alloca i64, align 8
	%4 = alloca i64, align 8
	%5 = alloca i64, align 8
	%6 = alloca i1, align 1
	%7 = alloca {i64, i1}, align 8
	%8 = alloca {%..string, i1}, align 8
	%9 = alloca {%..string, i1}, align 8
	%10 = alloca %Type_Info_Enum_Value, align 8
	%11 = alloca i64, align 8
	%12 = alloca i64, align 8
	%13 = alloca i64, align 8
	%14 = alloca i64, align 8
	%15 = alloca i1, align 1
	%16 = alloca {i64, i1}, align 8
	%17 = alloca {%..string, i1}, align 8
	%18 = alloca {%..string, i1}, align 8
		store i64 %i, i64* %0
	%19 = load %Type_Info_Enum, %Type_Info_Enum* %e, align 8
	; IfStmt
	; SelectorExpr
	; SelectorExpr
	%20 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 0
	%21 = load %Type_Info*, %Type_Info** %20, align 8
	%22 = call i1 @types-17.is_string(%Type_Info* %21, %Context* noalias nonnull %__.context_ptr)
	br i1 %22, label %if.then-1, label %if.else-10

if.then-1:
	; RangeStmt
	; val
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %1
		; idx
	store i64 zeroinitializer, i64* %2
		; SelectorExpr
	%23 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 2
	%24 = load {%Type_Info_Enum_Value*, i64}, {%Type_Info_Enum_Value*, i64}* %23, align 8
	store i64 zeroinitializer, i64* %3
	%25 = extractvalue {%Type_Info_Enum_Value*, i64} %24, 1
	store i64 %25, i64* %3
	store i64 zeroinitializer, i64* %4
	store i64 -1, i64* %4
	br label %for.index.loop-2

for.index.loop-2:
	%26 = load i64, i64* %4, align 8
	%27 = add i64 %26, 1
	store i64 %27, i64* %4
	%28 = load i64, i64* %3, align 8
	%29 = icmp slt i64 %27, %28
	br i1 %29, label %for.index.body-3, label %for.index.done-9

for.index.body-3:
	%30 = load i64, i64* %4, align 8
	%31 = extractvalue {%Type_Info_Enum_Value*, i64} %24, 0
	%32 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %31, i64 %30
	%33 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %32, align 8
	store %Type_Info_Enum_Value %33, %Type_Info_Enum_Value* %1
	store i64 %30, i64* %2
	; IfStmt
	; v
		; ok
		%34 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %1, align 8
	; cast - union_cast
	store {i64, i1} zeroinitializer, {i64, i1}* %7
	%35 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %1, i64 0, i32 2 ; UnionTagPtr
	%36 = load i8, i8* %35, align 1
	%37 = icmp eq i8 %36, 11
	br i1 %37, label %union_cast.ok-4, label %union_cast.end-5

union_cast.ok-4:
	%38 = getelementptr inbounds {i64, i1}, {i64, i1}* %7, i64 0, i32 0
	%39 = getelementptr inbounds {i64, i1}, {i64, i1}* %7, i64 0, i32 1
	%40 = bitcast %Type_Info_Enum_Value* %1 to i64*
	%41 = load i64, i64* %40, align 8
	store i64 %41, i64* %38
	store i1 true, i1* %39
	br label %union_cast.end-5

union_cast.end-5:
	%42 = load {i64, i1}, {i64, i1}* %7, align 8
	%43 = extractvalue {i64, i1} %42, 0
	%44 = extractvalue {i64, i1} %42, 1
	store i64 %43, i64* %5
	store i1 %44, i1* %6
	%45 = load i1, i1* %6, align 1
	br i1 %45, label %cmp.and-6, label %if.done-8

cmp.and-6:
	%46 = load i64, i64* %5, align 8
	%47 = load i64, i64* %0, align 8
	%48 = icmp eq i64 %46, %47
	br i1 %48, label %if.then-7, label %if.done-8

if.then-7:
	; ReturnStmt
	; IndexExpr
	; SelectorExpr
	%49 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 1
	%50 = load {%..string*, i64}, {%..string*, i64}* %49, align 8
	%51 = extractvalue {%..string*, i64} %50, 0
	%52 = load i64, i64* %2, align 8
	%53 = extractvalue {%..string*, i64} %50, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$b1, i64 0, i32 0), i64 28}, i64 642, i64 22, i64 %52, i64 %53)
	%54 = getelementptr inbounds %..string, %..string* %51, i64 %52
	%55 = load %..string, %..string* %54, align 8
	store {%..string, i1} zeroinitializer, {%..string, i1}* %8
	%56 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %8, i64 0, i32 0
	store %..string %55, %..string* %56
	%57 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %8, i64 0, i32 1
	store i1 true, i1* %57
	%58 = load {%..string, i1}, {%..string, i1}* %8, align 8
	ret {%..string, i1} %58

if.done-8:
	br label %for.index.loop-2

for.index.done-9:
	br label %if.done-21

if.else-10:
	; IfStmt
	; SelectorExpr
	%59 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 2
	%60 = load {%Type_Info_Enum_Value*, i64}, {%Type_Info_Enum_Value*, i64}* %59, align 8
	%61 = extractvalue {%Type_Info_Enum_Value*, i64} %60, 1
	%62 = icmp eq i64 %61, 0
	br i1 %62, label %if.then-11, label %if.else-12

if.then-11:
	; ReturnStmt
	store {%..string, i1} zeroinitializer, {%..string, i1}* %9
	%63 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %9, i64 0, i32 0
	store %..string zeroinitializer, %..string* %63
	%64 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %9, i64 0, i32 1
	store i1 true, i1* %64
	%65 = load {%..string, i1}, {%..string, i1}* %9, align 8
	ret {%..string, i1} %65

if.else-12:
	; RangeStmt
	; val
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %10
		; idx
	store i64 zeroinitializer, i64* %11
		; SelectorExpr
	%66 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 2
	%67 = load {%Type_Info_Enum_Value*, i64}, {%Type_Info_Enum_Value*, i64}* %66, align 8
	store i64 zeroinitializer, i64* %12
	%68 = extractvalue {%Type_Info_Enum_Value*, i64} %67, 1
	store i64 %68, i64* %12
	store i64 zeroinitializer, i64* %13
	store i64 -1, i64* %13
	br label %for.index.loop-13

for.index.loop-13:
	%69 = load i64, i64* %13, align 8
	%70 = add i64 %69, 1
	store i64 %70, i64* %13
	%71 = load i64, i64* %12, align 8
	%72 = icmp slt i64 %70, %71
	br i1 %72, label %for.index.body-14, label %for.index.done-20

for.index.body-14:
	%73 = load i64, i64* %13, align 8
	%74 = extractvalue {%Type_Info_Enum_Value*, i64} %67, 0
	%75 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %74, i64 %73
	%76 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %75, align 8
	store %Type_Info_Enum_Value %76, %Type_Info_Enum_Value* %10
	store i64 %73, i64* %11
	; IfStmt
	; v
		; ok
		%77 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %10, align 8
	; cast - union_cast
	store {i64, i1} zeroinitializer, {i64, i1}* %16
	%78 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %10, i64 0, i32 2 ; UnionTagPtr
	%79 = load i8, i8* %78, align 1
	%80 = icmp eq i8 %79, 11
	br i1 %80, label %union_cast.ok-15, label %union_cast.end-16

union_cast.ok-15:
	%81 = getelementptr inbounds {i64, i1}, {i64, i1}* %16, i64 0, i32 0
	%82 = getelementptr inbounds {i64, i1}, {i64, i1}* %16, i64 0, i32 1
	%83 = bitcast %Type_Info_Enum_Value* %10 to i64*
	%84 = load i64, i64* %83, align 8
	store i64 %84, i64* %81
	store i1 true, i1* %82
	br label %union_cast.end-16

union_cast.end-16:
	%85 = load {i64, i1}, {i64, i1}* %16, align 8
	%86 = extractvalue {i64, i1} %85, 0
	%87 = extractvalue {i64, i1} %85, 1
	store i64 %86, i64* %14
	store i1 %87, i1* %15
	%88 = load i1, i1* %15, align 1
	br i1 %88, label %cmp.and-17, label %if.done-19

cmp.and-17:
	%89 = load i64, i64* %14, align 8
	%90 = load i64, i64* %0, align 8
	%91 = icmp eq i64 %89, %90
	br i1 %91, label %if.then-18, label %if.done-19

if.then-18:
	; ReturnStmt
	; IndexExpr
	; SelectorExpr
	%92 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 1
	%93 = load {%..string*, i64}, {%..string*, i64}* %92, align 8
	%94 = extractvalue {%..string*, i64} %93, 0
	%95 = load i64, i64* %11, align 8
	%96 = extractvalue {%..string*, i64} %93, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$b2, i64 0, i32 0), i64 28}, i64 650, i64 22, i64 %95, i64 %96)
	%97 = getelementptr inbounds %..string, %..string* %94, i64 %95
	%98 = load %..string, %..string* %97, align 8
	store {%..string, i1} zeroinitializer, {%..string, i1}* %17
	%99 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %17, i64 0, i32 0
	store %..string %98, %..string* %99
	%100 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %17, i64 0, i32 1
	store i1 true, i1* %100
	%101 = load {%..string, i1}, {%..string, i1}* %17, align 8
	ret {%..string, i1} %101

if.done-19:
	br label %for.index.loop-13

for.index.done-20:
	br label %if.done-21

if.done-21:
	; ReturnStmt
	store {%..string, i1} zeroinitializer, {%..string, i1}* %18
	%102 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %18, i64 0, i32 0
	store %..string zeroinitializer, %..string* %102
	%103 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %18, i64 0, i32 1
	store i1 false, i1* %103
	%104 = load {%..string, i1}, {%..string, i1}* %18, align 8
	ret {%..string, i1} %104
}

define {%..string, i1} @fmt-4.enum_value_to_string.get_str-11(i128* %i, %Type_Info_Enum* %e, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca %Type_Info_Enum_Value, align 8
	%1 = alloca i64, align 8
	%2 = alloca i64, align 8
	%3 = alloca i64, align 8
	%4 = alloca i128, align 8
	%5 = alloca i1, align 1
	%6 = alloca {i128, i1}, align 8
	%7 = alloca {%..string, i1}, align 8
	%8 = alloca {%..string, i1}, align 8
	%9 = alloca %Type_Info_Enum_Value, align 8
	%10 = alloca i64, align 8
	%11 = alloca i64, align 8
	%12 = alloca i64, align 8
	%13 = alloca i128, align 8
	%14 = alloca i1, align 1
	%15 = alloca {i128, i1}, align 8
	%16 = alloca {%..string, i1}, align 8
	%17 = alloca {%..string, i1}, align 8
	%18 = load i128, i128* %i, align 8
	%19 = load %Type_Info_Enum, %Type_Info_Enum* %e, align 8
	; IfStmt
	; SelectorExpr
	; SelectorExpr
	%20 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 0
	%21 = load %Type_Info*, %Type_Info** %20, align 8
	%22 = call i1 @types-17.is_string(%Type_Info* %21, %Context* noalias nonnull %__.context_ptr)
	br i1 %22, label %if.then-1, label %if.else-10

if.then-1:
	; RangeStmt
	; val
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %0
		; idx
	store i64 zeroinitializer, i64* %1
		; SelectorExpr
	%23 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 2
	%24 = load {%Type_Info_Enum_Value*, i64}, {%Type_Info_Enum_Value*, i64}* %23, align 8
	store i64 zeroinitializer, i64* %2
	%25 = extractvalue {%Type_Info_Enum_Value*, i64} %24, 1
	store i64 %25, i64* %2
	store i64 zeroinitializer, i64* %3
	store i64 -1, i64* %3
	br label %for.index.loop-2

for.index.loop-2:
	%26 = load i64, i64* %3, align 8
	%27 = add i64 %26, 1
	store i64 %27, i64* %3
	%28 = load i64, i64* %2, align 8
	%29 = icmp slt i64 %27, %28
	br i1 %29, label %for.index.body-3, label %for.index.done-9

for.index.body-3:
	%30 = load i64, i64* %3, align 8
	%31 = extractvalue {%Type_Info_Enum_Value*, i64} %24, 0
	%32 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %31, i64 %30
	%33 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %32, align 8
	store %Type_Info_Enum_Value %33, %Type_Info_Enum_Value* %0
	store i64 %30, i64* %1
	; IfStmt
	; v
		; ok
		%34 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %0, align 8
	; cast - union_cast
	store {i128, i1} zeroinitializer, {i128, i1}* %6
	%35 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %0, i64 0, i32 2 ; UnionTagPtr
	%36 = load i8, i8* %35, align 1
	%37 = icmp eq i8 %36, 12
	br i1 %37, label %union_cast.ok-4, label %union_cast.end-5

union_cast.ok-4:
	%38 = getelementptr inbounds {i128, i1}, {i128, i1}* %6, i64 0, i32 0
	%39 = getelementptr inbounds {i128, i1}, {i128, i1}* %6, i64 0, i32 1
	%40 = bitcast %Type_Info_Enum_Value* %0 to i128*
	%41 = load i128, i128* %40, align 8
	store i128 %41, i128* %38
	store i1 true, i1* %39
	br label %union_cast.end-5

union_cast.end-5:
	%42 = load {i128, i1}, {i128, i1}* %6, align 8
	%43 = extractvalue {i128, i1} %42, 0
	%44 = extractvalue {i128, i1} %42, 1
	store i128 %43, i128* %4
	store i1 %44, i1* %5
	%45 = load i1, i1* %5, align 1
	br i1 %45, label %cmp.and-6, label %if.done-8

cmp.and-6:
	%46 = load i128, i128* %4, align 8
	%47 = load i128, i128* %i, align 8
	%48 = icmp eq i128 %46, %47
	br i1 %48, label %if.then-7, label %if.done-8

if.then-7:
	; ReturnStmt
	; IndexExpr
	; SelectorExpr
	%49 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 1
	%50 = load {%..string*, i64}, {%..string*, i64}* %49, align 8
	%51 = extractvalue {%..string*, i64} %50, 0
	%52 = load i64, i64* %1, align 8
	%53 = extractvalue {%..string*, i64} %50, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$b3, i64 0, i32 0), i64 28}, i64 642, i64 22, i64 %52, i64 %53)
	%54 = getelementptr inbounds %..string, %..string* %51, i64 %52
	%55 = load %..string, %..string* %54, align 8
	store {%..string, i1} zeroinitializer, {%..string, i1}* %7
	%56 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %7, i64 0, i32 0
	store %..string %55, %..string* %56
	%57 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %7, i64 0, i32 1
	store i1 true, i1* %57
	%58 = load {%..string, i1}, {%..string, i1}* %7, align 8
	ret {%..string, i1} %58

if.done-8:
	br label %for.index.loop-2

for.index.done-9:
	br label %if.done-21

if.else-10:
	; IfStmt
	; SelectorExpr
	%59 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 2
	%60 = load {%Type_Info_Enum_Value*, i64}, {%Type_Info_Enum_Value*, i64}* %59, align 8
	%61 = extractvalue {%Type_Info_Enum_Value*, i64} %60, 1
	%62 = icmp eq i64 %61, 0
	br i1 %62, label %if.then-11, label %if.else-12

if.then-11:
	; ReturnStmt
	store {%..string, i1} zeroinitializer, {%..string, i1}* %8
	%63 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %8, i64 0, i32 0
	store %..string zeroinitializer, %..string* %63
	%64 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %8, i64 0, i32 1
	store i1 true, i1* %64
	%65 = load {%..string, i1}, {%..string, i1}* %8, align 8
	ret {%..string, i1} %65

if.else-12:
	; RangeStmt
	; val
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %9
		; idx
	store i64 zeroinitializer, i64* %10
		; SelectorExpr
	%66 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 2
	%67 = load {%Type_Info_Enum_Value*, i64}, {%Type_Info_Enum_Value*, i64}* %66, align 8
	store i64 zeroinitializer, i64* %11
	%68 = extractvalue {%Type_Info_Enum_Value*, i64} %67, 1
	store i64 %68, i64* %11
	store i64 zeroinitializer, i64* %12
	store i64 -1, i64* %12
	br label %for.index.loop-13

for.index.loop-13:
	%69 = load i64, i64* %12, align 8
	%70 = add i64 %69, 1
	store i64 %70, i64* %12
	%71 = load i64, i64* %11, align 8
	%72 = icmp slt i64 %70, %71
	br i1 %72, label %for.index.body-14, label %for.index.done-20

for.index.body-14:
	%73 = load i64, i64* %12, align 8
	%74 = extractvalue {%Type_Info_Enum_Value*, i64} %67, 0
	%75 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %74, i64 %73
	%76 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %75, align 8
	store %Type_Info_Enum_Value %76, %Type_Info_Enum_Value* %9
	store i64 %73, i64* %10
	; IfStmt
	; v
		; ok
		%77 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %9, align 8
	; cast - union_cast
	store {i128, i1} zeroinitializer, {i128, i1}* %15
	%78 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %9, i64 0, i32 2 ; UnionTagPtr
	%79 = load i8, i8* %78, align 1
	%80 = icmp eq i8 %79, 12
	br i1 %80, label %union_cast.ok-15, label %union_cast.end-16

union_cast.ok-15:
	%81 = getelementptr inbounds {i128, i1}, {i128, i1}* %15, i64 0, i32 0
	%82 = getelementptr inbounds {i128, i1}, {i128, i1}* %15, i64 0, i32 1
	%83 = bitcast %Type_Info_Enum_Value* %9 to i128*
	%84 = load i128, i128* %83, align 8
	store i128 %84, i128* %81
	store i1 true, i1* %82
	br label %union_cast.end-16

union_cast.end-16:
	%85 = load {i128, i1}, {i128, i1}* %15, align 8
	%86 = extractvalue {i128, i1} %85, 0
	%87 = extractvalue {i128, i1} %85, 1
	store i128 %86, i128* %13
	store i1 %87, i1* %14
	%88 = load i1, i1* %14, align 1
	br i1 %88, label %cmp.and-17, label %if.done-19

cmp.and-17:
	%89 = load i128, i128* %13, align 8
	%90 = load i128, i128* %i, align 8
	%91 = icmp eq i128 %89, %90
	br i1 %91, label %if.then-18, label %if.done-19

if.then-18:
	; ReturnStmt
	; IndexExpr
	; SelectorExpr
	%92 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 1
	%93 = load {%..string*, i64}, {%..string*, i64}* %92, align 8
	%94 = extractvalue {%..string*, i64} %93, 0
	%95 = load i64, i64* %10, align 8
	%96 = extractvalue {%..string*, i64} %93, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$b4, i64 0, i32 0), i64 28}, i64 650, i64 22, i64 %95, i64 %96)
	%97 = getelementptr inbounds %..string, %..string* %94, i64 %95
	%98 = load %..string, %..string* %97, align 8
	store {%..string, i1} zeroinitializer, {%..string, i1}* %16
	%99 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %16, i64 0, i32 0
	store %..string %98, %..string* %99
	%100 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %16, i64 0, i32 1
	store i1 true, i1* %100
	%101 = load {%..string, i1}, {%..string, i1}* %16, align 8
	ret {%..string, i1} %101

if.done-19:
	br label %for.index.loop-13

for.index.done-20:
	br label %if.done-21

if.done-21:
	; ReturnStmt
	store {%..string, i1} zeroinitializer, {%..string, i1}* %17
	%102 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %17, i64 0, i32 0
	store %..string zeroinitializer, %..string* %102
	%103 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %17, i64 0, i32 1
	store i1 false, i1* %103
	%104 = load {%..string, i1}, {%..string, i1}* %17, align 8
	ret {%..string, i1} %104
}

define {%..string, i1} @fmt-4.enum_value_to_string.get_str-12(i64 %i, %Type_Info_Enum* %e, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca i64, align 8
	%1 = alloca %Type_Info_Enum_Value, align 8
	%2 = alloca i64, align 8
	%3 = alloca i64, align 8
	%4 = alloca i64, align 8
	%5 = alloca i64, align 8
	%6 = alloca i1, align 1
	%7 = alloca {i64, i1}, align 8
	%8 = alloca {%..string, i1}, align 8
	%9 = alloca {%..string, i1}, align 8
	%10 = alloca %Type_Info_Enum_Value, align 8
	%11 = alloca i64, align 8
	%12 = alloca i64, align 8
	%13 = alloca i64, align 8
	%14 = alloca i64, align 8
	%15 = alloca i1, align 1
	%16 = alloca {i64, i1}, align 8
	%17 = alloca {%..string, i1}, align 8
	%18 = alloca {%..string, i1}, align 8
		store i64 %i, i64* %0
	%19 = load %Type_Info_Enum, %Type_Info_Enum* %e, align 8
	; IfStmt
	; SelectorExpr
	; SelectorExpr
	%20 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 0
	%21 = load %Type_Info*, %Type_Info** %20, align 8
	%22 = call i1 @types-17.is_string(%Type_Info* %21, %Context* noalias nonnull %__.context_ptr)
	br i1 %22, label %if.then-1, label %if.else-10

if.then-1:
	; RangeStmt
	; val
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %1
		; idx
	store i64 zeroinitializer, i64* %2
		; SelectorExpr
	%23 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 2
	%24 = load {%Type_Info_Enum_Value*, i64}, {%Type_Info_Enum_Value*, i64}* %23, align 8
	store i64 zeroinitializer, i64* %3
	%25 = extractvalue {%Type_Info_Enum_Value*, i64} %24, 1
	store i64 %25, i64* %3
	store i64 zeroinitializer, i64* %4
	store i64 -1, i64* %4
	br label %for.index.loop-2

for.index.loop-2:
	%26 = load i64, i64* %4, align 8
	%27 = add i64 %26, 1
	store i64 %27, i64* %4
	%28 = load i64, i64* %3, align 8
	%29 = icmp slt i64 %27, %28
	br i1 %29, label %for.index.body-3, label %for.index.done-9

for.index.body-3:
	%30 = load i64, i64* %4, align 8
	%31 = extractvalue {%Type_Info_Enum_Value*, i64} %24, 0
	%32 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %31, i64 %30
	%33 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %32, align 8
	store %Type_Info_Enum_Value %33, %Type_Info_Enum_Value* %1
	store i64 %30, i64* %2
	; IfStmt
	; v
		; ok
		%34 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %1, align 8
	; cast - union_cast
	store {i64, i1} zeroinitializer, {i64, i1}* %7
	%35 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %1, i64 0, i32 2 ; UnionTagPtr
	%36 = load i8, i8* %35, align 1
	%37 = icmp eq i8 %36, 13
	br i1 %37, label %union_cast.ok-4, label %union_cast.end-5

union_cast.ok-4:
	%38 = getelementptr inbounds {i64, i1}, {i64, i1}* %7, i64 0, i32 0
	%39 = getelementptr inbounds {i64, i1}, {i64, i1}* %7, i64 0, i32 1
	%40 = bitcast %Type_Info_Enum_Value* %1 to i64*
	%41 = load i64, i64* %40, align 8
	store i64 %41, i64* %38
	store i1 true, i1* %39
	br label %union_cast.end-5

union_cast.end-5:
	%42 = load {i64, i1}, {i64, i1}* %7, align 8
	%43 = extractvalue {i64, i1} %42, 0
	%44 = extractvalue {i64, i1} %42, 1
	store i64 %43, i64* %5
	store i1 %44, i1* %6
	%45 = load i1, i1* %6, align 1
	br i1 %45, label %cmp.and-6, label %if.done-8

cmp.and-6:
	%46 = load i64, i64* %5, align 8
	%47 = load i64, i64* %0, align 8
	%48 = icmp eq i64 %46, %47
	br i1 %48, label %if.then-7, label %if.done-8

if.then-7:
	; ReturnStmt
	; IndexExpr
	; SelectorExpr
	%49 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 1
	%50 = load {%..string*, i64}, {%..string*, i64}* %49, align 8
	%51 = extractvalue {%..string*, i64} %50, 0
	%52 = load i64, i64* %2, align 8
	%53 = extractvalue {%..string*, i64} %50, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$b5, i64 0, i32 0), i64 28}, i64 642, i64 22, i64 %52, i64 %53)
	%54 = getelementptr inbounds %..string, %..string* %51, i64 %52
	%55 = load %..string, %..string* %54, align 8
	store {%..string, i1} zeroinitializer, {%..string, i1}* %8
	%56 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %8, i64 0, i32 0
	store %..string %55, %..string* %56
	%57 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %8, i64 0, i32 1
	store i1 true, i1* %57
	%58 = load {%..string, i1}, {%..string, i1}* %8, align 8
	ret {%..string, i1} %58

if.done-8:
	br label %for.index.loop-2

for.index.done-9:
	br label %if.done-21

if.else-10:
	; IfStmt
	; SelectorExpr
	%59 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 2
	%60 = load {%Type_Info_Enum_Value*, i64}, {%Type_Info_Enum_Value*, i64}* %59, align 8
	%61 = extractvalue {%Type_Info_Enum_Value*, i64} %60, 1
	%62 = icmp eq i64 %61, 0
	br i1 %62, label %if.then-11, label %if.else-12

if.then-11:
	; ReturnStmt
	store {%..string, i1} zeroinitializer, {%..string, i1}* %9
	%63 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %9, i64 0, i32 0
	store %..string zeroinitializer, %..string* %63
	%64 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %9, i64 0, i32 1
	store i1 true, i1* %64
	%65 = load {%..string, i1}, {%..string, i1}* %9, align 8
	ret {%..string, i1} %65

if.else-12:
	; RangeStmt
	; val
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %10
		; idx
	store i64 zeroinitializer, i64* %11
		; SelectorExpr
	%66 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 2
	%67 = load {%Type_Info_Enum_Value*, i64}, {%Type_Info_Enum_Value*, i64}* %66, align 8
	store i64 zeroinitializer, i64* %12
	%68 = extractvalue {%Type_Info_Enum_Value*, i64} %67, 1
	store i64 %68, i64* %12
	store i64 zeroinitializer, i64* %13
	store i64 -1, i64* %13
	br label %for.index.loop-13

for.index.loop-13:
	%69 = load i64, i64* %13, align 8
	%70 = add i64 %69, 1
	store i64 %70, i64* %13
	%71 = load i64, i64* %12, align 8
	%72 = icmp slt i64 %70, %71
	br i1 %72, label %for.index.body-14, label %for.index.done-20

for.index.body-14:
	%73 = load i64, i64* %13, align 8
	%74 = extractvalue {%Type_Info_Enum_Value*, i64} %67, 0
	%75 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %74, i64 %73
	%76 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %75, align 8
	store %Type_Info_Enum_Value %76, %Type_Info_Enum_Value* %10
	store i64 %73, i64* %11
	; IfStmt
	; v
		; ok
		%77 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %10, align 8
	; cast - union_cast
	store {i64, i1} zeroinitializer, {i64, i1}* %16
	%78 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %10, i64 0, i32 2 ; UnionTagPtr
	%79 = load i8, i8* %78, align 1
	%80 = icmp eq i8 %79, 13
	br i1 %80, label %union_cast.ok-15, label %union_cast.end-16

union_cast.ok-15:
	%81 = getelementptr inbounds {i64, i1}, {i64, i1}* %16, i64 0, i32 0
	%82 = getelementptr inbounds {i64, i1}, {i64, i1}* %16, i64 0, i32 1
	%83 = bitcast %Type_Info_Enum_Value* %10 to i64*
	%84 = load i64, i64* %83, align 8
	store i64 %84, i64* %81
	store i1 true, i1* %82
	br label %union_cast.end-16

union_cast.end-16:
	%85 = load {i64, i1}, {i64, i1}* %16, align 8
	%86 = extractvalue {i64, i1} %85, 0
	%87 = extractvalue {i64, i1} %85, 1
	store i64 %86, i64* %14
	store i1 %87, i1* %15
	%88 = load i1, i1* %15, align 1
	br i1 %88, label %cmp.and-17, label %if.done-19

cmp.and-17:
	%89 = load i64, i64* %14, align 8
	%90 = load i64, i64* %0, align 8
	%91 = icmp eq i64 %89, %90
	br i1 %91, label %if.then-18, label %if.done-19

if.then-18:
	; ReturnStmt
	; IndexExpr
	; SelectorExpr
	%92 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 1
	%93 = load {%..string*, i64}, {%..string*, i64}* %92, align 8
	%94 = extractvalue {%..string*, i64} %93, 0
	%95 = load i64, i64* %11, align 8
	%96 = extractvalue {%..string*, i64} %93, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$b6, i64 0, i32 0), i64 28}, i64 650, i64 22, i64 %95, i64 %96)
	%97 = getelementptr inbounds %..string, %..string* %94, i64 %95
	%98 = load %..string, %..string* %97, align 8
	store {%..string, i1} zeroinitializer, {%..string, i1}* %17
	%99 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %17, i64 0, i32 0
	store %..string %98, %..string* %99
	%100 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %17, i64 0, i32 1
	store i1 true, i1* %100
	%101 = load {%..string, i1}, {%..string, i1}* %17, align 8
	ret {%..string, i1} %101

if.done-19:
	br label %for.index.loop-13

for.index.done-20:
	br label %if.done-21

if.done-21:
	; ReturnStmt
	store {%..string, i1} zeroinitializer, {%..string, i1}* %18
	%102 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %18, i64 0, i32 0
	store %..string zeroinitializer, %..string* %102
	%103 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %18, i64 0, i32 1
	store i1 false, i1* %103
	%104 = load {%..string, i1}, {%..string, i1}* %18, align 8
	ret {%..string, i1} %104
}

define {%..string, i1} @fmt-4.enum_value_to_string.get_str-13(i64 %i, %Type_Info_Enum* %e, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca i64, align 8
	%1 = alloca %Type_Info_Enum_Value, align 8
	%2 = alloca i64, align 8
	%3 = alloca i64, align 8
	%4 = alloca i64, align 8
	%5 = alloca i64, align 8
	%6 = alloca i1, align 1
	%7 = alloca {i64, i1}, align 8
	%8 = alloca {%..string, i1}, align 8
	%9 = alloca {%..string, i1}, align 8
	%10 = alloca %Type_Info_Enum_Value, align 8
	%11 = alloca i64, align 8
	%12 = alloca i64, align 8
	%13 = alloca i64, align 8
	%14 = alloca i64, align 8
	%15 = alloca i1, align 1
	%16 = alloca {i64, i1}, align 8
	%17 = alloca {%..string, i1}, align 8
	%18 = alloca {%..string, i1}, align 8
		store i64 %i, i64* %0
	%19 = load %Type_Info_Enum, %Type_Info_Enum* %e, align 8
	; IfStmt
	; SelectorExpr
	; SelectorExpr
	%20 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 0
	%21 = load %Type_Info*, %Type_Info** %20, align 8
	%22 = call i1 @types-17.is_string(%Type_Info* %21, %Context* noalias nonnull %__.context_ptr)
	br i1 %22, label %if.then-1, label %if.else-10

if.then-1:
	; RangeStmt
	; val
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %1
		; idx
	store i64 zeroinitializer, i64* %2
		; SelectorExpr
	%23 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 2
	%24 = load {%Type_Info_Enum_Value*, i64}, {%Type_Info_Enum_Value*, i64}* %23, align 8
	store i64 zeroinitializer, i64* %3
	%25 = extractvalue {%Type_Info_Enum_Value*, i64} %24, 1
	store i64 %25, i64* %3
	store i64 zeroinitializer, i64* %4
	store i64 -1, i64* %4
	br label %for.index.loop-2

for.index.loop-2:
	%26 = load i64, i64* %4, align 8
	%27 = add i64 %26, 1
	store i64 %27, i64* %4
	%28 = load i64, i64* %3, align 8
	%29 = icmp slt i64 %27, %28
	br i1 %29, label %for.index.body-3, label %for.index.done-9

for.index.body-3:
	%30 = load i64, i64* %4, align 8
	%31 = extractvalue {%Type_Info_Enum_Value*, i64} %24, 0
	%32 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %31, i64 %30
	%33 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %32, align 8
	store %Type_Info_Enum_Value %33, %Type_Info_Enum_Value* %1
	store i64 %30, i64* %2
	; IfStmt
	; v
		; ok
		%34 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %1, align 8
	; cast - union_cast
	store {i64, i1} zeroinitializer, {i64, i1}* %7
	%35 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %1, i64 0, i32 2 ; UnionTagPtr
	%36 = load i8, i8* %35, align 1
	%37 = icmp eq i8 %36, 14
	br i1 %37, label %union_cast.ok-4, label %union_cast.end-5

union_cast.ok-4:
	%38 = getelementptr inbounds {i64, i1}, {i64, i1}* %7, i64 0, i32 0
	%39 = getelementptr inbounds {i64, i1}, {i64, i1}* %7, i64 0, i32 1
	%40 = bitcast %Type_Info_Enum_Value* %1 to i64*
	%41 = load i64, i64* %40, align 8
	store i64 %41, i64* %38
	store i1 true, i1* %39
	br label %union_cast.end-5

union_cast.end-5:
	%42 = load {i64, i1}, {i64, i1}* %7, align 8
	%43 = extractvalue {i64, i1} %42, 0
	%44 = extractvalue {i64, i1} %42, 1
	store i64 %43, i64* %5
	store i1 %44, i1* %6
	%45 = load i1, i1* %6, align 1
	br i1 %45, label %cmp.and-6, label %if.done-8

cmp.and-6:
	%46 = load i64, i64* %5, align 8
	%47 = load i64, i64* %0, align 8
	%48 = icmp eq i64 %46, %47
	br i1 %48, label %if.then-7, label %if.done-8

if.then-7:
	; ReturnStmt
	; IndexExpr
	; SelectorExpr
	%49 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 1
	%50 = load {%..string*, i64}, {%..string*, i64}* %49, align 8
	%51 = extractvalue {%..string*, i64} %50, 0
	%52 = load i64, i64* %2, align 8
	%53 = extractvalue {%..string*, i64} %50, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$b7, i64 0, i32 0), i64 28}, i64 642, i64 22, i64 %52, i64 %53)
	%54 = getelementptr inbounds %..string, %..string* %51, i64 %52
	%55 = load %..string, %..string* %54, align 8
	store {%..string, i1} zeroinitializer, {%..string, i1}* %8
	%56 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %8, i64 0, i32 0
	store %..string %55, %..string* %56
	%57 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %8, i64 0, i32 1
	store i1 true, i1* %57
	%58 = load {%..string, i1}, {%..string, i1}* %8, align 8
	ret {%..string, i1} %58

if.done-8:
	br label %for.index.loop-2

for.index.done-9:
	br label %if.done-21

if.else-10:
	; IfStmt
	; SelectorExpr
	%59 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 2
	%60 = load {%Type_Info_Enum_Value*, i64}, {%Type_Info_Enum_Value*, i64}* %59, align 8
	%61 = extractvalue {%Type_Info_Enum_Value*, i64} %60, 1
	%62 = icmp eq i64 %61, 0
	br i1 %62, label %if.then-11, label %if.else-12

if.then-11:
	; ReturnStmt
	store {%..string, i1} zeroinitializer, {%..string, i1}* %9
	%63 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %9, i64 0, i32 0
	store %..string zeroinitializer, %..string* %63
	%64 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %9, i64 0, i32 1
	store i1 true, i1* %64
	%65 = load {%..string, i1}, {%..string, i1}* %9, align 8
	ret {%..string, i1} %65

if.else-12:
	; RangeStmt
	; val
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %10
		; idx
	store i64 zeroinitializer, i64* %11
		; SelectorExpr
	%66 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 2
	%67 = load {%Type_Info_Enum_Value*, i64}, {%Type_Info_Enum_Value*, i64}* %66, align 8
	store i64 zeroinitializer, i64* %12
	%68 = extractvalue {%Type_Info_Enum_Value*, i64} %67, 1
	store i64 %68, i64* %12
	store i64 zeroinitializer, i64* %13
	store i64 -1, i64* %13
	br label %for.index.loop-13

for.index.loop-13:
	%69 = load i64, i64* %13, align 8
	%70 = add i64 %69, 1
	store i64 %70, i64* %13
	%71 = load i64, i64* %12, align 8
	%72 = icmp slt i64 %70, %71
	br i1 %72, label %for.index.body-14, label %for.index.done-20

for.index.body-14:
	%73 = load i64, i64* %13, align 8
	%74 = extractvalue {%Type_Info_Enum_Value*, i64} %67, 0
	%75 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %74, i64 %73
	%76 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %75, align 8
	store %Type_Info_Enum_Value %76, %Type_Info_Enum_Value* %10
	store i64 %73, i64* %11
	; IfStmt
	; v
		; ok
		%77 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %10, align 8
	; cast - union_cast
	store {i64, i1} zeroinitializer, {i64, i1}* %16
	%78 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %10, i64 0, i32 2 ; UnionTagPtr
	%79 = load i8, i8* %78, align 1
	%80 = icmp eq i8 %79, 14
	br i1 %80, label %union_cast.ok-15, label %union_cast.end-16

union_cast.ok-15:
	%81 = getelementptr inbounds {i64, i1}, {i64, i1}* %16, i64 0, i32 0
	%82 = getelementptr inbounds {i64, i1}, {i64, i1}* %16, i64 0, i32 1
	%83 = bitcast %Type_Info_Enum_Value* %10 to i64*
	%84 = load i64, i64* %83, align 8
	store i64 %84, i64* %81
	store i1 true, i1* %82
	br label %union_cast.end-16

union_cast.end-16:
	%85 = load {i64, i1}, {i64, i1}* %16, align 8
	%86 = extractvalue {i64, i1} %85, 0
	%87 = extractvalue {i64, i1} %85, 1
	store i64 %86, i64* %14
	store i1 %87, i1* %15
	%88 = load i1, i1* %15, align 1
	br i1 %88, label %cmp.and-17, label %if.done-19

cmp.and-17:
	%89 = load i64, i64* %14, align 8
	%90 = load i64, i64* %0, align 8
	%91 = icmp eq i64 %89, %90
	br i1 %91, label %if.then-18, label %if.done-19

if.then-18:
	; ReturnStmt
	; IndexExpr
	; SelectorExpr
	%92 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 1
	%93 = load {%..string*, i64}, {%..string*, i64}* %92, align 8
	%94 = extractvalue {%..string*, i64} %93, 0
	%95 = load i64, i64* %11, align 8
	%96 = extractvalue {%..string*, i64} %93, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$b8, i64 0, i32 0), i64 28}, i64 650, i64 22, i64 %95, i64 %96)
	%97 = getelementptr inbounds %..string, %..string* %94, i64 %95
	%98 = load %..string, %..string* %97, align 8
	store {%..string, i1} zeroinitializer, {%..string, i1}* %17
	%99 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %17, i64 0, i32 0
	store %..string %98, %..string* %99
	%100 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %17, i64 0, i32 1
	store i1 true, i1* %100
	%101 = load {%..string, i1}, {%..string, i1}* %17, align 8
	ret {%..string, i1} %101

if.done-19:
	br label %for.index.loop-13

for.index.done-20:
	br label %if.done-21

if.done-21:
	; ReturnStmt
	store {%..string, i1} zeroinitializer, {%..string, i1}* %18
	%102 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %18, i64 0, i32 0
	store %..string zeroinitializer, %..string* %102
	%103 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %18, i64 0, i32 1
	store i1 false, i1* %103
	%104 = load {%..string, i1}, {%..string, i1}* %18, align 8
	ret {%..string, i1} %104
}

define {%..string, i1} @fmt-4.enum_value_to_string.get_str-14(float %i, %Type_Info_Enum* %e, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca float, align 4
	%1 = alloca %Type_Info_Enum_Value, align 8
	%2 = alloca i64, align 8
	%3 = alloca i64, align 8
	%4 = alloca i64, align 8
	%5 = alloca float, align 4
	%6 = alloca i1, align 1
	%7 = alloca {float, i1}, align 4
	%8 = alloca {%..string, i1}, align 8
	%9 = alloca {%..string, i1}, align 8
	%10 = alloca %Type_Info_Enum_Value, align 8
	%11 = alloca i64, align 8
	%12 = alloca i64, align 8
	%13 = alloca i64, align 8
	%14 = alloca float, align 4
	%15 = alloca i1, align 1
	%16 = alloca {float, i1}, align 4
	%17 = alloca {%..string, i1}, align 8
	%18 = alloca {%..string, i1}, align 8
		store float %i, float* %0
	%19 = load %Type_Info_Enum, %Type_Info_Enum* %e, align 8
	; IfStmt
	; SelectorExpr
	; SelectorExpr
	%20 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 0
	%21 = load %Type_Info*, %Type_Info** %20, align 8
	%22 = call i1 @types-17.is_string(%Type_Info* %21, %Context* noalias nonnull %__.context_ptr)
	br i1 %22, label %if.then-1, label %if.else-10

if.then-1:
	; RangeStmt
	; val
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %1
		; idx
	store i64 zeroinitializer, i64* %2
		; SelectorExpr
	%23 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 2
	%24 = load {%Type_Info_Enum_Value*, i64}, {%Type_Info_Enum_Value*, i64}* %23, align 8
	store i64 zeroinitializer, i64* %3
	%25 = extractvalue {%Type_Info_Enum_Value*, i64} %24, 1
	store i64 %25, i64* %3
	store i64 zeroinitializer, i64* %4
	store i64 -1, i64* %4
	br label %for.index.loop-2

for.index.loop-2:
	%26 = load i64, i64* %4, align 8
	%27 = add i64 %26, 1
	store i64 %27, i64* %4
	%28 = load i64, i64* %3, align 8
	%29 = icmp slt i64 %27, %28
	br i1 %29, label %for.index.body-3, label %for.index.done-9

for.index.body-3:
	%30 = load i64, i64* %4, align 8
	%31 = extractvalue {%Type_Info_Enum_Value*, i64} %24, 0
	%32 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %31, i64 %30
	%33 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %32, align 8
	store %Type_Info_Enum_Value %33, %Type_Info_Enum_Value* %1
	store i64 %30, i64* %2
	; IfStmt
	; v
		; ok
		%34 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %1, align 8
	; cast - union_cast
	store {float, i1} zeroinitializer, {float, i1}* %7
	%35 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %1, i64 0, i32 2 ; UnionTagPtr
	%36 = load i8, i8* %35, align 1
	%37 = icmp eq i8 %36, 15
	br i1 %37, label %union_cast.ok-4, label %union_cast.end-5

union_cast.ok-4:
	%38 = getelementptr inbounds {float, i1}, {float, i1}* %7, i64 0, i32 0
	%39 = getelementptr inbounds {float, i1}, {float, i1}* %7, i64 0, i32 1
	%40 = bitcast %Type_Info_Enum_Value* %1 to float*
	%41 = load float, float* %40, align 4
	store float %41, float* %38
	store i1 true, i1* %39
	br label %union_cast.end-5

union_cast.end-5:
	%42 = load {float, i1}, {float, i1}* %7, align 4
	%43 = extractvalue {float, i1} %42, 0
	%44 = extractvalue {float, i1} %42, 1
	store float %43, float* %5
	store i1 %44, i1* %6
	%45 = load i1, i1* %6, align 1
	br i1 %45, label %cmp.and-6, label %if.done-8

cmp.and-6:
	%46 = load float, float* %5, align 4
	%47 = load float, float* %0, align 4
	%48 = fcmp oeq float %46, %47
	br i1 %48, label %if.then-7, label %if.done-8

if.then-7:
	; ReturnStmt
	; IndexExpr
	; SelectorExpr
	%49 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 1
	%50 = load {%..string*, i64}, {%..string*, i64}* %49, align 8
	%51 = extractvalue {%..string*, i64} %50, 0
	%52 = load i64, i64* %2, align 8
	%53 = extractvalue {%..string*, i64} %50, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$b9, i64 0, i32 0), i64 28}, i64 642, i64 22, i64 %52, i64 %53)
	%54 = getelementptr inbounds %..string, %..string* %51, i64 %52
	%55 = load %..string, %..string* %54, align 8
	store {%..string, i1} zeroinitializer, {%..string, i1}* %8
	%56 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %8, i64 0, i32 0
	store %..string %55, %..string* %56
	%57 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %8, i64 0, i32 1
	store i1 true, i1* %57
	%58 = load {%..string, i1}, {%..string, i1}* %8, align 8
	ret {%..string, i1} %58

if.done-8:
	br label %for.index.loop-2

for.index.done-9:
	br label %if.done-21

if.else-10:
	; IfStmt
	; SelectorExpr
	%59 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 2
	%60 = load {%Type_Info_Enum_Value*, i64}, {%Type_Info_Enum_Value*, i64}* %59, align 8
	%61 = extractvalue {%Type_Info_Enum_Value*, i64} %60, 1
	%62 = icmp eq i64 %61, 0
	br i1 %62, label %if.then-11, label %if.else-12

if.then-11:
	; ReturnStmt
	store {%..string, i1} zeroinitializer, {%..string, i1}* %9
	%63 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %9, i64 0, i32 0
	store %..string zeroinitializer, %..string* %63
	%64 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %9, i64 0, i32 1
	store i1 true, i1* %64
	%65 = load {%..string, i1}, {%..string, i1}* %9, align 8
	ret {%..string, i1} %65

if.else-12:
	; RangeStmt
	; val
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %10
		; idx
	store i64 zeroinitializer, i64* %11
		; SelectorExpr
	%66 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 2
	%67 = load {%Type_Info_Enum_Value*, i64}, {%Type_Info_Enum_Value*, i64}* %66, align 8
	store i64 zeroinitializer, i64* %12
	%68 = extractvalue {%Type_Info_Enum_Value*, i64} %67, 1
	store i64 %68, i64* %12
	store i64 zeroinitializer, i64* %13
	store i64 -1, i64* %13
	br label %for.index.loop-13

for.index.loop-13:
	%69 = load i64, i64* %13, align 8
	%70 = add i64 %69, 1
	store i64 %70, i64* %13
	%71 = load i64, i64* %12, align 8
	%72 = icmp slt i64 %70, %71
	br i1 %72, label %for.index.body-14, label %for.index.done-20

for.index.body-14:
	%73 = load i64, i64* %13, align 8
	%74 = extractvalue {%Type_Info_Enum_Value*, i64} %67, 0
	%75 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %74, i64 %73
	%76 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %75, align 8
	store %Type_Info_Enum_Value %76, %Type_Info_Enum_Value* %10
	store i64 %73, i64* %11
	; IfStmt
	; v
		; ok
		%77 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %10, align 8
	; cast - union_cast
	store {float, i1} zeroinitializer, {float, i1}* %16
	%78 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %10, i64 0, i32 2 ; UnionTagPtr
	%79 = load i8, i8* %78, align 1
	%80 = icmp eq i8 %79, 15
	br i1 %80, label %union_cast.ok-15, label %union_cast.end-16

union_cast.ok-15:
	%81 = getelementptr inbounds {float, i1}, {float, i1}* %16, i64 0, i32 0
	%82 = getelementptr inbounds {float, i1}, {float, i1}* %16, i64 0, i32 1
	%83 = bitcast %Type_Info_Enum_Value* %10 to float*
	%84 = load float, float* %83, align 4
	store float %84, float* %81
	store i1 true, i1* %82
	br label %union_cast.end-16

union_cast.end-16:
	%85 = load {float, i1}, {float, i1}* %16, align 4
	%86 = extractvalue {float, i1} %85, 0
	%87 = extractvalue {float, i1} %85, 1
	store float %86, float* %14
	store i1 %87, i1* %15
	%88 = load i1, i1* %15, align 1
	br i1 %88, label %cmp.and-17, label %if.done-19

cmp.and-17:
	%89 = load float, float* %14, align 4
	%90 = load float, float* %0, align 4
	%91 = fcmp oeq float %89, %90
	br i1 %91, label %if.then-18, label %if.done-19

if.then-18:
	; ReturnStmt
	; IndexExpr
	; SelectorExpr
	%92 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 1
	%93 = load {%..string*, i64}, {%..string*, i64}* %92, align 8
	%94 = extractvalue {%..string*, i64} %93, 0
	%95 = load i64, i64* %11, align 8
	%96 = extractvalue {%..string*, i64} %93, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$ba, i64 0, i32 0), i64 28}, i64 650, i64 22, i64 %95, i64 %96)
	%97 = getelementptr inbounds %..string, %..string* %94, i64 %95
	%98 = load %..string, %..string* %97, align 8
	store {%..string, i1} zeroinitializer, {%..string, i1}* %17
	%99 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %17, i64 0, i32 0
	store %..string %98, %..string* %99
	%100 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %17, i64 0, i32 1
	store i1 true, i1* %100
	%101 = load {%..string, i1}, {%..string, i1}* %17, align 8
	ret {%..string, i1} %101

if.done-19:
	br label %for.index.loop-13

for.index.done-20:
	br label %if.done-21

if.done-21:
	; ReturnStmt
	store {%..string, i1} zeroinitializer, {%..string, i1}* %18
	%102 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %18, i64 0, i32 0
	store %..string zeroinitializer, %..string* %102
	%103 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %18, i64 0, i32 1
	store i1 false, i1* %103
	%104 = load {%..string, i1}, {%..string, i1}* %18, align 8
	ret {%..string, i1} %104
}

define {%..string, i1} @fmt-4.enum_value_to_string.get_str-15(double %i, %Type_Info_Enum* %e, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca double, align 8
	%1 = alloca %Type_Info_Enum_Value, align 8
	%2 = alloca i64, align 8
	%3 = alloca i64, align 8
	%4 = alloca i64, align 8
	%5 = alloca double, align 8
	%6 = alloca i1, align 1
	%7 = alloca {double, i1}, align 8
	%8 = alloca {%..string, i1}, align 8
	%9 = alloca {%..string, i1}, align 8
	%10 = alloca %Type_Info_Enum_Value, align 8
	%11 = alloca i64, align 8
	%12 = alloca i64, align 8
	%13 = alloca i64, align 8
	%14 = alloca double, align 8
	%15 = alloca i1, align 1
	%16 = alloca {double, i1}, align 8
	%17 = alloca {%..string, i1}, align 8
	%18 = alloca {%..string, i1}, align 8
		store double %i, double* %0
	%19 = load %Type_Info_Enum, %Type_Info_Enum* %e, align 8
	; IfStmt
	; SelectorExpr
	; SelectorExpr
	%20 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 0
	%21 = load %Type_Info*, %Type_Info** %20, align 8
	%22 = call i1 @types-17.is_string(%Type_Info* %21, %Context* noalias nonnull %__.context_ptr)
	br i1 %22, label %if.then-1, label %if.else-10

if.then-1:
	; RangeStmt
	; val
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %1
		; idx
	store i64 zeroinitializer, i64* %2
		; SelectorExpr
	%23 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 2
	%24 = load {%Type_Info_Enum_Value*, i64}, {%Type_Info_Enum_Value*, i64}* %23, align 8
	store i64 zeroinitializer, i64* %3
	%25 = extractvalue {%Type_Info_Enum_Value*, i64} %24, 1
	store i64 %25, i64* %3
	store i64 zeroinitializer, i64* %4
	store i64 -1, i64* %4
	br label %for.index.loop-2

for.index.loop-2:
	%26 = load i64, i64* %4, align 8
	%27 = add i64 %26, 1
	store i64 %27, i64* %4
	%28 = load i64, i64* %3, align 8
	%29 = icmp slt i64 %27, %28
	br i1 %29, label %for.index.body-3, label %for.index.done-9

for.index.body-3:
	%30 = load i64, i64* %4, align 8
	%31 = extractvalue {%Type_Info_Enum_Value*, i64} %24, 0
	%32 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %31, i64 %30
	%33 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %32, align 8
	store %Type_Info_Enum_Value %33, %Type_Info_Enum_Value* %1
	store i64 %30, i64* %2
	; IfStmt
	; v
		; ok
		%34 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %1, align 8
	; cast - union_cast
	store {double, i1} zeroinitializer, {double, i1}* %7
	%35 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %1, i64 0, i32 2 ; UnionTagPtr
	%36 = load i8, i8* %35, align 1
	%37 = icmp eq i8 %36, 16
	br i1 %37, label %union_cast.ok-4, label %union_cast.end-5

union_cast.ok-4:
	%38 = getelementptr inbounds {double, i1}, {double, i1}* %7, i64 0, i32 0
	%39 = getelementptr inbounds {double, i1}, {double, i1}* %7, i64 0, i32 1
	%40 = bitcast %Type_Info_Enum_Value* %1 to double*
	%41 = load double, double* %40, align 8
	store double %41, double* %38
	store i1 true, i1* %39
	br label %union_cast.end-5

union_cast.end-5:
	%42 = load {double, i1}, {double, i1}* %7, align 8
	%43 = extractvalue {double, i1} %42, 0
	%44 = extractvalue {double, i1} %42, 1
	store double %43, double* %5
	store i1 %44, i1* %6
	%45 = load i1, i1* %6, align 1
	br i1 %45, label %cmp.and-6, label %if.done-8

cmp.and-6:
	%46 = load double, double* %5, align 8
	%47 = load double, double* %0, align 8
	%48 = fcmp oeq double %46, %47
	br i1 %48, label %if.then-7, label %if.done-8

if.then-7:
	; ReturnStmt
	; IndexExpr
	; SelectorExpr
	%49 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 1
	%50 = load {%..string*, i64}, {%..string*, i64}* %49, align 8
	%51 = extractvalue {%..string*, i64} %50, 0
	%52 = load i64, i64* %2, align 8
	%53 = extractvalue {%..string*, i64} %50, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$bb, i64 0, i32 0), i64 28}, i64 642, i64 22, i64 %52, i64 %53)
	%54 = getelementptr inbounds %..string, %..string* %51, i64 %52
	%55 = load %..string, %..string* %54, align 8
	store {%..string, i1} zeroinitializer, {%..string, i1}* %8
	%56 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %8, i64 0, i32 0
	store %..string %55, %..string* %56
	%57 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %8, i64 0, i32 1
	store i1 true, i1* %57
	%58 = load {%..string, i1}, {%..string, i1}* %8, align 8
	ret {%..string, i1} %58

if.done-8:
	br label %for.index.loop-2

for.index.done-9:
	br label %if.done-21

if.else-10:
	; IfStmt
	; SelectorExpr
	%59 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 2
	%60 = load {%Type_Info_Enum_Value*, i64}, {%Type_Info_Enum_Value*, i64}* %59, align 8
	%61 = extractvalue {%Type_Info_Enum_Value*, i64} %60, 1
	%62 = icmp eq i64 %61, 0
	br i1 %62, label %if.then-11, label %if.else-12

if.then-11:
	; ReturnStmt
	store {%..string, i1} zeroinitializer, {%..string, i1}* %9
	%63 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %9, i64 0, i32 0
	store %..string zeroinitializer, %..string* %63
	%64 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %9, i64 0, i32 1
	store i1 true, i1* %64
	%65 = load {%..string, i1}, {%..string, i1}* %9, align 8
	ret {%..string, i1} %65

if.else-12:
	; RangeStmt
	; val
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %10
		; idx
	store i64 zeroinitializer, i64* %11
		; SelectorExpr
	%66 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 2
	%67 = load {%Type_Info_Enum_Value*, i64}, {%Type_Info_Enum_Value*, i64}* %66, align 8
	store i64 zeroinitializer, i64* %12
	%68 = extractvalue {%Type_Info_Enum_Value*, i64} %67, 1
	store i64 %68, i64* %12
	store i64 zeroinitializer, i64* %13
	store i64 -1, i64* %13
	br label %for.index.loop-13

for.index.loop-13:
	%69 = load i64, i64* %13, align 8
	%70 = add i64 %69, 1
	store i64 %70, i64* %13
	%71 = load i64, i64* %12, align 8
	%72 = icmp slt i64 %70, %71
	br i1 %72, label %for.index.body-14, label %for.index.done-20

for.index.body-14:
	%73 = load i64, i64* %13, align 8
	%74 = extractvalue {%Type_Info_Enum_Value*, i64} %67, 0
	%75 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %74, i64 %73
	%76 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %75, align 8
	store %Type_Info_Enum_Value %76, %Type_Info_Enum_Value* %10
	store i64 %73, i64* %11
	; IfStmt
	; v
		; ok
		%77 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %10, align 8
	; cast - union_cast
	store {double, i1} zeroinitializer, {double, i1}* %16
	%78 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %10, i64 0, i32 2 ; UnionTagPtr
	%79 = load i8, i8* %78, align 1
	%80 = icmp eq i8 %79, 16
	br i1 %80, label %union_cast.ok-15, label %union_cast.end-16

union_cast.ok-15:
	%81 = getelementptr inbounds {double, i1}, {double, i1}* %16, i64 0, i32 0
	%82 = getelementptr inbounds {double, i1}, {double, i1}* %16, i64 0, i32 1
	%83 = bitcast %Type_Info_Enum_Value* %10 to double*
	%84 = load double, double* %83, align 8
	store double %84, double* %81
	store i1 true, i1* %82
	br label %union_cast.end-16

union_cast.end-16:
	%85 = load {double, i1}, {double, i1}* %16, align 8
	%86 = extractvalue {double, i1} %85, 0
	%87 = extractvalue {double, i1} %85, 1
	store double %86, double* %14
	store i1 %87, i1* %15
	%88 = load i1, i1* %15, align 1
	br i1 %88, label %cmp.and-17, label %if.done-19

cmp.and-17:
	%89 = load double, double* %14, align 8
	%90 = load double, double* %0, align 8
	%91 = fcmp oeq double %89, %90
	br i1 %91, label %if.then-18, label %if.done-19

if.then-18:
	; ReturnStmt
	; IndexExpr
	; SelectorExpr
	%92 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %e, i64 0, i32 1
	%93 = load {%..string*, i64}, {%..string*, i64}* %92, align 8
	%94 = extractvalue {%..string*, i64} %93, 0
	%95 = load i64, i64* %11, align 8
	%96 = extractvalue {%..string*, i64} %93, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$bc, i64 0, i32 0), i64 28}, i64 650, i64 22, i64 %95, i64 %96)
	%97 = getelementptr inbounds %..string, %..string* %94, i64 %95
	%98 = load %..string, %..string* %97, align 8
	store {%..string, i1} zeroinitializer, {%..string, i1}* %17
	%99 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %17, i64 0, i32 0
	store %..string %98, %..string* %99
	%100 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %17, i64 0, i32 1
	store i1 true, i1* %100
	%101 = load {%..string, i1}, {%..string, i1}* %17, align 8
	ret {%..string, i1} %101

if.done-19:
	br label %for.index.loop-13

for.index.done-20:
	br label %if.done-21

if.done-21:
	; ReturnStmt
	store {%..string, i1} zeroinitializer, {%..string, i1}* %18
	%102 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %18, i64 0, i32 0
	store %..string zeroinitializer, %..string* %102
	%103 = getelementptr inbounds {%..string, i1}, {%..string, i1}* %18, i64 0, i32 1
	store i1 false, i1* %103
	%104 = load {%..string, i1}, {%..string, i1}* %18, align 8
	ret {%..string, i1} %104
}

define void @fmt-4.fmt_enum(%fmt-4.Fmt_Info* %fi, %..any %v, i32 %verb, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca %fmt-4.Fmt_Info*, align 8
	%1 = alloca %..any, align 8
	%2 = alloca i32, align 4
	%3 = alloca %Type_Info_Enum, align 8
	%4 = alloca %..any, align 8
	%5 = alloca %..string, align 8
	%6 = alloca i1, align 1
	%7 = alloca {[0 x <8 x i8>], [72 x i8], i8}, align 8
		store %fmt-4.Fmt_Info* %fi, %fmt-4.Fmt_Info** %0
		store %..any %v, %..any* %1
		store i32 %verb, i32* %2
	; IfStmt
	; SelectorExpr
	%8 = getelementptr inbounds %..any, %..any* %1, i64 0, i32 1
	%9 = load %Type_Info*, %Type_Info** %8, align 8
	%10 = icmp eq %Type_Info* %9, zeroinitializer
	br i1 %10, label %if.then-2, label %cmp.or-1

cmp.or-1:
	; SelectorExpr
	%11 = getelementptr inbounds %..any, %..any* %1, i64 0, i32 0
	%12 = load %..rawptr, %..rawptr* %11, align 8
	%13 = icmp eq %..rawptr %12, zeroinitializer
	br i1 %13, label %if.then-2, label %if.done-3

if.then-2:
	; SelectorExpr
	%14 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%15 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %14, i64 0
	%16 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %15, i64 0, i32 4
	%17 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %16, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %17, %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$bd, i64 0, i32 0), i64 5}, %Context* noalias nonnull %__.context_ptr)
	; ReturnStmt
	ret void

if.done-3:
	; TypeSwitchStmt
	; SelectorExpr
	; SelectorExpr
	%18 = getelementptr inbounds %..any, %..any* %1, i64 0, i32 1
	%19 = load %Type_Info*, %Type_Info** %18, align 8
	%20 = getelementptr inbounds %Type_Info, %Type_Info* %19, i64 0
	%21 = getelementptr inbounds %Type_Info, %Type_Info* %20, i64 0, i32 2
	%22 = load {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %21, align 8
	; get union's tag
	%23 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %21, i64 0, i32 2 ; UnionTagPtr
	%24 = load i8, i8* %23, align 1
	%25 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %21 to %..rawptr
	%26 = icmp eq i8 %24, 18
	br i1 %26, label %typeswitch.body-5, label %typeswitch.next-4

typeswitch.next-4:
	store {[0 x <8 x i8>], [72 x i8], i8} %22, {[0 x <8 x i8>], [72 x i8], i8}* %7
	%27 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%28 = load i32, i32* %2, align 4
	call void @fmt-4.fmt_bad_verb(%fmt-4.Fmt_Info* %27, i32 %28, %Context* noalias nonnull %__.context_ptr)
	br label %typeswitch.done-15

typeswitch.body-5:
	%29 = bitcast %..rawptr %25 to %Type_Info_Enum*
	%30 = load %Type_Info_Enum, %Type_Info_Enum* %29, align 8
	store %Type_Info_Enum %30, %Type_Info_Enum* %3
	; SwitchStmt
	%31 = load i32, i32* %2, align 4
	%32 = icmp eq i32 %31, 100
	br i1 %32, label %switch.fall.body-8, label %switch.case.next-6

switch.case.next-6:
	%33 = icmp eq i32 %31, 102
	br i1 %33, label %switch.fall.body-8, label %switch.case.next-7

switch.case.next-7:
	%34 = icmp eq i32 %31, 115
	br i1 %34, label %switch.fall.body-11, label %switch.case.next-9

switch.fall.body-8:
	%35 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	; CompoundLit
	store %..any zeroinitializer, %..any* %4
	store %..any zeroinitializer, %..any* %4
	; SelectorExpr
	%36 = getelementptr inbounds %..any, %..any* %1, i64 0, i32 0
	%37 = load %..rawptr, %..rawptr* %36, align 8
	%38 = getelementptr inbounds %..any, %..any* %4, i64 0, i32 0
	store %..rawptr %37, %..rawptr* %38
	; SelectorExpr
	%39 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %3, i64 0, i32 0
	%40 = load %Type_Info*, %Type_Info** %39, align 8
	%41 = call %Type_Info* @type_info_base(%Type_Info* %40, %Context* noalias nonnull %__.context_ptr)
	%42 = getelementptr inbounds %..any, %..any* %4, i64 0, i32 1
	store %Type_Info* %41, %Type_Info** %42
	%43 = load %..any, %..any* %4, align 8
	%44 = load i32, i32* %2, align 4
	call void @fmt-4.fmt_arg(%fmt-4.Fmt_Info* %35, %..any %43, i32 %44, %Context* noalias nonnull %__.context_ptr)
	br label %switch.done-14

switch.case.next-9:
	%45 = icmp eq i32 %31, 118
	br i1 %45, label %switch.fall.body-11, label %switch.case.next-10

switch.case.next-10:
	%46 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%47 = load i32, i32* %2, align 4
	call void @fmt-4.fmt_bad_verb(%fmt-4.Fmt_Info* %46, i32 %47, %Context* noalias nonnull %__.context_ptr)
	br label %switch.done-14

switch.fall.body-11:
	; str
		; ok
		%48 = load %..any, %..any* %1, align 8
	%49 = call {%..string, i1} @fmt-4.enum_value_to_string(%..any %48, %Context* noalias nonnull %__.context_ptr)
	%50 = extractvalue {%..string, i1} %49, 0
	%51 = extractvalue {%..string, i1} %49, 1
	store %..string %50, %..string* %5
	store i1 %51, i1* %6
	; IfStmt
	%52 = load i1, i1* %6, align 1
	br i1 %52, label %if.done-13, label %if.then-12

if.then-12:
	; AssignStmt
	store %..string {i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__str$be, i64 0, i32 0), i64 18}, %..string* %5
	br label %if.done-13

if.done-13:
	; SelectorExpr
	%53 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%54 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %53, i64 0
	%55 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %54, i64 0, i32 4
	%56 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %55, align 8
	%57 = load %..string, %..string* %5, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %56, %..string %57, %Context* noalias nonnull %__.context_ptr)
	br label %switch.done-14

switch.done-14:
	br label %typeswitch.done-15

typeswitch.done-15:
	ret void
}

define void @fmt-4.fmt_value(%fmt-4.Fmt_Info* %fi, %..any %v, i32 %verb, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca %fmt-4.Fmt_Info*, align 8
	%1 = alloca %..any, align 8
	%2 = alloca i32, align 4
	%3 = alloca %Type_Info_Named, align 8
	%4 = alloca %Type_Info_Struct, align 8
	%5 = alloca i1, align 1
	%6 = alloca i64, align 8
	%7 = alloca i64, align 8
	%8 = alloca i64, align 8
	%9 = alloca i64, align 8
	%10 = alloca i64, align 8
	%11 = alloca i64, align 8
	%12 = alloca %Type_Info*, align 8
	%13 = alloca i64, align 8
	%14 = alloca %..any, align 8
	%15 = alloca i64, align 8
	%16 = alloca i64, align 8
	%17 = alloca {[0 x <8 x i8>], [72 x i8], i8}, align 8
	%18 = alloca %..any, align 8
	%19 = alloca %Type_Info_Boolean, align 1
	%20 = alloca %Type_Info_Integer, align 1
	%21 = alloca %Type_Info_Rune, align 1
	%22 = alloca %Type_Info_Float, align 1
	%23 = alloca %Type_Info_Complex, align 1
	%24 = alloca %Type_Info_String, align 1
	%25 = alloca %Type_Info_Pointer, align 8
	%26 = alloca %Type_Info_Array, align 8
	%27 = alloca i64, align 8
	%28 = alloca i64, align 8
	%29 = alloca i64, align 8
	%30 = alloca i64, align 8
	%31 = alloca %..any, align 8
	%32 = alloca %Type_Info_Dynamic_Array, align 8
	%33 = alloca %raw-6.Dynamic_Array*, align 8
	%34 = alloca i64, align 8
	%35 = alloca i64, align 8
	%36 = alloca i64, align 8
	%37 = alloca i64, align 8
	%38 = alloca %..any, align 8
	%39 = alloca %Type_Info_Slice, align 8
	%40 = alloca %raw-6.Slice*, align 8
	%41 = alloca i64, align 8
	%42 = alloca i64, align 8
	%43 = alloca i64, align 8
	%44 = alloca i64, align 8
	%45 = alloca %..any, align 8
	%46 = alloca %Type_Info_Vector, align 8
	%47 = alloca i64, align 8
	%48 = alloca i64, align 8
	%49 = alloca i64, align 8
	%50 = alloca i64, align 8
	%51 = alloca %..any, align 8
	%52 = alloca %Type_Info_Map, align 8
	%53 = alloca %raw-6.Dynamic_Array*, align 8
	%54 = alloca %raw-6.Map*, align 8
	%55 = alloca %Type_Info_Struct, align 8
	%56 = alloca %Type_Info*, align 8
	%57 = alloca {%Type_Info_Struct, i1}, align 8
	%58 = alloca %Type_Info_Dynamic_Array, align 8
	%59 = alloca %Type_Info*, align 8
	%60 = alloca {%Type_Info_Dynamic_Array, i1}, align 8
	%61 = alloca %Type_Info_Struct, align 8
	%62 = alloca {%Type_Info_Struct, i1}, align 8
	%63 = alloca i64, align 8
	%64 = alloca i64, align 8
	%65 = alloca i64, align 8
	%66 = alloca i64, align 8
	%67 = alloca i64, align 8
	%68 = alloca %__Map_Entry_Header*, align 8
	%69 = alloca %fmt-4.Fmt_Info, align 8
	%70 = alloca %fmt-4.Fmt_Info, align 8
	%71 = alloca %..any, align 8
	%72 = alloca i64, align 8
	%73 = alloca %..any, align 8
	%74 = alloca %Type_Info_Struct, align 8
	%75 = alloca i1, align 1
	%76 = alloca i64, align 8
	%77 = alloca i64, align 8
	%78 = alloca i64, align 8
	%79 = alloca i64, align 8
	%80 = alloca i64, align 8
	%81 = alloca i64, align 8
	%82 = alloca %Type_Info*, align 8
	%83 = alloca i64, align 8
	%84 = alloca %..any, align 8
	%85 = alloca %Type_Info_Union, align 8
	%86 = alloca i64, align 8
	%87 = alloca %..any, align 8
	%88 = alloca %..any, align 8
	%89 = alloca i64, align 8
	%90 = alloca i8, align 1
	%91 = alloca i8, align 1
	%92 = alloca i16, align 2
	%93 = alloca i16, align 2
	%94 = alloca i32, align 4
	%95 = alloca i32, align 4
	%96 = alloca i64, align 8
	%97 = alloca i64, align 8
	%98 = alloca i128, align 8
	%99 = alloca i128, align 8
	%100 = alloca %..any, align 8
	%101 = alloca {%..any*, i64}, align 8
	%102 = alloca {%..any*, i64}, align 16
	%103 = alloca %Source_Code_Location, align 16
	%104 = alloca %Type_Info*, align 8
	%105 = alloca %..any, align 8
	%106 = alloca %Type_Info_Enum, align 8
	%107 = alloca %Type_Info_Procedure, align 8
		store %fmt-4.Fmt_Info* %fi, %fmt-4.Fmt_Info** %0
		store %..any %v, %..any* %1
		store i32 %verb, i32* %2
	; IfStmt
	; SelectorExpr
	%108 = getelementptr inbounds %..any, %..any* %1, i64 0, i32 0
	%109 = load %..rawptr, %..rawptr* %108, align 8
	%110 = icmp eq %..rawptr %109, zeroinitializer
	br i1 %110, label %if.then-2, label %cmp.or-1

cmp.or-1:
	; SelectorExpr
	%111 = getelementptr inbounds %..any, %..any* %1, i64 0, i32 1
	%112 = load %Type_Info*, %Type_Info** %111, align 8
	%113 = icmp eq %Type_Info* %112, zeroinitializer
	br i1 %113, label %if.then-2, label %if.done-3

if.then-2:
	; SelectorExpr
	%114 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%115 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %114, i64 0
	%116 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %115, i64 0, i32 4
	%117 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %116, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %117, %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$bf, i64 0, i32 0), i64 5}, %Context* noalias nonnull %__.context_ptr)
	; ReturnStmt
	ret void

if.done-3:
	; TypeSwitchStmt
	; SelectorExpr
	; SelectorExpr
	%118 = getelementptr inbounds %..any, %..any* %1, i64 0, i32 1
	%119 = load %Type_Info*, %Type_Info** %118, align 8
	%120 = getelementptr inbounds %Type_Info, %Type_Info* %119, i64 0
	%121 = getelementptr inbounds %Type_Info, %Type_Info* %120, i64 0, i32 2
	%122 = load {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %121, align 8
	; get union's tag
	%123 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %121, i64 0, i32 2 ; UnionTagPtr
	%124 = load i8, i8* %123, align 1
	%125 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %121 to %..rawptr
	%126 = icmp eq i8 %124, 1
	br i1 %126, label %typeswitch.body-5, label %typeswitch.next-4

typeswitch.next-4:
	%127 = icmp eq i8 %124, 7
	br i1 %127, label %typeswitch.body-37, label %typeswitch.next-36

typeswitch.body-5:
	%128 = bitcast %..rawptr %125 to %Type_Info_Named*
	%129 = load %Type_Info_Named, %Type_Info_Named* %128, align 8
	store %Type_Info_Named %129, %Type_Info_Named* %3
	; TypeSwitchStmt
	; SelectorExpr
	; SelectorExpr
	%130 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %3, i64 0, i32 1
	%131 = load %Type_Info*, %Type_Info** %130, align 8
	%132 = getelementptr inbounds %Type_Info, %Type_Info* %131, i64 0
	%133 = getelementptr inbounds %Type_Info, %Type_Info* %132, i64 0, i32 2
	%134 = load {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %133, align 8
	; get union's tag
	%135 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %133, i64 0, i32 2 ; UnionTagPtr
	%136 = load i8, i8* %135, align 1
	%137 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %133 to %..rawptr
	%138 = icmp eq i8 %136, 16
	br i1 %138, label %typeswitch.body-7, label %typeswitch.next-6

typeswitch.next-6:
	store {[0 x <8 x i8>], [72 x i8], i8} %134, {[0 x <8 x i8>], [72 x i8], i8}* %17
	%139 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	; CompoundLit
	store %..any zeroinitializer, %..any* %18
	store %..any zeroinitializer, %..any* %18
	; SelectorExpr
	%140 = getelementptr inbounds %..any, %..any* %1, i64 0, i32 0
	%141 = load %..rawptr, %..rawptr* %140, align 8
	%142 = getelementptr inbounds %..any, %..any* %18, i64 0, i32 0
	store %..rawptr %141, %..rawptr* %142
	; SelectorExpr
	%143 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %3, i64 0, i32 1
	%144 = load %Type_Info*, %Type_Info** %143, align 8
	%145 = getelementptr inbounds %..any, %..any* %18, i64 0, i32 1
	store %Type_Info* %144, %Type_Info** %145
	%146 = load %..any, %..any* %18, align 8
	%147 = load i32, i32* %2, align 4
	call void @fmt-4.fmt_value(%fmt-4.Fmt_Info* %139, %..any %146, i32 %147, %Context* noalias nonnull %__.context_ptr)
	br label %typeswitch.done-35

typeswitch.body-7:
	%148 = bitcast %..rawptr %137 to %Type_Info_Struct*
	%149 = load %Type_Info_Struct, %Type_Info_Struct* %148, align 8
	store %Type_Info_Struct %149, %Type_Info_Struct* %4
	; IfStmt
	%150 = load i32, i32* %2, align 4
	%151 = icmp ne i32 %150, 118
	br i1 %151, label %if.then-8, label %if.done-9

if.then-8:
	%152 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%153 = load i32, i32* %2, align 4
	call void @fmt-4.fmt_bad_verb(%fmt-4.Fmt_Info* %152, i32 %153, %Context* noalias nonnull %__.context_ptr)
	; ReturnStmt
	ret void

if.done-9:
	; IfStmt
	; SelectorExpr
	%154 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %4, i64 0, i32 6
	%155 = load i1, i1* %154, align 1
	br i1 %155, label %if.then-10, label %if.done-11

if.then-10:
	; SelectorExpr
	%156 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%157 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %156, i64 0
	%158 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %157, i64 0, i32 4
	%159 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %158, align 8
	; SelectorExpr
	%160 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %3, i64 0, i32 0
	%161 = load %..string, %..string* %160, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %159, %..string %161, %Context* noalias nonnull %__.context_ptr)
	; SelectorExpr
	%162 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%163 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %162, i64 0
	%164 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %163, i64 0, i32 4
	%165 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %164, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %165, %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$c0, i64 0, i32 0), i64 2}, %Context* noalias nonnull %__.context_ptr)
	; ReturnStmt
	ret void

if.done-11:
	; SelectorExpr
	%166 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%167 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %166, i64 0
	%168 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %167, i64 0, i32 4
	%169 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %168, align 8
	; SelectorExpr
	%170 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %3, i64 0, i32 0
	%171 = load %..string, %..string* %170, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %169, %..string %171, %Context* noalias nonnull %__.context_ptr)
	; SelectorExpr
	%172 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%173 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %172, i64 0
	%174 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %173, i64 0, i32 4
	%175 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %174, align 8
	call void @fmt-4.write_byte({i8*, i64, i64, %Allocator}* %175, i8 123, %Context* noalias nonnull %__.context_ptr)
	; hash
		; SelectorExpr
	%176 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%177 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %176, i64 0
	%178 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %177, i64 0, i32 9
	%179 = load i1, i1* %178, align 1
	store i1 %179, i1* %5
	; DeferStmt
	; indent
		; SelectorExpr
	%180 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%181 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %180, i64 0
	%182 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %181, i64 0, i32 3
	%183 = load i64, i64* %182, align 8
	store i64 %183, i64* %6
	; DeferStmt
	; AssignStmt
	; SelectorExpr
	%184 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%185 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %184, i64 0
	%186 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %185, i64 0, i32 9
	store i1 false, i1* %186
	; AssignStmt
	; SelectorExpr
	%187 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%188 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %187, i64 0
	%189 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %188, i64 0, i32 3
	%190 = load i64, i64* %189, align 8
	%191 = add i64 %190, 1
	store i64 %191, i64* %189
	; IfStmt
	%192 = load i1, i1* %5, align 1
	br i1 %192, label %if.then-12, label %if.done-13

if.then-12:
	; SelectorExpr
	%193 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%194 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %193, i64 0
	%195 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %194, i64 0, i32 4
	%196 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %195, align 8
	call void @fmt-4.write_byte({i8*, i64, i64, %Allocator}* %196, i8 10, %Context* noalias nonnull %__.context_ptr)
	br label %if.done-13

if.done-13:
	; RangeStmt
	; i
	store i64 zeroinitializer, i64* %7
		; SelectorExpr
	%197 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %4, i64 0, i32 1
	%198 = load {%..string*, i64}, {%..string*, i64}* %197, align 8
	store i64 zeroinitializer, i64* %8
	%199 = extractvalue {%..string*, i64} %198, 1
	store i64 %199, i64* %8
	store i64 zeroinitializer, i64* %9
	store i64 -1, i64* %9
	br label %for.index.loop-14

for.index.loop-14:
	%200 = load i64, i64* %9, align 8
	%201 = add i64 %200, 1
	store i64 %201, i64* %9
	%202 = load i64, i64* %8, align 8
	%203 = icmp slt i64 %201, %202
	br i1 %203, label %for.index.body-15, label %for.index.done-29

for.index.body-15:
	%204 = load i64, i64* %9, align 8
	store i64 %204, i64* %7
	; IfStmt
	%205 = load i1, i1* %5, align 1
	br i1 %205, label %if.done-18, label %cmp.and-16

cmp.and-16:
	%206 = load i64, i64* %7, align 8
	%207 = icmp sgt i64 %206, 0
	br i1 %207, label %if.then-17, label %if.done-18

if.then-17:
	; SelectorExpr
	%208 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%209 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %208, i64 0
	%210 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %209, i64 0, i32 4
	%211 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %210, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %211, %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$c1, i64 0, i32 0), i64 2}, %Context* noalias nonnull %__.context_ptr)
	br label %if.done-18

if.done-18:
	; IfStmt
	%212 = load i1, i1* %5, align 1
	br i1 %212, label %if.then-19, label %if.done-23

if.then-19:
	; RangeStmt
	store i64 zeroinitializer, i64* %10
	store i64 0, i64* %10
	store i64 zeroinitializer, i64* %11
	store i64 0, i64* %11
	br label %for.interval.loop-20

for.interval.loop-20:
	; SelectorExpr
	%213 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%214 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %213, i64 0
	%215 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %214, i64 0, i32 3
	%216 = load i64, i64* %215, align 8
	%217 = load i64, i64* %10, align 8
	%218 = icmp slt i64 %217, %216
	br i1 %218, label %for.interval.body-21, label %for.interval.done-22

for.interval.body-21:
	%219 = load i64, i64* %10, align 8
	%220 = load i64, i64* %11, align 8
	%221 = load i64, i64* %10, align 8
	%222 = add i64 %221, 1
	store i64 %222, i64* %10
	%223 = load i64, i64* %11, align 8
	%224 = add i64 %223, 1
	store i64 %224, i64* %11
	; SelectorExpr
	%225 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%226 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %225, i64 0
	%227 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %226, i64 0, i32 4
	%228 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %227, align 8
	call void @fmt-4.write_byte({i8*, i64, i64, %Allocator}* %228, i8 9, %Context* noalias nonnull %__.context_ptr)
	br label %for.interval.loop-20

for.interval.done-22:
	br label %if.done-23

if.done-23:
	; SelectorExpr
	%229 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%230 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %229, i64 0
	%231 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %230, i64 0, i32 4
	%232 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %231, align 8
	; IndexExpr
	; SelectorExpr
	%233 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %4, i64 0, i32 1
	%234 = load {%..string*, i64}, {%..string*, i64}* %233, align 8
	%235 = extractvalue {%..string*, i64} %234, 0
	%236 = load i64, i64* %7, align 8
	%237 = extractvalue {%..string*, i64} %234, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$c2, i64 0, i32 0), i64 28}, i64 752, i64 34, i64 %236, i64 %237)
	%238 = getelementptr inbounds %..string, %..string* %235, i64 %236
	%239 = load %..string, %..string* %238, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %232, %..string %239, %Context* noalias nonnull %__.context_ptr)
	; SelectorExpr
	%240 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%241 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %240, i64 0
	%242 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %241, i64 0, i32 4
	%243 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %242, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %243, %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$c3, i64 0, i32 0), i64 3}, %Context* noalias nonnull %__.context_ptr)
	; IfStmt
	; t
		; IndexExpr
	; SelectorExpr
	%244 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %4, i64 0, i32 0
	%245 = load {%Type_Info**, i64}, {%Type_Info**, i64}* %244, align 8
	%246 = extractvalue {%Type_Info**, i64} %245, 0
	%247 = load i64, i64* %7, align 8
	%248 = extractvalue {%Type_Info**, i64} %245, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$c4, i64 0, i32 0), i64 28}, i64 755, i64 21, i64 %247, i64 %248)
	%249 = getelementptr inbounds %Type_Info*, %Type_Info** %246, i64 %247
	%250 = load %Type_Info*, %Type_Info** %249, align 8
	store %Type_Info* %250, %Type_Info** %12
	; SelectorExpr
	%251 = load %Type_Info*, %Type_Info** %12, align 8
	%252 = call i1 @types-17.is_any(%Type_Info* %251, %Context* noalias nonnull %__.context_ptr)
	br i1 %252, label %if.then-24, label %if.else-25

if.then-24:
	; SelectorExpr
	%253 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%254 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %253, i64 0
	%255 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %254, i64 0, i32 4
	%256 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %255, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %256, %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$c5, i64 0, i32 0), i64 5}, %Context* noalias nonnull %__.context_ptr)
	br label %if.done-26

if.else-25:
	; data
		; SelectorExpr
	%257 = getelementptr inbounds %..any, %..any* %1, i64 0, i32 0
	%258 = load %..rawptr, %..rawptr* %257, align 8
	%259 = ptrtoint %..rawptr %258 to i64
	; IndexExpr
	; SelectorExpr
	%260 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %4, i64 0, i32 2
	%261 = load {i64*, i64}, {i64*, i64}* %260, align 8
	%262 = extractvalue {i64*, i64} %261, 0
	%263 = load i64, i64* %7, align 8
	%264 = extractvalue {i64*, i64} %261, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$c6, i64 0, i32 0), i64 28}, i64 758, i64 42, i64 %263, i64 %264)
	%265 = getelementptr inbounds i64, i64* %262, i64 %263
	%266 = load i64, i64* %265, align 8
	%267 = add i64 %259, %266
	store i64 %267, i64* %13
	%268 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	; CompoundLit
	store %..any zeroinitializer, %..any* %14
	store %..any zeroinitializer, %..any* %14
	%269 = load i64, i64* %13, align 8
	%270 = inttoptr i64 %269 to %..rawptr
	%271 = getelementptr inbounds %..any, %..any* %14, i64 0, i32 0
	store %..rawptr %270, %..rawptr* %271
	%272 = load %Type_Info*, %Type_Info** %12, align 8
	%273 = getelementptr inbounds %..any, %..any* %14, i64 0, i32 1
	store %Type_Info* %272, %Type_Info** %273
	%274 = load %..any, %..any* %14, align 8
	call void @fmt-4.fmt_arg(%fmt-4.Fmt_Info* %268, %..any %274, i32 118, %Context* noalias nonnull %__.context_ptr)
	br label %if.done-26

if.done-26:
	; IfStmt
	%275 = load i1, i1* %5, align 1
	br i1 %275, label %if.then-27, label %if.done-28

if.then-27:
	; SelectorExpr
	%276 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%277 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %276, i64 0
	%278 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %277, i64 0, i32 4
	%279 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %278, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %279, %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$c7, i64 0, i32 0), i64 2}, %Context* noalias nonnull %__.context_ptr)
	br label %if.done-28

if.done-28:
	br label %for.index.loop-14

for.index.done-29:
	; IfStmt
	%280 = load i1, i1* %5, align 1
	br i1 %280, label %if.then-30, label %if.done-34

if.then-30:
	; RangeStmt
	store i64 zeroinitializer, i64* %15
	store i64 0, i64* %15
	store i64 zeroinitializer, i64* %16
	store i64 0, i64* %16
	br label %for.interval.loop-31

for.interval.loop-31:
	%281 = load i64, i64* %6, align 8
	%282 = load i64, i64* %15, align 8
	%283 = icmp slt i64 %282, %281
	br i1 %283, label %for.interval.body-32, label %for.interval.done-33

for.interval.body-32:
	%284 = load i64, i64* %15, align 8
	%285 = load i64, i64* %16, align 8
	%286 = load i64, i64* %15, align 8
	%287 = add i64 %286, 1
	store i64 %287, i64* %15
	%288 = load i64, i64* %16, align 8
	%289 = add i64 %288, 1
	store i64 %289, i64* %16
	; SelectorExpr
	%290 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%291 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %290, i64 0
	%292 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %291, i64 0, i32 4
	%293 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %292, align 8
	call void @fmt-4.write_byte({i8*, i64, i64, %Allocator}* %293, i8 9, %Context* noalias nonnull %__.context_ptr)
	br label %for.interval.loop-31

for.interval.done-33:
	br label %if.done-34

if.done-34:
	; SelectorExpr
	%294 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%295 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %294, i64 0
	%296 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %295, i64 0, i32 4
	%297 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %296, align 8
	call void @fmt-4.write_byte({i8*, i64, i64, %Allocator}* %297, i8 125, %Context* noalias nonnull %__.context_ptr)
	; defer
	; AssignStmt
	; SelectorExpr
	%298 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%299 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %298, i64 0
	%300 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %299, i64 0, i32 3
	%301 = load i64, i64* %300, align 8
	%302 = sub i64 %301, 1
	store i64 %302, i64* %300
	; defer
	; AssignStmt
	; SelectorExpr
	%303 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%304 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %303, i64 0
	%305 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %304, i64 0, i32 9
	%306 = load i1, i1* %5, align 1
	store i1 %306, i1* %305
	br label %typeswitch.done-35

typeswitch.done-35:
	br label %typeswitch.done-152

typeswitch.next-36:
	%307 = icmp eq i8 %124, 2
	br i1 %307, label %typeswitch.body-39, label %typeswitch.next-38

typeswitch.body-37:
	%308 = bitcast %..rawptr %125 to %Type_Info_Boolean*
	%309 = load %Type_Info_Boolean, %Type_Info_Boolean* %308, align 1
	store %Type_Info_Boolean %309, %Type_Info_Boolean* %19
	%310 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%311 = load %..any, %..any* %1, align 8
	%312 = load i32, i32* %2, align 4
	call void @fmt-4.fmt_arg(%fmt-4.Fmt_Info* %310, %..any %311, i32 %312, %Context* noalias nonnull %__.context_ptr)
	br label %typeswitch.done-152

typeswitch.next-38:
	%313 = icmp eq i8 %124, 3
	br i1 %313, label %typeswitch.body-41, label %typeswitch.next-40

typeswitch.body-39:
	%314 = bitcast %..rawptr %125 to %Type_Info_Integer*
	%315 = load %Type_Info_Integer, %Type_Info_Integer* %314, align 1
	store %Type_Info_Integer %315, %Type_Info_Integer* %20
	%316 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%317 = load %..any, %..any* %1, align 8
	%318 = load i32, i32* %2, align 4
	call void @fmt-4.fmt_arg(%fmt-4.Fmt_Info* %316, %..any %317, i32 %318, %Context* noalias nonnull %__.context_ptr)
	br label %typeswitch.done-152

typeswitch.next-40:
	%319 = icmp eq i8 %124, 4
	br i1 %319, label %typeswitch.body-43, label %typeswitch.next-42

typeswitch.body-41:
	%320 = bitcast %..rawptr %125 to %Type_Info_Rune*
	%321 = load %Type_Info_Rune, %Type_Info_Rune* %320, align 1
	store %Type_Info_Rune %321, %Type_Info_Rune* %21
	%322 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%323 = load %..any, %..any* %1, align 8
	%324 = load i32, i32* %2, align 4
	call void @fmt-4.fmt_arg(%fmt-4.Fmt_Info* %322, %..any %323, i32 %324, %Context* noalias nonnull %__.context_ptr)
	br label %typeswitch.done-152

typeswitch.next-42:
	%325 = icmp eq i8 %124, 5
	br i1 %325, label %typeswitch.body-45, label %typeswitch.next-44

typeswitch.body-43:
	%326 = bitcast %..rawptr %125 to %Type_Info_Float*
	%327 = load %Type_Info_Float, %Type_Info_Float* %326, align 1
	store %Type_Info_Float %327, %Type_Info_Float* %22
	%328 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%329 = load %..any, %..any* %1, align 8
	%330 = load i32, i32* %2, align 4
	call void @fmt-4.fmt_arg(%fmt-4.Fmt_Info* %328, %..any %329, i32 %330, %Context* noalias nonnull %__.context_ptr)
	br label %typeswitch.done-152

typeswitch.next-44:
	%331 = icmp eq i8 %124, 6
	br i1 %331, label %typeswitch.body-47, label %typeswitch.next-46

typeswitch.body-45:
	%332 = bitcast %..rawptr %125 to %Type_Info_Complex*
	%333 = load %Type_Info_Complex, %Type_Info_Complex* %332, align 1
	store %Type_Info_Complex %333, %Type_Info_Complex* %23
	%334 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%335 = load %..any, %..any* %1, align 8
	%336 = load i32, i32* %2, align 4
	call void @fmt-4.fmt_arg(%fmt-4.Fmt_Info* %334, %..any %335, i32 %336, %Context* noalias nonnull %__.context_ptr)
	br label %typeswitch.done-152

typeswitch.next-46:
	%337 = icmp eq i8 %124, 9
	br i1 %337, label %typeswitch.body-49, label %typeswitch.next-48

typeswitch.body-47:
	%338 = bitcast %..rawptr %125 to %Type_Info_String*
	%339 = load %Type_Info_String, %Type_Info_String* %338, align 1
	store %Type_Info_String %339, %Type_Info_String* %24
	%340 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%341 = load %..any, %..any* %1, align 8
	%342 = load i32, i32* %2, align 4
	call void @fmt-4.fmt_arg(%fmt-4.Fmt_Info* %340, %..any %341, i32 %342, %Context* noalias nonnull %__.context_ptr)
	br label %typeswitch.done-152

typeswitch.next-48:
	%343 = icmp eq i8 %124, 11
	br i1 %343, label %typeswitch.body-54, label %typeswitch.next-53

typeswitch.body-49:
	%344 = bitcast %..rawptr %125 to %Type_Info_Pointer*
	%345 = load %Type_Info_Pointer, %Type_Info_Pointer* %344, align 8
	store %Type_Info_Pointer %345, %Type_Info_Pointer* %25
	; IfStmt
	; SelectorExpr
	%346 = getelementptr inbounds %..any, %..any* %1, i64 0, i32 1
	%347 = load %Type_Info*, %Type_Info** %346, align 8
	%348 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%349 = icmp eq %Type_Info* %347, %348
	br i1 %349, label %if.then-50, label %if.else-51

if.then-50:
	; SelectorExpr
	%350 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%351 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %350, i64 0
	%352 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %351, i64 0, i32 4
	%353 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %352, align 8
	; SelectorExpr
	%354 = getelementptr inbounds %..any, %..any* %1, i64 0, i32 0
	%355 = load %..rawptr, %..rawptr* %354, align 8
	%356 = bitcast %..rawptr %355 to %Type_Info**
	%357 = getelementptr inbounds %Type_Info*, %Type_Info** %356, i64 0
	%358 = load %Type_Info*, %Type_Info** %357, align 8
	call void @fmt-4.write_type({i8*, i64, i64, %Allocator}* %353, %Type_Info* %358, %Context* noalias nonnull %__.context_ptr)
	br label %if.done-52

if.else-51:
	%359 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	; SelectorExpr
	%360 = getelementptr inbounds %..any, %..any* %1, i64 0, i32 0
	%361 = load %..rawptr, %..rawptr* %360, align 8
	%362 = bitcast %..rawptr %361 to %..rawptr*
	%363 = getelementptr inbounds %..rawptr, %..rawptr* %362, i64 0
	%364 = load %..rawptr, %..rawptr* %363, align 8
	%365 = load i32, i32* %2, align 4
	call void @fmt-4.fmt_pointer(%fmt-4.Fmt_Info* %359, %..rawptr %364, i32 %365, %Context* noalias nonnull %__.context_ptr)
	br label %if.done-52

if.done-52:
	br label %typeswitch.done-152

typeswitch.next-53:
	%366 = icmp eq i8 %124, 12
	br i1 %366, label %typeswitch.body-61, label %typeswitch.next-60

typeswitch.body-54:
	%367 = bitcast %..rawptr %125 to %Type_Info_Array*
	%368 = load %Type_Info_Array, %Type_Info_Array* %367, align 8
	store %Type_Info_Array %368, %Type_Info_Array* %26
	; SelectorExpr
	%369 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%370 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %369, i64 0
	%371 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %370, i64 0, i32 4
	%372 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %371, align 8
	call void @fmt-4.write_byte({i8*, i64, i64, %Allocator}* %372, i8 91, %Context* noalias nonnull %__.context_ptr)
	; DeferStmt
	; RangeStmt
	; i
	store i64 zeroinitializer, i64* %27
		store i64 zeroinitializer, i64* %28
	store i64 0, i64* %28
	store i64 zeroinitializer, i64* %29
	store i64 0, i64* %29
	br label %for.interval.loop-55

for.interval.loop-55:
	; SelectorExpr
	%373 = getelementptr inbounds %Type_Info_Array, %Type_Info_Array* %26, i64 0, i32 2
	%374 = load i64, i64* %373, align 8
	%375 = load i64, i64* %28, align 8
	%376 = icmp slt i64 %375, %374
	br i1 %376, label %for.interval.body-56, label %for.interval.done-59

for.interval.body-56:
	%377 = load i64, i64* %28, align 8
	%378 = load i64, i64* %29, align 8
	%379 = load i64, i64* %28, align 8
	%380 = add i64 %379, 1
	store i64 %380, i64* %28
	%381 = load i64, i64* %29, align 8
	%382 = add i64 %381, 1
	store i64 %382, i64* %29
	store i64 %377, i64* %27
	; IfStmt
	%383 = load i64, i64* %27, align 8
	%384 = icmp sgt i64 %383, 0
	br i1 %384, label %if.then-57, label %if.done-58

if.then-57:
	; SelectorExpr
	%385 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%386 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %385, i64 0
	%387 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %386, i64 0, i32 4
	%388 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %387, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %388, %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$c8, i64 0, i32 0), i64 2}, %Context* noalias nonnull %__.context_ptr)
	br label %if.done-58

if.done-58:
	; data
		; SelectorExpr
	%389 = getelementptr inbounds %..any, %..any* %1, i64 0, i32 0
	%390 = load %..rawptr, %..rawptr* %389, align 8
	%391 = ptrtoint %..rawptr %390 to i64
	%392 = load i64, i64* %27, align 8
	; SelectorExpr
	%393 = getelementptr inbounds %Type_Info_Array, %Type_Info_Array* %26, i64 0, i32 1
	%394 = load i64, i64* %393, align 8
	%395 = mul i64 %392, %394
	%396 = bitcast i64 %395 to i64
	%397 = add i64 %391, %396
	store i64 %397, i64* %30
	%398 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	; CompoundLit
	store %..any zeroinitializer, %..any* %31
	store %..any zeroinitializer, %..any* %31
	%399 = load i64, i64* %30, align 8
	%400 = inttoptr i64 %399 to %..rawptr
	%401 = getelementptr inbounds %..any, %..any* %31, i64 0, i32 0
	store %..rawptr %400, %..rawptr* %401
	; SelectorExpr
	%402 = getelementptr inbounds %Type_Info_Array, %Type_Info_Array* %26, i64 0, i32 0
	%403 = load %Type_Info*, %Type_Info** %402, align 8
	%404 = getelementptr inbounds %..any, %..any* %31, i64 0, i32 1
	store %Type_Info* %403, %Type_Info** %404
	%405 = load %..any, %..any* %31, align 8
	%406 = load i32, i32* %2, align 4
	call void @fmt-4.fmt_arg(%fmt-4.Fmt_Info* %398, %..any %405, i32 %406, %Context* noalias nonnull %__.context_ptr)
	br label %for.interval.loop-55

for.interval.done-59:
	; defer
	; SelectorExpr
	%407 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%408 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %407, i64 0
	%409 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %408, i64 0, i32 4
	%410 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %409, align 8
	call void @fmt-4.write_byte({i8*, i64, i64, %Allocator}* %410, i8 93, %Context* noalias nonnull %__.context_ptr)
	br label %typeswitch.done-152

typeswitch.next-60:
	%411 = icmp eq i8 %124, 13
	br i1 %411, label %typeswitch.body-68, label %typeswitch.next-67

typeswitch.body-61:
	%412 = bitcast %..rawptr %125 to %Type_Info_Dynamic_Array*
	%413 = load %Type_Info_Dynamic_Array, %Type_Info_Dynamic_Array* %412, align 8
	store %Type_Info_Dynamic_Array %413, %Type_Info_Dynamic_Array* %32
	; SelectorExpr
	%414 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%415 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %414, i64 0
	%416 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %415, i64 0, i32 4
	%417 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %416, align 8
	call void @fmt-4.write_byte({i8*, i64, i64, %Allocator}* %417, i8 91, %Context* noalias nonnull %__.context_ptr)
	; DeferStmt
	; array
		; SelectorExpr
	%418 = getelementptr inbounds %..any, %..any* %1, i64 0, i32 0
	%419 = load %..rawptr, %..rawptr* %418, align 8
	%420 = bitcast %..rawptr %419 to %raw-6.Dynamic_Array*
	store %raw-6.Dynamic_Array* %420, %raw-6.Dynamic_Array** %33
	; RangeStmt
	; i
	store i64 zeroinitializer, i64* %34
		store i64 zeroinitializer, i64* %35
	store i64 0, i64* %35
	store i64 zeroinitializer, i64* %36
	store i64 0, i64* %36
	br label %for.interval.loop-62

for.interval.loop-62:
	; SelectorExpr
	%421 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %33, align 8
	%422 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %421, i64 0
	%423 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %422, i64 0, i32 1
	%424 = load i64, i64* %423, align 8
	%425 = load i64, i64* %35, align 8
	%426 = icmp slt i64 %425, %424
	br i1 %426, label %for.interval.body-63, label %for.interval.done-66

for.interval.body-63:
	%427 = load i64, i64* %35, align 8
	%428 = load i64, i64* %36, align 8
	%429 = load i64, i64* %35, align 8
	%430 = add i64 %429, 1
	store i64 %430, i64* %35
	%431 = load i64, i64* %36, align 8
	%432 = add i64 %431, 1
	store i64 %432, i64* %36
	store i64 %427, i64* %34
	; IfStmt
	%433 = load i64, i64* %34, align 8
	%434 = icmp sgt i64 %433, 0
	br i1 %434, label %if.then-64, label %if.done-65

if.then-64:
	; SelectorExpr
	%435 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%436 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %435, i64 0
	%437 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %436, i64 0, i32 4
	%438 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %437, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %438, %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$c9, i64 0, i32 0), i64 2}, %Context* noalias nonnull %__.context_ptr)
	br label %if.done-65

if.done-65:
	; data
		; SelectorExpr
	%439 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %33, align 8
	%440 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %439, i64 0
	%441 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %440, i64 0, i32 0
	%442 = load %..rawptr, %..rawptr* %441, align 8
	%443 = ptrtoint %..rawptr %442 to i64
	%444 = load i64, i64* %34, align 8
	; SelectorExpr
	%445 = getelementptr inbounds %Type_Info_Dynamic_Array, %Type_Info_Dynamic_Array* %32, i64 0, i32 1
	%446 = load i64, i64* %445, align 8
	%447 = mul i64 %444, %446
	%448 = bitcast i64 %447 to i64
	%449 = add i64 %443, %448
	store i64 %449, i64* %37
	%450 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	; CompoundLit
	store %..any zeroinitializer, %..any* %38
	store %..any zeroinitializer, %..any* %38
	%451 = load i64, i64* %37, align 8
	%452 = inttoptr i64 %451 to %..rawptr
	%453 = getelementptr inbounds %..any, %..any* %38, i64 0, i32 0
	store %..rawptr %452, %..rawptr* %453
	; SelectorExpr
	%454 = getelementptr inbounds %Type_Info_Dynamic_Array, %Type_Info_Dynamic_Array* %32, i64 0, i32 0
	%455 = load %Type_Info*, %Type_Info** %454, align 8
	%456 = getelementptr inbounds %..any, %..any* %38, i64 0, i32 1
	store %Type_Info* %455, %Type_Info** %456
	%457 = load %..any, %..any* %38, align 8
	%458 = load i32, i32* %2, align 4
	call void @fmt-4.fmt_arg(%fmt-4.Fmt_Info* %450, %..any %457, i32 %458, %Context* noalias nonnull %__.context_ptr)
	br label %for.interval.loop-62

for.interval.done-66:
	; defer
	; SelectorExpr
	%459 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%460 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %459, i64 0
	%461 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %460, i64 0, i32 4
	%462 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %461, align 8
	call void @fmt-4.write_byte({i8*, i64, i64, %Allocator}* %462, i8 93, %Context* noalias nonnull %__.context_ptr)
	br label %typeswitch.done-152

typeswitch.next-67:
	%463 = icmp eq i8 %124, 14
	br i1 %463, label %typeswitch.body-75, label %typeswitch.next-74

typeswitch.body-68:
	%464 = bitcast %..rawptr %125 to %Type_Info_Slice*
	%465 = load %Type_Info_Slice, %Type_Info_Slice* %464, align 8
	store %Type_Info_Slice %465, %Type_Info_Slice* %39
	; SelectorExpr
	%466 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%467 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %466, i64 0
	%468 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %467, i64 0, i32 4
	%469 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %468, align 8
	call void @fmt-4.write_byte({i8*, i64, i64, %Allocator}* %469, i8 91, %Context* noalias nonnull %__.context_ptr)
	; DeferStmt
	; slice
		; SelectorExpr
	%470 = getelementptr inbounds %..any, %..any* %1, i64 0, i32 0
	%471 = load %..rawptr, %..rawptr* %470, align 8
	%472 = bitcast %..rawptr %471 to %raw-6.Slice*
	store %raw-6.Slice* %472, %raw-6.Slice** %40
	; RangeStmt
	; i
	store i64 zeroinitializer, i64* %41
		store i64 zeroinitializer, i64* %42
	store i64 0, i64* %42
	store i64 zeroinitializer, i64* %43
	store i64 0, i64* %43
	br label %for.interval.loop-69

for.interval.loop-69:
	; SelectorExpr
	%473 = load %raw-6.Slice*, %raw-6.Slice** %40, align 8
	%474 = getelementptr inbounds %raw-6.Slice, %raw-6.Slice* %473, i64 0
	%475 = getelementptr inbounds %raw-6.Slice, %raw-6.Slice* %474, i64 0, i32 1
	%476 = load i64, i64* %475, align 8
	%477 = load i64, i64* %42, align 8
	%478 = icmp slt i64 %477, %476
	br i1 %478, label %for.interval.body-70, label %for.interval.done-73

for.interval.body-70:
	%479 = load i64, i64* %42, align 8
	%480 = load i64, i64* %43, align 8
	%481 = load i64, i64* %42, align 8
	%482 = add i64 %481, 1
	store i64 %482, i64* %42
	%483 = load i64, i64* %43, align 8
	%484 = add i64 %483, 1
	store i64 %484, i64* %43
	store i64 %479, i64* %41
	; IfStmt
	%485 = load i64, i64* %41, align 8
	%486 = icmp sgt i64 %485, 0
	br i1 %486, label %if.then-71, label %if.done-72

if.then-71:
	; SelectorExpr
	%487 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%488 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %487, i64 0
	%489 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %488, i64 0, i32 4
	%490 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %489, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %490, %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$ca, i64 0, i32 0), i64 2}, %Context* noalias nonnull %__.context_ptr)
	br label %if.done-72

if.done-72:
	; data
		; SelectorExpr
	%491 = load %raw-6.Slice*, %raw-6.Slice** %40, align 8
	%492 = getelementptr inbounds %raw-6.Slice, %raw-6.Slice* %491, i64 0
	%493 = getelementptr inbounds %raw-6.Slice, %raw-6.Slice* %492, i64 0, i32 0
	%494 = load %..rawptr, %..rawptr* %493, align 8
	%495 = ptrtoint %..rawptr %494 to i64
	%496 = load i64, i64* %41, align 8
	; SelectorExpr
	%497 = getelementptr inbounds %Type_Info_Slice, %Type_Info_Slice* %39, i64 0, i32 1
	%498 = load i64, i64* %497, align 8
	%499 = mul i64 %496, %498
	%500 = bitcast i64 %499 to i64
	%501 = add i64 %495, %500
	store i64 %501, i64* %44
	%502 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	; CompoundLit
	store %..any zeroinitializer, %..any* %45
	store %..any zeroinitializer, %..any* %45
	%503 = load i64, i64* %44, align 8
	%504 = inttoptr i64 %503 to %..rawptr
	%505 = getelementptr inbounds %..any, %..any* %45, i64 0, i32 0
	store %..rawptr %504, %..rawptr* %505
	; SelectorExpr
	%506 = getelementptr inbounds %Type_Info_Slice, %Type_Info_Slice* %39, i64 0, i32 0
	%507 = load %Type_Info*, %Type_Info** %506, align 8
	%508 = getelementptr inbounds %..any, %..any* %45, i64 0, i32 1
	store %Type_Info* %507, %Type_Info** %508
	%509 = load %..any, %..any* %45, align 8
	%510 = load i32, i32* %2, align 4
	call void @fmt-4.fmt_arg(%fmt-4.Fmt_Info* %502, %..any %509, i32 %510, %Context* noalias nonnull %__.context_ptr)
	br label %for.interval.loop-69

for.interval.done-73:
	; defer
	; SelectorExpr
	%511 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%512 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %511, i64 0
	%513 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %512, i64 0, i32 4
	%514 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %513, align 8
	call void @fmt-4.write_byte({i8*, i64, i64, %Allocator}* %514, i8 93, %Context* noalias nonnull %__.context_ptr)
	br label %typeswitch.done-152

typeswitch.next-74:
	%515 = icmp eq i8 %124, 19
	br i1 %515, label %typeswitch.body-82, label %typeswitch.next-81

typeswitch.body-75:
	%516 = bitcast %..rawptr %125 to %Type_Info_Vector*
	%517 = load %Type_Info_Vector, %Type_Info_Vector* %516, align 8
	store %Type_Info_Vector %517, %Type_Info_Vector* %46
	; SelectorExpr
	%518 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%519 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %518, i64 0
	%520 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %519, i64 0, i32 4
	%521 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %520, align 8
	call void @fmt-4.write_byte({i8*, i64, i64, %Allocator}* %521, i8 60, %Context* noalias nonnull %__.context_ptr)
	; DeferStmt
	; RangeStmt
	; i
	store i64 zeroinitializer, i64* %47
		store i64 zeroinitializer, i64* %48
	store i64 0, i64* %48
	store i64 zeroinitializer, i64* %49
	store i64 0, i64* %49
	br label %for.interval.loop-76

for.interval.loop-76:
	; SelectorExpr
	%522 = getelementptr inbounds %Type_Info_Vector, %Type_Info_Vector* %46, i64 0, i32 2
	%523 = load i64, i64* %522, align 8
	%524 = load i64, i64* %48, align 8
	%525 = icmp slt i64 %524, %523
	br i1 %525, label %for.interval.body-77, label %for.interval.done-80

for.interval.body-77:
	%526 = load i64, i64* %48, align 8
	%527 = load i64, i64* %49, align 8
	%528 = load i64, i64* %48, align 8
	%529 = add i64 %528, 1
	store i64 %529, i64* %48
	%530 = load i64, i64* %49, align 8
	%531 = add i64 %530, 1
	store i64 %531, i64* %49
	store i64 %526, i64* %47
	; IfStmt
	%532 = load i64, i64* %47, align 8
	%533 = icmp sgt i64 %532, 0
	br i1 %533, label %if.then-78, label %if.done-79

if.then-78:
	; SelectorExpr
	%534 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%535 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %534, i64 0
	%536 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %535, i64 0, i32 4
	%537 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %536, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %537, %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$cb, i64 0, i32 0), i64 2}, %Context* noalias nonnull %__.context_ptr)
	br label %if.done-79

if.done-79:
	; data
		; SelectorExpr
	%538 = getelementptr inbounds %..any, %..any* %1, i64 0, i32 0
	%539 = load %..rawptr, %..rawptr* %538, align 8
	%540 = ptrtoint %..rawptr %539 to i64
	%541 = load i64, i64* %47, align 8
	; SelectorExpr
	%542 = getelementptr inbounds %Type_Info_Vector, %Type_Info_Vector* %46, i64 0, i32 1
	%543 = load i64, i64* %542, align 8
	%544 = mul i64 %541, %543
	%545 = bitcast i64 %544 to i64
	%546 = add i64 %540, %545
	store i64 %546, i64* %50
	%547 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	; CompoundLit
	store %..any zeroinitializer, %..any* %51
	store %..any zeroinitializer, %..any* %51
	%548 = load i64, i64* %50, align 8
	%549 = inttoptr i64 %548 to %..rawptr
	%550 = getelementptr inbounds %..any, %..any* %51, i64 0, i32 0
	store %..rawptr %549, %..rawptr* %550
	; SelectorExpr
	%551 = getelementptr inbounds %Type_Info_Vector, %Type_Info_Vector* %46, i64 0, i32 0
	%552 = load %Type_Info*, %Type_Info** %551, align 8
	%553 = getelementptr inbounds %..any, %..any* %51, i64 0, i32 1
	store %Type_Info* %552, %Type_Info** %553
	%554 = load %..any, %..any* %51, align 8
	%555 = load i32, i32* %2, align 4
	call void @fmt-4.fmt_value(%fmt-4.Fmt_Info* %547, %..any %554, i32 %555, %Context* noalias nonnull %__.context_ptr)
	br label %for.interval.loop-76

for.interval.done-80:
	; defer
	; SelectorExpr
	%556 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%557 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %556, i64 0
	%558 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %557, i64 0, i32 4
	%559 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %558, align 8
	call void @fmt-4.write_byte({i8*, i64, i64, %Allocator}* %559, i8 62, %Context* noalias nonnull %__.context_ptr)
	br label %typeswitch.done-152

typeswitch.next-81:
	%560 = icmp eq i8 %124, 16
	br i1 %560, label %typeswitch.body-100, label %typeswitch.next-99

typeswitch.body-82:
	%561 = bitcast %..rawptr %125 to %Type_Info_Map*
	%562 = load %Type_Info_Map, %Type_Info_Map* %561, align 8
	store %Type_Info_Map %562, %Type_Info_Map* %52
	; IfStmt
	%563 = load i32, i32* %2, align 4
	%564 = icmp ne i32 %563, 118
	br i1 %564, label %if.then-83, label %if.done-84

if.then-83:
	%565 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%566 = load i32, i32* %2, align 4
	call void @fmt-4.fmt_bad_verb(%fmt-4.Fmt_Info* %565, i32 %566, %Context* noalias nonnull %__.context_ptr)
	; ReturnStmt
	ret void

if.done-84:
	; SelectorExpr
	%567 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%568 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %567, i64 0
	%569 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %568, i64 0, i32 4
	%570 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %569, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %570, %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$cc, i64 0, i32 0), i64 4}, %Context* noalias nonnull %__.context_ptr)
	; DeferStmt
	; entries
		; SelectorExpr
	; SelectorExpr
	%571 = getelementptr inbounds %..any, %..any* %1, i64 0, i32 0
	%572 = load %..rawptr, %..rawptr* %571, align 8
	%573 = bitcast %..rawptr %572 to %raw-6.Map*
	store %raw-6.Map* zeroinitializer, %raw-6.Map** %54
	store %raw-6.Map* %573, %raw-6.Map** %54
	%574 = load %raw-6.Map*, %raw-6.Map** %54, align 8
	%575 = getelementptr inbounds %raw-6.Map, %raw-6.Map* %574, i64 0
	%576 = getelementptr inbounds %raw-6.Map, %raw-6.Map* %575, i64 0, i32 1
	%577 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %576, i64 0
	store %raw-6.Dynamic_Array* %577, %raw-6.Dynamic_Array** %53
	; gs
		; SelectorExpr
	; SelectorExpr
	%578 = getelementptr inbounds %Type_Info_Map, %Type_Info_Map* %52, i64 0, i32 2
	%579 = load %Type_Info*, %Type_Info** %578, align 8
	%580 = call %Type_Info* @type_info_base(%Type_Info* %579, %Context* noalias nonnull %__.context_ptr)
	store %Type_Info* zeroinitializer, %Type_Info** %56
	store %Type_Info* %580, %Type_Info** %56
	%581 = load %Type_Info*, %Type_Info** %56, align 8
	%582 = getelementptr inbounds %Type_Info, %Type_Info* %581, i64 0
	%583 = getelementptr inbounds %Type_Info, %Type_Info* %582, i64 0, i32 2
	%584 = load {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %583, align 8
	; cast - union_cast
	store {%Type_Info_Struct, i1} zeroinitializer, {%Type_Info_Struct, i1}* %57
	%585 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %583, i64 0, i32 2 ; UnionTagPtr
	%586 = load i8, i8* %585, align 1
	%587 = icmp eq i8 %586, 16
	br i1 %587, label %union_cast.ok-85, label %union_cast.end-86

union_cast.ok-85:
	%588 = getelementptr inbounds {%Type_Info_Struct, i1}, {%Type_Info_Struct, i1}* %57, i64 0, i32 0
	%589 = getelementptr inbounds {%Type_Info_Struct, i1}, {%Type_Info_Struct, i1}* %57, i64 0, i32 1
	%590 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %583 to %Type_Info_Struct*
	%591 = load %Type_Info_Struct, %Type_Info_Struct* %590, align 8
	store %Type_Info_Struct %591, %Type_Info_Struct* %588
	store i1 true, i1* %589
	br label %union_cast.end-86

union_cast.end-86:
	%592 = getelementptr inbounds {%Type_Info_Struct, i1}, {%Type_Info_Struct, i1}* %57, i64 0, i32 1
	%593 = load i1, i1* %592, align 1
	%594 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 10
	%595 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 39
	call void @__type_assertion_check(i1 %593, %..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$cd, i64 0, i32 0), i64 28}, i64 839, i64 55, %Type_Info* %594, %Type_Info* %595)
	%596 = getelementptr inbounds {%Type_Info_Struct, i1}, {%Type_Info_Struct, i1}* %57, i64 0, i32 0
	%597 = load %Type_Info_Struct, %Type_Info_Struct* %596, align 8
	store %Type_Info_Struct %597, %Type_Info_Struct* %55
	; ed
		; SelectorExpr
	; IndexExpr
	; SelectorExpr
	%598 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %55, i64 0, i32 0
	%599 = load {%Type_Info**, i64}, {%Type_Info**, i64}* %598, align 8
	%600 = extractvalue {%Type_Info**, i64} %599, 0
	%601 = extractvalue {%Type_Info**, i64} %599, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$ce, i64 0, i32 0), i64 28}, i64 840, i64 41, i64 1, i64 %601)
	%602 = getelementptr inbounds %Type_Info*, %Type_Info** %600, i64 1
	%603 = load %Type_Info*, %Type_Info** %602, align 8
	%604 = call %Type_Info* @type_info_base(%Type_Info* %603, %Context* noalias nonnull %__.context_ptr)
	store %Type_Info* zeroinitializer, %Type_Info** %59
	store %Type_Info* %604, %Type_Info** %59
	%605 = load %Type_Info*, %Type_Info** %59, align 8
	%606 = getelementptr inbounds %Type_Info, %Type_Info* %605, i64 0
	%607 = getelementptr inbounds %Type_Info, %Type_Info* %606, i64 0, i32 2
	%608 = load {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %607, align 8
	; cast - union_cast
	store {%Type_Info_Dynamic_Array, i1} zeroinitializer, {%Type_Info_Dynamic_Array, i1}* %60
	%609 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %607, i64 0, i32 2 ; UnionTagPtr
	%610 = load i8, i8* %609, align 1
	%611 = icmp eq i8 %610, 12
	br i1 %611, label %union_cast.ok-87, label %union_cast.end-88

union_cast.ok-87:
	%612 = getelementptr inbounds {%Type_Info_Dynamic_Array, i1}, {%Type_Info_Dynamic_Array, i1}* %60, i64 0, i32 0
	%613 = getelementptr inbounds {%Type_Info_Dynamic_Array, i1}, {%Type_Info_Dynamic_Array, i1}* %60, i64 0, i32 1
	%614 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %607 to %Type_Info_Dynamic_Array*
	%615 = load %Type_Info_Dynamic_Array, %Type_Info_Dynamic_Array* %614, align 8
	store %Type_Info_Dynamic_Array %615, %Type_Info_Dynamic_Array* %612
	store i1 true, i1* %613
	br label %union_cast.end-88

union_cast.end-88:
	%616 = getelementptr inbounds {%Type_Info_Dynamic_Array, i1}, {%Type_Info_Dynamic_Array, i1}* %60, i64 0, i32 1
	%617 = load i1, i1* %616, align 1
	%618 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 10
	%619 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 29
	call void @__type_assertion_check(i1 %617, %..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$cf, i64 0, i32 0), i64 28}, i64 840, i64 45, %Type_Info* %618, %Type_Info* %619)
	%620 = getelementptr inbounds {%Type_Info_Dynamic_Array, i1}, {%Type_Info_Dynamic_Array, i1}* %60, i64 0, i32 0
	%621 = load %Type_Info_Dynamic_Array, %Type_Info_Dynamic_Array* %620, align 8
	store %Type_Info_Dynamic_Array %621, %Type_Info_Dynamic_Array* %58
	; entry_type
		; SelectorExpr
	; SelectorExpr
	%622 = getelementptr inbounds %Type_Info_Dynamic_Array, %Type_Info_Dynamic_Array* %58, i64 0, i32 0
	%623 = load %Type_Info*, %Type_Info** %622, align 8
	%624 = getelementptr inbounds %Type_Info, %Type_Info* %623, i64 0
	%625 = getelementptr inbounds %Type_Info, %Type_Info* %624, i64 0, i32 2
	%626 = load {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %625, align 8
	; cast - union_cast
	store {%Type_Info_Struct, i1} zeroinitializer, {%Type_Info_Struct, i1}* %62
	%627 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %625, i64 0, i32 2 ; UnionTagPtr
	%628 = load i8, i8* %627, align 1
	%629 = icmp eq i8 %628, 16
	br i1 %629, label %union_cast.ok-89, label %union_cast.end-90

union_cast.ok-89:
	%630 = getelementptr inbounds {%Type_Info_Struct, i1}, {%Type_Info_Struct, i1}* %62, i64 0, i32 0
	%631 = getelementptr inbounds {%Type_Info_Struct, i1}, {%Type_Info_Struct, i1}* %62, i64 0, i32 1
	%632 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %625 to %Type_Info_Struct*
	%633 = load %Type_Info_Struct, %Type_Info_Struct* %632, align 8
	store %Type_Info_Struct %633, %Type_Info_Struct* %630
	store i1 true, i1* %631
	br label %union_cast.end-90

union_cast.end-90:
	%634 = getelementptr inbounds {%Type_Info_Struct, i1}, {%Type_Info_Struct, i1}* %62, i64 0, i32 1
	%635 = load i1, i1* %634, align 1
	%636 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 10
	%637 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 39
	call void @__type_assertion_check(i1 %635, %..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$d0, i64 0, i32 0), i64 28}, i64 841, i64 25, %Type_Info* %636, %Type_Info* %637)
	%638 = getelementptr inbounds {%Type_Info_Struct, i1}, {%Type_Info_Struct, i1}* %62, i64 0, i32 0
	%639 = load %Type_Info_Struct, %Type_Info_Struct* %638, align 8
	store %Type_Info_Struct %639, %Type_Info_Struct* %61
	; entry_size
		; SelectorExpr
	%640 = getelementptr inbounds %Type_Info_Dynamic_Array, %Type_Info_Dynamic_Array* %58, i64 0, i32 1
	%641 = load i64, i64* %640, align 8
	store i64 %641, i64* %63
	; RangeStmt
	; i
	store i64 zeroinitializer, i64* %64
		store i64 zeroinitializer, i64* %65
	store i64 0, i64* %65
	store i64 zeroinitializer, i64* %66
	store i64 0, i64* %66
	br label %for.interval.loop-91

for.interval.loop-91:
	; SelectorExpr
	%642 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %53, align 8
	%643 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %642, i64 0
	%644 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %643, i64 0, i32 1
	%645 = load i64, i64* %644, align 8
	%646 = load i64, i64* %65, align 8
	%647 = icmp slt i64 %646, %645
	br i1 %647, label %for.interval.body-92, label %for.interval.done-98

for.interval.body-92:
	%648 = load i64, i64* %65, align 8
	%649 = load i64, i64* %66, align 8
	%650 = load i64, i64* %65, align 8
	%651 = add i64 %650, 1
	store i64 %651, i64* %65
	%652 = load i64, i64* %66, align 8
	%653 = add i64 %652, 1
	store i64 %653, i64* %66
	store i64 %648, i64* %64
	; IfStmt
	%654 = load i64, i64* %64, align 8
	%655 = icmp sgt i64 %654, 0
	br i1 %655, label %if.then-93, label %if.done-94

if.then-93:
	; SelectorExpr
	%656 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%657 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %656, i64 0
	%658 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %657, i64 0, i32 4
	%659 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %658, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %659, %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$d1, i64 0, i32 0), i64 2}, %Context* noalias nonnull %__.context_ptr)
	br label %if.done-94

if.done-94:
	; data
		; SelectorExpr
	%660 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %53, align 8
	%661 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %660, i64 0
	%662 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %661, i64 0, i32 0
	%663 = load %..rawptr, %..rawptr* %662, align 8
	%664 = ptrtoint %..rawptr %663 to i64
	%665 = load i64, i64* %64, align 8
	%666 = load i64, i64* %63, align 8
	%667 = mul i64 %665, %666
	%668 = bitcast i64 %667 to i64
	%669 = add i64 %664, %668
	store i64 %669, i64* %67
	; header
		%670 = load i64, i64* %67, align 8
	%671 = inttoptr i64 %670 to %__Map_Entry_Header*
	store %__Map_Entry_Header* %671, %__Map_Entry_Header** %68
	; IfStmt
	; SelectorExpr
	; SelectorExpr
	%672 = getelementptr inbounds %Type_Info_Map, %Type_Info_Map* %52, i64 0, i32 0
	%673 = load %Type_Info*, %Type_Info** %672, align 8
	%674 = call i1 @types-17.is_string(%Type_Info* %673, %Context* noalias nonnull %__.context_ptr)
	br i1 %674, label %if.then-95, label %if.else-96

if.then-95:
	; SelectorExpr
	%675 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%676 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %675, i64 0
	%677 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %676, i64 0, i32 4
	%678 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %677, align 8
	; SelectorExpr
	; SelectorExpr
	%679 = load %__Map_Entry_Header*, %__Map_Entry_Header** %68, align 8
	%680 = getelementptr inbounds %__Map_Entry_Header, %__Map_Entry_Header* %679, i64 0
	%681 = getelementptr inbounds %__Map_Entry_Header, %__Map_Entry_Header* %680, i64 0, i32 0
	%682 = getelementptr inbounds %__Map_Key, %__Map_Key* %681, i64 0, i32 1
	%683 = load %..string, %..string* %682, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %678, %..string %683, %Context* noalias nonnull %__.context_ptr)
	br label %if.done-97

if.else-96:
	; fi
		; CompoundLit
	store %fmt-4.Fmt_Info zeroinitializer, %fmt-4.Fmt_Info* %70
	store %fmt-4.Fmt_Info {%..any zeroinitializer, i64 zeroinitializer, i64 zeroinitializer, i64 zeroinitializer, {i8*, i64, i64, %Allocator}* zeroinitializer, i1 zeroinitializer, i1 zeroinitializer, i1 zeroinitializer, i1 zeroinitializer, i1 zeroinitializer, i1 zeroinitializer, i1 zeroinitializer, i1 zeroinitializer, i1 zeroinitializer}, %fmt-4.Fmt_Info* %70
	; SelectorExpr
	%684 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%685 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %684, i64 0
	%686 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %685, i64 0, i32 4
	%687 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %686, align 8
	%688 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %70, i64 0, i32 4
	store {i8*, i64, i64, %Allocator}* %687, {i8*, i64, i64, %Allocator}** %688
	%689 = load %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %70, align 8
	store %fmt-4.Fmt_Info %689, %fmt-4.Fmt_Info* %69
	%690 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %69, i64 0
	; CompoundLit
	store %..any zeroinitializer, %..any* %71
	store %..any zeroinitializer, %..any* %71
	; SelectorExpr
	; SelectorExpr
	%691 = load %__Map_Entry_Header*, %__Map_Entry_Header** %68, align 8
	%692 = getelementptr inbounds %__Map_Entry_Header, %__Map_Entry_Header* %691, i64 0
	%693 = getelementptr inbounds %__Map_Entry_Header, %__Map_Entry_Header* %692, i64 0, i32 0
	%694 = getelementptr inbounds %__Map_Key, %__Map_Key* %693, i64 0, i32 0
	%695 = getelementptr inbounds i128, i128* %694, i64 0
	%696 = bitcast i128* %695 to %..rawptr
	%697 = getelementptr inbounds %..any, %..any* %71, i64 0, i32 0
	store %..rawptr %696, %..rawptr* %697
	; SelectorExpr
	%698 = getelementptr inbounds %Type_Info_Map, %Type_Info_Map* %52, i64 0, i32 0
	%699 = load %Type_Info*, %Type_Info** %698, align 8
	%700 = getelementptr inbounds %..any, %..any* %71, i64 0, i32 1
	store %Type_Info* %699, %Type_Info** %700
	%701 = load %..any, %..any* %71, align 8
	call void @fmt-4.fmt_arg(%fmt-4.Fmt_Info* %690, %..any %701, i32 118, %Context* noalias nonnull %__.context_ptr)
	br label %if.done-97

if.done-97:
	; SelectorExpr
	%702 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%703 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %702, i64 0
	%704 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %703, i64 0, i32 4
	%705 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %704, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %705, %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$d2, i64 0, i32 0), i64 1}, %Context* noalias nonnull %__.context_ptr)
	; value
		%706 = load i64, i64* %67, align 8
	; IndexExpr
	; SelectorExpr
	%707 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %61, i64 0, i32 2
	%708 = load {i64*, i64}, {i64*, i64}* %707, align 8
	%709 = extractvalue {i64*, i64} %708, 0
	%710 = extractvalue {i64*, i64} %708, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$d3, i64 0, i32 0), i64 28}, i64 859, i64 39, i64 2, i64 %710)
	%711 = getelementptr inbounds i64, i64* %709, i64 2
	%712 = load i64, i64* %711, align 8
	%713 = add i64 %706, %712
	store i64 %713, i64* %72
	%714 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	; CompoundLit
	store %..any zeroinitializer, %..any* %73
	store %..any zeroinitializer, %..any* %73
	%715 = load i64, i64* %72, align 8
	%716 = inttoptr i64 %715 to %..rawptr
	%717 = getelementptr inbounds %..any, %..any* %73, i64 0, i32 0
	store %..rawptr %716, %..rawptr* %717
	; SelectorExpr
	%718 = getelementptr inbounds %Type_Info_Map, %Type_Info_Map* %52, i64 0, i32 1
	%719 = load %Type_Info*, %Type_Info** %718, align 8
	%720 = getelementptr inbounds %..any, %..any* %73, i64 0, i32 1
	store %Type_Info* %719, %Type_Info** %720
	%721 = load %..any, %..any* %73, align 8
	call void @fmt-4.fmt_arg(%fmt-4.Fmt_Info* %714, %..any %721, i32 118, %Context* noalias nonnull %__.context_ptr)
	br label %for.interval.loop-91

for.interval.done-98:
	; defer
	; SelectorExpr
	%722 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%723 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %722, i64 0
	%724 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %723, i64 0, i32 4
	%725 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %724, align 8
	call void @fmt-4.write_byte({i8*, i64, i64, %Allocator}* %725, i8 93, %Context* noalias nonnull %__.context_ptr)
	br label %typeswitch.done-152

typeswitch.next-99:
	%726 = icmp eq i8 %124, 17
	br i1 %726, label %typeswitch.body-122, label %typeswitch.next-121

typeswitch.body-100:
	%727 = bitcast %..rawptr %125 to %Type_Info_Struct*
	%728 = load %Type_Info_Struct, %Type_Info_Struct* %727, align 8
	store %Type_Info_Struct %728, %Type_Info_Struct* %74
	; IfStmt
	; SelectorExpr
	%729 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %74, i64 0, i32 6
	%730 = load i1, i1* %729, align 1
	br i1 %730, label %if.then-101, label %if.done-102

if.then-101:
	; SelectorExpr
	%731 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%732 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %731, i64 0
	%733 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %732, i64 0, i32 4
	%734 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %733, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %734, %..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$d4, i64 0, i32 0), i64 11}, %Context* noalias nonnull %__.context_ptr)
	; ReturnStmt
	ret void

if.done-102:
	; SelectorExpr
	%735 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%736 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %735, i64 0
	%737 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %736, i64 0, i32 4
	%738 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %737, align 8
	call void @fmt-4.write_byte({i8*, i64, i64, %Allocator}* %738, i8 123, %Context* noalias nonnull %__.context_ptr)
	; DeferStmt
	; hash
		; SelectorExpr
	%739 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%740 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %739, i64 0
	%741 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %740, i64 0, i32 9
	%742 = load i1, i1* %741, align 1
	store i1 %742, i1* %75
	; DeferStmt
	; indent
		; SelectorExpr
	%743 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%744 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %743, i64 0
	%745 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %744, i64 0, i32 3
	%746 = load i64, i64* %745, align 8
	store i64 %746, i64* %76
	; DeferStmt
	; AssignStmt
	; SelectorExpr
	%747 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%748 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %747, i64 0
	%749 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %748, i64 0, i32 9
	store i1 false, i1* %749
	; AssignStmt
	; SelectorExpr
	%750 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%751 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %750, i64 0
	%752 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %751, i64 0, i32 3
	%753 = load i64, i64* %752, align 8
	%754 = add i64 %753, 1
	store i64 %754, i64* %752
	; IfStmt
	%755 = load i1, i1* %75, align 1
	br i1 %755, label %if.then-103, label %if.done-104

if.then-103:
	; SelectorExpr
	%756 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%757 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %756, i64 0
	%758 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %757, i64 0, i32 4
	%759 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %758, align 8
	call void @fmt-4.write_byte({i8*, i64, i64, %Allocator}* %759, i8 10, %Context* noalias nonnull %__.context_ptr)
	br label %if.done-104

if.done-104:
	; RangeStmt
	; i
	store i64 zeroinitializer, i64* %77
		; SelectorExpr
	%760 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %74, i64 0, i32 1
	%761 = load {%..string*, i64}, {%..string*, i64}* %760, align 8
	store i64 zeroinitializer, i64* %78
	%762 = extractvalue {%..string*, i64} %761, 1
	store i64 %762, i64* %78
	store i64 zeroinitializer, i64* %79
	store i64 -1, i64* %79
	br label %for.index.loop-105

for.index.loop-105:
	%763 = load i64, i64* %79, align 8
	%764 = add i64 %763, 1
	store i64 %764, i64* %79
	%765 = load i64, i64* %78, align 8
	%766 = icmp slt i64 %764, %765
	br i1 %766, label %for.index.body-106, label %for.index.done-120

for.index.body-106:
	%767 = load i64, i64* %79, align 8
	store i64 %767, i64* %77
	; IfStmt
	%768 = load i1, i1* %75, align 1
	br i1 %768, label %if.done-109, label %cmp.and-107

cmp.and-107:
	%769 = load i64, i64* %77, align 8
	%770 = icmp sgt i64 %769, 0
	br i1 %770, label %if.then-108, label %if.done-109

if.then-108:
	; SelectorExpr
	%771 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%772 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %771, i64 0
	%773 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %772, i64 0, i32 4
	%774 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %773, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %774, %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$d5, i64 0, i32 0), i64 2}, %Context* noalias nonnull %__.context_ptr)
	br label %if.done-109

if.done-109:
	; IfStmt
	%775 = load i1, i1* %75, align 1
	br i1 %775, label %if.then-110, label %if.done-114

if.then-110:
	; RangeStmt
	store i64 zeroinitializer, i64* %80
	store i64 0, i64* %80
	store i64 zeroinitializer, i64* %81
	store i64 0, i64* %81
	br label %for.interval.loop-111

for.interval.loop-111:
	; SelectorExpr
	%776 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%777 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %776, i64 0
	%778 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %777, i64 0, i32 3
	%779 = load i64, i64* %778, align 8
	%780 = load i64, i64* %80, align 8
	%781 = icmp slt i64 %780, %779
	br i1 %781, label %for.interval.body-112, label %for.interval.done-113

for.interval.body-112:
	%782 = load i64, i64* %80, align 8
	%783 = load i64, i64* %81, align 8
	%784 = load i64, i64* %80, align 8
	%785 = add i64 %784, 1
	store i64 %785, i64* %80
	%786 = load i64, i64* %81, align 8
	%787 = add i64 %786, 1
	store i64 %787, i64* %81
	; SelectorExpr
	%788 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%789 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %788, i64 0
	%790 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %789, i64 0, i32 4
	%791 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %790, align 8
	call void @fmt-4.write_byte({i8*, i64, i64, %Allocator}* %791, i8 9, %Context* noalias nonnull %__.context_ptr)
	br label %for.interval.loop-111

for.interval.done-113:
	br label %if.done-114

if.done-114:
	; SelectorExpr
	%792 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%793 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %792, i64 0
	%794 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %793, i64 0, i32 4
	%795 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %794, align 8
	; IndexExpr
	; SelectorExpr
	%796 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %74, i64 0, i32 1
	%797 = load {%..string*, i64}, {%..string*, i64}* %796, align 8
	%798 = extractvalue {%..string*, i64} %797, 0
	%799 = load i64, i64* %77, align 8
	%800 = extractvalue {%..string*, i64} %797, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$d6, i64 0, i32 0), i64 28}, i64 890, i64 36, i64 %799, i64 %800)
	%801 = getelementptr inbounds %..string, %..string* %798, i64 %799
	%802 = load %..string, %..string* %801, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %795, %..string %802, %Context* noalias nonnull %__.context_ptr)
	; SelectorExpr
	%803 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%804 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %803, i64 0
	%805 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %804, i64 0, i32 4
	%806 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %805, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %806, %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$d7, i64 0, i32 0), i64 3}, %Context* noalias nonnull %__.context_ptr)
	; IfStmt
	; t
		; IndexExpr
	; SelectorExpr
	%807 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %74, i64 0, i32 0
	%808 = load {%Type_Info**, i64}, {%Type_Info**, i64}* %807, align 8
	%809 = extractvalue {%Type_Info**, i64} %808, 0
	%810 = load i64, i64* %77, align 8
	%811 = extractvalue {%Type_Info**, i64} %808, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$d8, i64 0, i32 0), i64 28}, i64 893, i64 23, i64 %810, i64 %811)
	%812 = getelementptr inbounds %Type_Info*, %Type_Info** %809, i64 %810
	%813 = load %Type_Info*, %Type_Info** %812, align 8
	store %Type_Info* %813, %Type_Info** %82
	; SelectorExpr
	%814 = load %Type_Info*, %Type_Info** %82, align 8
	%815 = call i1 @types-17.is_any(%Type_Info* %814, %Context* noalias nonnull %__.context_ptr)
	br i1 %815, label %if.then-115, label %if.else-116

if.then-115:
	; SelectorExpr
	%816 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%817 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %816, i64 0
	%818 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %817, i64 0, i32 4
	%819 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %818, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %819, %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$d9, i64 0, i32 0), i64 5}, %Context* noalias nonnull %__.context_ptr)
	br label %if.done-117

if.else-116:
	; data
		; SelectorExpr
	%820 = getelementptr inbounds %..any, %..any* %1, i64 0, i32 0
	%821 = load %..rawptr, %..rawptr* %820, align 8
	%822 = ptrtoint %..rawptr %821 to i64
	; IndexExpr
	; SelectorExpr
	%823 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %74, i64 0, i32 2
	%824 = load {i64*, i64}, {i64*, i64}* %823, align 8
	%825 = extractvalue {i64*, i64} %824, 0
	%826 = load i64, i64* %77, align 8
	%827 = extractvalue {i64*, i64} %824, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$da, i64 0, i32 0), i64 28}, i64 896, i64 44, i64 %826, i64 %827)
	%828 = getelementptr inbounds i64, i64* %825, i64 %826
	%829 = load i64, i64* %828, align 8
	%830 = add i64 %822, %829
	store i64 %830, i64* %83
	%831 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	; CompoundLit
	store %..any zeroinitializer, %..any* %84
	store %..any zeroinitializer, %..any* %84
	%832 = load i64, i64* %83, align 8
	%833 = inttoptr i64 %832 to %..rawptr
	%834 = getelementptr inbounds %..any, %..any* %84, i64 0, i32 0
	store %..rawptr %833, %..rawptr* %834
	%835 = load %Type_Info*, %Type_Info** %82, align 8
	%836 = getelementptr inbounds %..any, %..any* %84, i64 0, i32 1
	store %Type_Info* %835, %Type_Info** %836
	%837 = load %..any, %..any* %84, align 8
	call void @fmt-4.fmt_arg(%fmt-4.Fmt_Info* %831, %..any %837, i32 118, %Context* noalias nonnull %__.context_ptr)
	br label %if.done-117

if.done-117:
	; IfStmt
	%838 = load i1, i1* %75, align 1
	br i1 %838, label %if.then-118, label %if.done-119

if.then-118:
	; SelectorExpr
	%839 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%840 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %839, i64 0
	%841 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %840, i64 0, i32 4
	%842 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %841, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %842, %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$db, i64 0, i32 0), i64 2}, %Context* noalias nonnull %__.context_ptr)
	br label %if.done-119

if.done-119:
	br label %for.index.loop-105

for.index.done-120:
	; defer
	; AssignStmt
	; SelectorExpr
	%843 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%844 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %843, i64 0
	%845 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %844, i64 0, i32 3
	%846 = load i64, i64* %845, align 8
	%847 = sub i64 %846, 1
	store i64 %847, i64* %845
	; defer
	; AssignStmt
	; SelectorExpr
	%848 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%849 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %848, i64 0
	%850 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %849, i64 0, i32 9
	%851 = load i1, i1* %75, align 1
	store i1 %851, i1* %850
	; defer
	; SelectorExpr
	%852 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%853 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %852, i64 0
	%854 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %853, i64 0, i32 4
	%855 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %854, align 8
	call void @fmt-4.write_byte({i8*, i64, i64, %Allocator}* %855, i8 125, %Context* noalias nonnull %__.context_ptr)
	br label %typeswitch.done-152

typeswitch.next-121:
	%856 = icmp eq i8 %124, 18
	br i1 %856, label %typeswitch.body-149, label %typeswitch.next-148

typeswitch.body-122:
	%857 = bitcast %..rawptr %125 to %Type_Info_Union*
	%858 = load %Type_Info_Union, %Type_Info_Union* %857, align 8
	store %Type_Info_Union %858, %Type_Info_Union* %85
	; tag_ptr
		; SelectorExpr
	%859 = getelementptr inbounds %..any, %..any* %1, i64 0, i32 0
	%860 = load %..rawptr, %..rawptr* %859, align 8
	%861 = ptrtoint %..rawptr %860 to i64
	; SelectorExpr
	%862 = getelementptr inbounds %Type_Info_Union, %Type_Info_Union* %85, i64 0, i32 1
	%863 = load i64, i64* %862, align 8
	%864 = add i64 %861, %863
	store i64 %864, i64* %86
	; tag_any
		; CompoundLit
	store %..any zeroinitializer, %..any* %88
	store %..any zeroinitializer, %..any* %88
	%865 = load i64, i64* %86, align 8
	%866 = inttoptr i64 %865 to %..rawptr
	%867 = getelementptr inbounds %..any, %..any* %88, i64 0, i32 0
	store %..rawptr %866, %..rawptr* %867
	; SelectorExpr
	%868 = getelementptr inbounds %Type_Info_Union, %Type_Info_Union* %85, i64 0, i32 2
	%869 = load %Type_Info*, %Type_Info** %868, align 8
	%870 = getelementptr inbounds %..any, %..any* %88, i64 0, i32 1
	store %Type_Info* %869, %Type_Info** %870
	%871 = load %..any, %..any* %88, align 8
	store %..any %871, %..any* %87
	; tag
		store i64 -1, i64* %89
	; TypeSwitchStmt
	%872 = load %..any, %..any* %87, align 8
	%873 = getelementptr inbounds %..any, %..any* %87, i64 0, i32 1
	%874 = load %Type_Info*, %Type_Info** %873, align 8
	%875 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	%876 = icmp eq %Type_Info* %874, %875
	br i1 %876, label %typeswitch.body-124, label %typeswitch.next-123

typeswitch.next-123:
	%877 = getelementptr inbounds %..any, %..any* %87, i64 0, i32 1
	%878 = load %Type_Info*, %Type_Info** %877, align 8
	%879 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 54
	%880 = icmp eq %Type_Info* %878, %879
	br i1 %880, label %typeswitch.body-126, label %typeswitch.next-125

typeswitch.body-124:
	%881 = getelementptr inbounds %..any, %..any* %87, i64 0, i32 0
	%882 = load %..rawptr, %..rawptr* %881, align 8
	%883 = bitcast %..rawptr %882 to i8*
	%884 = load i8, i8* %883, align 1
	store i8 %884, i8* %90
	; AssignStmt
	%885 = load i8, i8* %90, align 1
	%886 = zext i8 %885 to i64
	store i64 %886, i64* %89
	br label %typeswitch.done-143

typeswitch.next-125:
	%887 = getelementptr inbounds %..any, %..any* %87, i64 0, i32 1
	%888 = load %Type_Info*, %Type_Info** %887, align 8
	%889 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 59
	%890 = icmp eq %Type_Info* %888, %889
	br i1 %890, label %typeswitch.body-128, label %typeswitch.next-127

typeswitch.body-126:
	%891 = getelementptr inbounds %..any, %..any* %87, i64 0, i32 0
	%892 = load %..rawptr, %..rawptr* %891, align 8
	%893 = bitcast %..rawptr %892 to i8*
	%894 = load i8, i8* %893, align 1
	store i8 %894, i8* %91
	; AssignStmt
	%895 = load i8, i8* %91, align 1
	%896 = sext i8 %895 to i64
	store i64 %896, i64* %89
	br label %typeswitch.done-143

typeswitch.next-127:
	%897 = getelementptr inbounds %..any, %..any* %87, i64 0, i32 1
	%898 = load %Type_Info*, %Type_Info** %897, align 8
	%899 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 55
	%900 = icmp eq %Type_Info* %898, %899
	br i1 %900, label %typeswitch.body-130, label %typeswitch.next-129

typeswitch.body-128:
	%901 = getelementptr inbounds %..any, %..any* %87, i64 0, i32 0
	%902 = load %..rawptr, %..rawptr* %901, align 8
	%903 = bitcast %..rawptr %902 to i16*
	%904 = load i16, i16* %903, align 2
	store i16 %904, i16* %92
	; AssignStmt
	%905 = load i16, i16* %92, align 2
	%906 = zext i16 %905 to i64
	store i64 %906, i64* %89
	br label %typeswitch.done-143

typeswitch.next-129:
	%907 = getelementptr inbounds %..any, %..any* %87, i64 0, i32 1
	%908 = load %Type_Info*, %Type_Info** %907, align 8
	%909 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	%910 = icmp eq %Type_Info* %908, %909
	br i1 %910, label %typeswitch.body-132, label %typeswitch.next-131

typeswitch.body-130:
	%911 = getelementptr inbounds %..any, %..any* %87, i64 0, i32 0
	%912 = load %..rawptr, %..rawptr* %911, align 8
	%913 = bitcast %..rawptr %912 to i16*
	%914 = load i16, i16* %913, align 2
	store i16 %914, i16* %93
	; AssignStmt
	%915 = load i16, i16* %93, align 2
	%916 = sext i16 %915 to i64
	store i64 %916, i64* %89
	br label %typeswitch.done-143

typeswitch.next-131:
	%917 = getelementptr inbounds %..any, %..any* %87, i64 0, i32 1
	%918 = load %Type_Info*, %Type_Info** %917, align 8
	%919 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	%920 = icmp eq %Type_Info* %918, %919
	br i1 %920, label %typeswitch.body-134, label %typeswitch.next-133

typeswitch.body-132:
	%921 = getelementptr inbounds %..any, %..any* %87, i64 0, i32 0
	%922 = load %..rawptr, %..rawptr* %921, align 8
	%923 = bitcast %..rawptr %922 to i32*
	%924 = load i32, i32* %923, align 4
	store i32 %924, i32* %94
	; AssignStmt
	%925 = load i32, i32* %94, align 4
	%926 = zext i32 %925 to i64
	store i64 %926, i64* %89
	br label %typeswitch.done-143

typeswitch.next-133:
	%927 = getelementptr inbounds %..any, %..any* %87, i64 0, i32 1
	%928 = load %Type_Info*, %Type_Info** %927, align 8
	%929 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 61
	%930 = icmp eq %Type_Info* %928, %929
	br i1 %930, label %typeswitch.body-136, label %typeswitch.next-135

typeswitch.body-134:
	%931 = getelementptr inbounds %..any, %..any* %87, i64 0, i32 0
	%932 = load %..rawptr, %..rawptr* %931, align 8
	%933 = bitcast %..rawptr %932 to i32*
	%934 = load i32, i32* %933, align 4
	store i32 %934, i32* %95
	; AssignStmt
	%935 = load i32, i32* %95, align 4
	%936 = sext i32 %935 to i64
	store i64 %936, i64* %89
	br label %typeswitch.done-143

typeswitch.next-135:
	%937 = getelementptr inbounds %..any, %..any* %87, i64 0, i32 1
	%938 = load %Type_Info*, %Type_Info** %937, align 8
	%939 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 57
	%940 = icmp eq %Type_Info* %938, %939
	br i1 %940, label %typeswitch.body-138, label %typeswitch.next-137

typeswitch.body-136:
	%941 = getelementptr inbounds %..any, %..any* %87, i64 0, i32 0
	%942 = load %..rawptr, %..rawptr* %941, align 8
	%943 = bitcast %..rawptr %942 to i64*
	%944 = load i64, i64* %943, align 8
	store i64 %944, i64* %96
	; AssignStmt
	%945 = load i64, i64* %96, align 8
	%946 = bitcast i64 %945 to i64
	store i64 %946, i64* %89
	br label %typeswitch.done-143

typeswitch.next-137:
	%947 = getelementptr inbounds %..any, %..any* %87, i64 0, i32 1
	%948 = load %Type_Info*, %Type_Info** %947, align 8
	%949 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 62
	%950 = icmp eq %Type_Info* %948, %949
	br i1 %950, label %typeswitch.body-140, label %typeswitch.next-139

typeswitch.body-138:
	%951 = getelementptr inbounds %..any, %..any* %87, i64 0, i32 0
	%952 = load %..rawptr, %..rawptr* %951, align 8
	%953 = bitcast %..rawptr %952 to i64*
	%954 = load i64, i64* %953, align 8
	store i64 %954, i64* %97
	; AssignStmt
	%955 = load i64, i64* %97, align 8
	store i64 %955, i64* %89
	br label %typeswitch.done-143

typeswitch.next-139:
	%956 = getelementptr inbounds %..any, %..any* %87, i64 0, i32 1
	%957 = load %Type_Info*, %Type_Info** %956, align 8
	%958 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 58
	%959 = icmp eq %Type_Info* %957, %958
	br i1 %959, label %typeswitch.body-142, label %typeswitch.next-141

typeswitch.body-140:
	%960 = getelementptr inbounds %..any, %..any* %87, i64 0, i32 0
	%961 = load %..rawptr, %..rawptr* %960, align 8
	%962 = bitcast %..rawptr %961 to i128*
	%963 = load i128, i128* %962, align 8
	store i128 %963, i128* %98
	; AssignStmt
	%964 = load i128, i128* %98, align 8
	%965 = trunc i128 %964 to i64
	store i64 %965, i64* %89
	br label %typeswitch.done-143

typeswitch.next-141:
	store %..any %872, %..any* %100
	; variadic call argument generation
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %101
	%966 = load {%..any*, i64}, {%..any*, i64}* %101, align 8
	%967 = call %Source_Code_Location @make_source_code_location(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$dc, i64 0, i32 0), i64 28}, i64 918, i64 9, %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$dd, i64 0, i32 0), i64 9})
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %102
	store {%..any*, i64} %966, {%..any*, i64}* %102
	store %Source_Code_Location zeroinitializer, %Source_Code_Location* %103
	store %Source_Code_Location %967, %Source_Code_Location* %103
	call void @panic(%..string {i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__str$de, i64 0, i32 0), i64 22}, {%..any*, i64}* %102, %Source_Code_Location* %103)
	br label %typeswitch.done-143

typeswitch.body-142:
	%968 = getelementptr inbounds %..any, %..any* %87, i64 0, i32 0
	%969 = load %..rawptr, %..rawptr* %968, align 8
	%970 = bitcast %..rawptr %969 to i128*
	%971 = load i128, i128* %970, align 8
	store i128 %971, i128* %99
	; AssignStmt
	%972 = load i128, i128* %99, align 8
	%973 = trunc i128 %972 to i64
	store i64 %973, i64* %89
	br label %typeswitch.done-143

typeswitch.done-143:
	; IfStmt
	; SelectorExpr
	%974 = getelementptr inbounds %..any, %..any* %1, i64 0, i32 0
	%975 = load %..rawptr, %..rawptr* %974, align 8
	%976 = icmp eq %..rawptr %975, zeroinitializer
	br i1 %976, label %if.then-145, label %cmp.or-144

cmp.or-144:
	%977 = load i64, i64* %89, align 8
	%978 = icmp eq i64 %977, 0
	br i1 %978, label %if.then-145, label %if.else-146

if.then-145:
	; SelectorExpr
	%979 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%980 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %979, i64 0
	%981 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %980, i64 0, i32 4
	%982 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %981, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %982, %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$df, i64 0, i32 0), i64 3}, %Context* noalias nonnull %__.context_ptr)
	br label %if.done-147

if.else-146:
	; ti
		; IndexExpr
	; SelectorExpr
	%983 = getelementptr inbounds %Type_Info_Union, %Type_Info_Union* %85, i64 0, i32 0
	%984 = load {%Type_Info**, i64}, {%Type_Info**, i64}* %983, align 8
	%985 = extractvalue {%Type_Info**, i64} %984, 0
	%986 = load i64, i64* %89, align 8
	%987 = sub i64 %986, 1
	%988 = bitcast i64 %987 to i64
	%989 = extractvalue {%Type_Info**, i64} %984, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$e0, i64 0, i32 0), i64 28}, i64 924, i64 24, i64 %988, i64 %989)
	%990 = getelementptr inbounds %Type_Info*, %Type_Info** %985, i64 %988
	%991 = load %Type_Info*, %Type_Info** %990, align 8
	store %Type_Info* %991, %Type_Info** %104
	%992 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	; CompoundLit
	store %..any zeroinitializer, %..any* %105
	store %..any zeroinitializer, %..any* %105
	; SelectorExpr
	%993 = getelementptr inbounds %..any, %..any* %1, i64 0, i32 0
	%994 = load %..rawptr, %..rawptr* %993, align 8
	%995 = getelementptr inbounds %..any, %..any* %105, i64 0, i32 0
	store %..rawptr %994, %..rawptr* %995
	%996 = load %Type_Info*, %Type_Info** %104, align 8
	%997 = getelementptr inbounds %..any, %..any* %105, i64 0, i32 1
	store %Type_Info* %996, %Type_Info** %997
	%998 = load %..any, %..any* %105, align 8
	%999 = load i32, i32* %2, align 4
	call void @fmt-4.fmt_arg(%fmt-4.Fmt_Info* %992, %..any %998, i32 %999, %Context* noalias nonnull %__.context_ptr)
	br label %if.done-147

if.done-147:
	br label %typeswitch.done-152

typeswitch.next-148:
	%1000 = icmp eq i8 %124, 10
	br i1 %1000, label %typeswitch.body-151, label %typeswitch.next-150

typeswitch.body-149:
	%1001 = bitcast %..rawptr %125 to %Type_Info_Enum*
	%1002 = load %Type_Info_Enum, %Type_Info_Enum* %1001, align 8
	store %Type_Info_Enum %1002, %Type_Info_Enum* %106
	%1003 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%1004 = load %..any, %..any* %1, align 8
	%1005 = load i32, i32* %2, align 4
	call void @fmt-4.fmt_enum(%fmt-4.Fmt_Info* %1003, %..any %1004, i32 %1005, %Context* noalias nonnull %__.context_ptr)
	br label %typeswitch.done-152

typeswitch.next-150:
	br label %typeswitch.done-152

typeswitch.body-151:
	%1006 = bitcast %..rawptr %125 to %Type_Info_Procedure*
	%1007 = load %Type_Info_Procedure, %Type_Info_Procedure* %1006, align 8
	store %Type_Info_Procedure %1007, %Type_Info_Procedure* %107
	; SelectorExpr
	%1008 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%1009 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %1008, i64 0
	%1010 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %1009, i64 0, i32 4
	%1011 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %1010, align 8
	; SelectorExpr
	%1012 = getelementptr inbounds %..any, %..any* %1, i64 0, i32 1
	%1013 = load %Type_Info*, %Type_Info** %1012, align 8
	call void @fmt-4.write_type({i8*, i64, i64, %Allocator}* %1011, %Type_Info* %1013, %Context* noalias nonnull %__.context_ptr)
	; SelectorExpr
	%1014 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%1015 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %1014, i64 0
	%1016 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %1015, i64 0, i32 4
	%1017 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %1016, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %1017, %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$e1, i64 0, i32 0), i64 3}, %Context* noalias nonnull %__.context_ptr)
	%1018 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	; SelectorExpr
	%1019 = getelementptr inbounds %..any, %..any* %1, i64 0, i32 0
	%1020 = load %..rawptr, %..rawptr* %1019, align 8
	%1021 = bitcast %..rawptr %1020 to %..rawptr*
	%1022 = getelementptr inbounds %..rawptr, %..rawptr* %1021, i64 0
	%1023 = load %..rawptr, %..rawptr* %1022, align 8
	call void @fmt-4.fmt_pointer(%fmt-4.Fmt_Info* %1018, %..rawptr %1023, i32 112, %Context* noalias nonnull %__.context_ptr)
	br label %typeswitch.done-152

typeswitch.done-152:
	ret void
}

define void @fmt-4.fmt_complex(%fmt-4.Fmt_Info* %fi, %..complex128* %c, i64 %bits, i32 %verb, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca %fmt-4.Fmt_Info*, align 8
	%1 = alloca i64, align 8
	%2 = alloca i32, align 4
	%3 = alloca double, align 8
	%4 = alloca double, align 8
		store %fmt-4.Fmt_Info* %fi, %fmt-4.Fmt_Info** %0
	%5 = load %..complex128, %..complex128* %c, align 8
		store i64 %bits, i64* %1
		store i32 %verb, i32* %2
	; SwitchStmt
	%6 = load i32, i32* %2, align 4
	%7 = icmp eq i32 %6, 102
	br i1 %7, label %switch.case.body-4, label %switch.case.next-1

switch.case.next-1:
	%8 = icmp eq i32 %6, 70
	br i1 %8, label %switch.case.body-4, label %switch.case.next-2

switch.case.next-2:
	%9 = icmp eq i32 %6, 118
	br i1 %9, label %switch.case.body-4, label %switch.case.next-3

switch.case.next-3:
	%10 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%11 = load i32, i32* %2, align 4
	call void @fmt-4.fmt_bad_verb(%fmt-4.Fmt_Info* %10, i32 %11, %Context* noalias nonnull %__.context_ptr)
	; ReturnStmt
	ret void

switch.case.body-4:
	; r
		; i
		; real
	%12 = load %..complex128, %..complex128* %c, align 8
	%13 = extractvalue %..complex128 %12, 0
	; imag
	%14 = load %..complex128, %..complex128* %c, align 8
	%15 = extractvalue %..complex128 %14, 1
	store double %13, double* %3
	store double %15, double* %4
	%16 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%17 = load double, double* %3, align 8
	%18 = load i64, i64* %1, align 8
	%19 = sdiv i64 %18, 2
	%20 = load i32, i32* %2, align 4
	call void @fmt-4.fmt_float(%fmt-4.Fmt_Info* %16, double %17, i64 %19, i32 %20, %Context* noalias nonnull %__.context_ptr)
	; IfStmt
	; SelectorExpr
	%21 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%22 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %21, i64 0
	%23 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %22, i64 0, i32 6
	%24 = load i1, i1* %23, align 1
	br i1 %24, label %if.done-7, label %cmp.and-5

cmp.and-5:
	%25 = load double, double* %4, align 8
	%26 = fcmp oge double %25, 0x0000000000000000
	br i1 %26, label %if.then-6, label %if.done-7

if.then-6:
	; SelectorExpr
	%27 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%28 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %27, i64 0
	%29 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %28, i64 0, i32 4
	%30 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %29, align 8
	call void @fmt-4.write_rune({i8*, i64, i64, %Allocator}* %30, i32 43, %Context* noalias nonnull %__.context_ptr)
	br label %if.done-7

if.done-7:
	%31 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%32 = load double, double* %4, align 8
	%33 = load i64, i64* %1, align 8
	%34 = sdiv i64 %33, 2
	%35 = load i32, i32* %2, align 4
	call void @fmt-4.fmt_float(%fmt-4.Fmt_Info* %31, double %32, i64 %34, i32 %35, %Context* noalias nonnull %__.context_ptr)
	; SelectorExpr
	%36 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%37 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %36, i64 0
	%38 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %37, i64 0, i32 4
	%39 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %38, align 8
	call void @fmt-4.write_rune({i8*, i64, i64, %Allocator}* %39, i32 105, %Context* noalias nonnull %__.context_ptr)
	ret void
}

define void @fmt-4.fmt_arg(%fmt-4.Fmt_Info* %fi, %..any %arg, i32 %verb, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca %fmt-4.Fmt_Info*, align 8
	%1 = alloca %..any, align 8
	%2 = alloca i32, align 4
	%3 = alloca %Type_Info*, align 8
	%4 = alloca %Type_Info*, align 8
	%5 = alloca %..any, align 8
	%6 = alloca %..any, align 8
	%7 = alloca i1, align 1
	%8 = alloca i32, align 4
	%9 = alloca float, align 4
	%10 = alloca double, align 8
	%11 = alloca %..complex64, align 4
	%12 = alloca %..complex128, align 8
	%13 = alloca %..complex128, align 16
	%14 = alloca %..complex128, align 8
	%15 = alloca %..complex128, align 16
	%16 = alloca i64, align 8
	%17 = alloca i128, align 16
	%18 = alloca i8, align 1
	%19 = alloca i128, align 16
	%20 = alloca i16, align 2
	%21 = alloca i128, align 16
	%22 = alloca i32, align 4
	%23 = alloca i128, align 16
	%24 = alloca i64, align 8
	%25 = alloca i128, align 16
	%26 = alloca i128, align 8
	%27 = alloca i128, align 16
	%28 = alloca i64, align 8
	%29 = alloca i128, align 16
	%30 = alloca i64, align 8
	%31 = alloca i128, align 16
	%32 = alloca i8, align 1
	%33 = alloca i128, align 16
	%34 = alloca i16, align 2
	%35 = alloca i128, align 16
	%36 = alloca i32, align 4
	%37 = alloca i128, align 16
	%38 = alloca i64, align 8
	%39 = alloca i128, align 16
	%40 = alloca i128, align 8
	%41 = alloca i128, align 16
	%42 = alloca %..string, align 8
	%43 = alloca %..any, align 8
		store %fmt-4.Fmt_Info* %fi, %fmt-4.Fmt_Info** %0
		store %..any %arg, %..any* %1
		store i32 %verb, i32* %2
	; IfStmt
	%44 = load %..any, %..any* %1, align 8
	%45 = extractvalue %..any %44, 0
	%46 = extractvalue %..any %44, 1
	%47 = icmp eq %..rawptr %45, null
	%48 = bitcast %..rawptr null to %Type_Info*
	%49 = icmp eq %Type_Info* %46, %48
	%50 = or i1 %47, %49
	br i1 %50, label %if.then-1, label %if.done-2

if.then-1:
	; SelectorExpr
	%51 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%52 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %51, i64 0
	%53 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %52, i64 0, i32 4
	%54 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %53, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %54, %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$e2, i64 0, i32 0), i64 5}, %Context* noalias nonnull %__.context_ptr)
	; ReturnStmt
	ret void

if.done-2:
	; AssignStmt
	; SelectorExpr
	%55 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%56 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %55, i64 0
	%57 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %56, i64 0, i32 0
	%58 = load %..any, %..any* %1, align 8
	store %..any %58, %..any* %57
	; IfStmt
	%59 = load i32, i32* %2, align 4
	%60 = icmp eq i32 %59, 84
	br i1 %60, label %if.then-3, label %if.done-7

if.then-3:
	; ti
		; SelectorExpr
	%61 = getelementptr inbounds %..any, %..any* %1, i64 0, i32 1
	%62 = load %Type_Info*, %Type_Info** %61, align 8
	store %Type_Info* %62, %Type_Info** %3
	; TypeSwitchStmt
	%63 = load %..any, %..any* %1, align 8
	%64 = getelementptr inbounds %..any, %..any* %1, i64 0, i32 1
	%65 = load %Type_Info*, %Type_Info** %64, align 8
	%66 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%67 = icmp eq %Type_Info* %65, %66
	br i1 %67, label %typeswitch.body-5, label %typeswitch.next-4

typeswitch.next-4:
	br label %typeswitch.done-6

typeswitch.body-5:
	%68 = getelementptr inbounds %..any, %..any* %1, i64 0, i32 0
	%69 = load %..rawptr, %..rawptr* %68, align 8
	%70 = bitcast %..rawptr %69 to %Type_Info**
	%71 = load %Type_Info*, %Type_Info** %70, align 8
	store %Type_Info* %71, %Type_Info** %4
	; AssignStmt
	%72 = load %Type_Info*, %Type_Info** %4, align 8
	store %Type_Info* %72, %Type_Info** %3
	br label %typeswitch.done-6

typeswitch.done-6:
	; SelectorExpr
	%73 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%74 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %73, i64 0
	%75 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %74, i64 0, i32 4
	%76 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %75, align 8
	%77 = load %Type_Info*, %Type_Info** %3, align 8
	call void @fmt-4.write_type({i8*, i64, i64, %Allocator}* %76, %Type_Info* %77, %Context* noalias nonnull %__.context_ptr)
	; ReturnStmt
	ret void

if.done-7:
	; base_arg
		%78 = load %..any, %..any* %1, align 8
	store %..any %78, %..any* %5
	; AssignStmt
	; SelectorExpr
	%79 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 1
	; SelectorExpr
	%80 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 1
	%81 = load %Type_Info*, %Type_Info** %80, align 8
	%82 = call %Type_Info* @type_info_base(%Type_Info* %81, %Context* noalias nonnull %__.context_ptr)
	store %Type_Info* %82, %Type_Info** %79
	; TypeSwitchStmt
	%83 = load %..any, %..any* %5, align 8
	%84 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 1
	%85 = load %Type_Info*, %Type_Info** %84, align 8
	%86 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 75
	%87 = icmp eq %Type_Info* %85, %86
	br i1 %87, label %typeswitch.body-9, label %typeswitch.next-8

typeswitch.next-8:
	%88 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 1
	%89 = load %Type_Info*, %Type_Info** %88, align 8
	%90 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 13
	%91 = icmp eq %Type_Info* %89, %90
	br i1 %91, label %typeswitch.body-11, label %typeswitch.next-10

typeswitch.body-9:
	%92 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 0
	%93 = load %..rawptr, %..rawptr* %92, align 8
	%94 = bitcast %..rawptr %93 to %..any*
	%95 = load %..any, %..any* %94, align 8
	store %..any %95, %..any* %6
	%96 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%97 = load %..any, %..any* %6, align 8
	%98 = load i32, i32* %2, align 4
	call void @fmt-4.fmt_arg(%fmt-4.Fmt_Info* %96, %..any %97, i32 %98, %Context* noalias nonnull %__.context_ptr)
	br label %typeswitch.done-50

typeswitch.next-10:
	%99 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 1
	%100 = load %Type_Info*, %Type_Info** %99, align 8
	%101 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 53
	%102 = icmp eq %Type_Info* %100, %101
	br i1 %102, label %typeswitch.body-13, label %typeswitch.next-12

typeswitch.body-11:
	%103 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 0
	%104 = load %..rawptr, %..rawptr* %103, align 8
	%105 = bitcast %..rawptr %104 to i1*
	%106 = load i1, i1* %105, align 1
	store i1 %106, i1* %7
	%107 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%108 = load i1, i1* %7, align 1
	%109 = load i32, i32* %2, align 4
	call void @fmt-4.fmt_bool(%fmt-4.Fmt_Info* %107, i1 %108, i32 %109, %Context* noalias nonnull %__.context_ptr)
	br label %typeswitch.done-50

typeswitch.next-12:
	%110 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 1
	%111 = load %Type_Info*, %Type_Info** %110, align 8
	%112 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 64
	%113 = icmp eq %Type_Info* %111, %112
	br i1 %113, label %typeswitch.body-15, label %typeswitch.next-14

typeswitch.body-13:
	%114 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 0
	%115 = load %..rawptr, %..rawptr* %114, align 8
	%116 = bitcast %..rawptr %115 to i32*
	%117 = load i32, i32* %116, align 4
	store i32 %117, i32* %8
	%118 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%119 = load i32, i32* %8, align 4
	%120 = load i32, i32* %2, align 4
	call void @fmt-4.fmt_rune(%fmt-4.Fmt_Info* %118, i32 %119, i32 %120, %Context* noalias nonnull %__.context_ptr)
	br label %typeswitch.done-50

typeswitch.next-14:
	%121 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 1
	%122 = load %Type_Info*, %Type_Info** %121, align 8
	%123 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 65
	%124 = icmp eq %Type_Info* %122, %123
	br i1 %124, label %typeswitch.body-17, label %typeswitch.next-16

typeswitch.body-15:
	%125 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 0
	%126 = load %..rawptr, %..rawptr* %125, align 8
	%127 = bitcast %..rawptr %126 to float*
	%128 = load float, float* %127, align 4
	store float %128, float* %9
	%129 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%130 = load float, float* %9, align 4
	%131 = fpext float %130 to double
	%132 = load i32, i32* %2, align 4
	call void @fmt-4.fmt_float(%fmt-4.Fmt_Info* %129, double %131, i64 32, i32 %132, %Context* noalias nonnull %__.context_ptr)
	br label %typeswitch.done-50

typeswitch.next-16:
	%133 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 1
	%134 = load %Type_Info*, %Type_Info** %133, align 8
	%135 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 79
	%136 = icmp eq %Type_Info* %134, %135
	br i1 %136, label %typeswitch.body-19, label %typeswitch.next-18

typeswitch.body-17:
	%137 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 0
	%138 = load %..rawptr, %..rawptr* %137, align 8
	%139 = bitcast %..rawptr %138 to double*
	%140 = load double, double* %139, align 8
	store double %140, double* %10
	%141 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%142 = load double, double* %10, align 8
	%143 = load i32, i32* %2, align 4
	call void @fmt-4.fmt_float(%fmt-4.Fmt_Info* %141, double %142, i64 64, i32 %143, %Context* noalias nonnull %__.context_ptr)
	br label %typeswitch.done-50

typeswitch.next-18:
	%144 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 1
	%145 = load %Type_Info*, %Type_Info** %144, align 8
	%146 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 80
	%147 = icmp eq %Type_Info* %145, %146
	br i1 %147, label %typeswitch.body-21, label %typeswitch.next-20

typeswitch.body-19:
	%148 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 0
	%149 = load %..rawptr, %..rawptr* %148, align 8
	%150 = bitcast %..rawptr %149 to %..complex64*
	%151 = load %..complex64, %..complex64* %150, align 4
	store %..complex64 %151, %..complex64* %11
	%152 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%153 = load %..complex64, %..complex64* %11, align 4
	store %..complex128 zeroinitializer, %..complex128* %12
	%154 = extractvalue %..complex64 %153, 0
	%155 = fpext float %154 to double
	%156 = extractvalue %..complex64 %153, 1
	%157 = fpext float %156 to double
	%158 = getelementptr inbounds %..complex128, %..complex128* %12, i64 0, i32 0
	store double %155, double* %158
	%159 = getelementptr inbounds %..complex128, %..complex128* %12, i64 0, i32 1
	store double %157, double* %159
	%160 = load %..complex128, %..complex128* %12, align 8
	%161 = load i32, i32* %2, align 4
	store %..complex128 zeroinitializer, %..complex128* %13
	store %..complex128 %160, %..complex128* %13
	call void @fmt-4.fmt_complex(%fmt-4.Fmt_Info* %152, %..complex128* %13, i64 64, i32 %161, %Context* noalias nonnull %__.context_ptr)
	br label %typeswitch.done-50

typeswitch.next-20:
	%162 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 1
	%163 = load %Type_Info*, %Type_Info** %162, align 8
	%164 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%165 = icmp eq %Type_Info* %163, %164
	br i1 %165, label %typeswitch.body-23, label %typeswitch.next-22

typeswitch.body-21:
	%166 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 0
	%167 = load %..rawptr, %..rawptr* %166, align 8
	%168 = bitcast %..rawptr %167 to %..complex128*
	%169 = load %..complex128, %..complex128* %168, align 8
	store %..complex128 %169, %..complex128* %14
	%170 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%171 = load %..complex128, %..complex128* %14, align 8
	%172 = load i32, i32* %2, align 4
	store %..complex128 zeroinitializer, %..complex128* %15
	store %..complex128 %171, %..complex128* %15
	call void @fmt-4.fmt_complex(%fmt-4.Fmt_Info* %170, %..complex128* %15, i64 128, i32 %172, %Context* noalias nonnull %__.context_ptr)
	br label %typeswitch.done-50

typeswitch.next-22:
	%173 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 1
	%174 = load %Type_Info*, %Type_Info** %173, align 8
	%175 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 54
	%176 = icmp eq %Type_Info* %174, %175
	br i1 %176, label %typeswitch.body-25, label %typeswitch.next-24

typeswitch.body-23:
	%177 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 0
	%178 = load %..rawptr, %..rawptr* %177, align 8
	%179 = bitcast %..rawptr %178 to i64*
	%180 = load i64, i64* %179, align 8
	store i64 %180, i64* %16
	%181 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%182 = load i64, i64* %16, align 8
	%183 = sext i64 %182 to i128
	%184 = load i32, i32* %2, align 4
	store i128 zeroinitializer, i128* %17
	store i128 %183, i128* %17
	call void @fmt-4.fmt_int(%fmt-4.Fmt_Info* %181, i128* %17, i1 true, i64 64, i32 %184, %Context* noalias nonnull %__.context_ptr)
	br label %typeswitch.done-50

typeswitch.next-24:
	%185 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 1
	%186 = load %Type_Info*, %Type_Info** %185, align 8
	%187 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 55
	%188 = icmp eq %Type_Info* %186, %187
	br i1 %188, label %typeswitch.body-27, label %typeswitch.next-26

typeswitch.body-25:
	%189 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 0
	%190 = load %..rawptr, %..rawptr* %189, align 8
	%191 = bitcast %..rawptr %190 to i8*
	%192 = load i8, i8* %191, align 1
	store i8 %192, i8* %18
	%193 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%194 = load i8, i8* %18, align 1
	%195 = sext i8 %194 to i128
	%196 = load i32, i32* %2, align 4
	store i128 zeroinitializer, i128* %19
	store i128 %195, i128* %19
	call void @fmt-4.fmt_int(%fmt-4.Fmt_Info* %193, i128* %19, i1 true, i64 8, i32 %196, %Context* noalias nonnull %__.context_ptr)
	br label %typeswitch.done-50

typeswitch.next-26:
	%197 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 1
	%198 = load %Type_Info*, %Type_Info** %197, align 8
	%199 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	%200 = icmp eq %Type_Info* %198, %199
	br i1 %200, label %typeswitch.body-29, label %typeswitch.next-28

typeswitch.body-27:
	%201 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 0
	%202 = load %..rawptr, %..rawptr* %201, align 8
	%203 = bitcast %..rawptr %202 to i16*
	%204 = load i16, i16* %203, align 2
	store i16 %204, i16* %20
	%205 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%206 = load i16, i16* %20, align 2
	%207 = sext i16 %206 to i128
	%208 = load i32, i32* %2, align 4
	store i128 zeroinitializer, i128* %21
	store i128 %207, i128* %21
	call void @fmt-4.fmt_int(%fmt-4.Fmt_Info* %205, i128* %21, i1 true, i64 16, i32 %208, %Context* noalias nonnull %__.context_ptr)
	br label %typeswitch.done-50

typeswitch.next-28:
	%209 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 1
	%210 = load %Type_Info*, %Type_Info** %209, align 8
	%211 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 57
	%212 = icmp eq %Type_Info* %210, %211
	br i1 %212, label %typeswitch.body-31, label %typeswitch.next-30

typeswitch.body-29:
	%213 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 0
	%214 = load %..rawptr, %..rawptr* %213, align 8
	%215 = bitcast %..rawptr %214 to i32*
	%216 = load i32, i32* %215, align 4
	store i32 %216, i32* %22
	%217 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%218 = load i32, i32* %22, align 4
	%219 = sext i32 %218 to i128
	%220 = load i32, i32* %2, align 4
	store i128 zeroinitializer, i128* %23
	store i128 %219, i128* %23
	call void @fmt-4.fmt_int(%fmt-4.Fmt_Info* %217, i128* %23, i1 true, i64 32, i32 %220, %Context* noalias nonnull %__.context_ptr)
	br label %typeswitch.done-50

typeswitch.next-30:
	%221 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 1
	%222 = load %Type_Info*, %Type_Info** %221, align 8
	%223 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 58
	%224 = icmp eq %Type_Info* %222, %223
	br i1 %224, label %typeswitch.body-33, label %typeswitch.next-32

typeswitch.body-31:
	%225 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 0
	%226 = load %..rawptr, %..rawptr* %225, align 8
	%227 = bitcast %..rawptr %226 to i64*
	%228 = load i64, i64* %227, align 8
	store i64 %228, i64* %24
	%229 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%230 = load i64, i64* %24, align 8
	%231 = sext i64 %230 to i128
	%232 = load i32, i32* %2, align 4
	store i128 zeroinitializer, i128* %25
	store i128 %231, i128* %25
	call void @fmt-4.fmt_int(%fmt-4.Fmt_Info* %229, i128* %25, i1 true, i64 64, i32 %232, %Context* noalias nonnull %__.context_ptr)
	br label %typeswitch.done-50

typeswitch.next-32:
	%233 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 1
	%234 = load %Type_Info*, %Type_Info** %233, align 8
	%235 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 42
	%236 = icmp eq %Type_Info* %234, %235
	br i1 %236, label %typeswitch.body-35, label %typeswitch.next-34

typeswitch.body-33:
	%237 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 0
	%238 = load %..rawptr, %..rawptr* %237, align 8
	%239 = bitcast %..rawptr %238 to i128*
	%240 = load i128, i128* %239, align 8
	store i128 %240, i128* %26
	%241 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%242 = load i128, i128* %26, align 8
	%243 = bitcast i128 %242 to i128
	%244 = load i32, i32* %2, align 4
	store i128 zeroinitializer, i128* %27
	store i128 %243, i128* %27
	call void @fmt-4.fmt_int(%fmt-4.Fmt_Info* %241, i128* %27, i1 true, i64 128, i32 %244, %Context* noalias nonnull %__.context_ptr)
	br label %typeswitch.done-50

typeswitch.next-34:
	%245 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 1
	%246 = load %Type_Info*, %Type_Info** %245, align 8
	%247 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	%248 = icmp eq %Type_Info* %246, %247
	br i1 %248, label %typeswitch.body-37, label %typeswitch.next-36

typeswitch.body-35:
	%249 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 0
	%250 = load %..rawptr, %..rawptr* %249, align 8
	%251 = bitcast %..rawptr %250 to i64*
	%252 = load i64, i64* %251, align 8
	store i64 %252, i64* %28
	%253 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%254 = load i64, i64* %28, align 8
	%255 = zext i64 %254 to i128
	%256 = load i32, i32* %2, align 4
	store i128 zeroinitializer, i128* %29
	store i128 %255, i128* %29
	call void @fmt-4.fmt_int(%fmt-4.Fmt_Info* %253, i128* %29, i1 false, i64 64, i32 %256, %Context* noalias nonnull %__.context_ptr)
	br label %typeswitch.done-50

typeswitch.next-36:
	%257 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 1
	%258 = load %Type_Info*, %Type_Info** %257, align 8
	%259 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	%260 = icmp eq %Type_Info* %258, %259
	br i1 %260, label %typeswitch.body-39, label %typeswitch.next-38

typeswitch.body-37:
	%261 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 0
	%262 = load %..rawptr, %..rawptr* %261, align 8
	%263 = bitcast %..rawptr %262 to i64*
	%264 = load i64, i64* %263, align 8
	store i64 %264, i64* %30
	%265 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%266 = load i64, i64* %30, align 8
	%267 = zext i64 %266 to i128
	%268 = load i32, i32* %2, align 4
	store i128 zeroinitializer, i128* %31
	store i128 %267, i128* %31
	call void @fmt-4.fmt_int(%fmt-4.Fmt_Info* %265, i128* %31, i1 false, i64 64, i32 %268, %Context* noalias nonnull %__.context_ptr)
	br label %typeswitch.done-50

typeswitch.next-38:
	%269 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 1
	%270 = load %Type_Info*, %Type_Info** %269, align 8
	%271 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 59
	%272 = icmp eq %Type_Info* %270, %271
	br i1 %272, label %typeswitch.body-41, label %typeswitch.next-40

typeswitch.body-39:
	%273 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 0
	%274 = load %..rawptr, %..rawptr* %273, align 8
	%275 = bitcast %..rawptr %274 to i8*
	%276 = load i8, i8* %275, align 1
	store i8 %276, i8* %32
	%277 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%278 = load i8, i8* %32, align 1
	%279 = zext i8 %278 to i128
	%280 = load i32, i32* %2, align 4
	store i128 zeroinitializer, i128* %33
	store i128 %279, i128* %33
	call void @fmt-4.fmt_int(%fmt-4.Fmt_Info* %277, i128* %33, i1 false, i64 8, i32 %280, %Context* noalias nonnull %__.context_ptr)
	br label %typeswitch.done-50

typeswitch.next-40:
	%281 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 1
	%282 = load %Type_Info*, %Type_Info** %281, align 8
	%283 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	%284 = icmp eq %Type_Info* %282, %283
	br i1 %284, label %typeswitch.body-43, label %typeswitch.next-42

typeswitch.body-41:
	%285 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 0
	%286 = load %..rawptr, %..rawptr* %285, align 8
	%287 = bitcast %..rawptr %286 to i16*
	%288 = load i16, i16* %287, align 2
	store i16 %288, i16* %34
	%289 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%290 = load i16, i16* %34, align 2
	%291 = zext i16 %290 to i128
	%292 = load i32, i32* %2, align 4
	store i128 zeroinitializer, i128* %35
	store i128 %291, i128* %35
	call void @fmt-4.fmt_int(%fmt-4.Fmt_Info* %289, i128* %35, i1 false, i64 16, i32 %292, %Context* noalias nonnull %__.context_ptr)
	br label %typeswitch.done-50

typeswitch.next-42:
	%293 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 1
	%294 = load %Type_Info*, %Type_Info** %293, align 8
	%295 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 61
	%296 = icmp eq %Type_Info* %294, %295
	br i1 %296, label %typeswitch.body-45, label %typeswitch.next-44

typeswitch.body-43:
	%297 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 0
	%298 = load %..rawptr, %..rawptr* %297, align 8
	%299 = bitcast %..rawptr %298 to i32*
	%300 = load i32, i32* %299, align 4
	store i32 %300, i32* %36
	%301 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%302 = load i32, i32* %36, align 4
	%303 = zext i32 %302 to i128
	%304 = load i32, i32* %2, align 4
	store i128 zeroinitializer, i128* %37
	store i128 %303, i128* %37
	call void @fmt-4.fmt_int(%fmt-4.Fmt_Info* %301, i128* %37, i1 false, i64 32, i32 %304, %Context* noalias nonnull %__.context_ptr)
	br label %typeswitch.done-50

typeswitch.next-44:
	%305 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 1
	%306 = load %Type_Info*, %Type_Info** %305, align 8
	%307 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 62
	%308 = icmp eq %Type_Info* %306, %307
	br i1 %308, label %typeswitch.body-47, label %typeswitch.next-46

typeswitch.body-45:
	%309 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 0
	%310 = load %..rawptr, %..rawptr* %309, align 8
	%311 = bitcast %..rawptr %310 to i64*
	%312 = load i64, i64* %311, align 8
	store i64 %312, i64* %38
	%313 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%314 = load i64, i64* %38, align 8
	%315 = zext i64 %314 to i128
	%316 = load i32, i32* %2, align 4
	store i128 zeroinitializer, i128* %39
	store i128 %315, i128* %39
	call void @fmt-4.fmt_int(%fmt-4.Fmt_Info* %313, i128* %39, i1 false, i64 64, i32 %316, %Context* noalias nonnull %__.context_ptr)
	br label %typeswitch.done-50

typeswitch.next-46:
	%317 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 1
	%318 = load %Type_Info*, %Type_Info** %317, align 8
	%319 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%320 = icmp eq %Type_Info* %318, %319
	br i1 %320, label %typeswitch.body-49, label %typeswitch.next-48

typeswitch.body-47:
	%321 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 0
	%322 = load %..rawptr, %..rawptr* %321, align 8
	%323 = bitcast %..rawptr %322 to i128*
	%324 = load i128, i128* %323, align 8
	store i128 %324, i128* %40
	%325 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%326 = load i128, i128* %40, align 8
	%327 = load i32, i32* %2, align 4
	store i128 zeroinitializer, i128* %41
	store i128 %326, i128* %41
	call void @fmt-4.fmt_int(%fmt-4.Fmt_Info* %325, i128* %41, i1 false, i64 128, i32 %327, %Context* noalias nonnull %__.context_ptr)
	br label %typeswitch.done-50

typeswitch.next-48:
	store %..any %83, %..any* %43
	%328 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%329 = load %..any, %..any* %1, align 8
	%330 = load i32, i32* %2, align 4
	call void @fmt-4.fmt_value(%fmt-4.Fmt_Info* %328, %..any %329, i32 %330, %Context* noalias nonnull %__.context_ptr)
	br label %typeswitch.done-50

typeswitch.body-49:
	%331 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 0
	%332 = load %..rawptr, %..rawptr* %331, align 8
	%333 = bitcast %..rawptr %332 to %..string*
	%334 = load %..string, %..string* %333, align 8
	store %..string %334, %..string* %42
	%335 = load %fmt-4.Fmt_Info*, %fmt-4.Fmt_Info** %0, align 8
	%336 = load %..string, %..string* %42, align 8
	%337 = load i32, i32* %2, align 4
	call void @fmt-4.fmt_string(%fmt-4.Fmt_Info* %335, %..string %336, i32 %337, %Context* noalias nonnull %__.context_ptr)
	br label %typeswitch.done-50

typeswitch.done-50:
	ret void
}

define %..string @fmt-4.sbprint({i8*, i64, i64, %Allocator}* %buf, {%..any*, i64}* %args, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca {i8*, i64, i64, %Allocator}*, align 8
	%1 = alloca %fmt-4.Fmt_Info, align 8
	%2 = alloca i1, align 1
	%3 = alloca %..any, align 8
	%4 = alloca i64, align 8
	%5 = alloca i64, align 8
	%6 = alloca i64, align 8
	%7 = alloca i1, align 1
	%8 = alloca {i8*, i64, i64, %Allocator}, align 16
		store {i8*, i64, i64, %Allocator}* %buf, {i8*, i64, i64, %Allocator}** %0
	%9 = load {%..any*, i64}, {%..any*, i64}* %args, align 8
	; fi
	store %fmt-4.Fmt_Info zeroinitializer, %fmt-4.Fmt_Info* %1
		; prev_string
		store i1 false, i1* %2
	; AssignStmt
	; SelectorExpr
	%10 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %1, i64 0, i32 4
	%11 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	store {i8*, i64, i64, %Allocator}* %11, {i8*, i64, i64, %Allocator}** %10
	; RangeStmt
	; arg
	store %..any zeroinitializer, %..any* %3
		; i
	store i64 zeroinitializer, i64* %4
		%12 = load {%..any*, i64}, {%..any*, i64}* %args, align 8
	store i64 zeroinitializer, i64* %5
	%13 = extractvalue {%..any*, i64} %12, 1
	store i64 %13, i64* %5
	store i64 zeroinitializer, i64* %6
	store i64 -1, i64* %6
	br label %for.index.loop-1

for.index.loop-1:
	%14 = load i64, i64* %6, align 8
	%15 = add i64 %14, 1
	store i64 %15, i64* %6
	%16 = load i64, i64* %5, align 8
	%17 = icmp slt i64 %15, %16
	br i1 %17, label %for.index.body-2, label %for.index.done-9

for.index.body-2:
	%18 = load i64, i64* %6, align 8
	%19 = extractvalue {%..any*, i64} %12, 0
	%20 = getelementptr inbounds %..any, %..any* %19, i64 %18
	%21 = load %..any, %..any* %20, align 8
	store %..any %21, %..any* %3
	store i64 %18, i64* %4
	; is_string
		%22 = load %..any, %..any* %3, align 8
	%23 = extractvalue %..any %22, 0
	%24 = extractvalue %..any %22, 1
	%25 = icmp ne %..rawptr %23, null
	%26 = bitcast %..rawptr null to %Type_Info*
	%27 = icmp ne %Type_Info* %24, %26
	%28 = and i1 %25, %27
	%29 = load %..any, %..any* %3, align 8
	%30 = extractvalue %..any %29, 0
	%31 = extractvalue %..any %29, 1
	%32 = icmp ne %..rawptr %30, null
	%33 = bitcast %..rawptr null to %Type_Info*
	%34 = icmp ne %Type_Info* %31, %33
	%35 = and i1 %32, %34
	br i1 %35, label %logical.cmp.rhs-3, label %logical.cmp.done-4

logical.cmp.rhs-3:
	; SelectorExpr
	; SelectorExpr
	%36 = getelementptr inbounds %..any, %..any* %3, i64 0, i32 1
	%37 = load %Type_Info*, %Type_Info** %36, align 8
	%38 = call i1 @types-17.is_string(%Type_Info* %37, %Context* noalias nonnull %__.context_ptr)
	br label %logical.cmp.done-4

logical.cmp.done-4:
	%39 = phi i1 [ false, %for.index.body-2 ], [ %38, %logical.cmp.rhs-3 ]
	store i1 %39, i1* %7
	; IfStmt
	%40 = load i64, i64* %4, align 8
	%41 = icmp sgt i64 %40, 0
	br i1 %41, label %cmp.and-5, label %if.done-8

cmp.and-5:
	%42 = load i1, i1* %7, align 1
	br i1 %42, label %if.done-8, label %cmp.and-6

cmp.and-6:
	%43 = load i1, i1* %2, align 1
	br i1 %43, label %if.done-8, label %if.then-7

if.then-7:
	%44 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	call void @fmt-4.write_byte({i8*, i64, i64, %Allocator}* %44, i8 32, %Context* noalias nonnull %__.context_ptr)
	br label %if.done-8

if.done-8:
	%45 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %1, i64 0
	; IndexExpr
	%46 = load {%..any*, i64}, {%..any*, i64}* %args, align 8
	%47 = extractvalue {%..any*, i64} %46, 0
	%48 = load i64, i64* %4, align 8
	%49 = extractvalue {%..any*, i64} %46, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$e3, i64 0, i32 0), i64 28}, i64 1025, i64 23, i64 %48, i64 %49)
	%50 = getelementptr inbounds %..any, %..any* %47, i64 %48
	%51 = load %..any, %..any* %50, align 8
	call void @fmt-4.fmt_value(%fmt-4.Fmt_Info* %45, %..any %51, i32 118, %Context* noalias nonnull %__.context_ptr)
	; AssignStmt
	%52 = load i1, i1* %7, align 1
	store i1 %52, i1* %2
	br label %for.index.loop-1

for.index.done-9:
	; ReturnStmt
	%53 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	%54 = getelementptr inbounds {i8*, i64, i64, %Allocator}, {i8*, i64, i64, %Allocator}* %53, i64 0
	%55 = load {i8*, i64, i64, %Allocator}, {i8*, i64, i64, %Allocator}* %54, align 8
	store {i8*, i64, i64, %Allocator} zeroinitializer, {i8*, i64, i64, %Allocator}* %8
	store {i8*, i64, i64, %Allocator} %55, {i8*, i64, i64, %Allocator}* %8
	%56 = call %..string @fmt-4.to_string({i8*, i64, i64, %Allocator}* %8, %Context* noalias nonnull %__.context_ptr)
	ret %..string %56
}

define %..string @fmt-4.sbprintln({i8*, i64, i64, %Allocator}* %buf, {%..any*, i64}* %args, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca {i8*, i64, i64, %Allocator}*, align 8
	%1 = alloca %fmt-4.Fmt_Info, align 8
	%2 = alloca %..any, align 8
	%3 = alloca i64, align 8
	%4 = alloca i64, align 8
	%5 = alloca i64, align 8
	%6 = alloca {i8*, i64, i64, %Allocator}, align 16
		store {i8*, i64, i64, %Allocator}* %buf, {i8*, i64, i64, %Allocator}** %0
	%7 = load {%..any*, i64}, {%..any*, i64}* %args, align 8
	; fi
	store %fmt-4.Fmt_Info zeroinitializer, %fmt-4.Fmt_Info* %1
		; AssignStmt
	; SelectorExpr
	%8 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %1, i64 0, i32 4
	%9 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	store {i8*, i64, i64, %Allocator}* %9, {i8*, i64, i64, %Allocator}** %8
	; RangeStmt
	; arg
	store %..any zeroinitializer, %..any* %2
		; i
	store i64 zeroinitializer, i64* %3
		%10 = load {%..any*, i64}, {%..any*, i64}* %args, align 8
	store i64 zeroinitializer, i64* %4
	%11 = extractvalue {%..any*, i64} %10, 1
	store i64 %11, i64* %4
	store i64 zeroinitializer, i64* %5
	store i64 -1, i64* %5
	br label %for.index.loop-1

for.index.loop-1:
	%12 = load i64, i64* %5, align 8
	%13 = add i64 %12, 1
	store i64 %13, i64* %5
	%14 = load i64, i64* %4, align 8
	%15 = icmp slt i64 %13, %14
	br i1 %15, label %for.index.body-2, label %for.index.done-5

for.index.body-2:
	%16 = load i64, i64* %5, align 8
	%17 = extractvalue {%..any*, i64} %10, 0
	%18 = getelementptr inbounds %..any, %..any* %17, i64 %16
	%19 = load %..any, %..any* %18, align 8
	store %..any %19, %..any* %2
	store i64 %16, i64* %3
	; IfStmt
	%20 = load i64, i64* %3, align 8
	%21 = icmp sgt i64 %20, 0
	br i1 %21, label %if.then-3, label %if.done-4

if.then-3:
	%22 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	call void @fmt-4.write_byte({i8*, i64, i64, %Allocator}* %22, i8 32, %Context* noalias nonnull %__.context_ptr)
	br label %if.done-4

if.done-4:
	%23 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %1, i64 0
	; IndexExpr
	%24 = load {%..any*, i64}, {%..any*, i64}* %args, align 8
	%25 = extractvalue {%..any*, i64} %24, 0
	%26 = load i64, i64* %3, align 8
	%27 = extractvalue {%..any*, i64} %24, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$e4, i64 0, i32 0), i64 28}, i64 1038, i64 23, i64 %26, i64 %27)
	%28 = getelementptr inbounds %..any, %..any* %25, i64 %26
	%29 = load %..any, %..any* %28, align 8
	call void @fmt-4.fmt_value(%fmt-4.Fmt_Info* %23, %..any %29, i32 118, %Context* noalias nonnull %__.context_ptr)
	br label %for.index.loop-1

for.index.done-5:
	%30 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	call void @fmt-4.write_byte({i8*, i64, i64, %Allocator}* %30, i8 10, %Context* noalias nonnull %__.context_ptr)
	; ReturnStmt
	%31 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	%32 = getelementptr inbounds {i8*, i64, i64, %Allocator}, {i8*, i64, i64, %Allocator}* %31, i64 0
	%33 = load {i8*, i64, i64, %Allocator}, {i8*, i64, i64, %Allocator}* %32, align 8
	store {i8*, i64, i64, %Allocator} zeroinitializer, {i8*, i64, i64, %Allocator}* %6
	store {i8*, i64, i64, %Allocator} %33, {i8*, i64, i64, %Allocator}* %6
	%34 = call %..string @fmt-4.to_string({i8*, i64, i64, %Allocator}* %6, %Context* noalias nonnull %__.context_ptr)
	ret %..string %34
}

define %..string @fmt-4.sbprintf({i8*, i64, i64, %Allocator}* %b, %..string %fmt, {%..any*, i64}* %args, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca {i8*, i64, i64, %Allocator}*, align 8
	%1 = alloca %..string, align 8
	%2 = alloca %fmt-4.Fmt_Info, align 8
	%3 = alloca i64, align 8
	%4 = alloca i64, align 8
	%5 = alloca i1, align 1
	%6 = alloca i64, align 8
	%7 = alloca %fmt-4.Fmt_Info, align 8
	%8 = alloca i64, align 8
	%9 = alloca %..string, align 8
	%10 = alloca {%..any*, i64}, align 16
	%11 = alloca {%..any*, i64}, align 16
	%12 = alloca i32, align 4
	%13 = alloca i64, align 8
	%14 = alloca %..string, align 8
	%15 = alloca %..any, align 8
	%16 = alloca i64, align 8
	%17 = alloca {%..any*, i64}, align 8
	%18 = alloca i64, align 8
	%19 = alloca i64, align 8
	%20 = alloca {i8*, i64, i64, %Allocator}, align 16
		store {i8*, i64, i64, %Allocator}* %b, {i8*, i64, i64, %Allocator}** %0
		store %..string %fmt, %..string* %1
	%21 = load {%..any*, i64}, {%..any*, i64}* %args, align 8
	; fi
	store %fmt-4.Fmt_Info zeroinitializer, %fmt-4.Fmt_Info* %2
		; arg_index
		store i64 0, i64* %3
	; end
		%22 = load %..string, %..string* %1, align 8
	%23 = extractvalue %..string %22, 1
	store i64 %23, i64* %4
	; was_prev_index
		store i1 false, i1* %5
	; ForStmt
	; i
		store i64 0, i64* %6
	br label %for.loop-1

for.loop-1:
	%24 = load i64, i64* %6, align 8
	%25 = load i64, i64* %4, align 8
	%26 = icmp slt i64 %24, %25
	br i1 %26, label %for.body-2, label %for.done-64

for.body-2:
	; AssignStmt
	; CompoundLit
	store %fmt-4.Fmt_Info zeroinitializer, %fmt-4.Fmt_Info* %7
	store %fmt-4.Fmt_Info {%..any zeroinitializer, i64 zeroinitializer, i64 zeroinitializer, i64 zeroinitializer, {i8*, i64, i64, %Allocator}* zeroinitializer, i1 zeroinitializer, i1 zeroinitializer, i1 zeroinitializer, i1 zeroinitializer, i1 zeroinitializer, i1 zeroinitializer, i1 zeroinitializer, i1 zeroinitializer, i1 true}, %fmt-4.Fmt_Info* %7
	%27 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	%28 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %7, i64 0, i32 4
	store {i8*, i64, i64, %Allocator}* %27, {i8*, i64, i64, %Allocator}** %28
	%29 = load %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %7, align 8
	store %fmt-4.Fmt_Info %29, %fmt-4.Fmt_Info* %2
	; prev_i
		%30 = load i64, i64* %6, align 8
	store i64 %30, i64* %8
	; ForStmt
	br label %for.loop-3

for.loop-3:
	%31 = load i64, i64* %6, align 8
	%32 = load i64, i64* %4, align 8
	%33 = icmp slt i64 %31, %32
	br i1 %33, label %cmp.and-4, label %for.done-6

cmp.and-4:
	; IndexExpr
	%34 = load %..string, %..string* %1, align 8
	%35 = extractvalue %..string %34, 0
	%36 = extractvalue %..string %34, 1
	%37 = load i64, i64* %6, align 8
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$e5, i64 0, i32 0), i64 28}, i64 1055, i64 22, i64 %37, i64 %36)
	%38 = getelementptr inbounds i8, i8* %35, i64 %37
	%39 = load i8, i8* %38, align 1
	%40 = icmp ne i8 %39, 37
	br i1 %40, label %for.body-5, label %for.done-6

for.body-5:
	; AssignStmt
	%41 = load i64, i64* %6, align 8
	%42 = add i64 %41, 1
	store i64 %42, i64* %6
	br label %for.loop-3

for.done-6:
	; IfStmt
	%43 = load i64, i64* %6, align 8
	%44 = load i64, i64* %8, align 8
	%45 = icmp sgt i64 %43, %44
	br i1 %45, label %if.then-7, label %if.done-8

if.then-7:
	%46 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	; SliceExpr
	%47 = load i64, i64* %8, align 8
	%48 = load i64, i64* %6, align 8
	%49 = load %..string, %..string* %1, align 8
	call void @__substring_expr_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$e6, i64 0, i32 0), i64 28}, i64 1059, i64 23, i64 %47, i64 %48)
	%50 = extractvalue %..string %49, 0
	%51 = getelementptr inbounds i8, i8* %50, i64 %47
	%52 = sub i64 %48, %47
	store %..string zeroinitializer, %..string* %9
	%53 = getelementptr inbounds %..string, %..string* %9, i64 0, i32 0
	store i8* %51, i8** %53
	%54 = getelementptr inbounds %..string, %..string* %9, i64 0, i32 1
	store i64 %52, i64* %54
	%55 = load %..string, %..string* %9, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %46, %..string %55, %Context* noalias nonnull %__.context_ptr)
	br label %if.done-8

if.done-8:
	; IfStmt
	%56 = load i64, i64* %6, align 8
	%57 = load i64, i64* %4, align 8
	%58 = icmp sge i64 %56, %57
	br i1 %58, label %if.then-9, label %if.done-10

if.then-9:
	; break
	br label %for.done-64

if.done-10:
	; AssignStmt
	%59 = load i64, i64* %6, align 8
	%60 = add i64 %59, 1
	store i64 %60, i64* %6
	; ForStmt
	br label %for.loop-11

for.loop-11:
	%61 = load i64, i64* %6, align 8
	%62 = load i64, i64* %4, align 8
	%63 = icmp slt i64 %61, %62
	br i1 %63, label %for.body-12, label %for.done-24

for.body-12:
	; SwitchStmt
	; IndexExpr
	%64 = load %..string, %..string* %1, align 8
	%65 = extractvalue %..string %64, 0
	%66 = extractvalue %..string %64, 1
	%67 = load i64, i64* %6, align 8
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$e7, i64 0, i32 0), i64 28}, i64 1069, i64 15, i64 %67, i64 %66)
	%68 = getelementptr inbounds i8, i8* %65, i64 %67
	%69 = load i8, i8* %68, align 1
	%70 = icmp eq i8 %69, 43
	br i1 %70, label %switch.case.body-14, label %switch.case.next-13

switch.case.next-13:
	%71 = icmp eq i8 %69, 45
	br i1 %71, label %switch.fall.body-16, label %switch.case.next-15

switch.case.body-14:
	; AssignStmt
	; SelectorExpr
	%72 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %2, i64 0, i32 6
	store i1 true, i1* %72
	br label %switch.done-23

switch.case.next-15:
	%73 = icmp eq i8 %69, 32
	br i1 %73, label %switch.fall.body-18, label %switch.case.next-17

switch.fall.body-16:
	; AssignStmt
	; SelectorExpr
	%74 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %2, i64 0, i32 5
	store i1 true, i1* %74
	; AssignStmt
	; SelectorExpr
	%75 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %2, i64 0, i32 8
	store i1 false, i1* %75
	br label %switch.done-23

switch.case.next-17:
	%76 = icmp eq i8 %69, 35
	br i1 %76, label %switch.fall.body-20, label %switch.case.next-19

switch.fall.body-18:
	; AssignStmt
	; SelectorExpr
	%77 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %2, i64 0, i32 7
	store i1 true, i1* %77
	br label %switch.done-23

switch.case.next-19:
	%78 = icmp eq i8 %69, 48
	br i1 %78, label %switch.fall.body-22, label %switch.case.next-21

switch.fall.body-20:
	; AssignStmt
	; SelectorExpr
	%79 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %2, i64 0, i32 9
	store i1 true, i1* %79
	br label %switch.done-23

switch.case.next-21:
	; break
	br label %for.done-24

switch.fall.body-22:
	; AssignStmt
	; SelectorExpr
	%80 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %2, i64 0, i32 8
	; SelectorExpr
	%81 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %2, i64 0, i32 5
	%82 = load i1, i1* %81, align 1
	%83 = xor i1 -1, %82
	store i1 %83, i1* %80
	br label %switch.done-23

switch.done-23:
	; AssignStmt
	%84 = load i64, i64* %6, align 8
	%85 = add i64 %84, 1
	store i64 %85, i64* %6
	br label %for.loop-11

for.done-24:
	; AssignStmt
	%86 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %2, i64 0
	%87 = load i64, i64* %3, align 8
	%88 = load %..string, %..string* %1, align 8
	%89 = load i64, i64* %6, align 8
	%90 = load {%..any*, i64}, {%..any*, i64}* %args, align 8
	%91 = extractvalue {%..any*, i64} %90, 1
	%92 = call {i64, i64, i1} @fmt-4._arg_number(%fmt-4.Fmt_Info* %86, i64 %87, %..string %88, i64 %89, i64 %91, %Context* noalias nonnull %__.context_ptr)
	%93 = extractvalue {i64, i64, i1} %92, 0
	%94 = extractvalue {i64, i64, i1} %92, 1
	%95 = extractvalue {i64, i64, i1} %92, 2
	store i64 %93, i64* %3
	store i64 %94, i64* %6
	store i1 %95, i1* %5
	; IfStmt
	%96 = load i64, i64* %6, align 8
	%97 = load i64, i64* %4, align 8
	%98 = icmp slt i64 %96, %97
	br i1 %98, label %cmp.and-25, label %if.else-31

cmp.and-25:
	; IndexExpr
	%99 = load %..string, %..string* %1, align 8
	%100 = extractvalue %..string %99, 0
	%101 = extractvalue %..string %99, 1
	%102 = load i64, i64* %6, align 8
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$e8, i64 0, i32 0), i64 28}, i64 1089, i64 21, i64 %102, i64 %101)
	%103 = getelementptr inbounds i8, i8* %100, i64 %102
	%104 = load i8, i8* %103, align 1
	%105 = icmp eq i8 %104, 42
	br i1 %105, label %if.then-26, label %if.else-31

if.then-26:
	; AssignStmt
	%106 = load i64, i64* %6, align 8
	%107 = add i64 %106, 1
	store i64 %107, i64* %6
	; AssignStmt
	; SelectorExpr
	%108 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %2, i64 0, i32 1
	; SelectorExpr
	%109 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %2, i64 0, i32 10
	%110 = load {%..any*, i64}, {%..any*, i64}* %args, align 8
	%111 = load i64, i64* %3, align 8
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %10
	store {%..any*, i64} %110, {%..any*, i64}* %10
	%112 = call {i64, i64, i1} @fmt-4.int_from_arg({%..any*, i64}* %10, i64 %111, %Context* noalias nonnull %__.context_ptr)
	%113 = extractvalue {i64, i64, i1} %112, 0
	%114 = extractvalue {i64, i64, i1} %112, 1
	%115 = extractvalue {i64, i64, i1} %112, 2
	store i64 %113, i64* %108
	store i64 %114, i64* %3
	store i1 %115, i1* %109
	; IfStmt
	; SelectorExpr
	%116 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %2, i64 0, i32 10
	%117 = load i1, i1* %116, align 1
	br i1 %117, label %if.done-28, label %if.then-27

if.then-27:
	%118 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %118, %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$e9, i64 0, i32 0), i64 13}, %Context* noalias nonnull %__.context_ptr)
	br label %if.done-28

if.done-28:
	; IfStmt
	; SelectorExpr
	%119 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %2, i64 0, i32 1
	%120 = load i64, i64* %119, align 8
	%121 = icmp slt i64 %120, 0
	br i1 %121, label %if.then-29, label %if.done-30

if.then-29:
	; AssignStmt
	; SelectorExpr
	%122 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %2, i64 0, i32 1
	; SelectorExpr
	%123 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %2, i64 0, i32 1
	%124 = load i64, i64* %123, align 8
	%125 = sub i64 0, %124
	store i64 %125, i64* %122
	; AssignStmt
	; SelectorExpr
	%126 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %2, i64 0, i32 5
	store i1 true, i1* %126
	; AssignStmt
	; SelectorExpr
	%127 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %2, i64 0, i32 8
	store i1 false, i1* %127
	br label %if.done-30

if.done-30:
	; AssignStmt
	store i1 false, i1* %5
	br label %if.done-35

if.else-31:
	; AssignStmt
	; SelectorExpr
	%128 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %2, i64 0, i32 1
	; SelectorExpr
	%129 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %2, i64 0, i32 10
	%130 = load %..string, %..string* %1, align 8
	%131 = load i64, i64* %6, align 8
	%132 = call {i64, i64, i1} @fmt-4._parse_int(%..string %130, i64 %131, %Context* noalias nonnull %__.context_ptr)
	%133 = extractvalue {i64, i64, i1} %132, 0
	%134 = extractvalue {i64, i64, i1} %132, 1
	%135 = extractvalue {i64, i64, i1} %132, 2
	store i64 %133, i64* %128
	store i64 %134, i64* %6
	store i1 %135, i1* %129
	; IfStmt
	%136 = load i1, i1* %5, align 1
	br i1 %136, label %cmp.and-32, label %if.done-34

cmp.and-32:
	; SelectorExpr
	%137 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %2, i64 0, i32 10
	%138 = load i1, i1* %137, align 1
	br i1 %138, label %if.then-33, label %if.done-34

if.then-33:
	; AssignStmt
	; SelectorExpr
	%139 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %2, i64 0, i32 13
	store i1 false, i1* %139
	br label %if.done-34

if.done-34:
	br label %if.done-35

if.done-35:
	; IfStmt
	%140 = load i64, i64* %6, align 8
	%141 = load i64, i64* %4, align 8
	%142 = icmp slt i64 %140, %141
	br i1 %142, label %cmp.and-36, label %if.done-50

cmp.and-36:
	; IndexExpr
	%143 = load %..string, %..string* %1, align 8
	%144 = extractvalue %..string %143, 0
	%145 = extractvalue %..string %143, 1
	%146 = load i64, i64* %6, align 8
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$ea, i64 0, i32 0), i64 28}, i64 1110, i64 21, i64 %146, i64 %145)
	%147 = getelementptr inbounds i8, i8* %144, i64 %146
	%148 = load i8, i8* %147, align 1
	%149 = icmp eq i8 %148, 46
	br i1 %149, label %if.then-37, label %if.done-50

if.then-37:
	; AssignStmt
	%150 = load i64, i64* %6, align 8
	%151 = add i64 %150, 1
	store i64 %151, i64* %6
	; IfStmt
	%152 = load i1, i1* %5, align 1
	br i1 %152, label %if.then-38, label %if.done-39

if.then-38:
	; AssignStmt
	; SelectorExpr
	%153 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %2, i64 0, i32 13
	store i1 false, i1* %153
	br label %if.done-39

if.done-39:
	; IfStmt
	%154 = load i64, i64* %6, align 8
	%155 = load i64, i64* %4, align 8
	%156 = icmp slt i64 %154, %155
	br i1 %156, label %cmp.and-40, label %if.else-46

cmp.and-40:
	; IndexExpr
	%157 = load %..string, %..string* %1, align 8
	%158 = extractvalue %..string %157, 0
	%159 = extractvalue %..string %157, 1
	%160 = load i64, i64* %6, align 8
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$eb, i64 0, i32 0), i64 28}, i64 1115, i64 22, i64 %160, i64 %159)
	%161 = getelementptr inbounds i8, i8* %158, i64 %160
	%162 = load i8, i8* %161, align 1
	%163 = icmp eq i8 %162, 42
	br i1 %163, label %if.then-41, label %if.else-46

if.then-41:
	; AssignStmt
	%164 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %2, i64 0
	%165 = load i64, i64* %3, align 8
	%166 = load %..string, %..string* %1, align 8
	%167 = load i64, i64* %6, align 8
	%168 = load {%..any*, i64}, {%..any*, i64}* %args, align 8
	%169 = extractvalue {%..any*, i64} %168, 1
	%170 = call {i64, i64, i1} @fmt-4._arg_number(%fmt-4.Fmt_Info* %164, i64 %165, %..string %166, i64 %167, i64 %169, %Context* noalias nonnull %__.context_ptr)
	%171 = extractvalue {i64, i64, i1} %170, 0
	%172 = extractvalue {i64, i64, i1} %170, 1
	%173 = extractvalue {i64, i64, i1} %170, 2
	store i64 %171, i64* %3
	store i64 %172, i64* %6
	store i1 %173, i1* %5
	; AssignStmt
	%174 = load i64, i64* %6, align 8
	%175 = add i64 %174, 1
	store i64 %175, i64* %6
	; AssignStmt
	; SelectorExpr
	%176 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %2, i64 0, i32 2
	; SelectorExpr
	%177 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %2, i64 0, i32 11
	%178 = load {%..any*, i64}, {%..any*, i64}* %args, align 8
	%179 = load i64, i64* %3, align 8
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %11
	store {%..any*, i64} %178, {%..any*, i64}* %11
	%180 = call {i64, i64, i1} @fmt-4.int_from_arg({%..any*, i64}* %11, i64 %179, %Context* noalias nonnull %__.context_ptr)
	%181 = extractvalue {i64, i64, i1} %180, 0
	%182 = extractvalue {i64, i64, i1} %180, 1
	%183 = extractvalue {i64, i64, i1} %180, 2
	store i64 %181, i64* %176
	store i64 %182, i64* %3
	store i1 %183, i1* %177
	; IfStmt
	; SelectorExpr
	%184 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %2, i64 0, i32 2
	%185 = load i64, i64* %184, align 8
	%186 = icmp slt i64 %185, 0
	br i1 %186, label %if.then-42, label %if.done-43

if.then-42:
	; AssignStmt
	; SelectorExpr
	%187 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %2, i64 0, i32 2
	store i64 0, i64* %187
	; AssignStmt
	; SelectorExpr
	%188 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %2, i64 0, i32 11
	store i1 false, i1* %188
	br label %if.done-43

if.done-43:
	; IfStmt
	; SelectorExpr
	%189 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %2, i64 0, i32 11
	%190 = load i1, i1* %189, align 1
	br i1 %190, label %if.done-45, label %if.then-44

if.then-44:
	; SelectorExpr
	%191 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %2, i64 0, i32 4
	%192 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %191, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %192, %..string {i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__str$ec, i64 0, i32 0), i64 17}, %Context* noalias nonnull %__.context_ptr)
	br label %if.done-45

if.done-45:
	; AssignStmt
	store i1 false, i1* %5
	br label %if.done-49

if.else-46:
	; AssignStmt
	; SelectorExpr
	%193 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %2, i64 0, i32 2
	; SelectorExpr
	%194 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %2, i64 0, i32 11
	%195 = load %..string, %..string* %1, align 8
	%196 = load i64, i64* %6, align 8
	%197 = call {i64, i64, i1} @fmt-4._parse_int(%..string %195, i64 %196, %Context* noalias nonnull %__.context_ptr)
	%198 = extractvalue {i64, i64, i1} %197, 0
	%199 = extractvalue {i64, i64, i1} %197, 1
	%200 = extractvalue {i64, i64, i1} %197, 2
	store i64 %198, i64* %193
	store i64 %199, i64* %6
	store i1 %200, i1* %194
	; IfStmt
	; SelectorExpr
	%201 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %2, i64 0, i32 11
	%202 = load i1, i1* %201, align 1
	br i1 %202, label %if.done-48, label %if.then-47

if.then-47:
	br label %if.done-48

if.done-48:
	br label %if.done-49

if.done-49:
	br label %if.done-50

if.done-50:
	; IfStmt
	%203 = load i1, i1* %5, align 1
	br i1 %203, label %if.done-52, label %if.then-51

if.then-51:
	; AssignStmt
	%204 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %2, i64 0
	%205 = load i64, i64* %3, align 8
	%206 = load %..string, %..string* %1, align 8
	%207 = load i64, i64* %6, align 8
	%208 = load {%..any*, i64}, {%..any*, i64}* %args, align 8
	%209 = extractvalue {%..any*, i64} %208, 1
	%210 = call {i64, i64, i1} @fmt-4._arg_number(%fmt-4.Fmt_Info* %204, i64 %205, %..string %206, i64 %207, i64 %209, %Context* noalias nonnull %__.context_ptr)
	%211 = extractvalue {i64, i64, i1} %210, 0
	%212 = extractvalue {i64, i64, i1} %210, 1
	%213 = extractvalue {i64, i64, i1} %210, 2
	store i64 %211, i64* %3
	store i64 %212, i64* %6
	store i1 %213, i1* %5
	br label %if.done-52

if.done-52:
	; IfStmt
	%214 = load i64, i64* %6, align 8
	%215 = load i64, i64* %4, align 8
	%216 = icmp sge i64 %214, %215
	br i1 %216, label %if.then-53, label %if.done-54

if.then-53:
	%217 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %217, %..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$ed, i64 0, i32 0), i64 11}, %Context* noalias nonnull %__.context_ptr)
	; break
	br label %for.done-64

if.done-54:
	; verb
		; w
		; SelectorExpr
	; SliceExpr
	%218 = load i64, i64* %6, align 8
	%219 = load %..string, %..string* %1, align 8
	%220 = extractvalue %..string %219, 1
	call void @__substring_expr_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$ee, i64 0, i32 0), i64 28}, i64 1145, i64 34, i64 %218, i64 %220)
	%221 = extractvalue %..string %219, 0
	%222 = getelementptr inbounds i8, i8* %221, i64 %218
	%223 = sub i64 %220, %218
	store %..string zeroinitializer, %..string* %14
	%224 = getelementptr inbounds %..string, %..string* %14, i64 0, i32 0
	store i8* %222, i8** %224
	%225 = getelementptr inbounds %..string, %..string* %14, i64 0, i32 1
	store i64 %223, i64* %225
	%226 = load %..string, %..string* %14, align 8
	%227 = call {i32, i64} @utf8-5.decode_rune-293(%..string %226, %Context* noalias nonnull %__.context_ptr)
	%228 = extractvalue {i32, i64} %227, 0
	%229 = extractvalue {i32, i64} %227, 1
	store i32 %228, i32* %12
	store i64 %229, i64* %13
	; AssignStmt
	%230 = load i64, i64* %13, align 8
	%231 = load i64, i64* %6, align 8
	%232 = add i64 %231, %230
	store i64 %232, i64* %6
	; IfStmt
	%233 = load i32, i32* %12, align 4
	%234 = icmp eq i32 %233, 37
	br i1 %234, label %if.then-55, label %if.else-56

if.then-55:
	%235 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	call void @fmt-4.write_byte({i8*, i64, i64, %Allocator}* %235, i8 37, %Context* noalias nonnull %__.context_ptr)
	br label %if.done-63

if.else-56:
	; IfStmt
	; SelectorExpr
	%236 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %2, i64 0, i32 13
	%237 = load i1, i1* %236, align 1
	br i1 %237, label %if.else-58, label %if.then-57

if.then-57:
	%238 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %238, %..string {i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__str$ef, i64 0, i32 0), i64 23}, %Context* noalias nonnull %__.context_ptr)
	br label %if.done-62

if.else-58:
	; IfStmt
	%239 = load i64, i64* %3, align 8
	%240 = load {%..any*, i64}, {%..any*, i64}* %args, align 8
	%241 = extractvalue {%..any*, i64} %240, 1
	%242 = icmp sge i64 %239, %241
	br i1 %242, label %if.then-59, label %if.else-60

if.then-59:
	%243 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %243, %..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$f0, i64 0, i32 0), i64 20}, %Context* noalias nonnull %__.context_ptr)
	br label %if.done-61

if.else-60:
	%244 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %2, i64 0
	; IndexExpr
	%245 = load {%..any*, i64}, {%..any*, i64}* %args, align 8
	%246 = extractvalue {%..any*, i64} %245, 0
	%247 = load i64, i64* %3, align 8
	%248 = extractvalue {%..any*, i64} %245, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$f1, i64 0, i32 0), i64 28}, i64 1155, i64 22, i64 %247, i64 %248)
	%249 = getelementptr inbounds %..any, %..any* %246, i64 %247
	%250 = load %..any, %..any* %249, align 8
	%251 = load i32, i32* %12, align 4
	call void @fmt-4.fmt_arg(%fmt-4.Fmt_Info* %244, %..any %250, i32 %251, %Context* noalias nonnull %__.context_ptr)
	; AssignStmt
	%252 = load i64, i64* %3, align 8
	%253 = add i64 %252, 1
	store i64 %253, i64* %3
	br label %if.done-61

if.done-61:
	br label %if.done-62

if.done-62:
	br label %if.done-63

if.done-63:
	br label %for.loop-1

for.done-64:
	; IfStmt
	; SelectorExpr
	%254 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %2, i64 0, i32 12
	%255 = load i1, i1* %254, align 1
	br i1 %255, label %if.done-75, label %cmp.and-65

cmp.and-65:
	%256 = load i64, i64* %3, align 8
	%257 = load {%..any*, i64}, {%..any*, i64}* %args, align 8
	%258 = extractvalue {%..any*, i64} %257, 1
	%259 = icmp slt i64 %256, %258
	br i1 %259, label %if.then-66, label %if.done-75

if.then-66:
	%260 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %260, %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$f2, i64 0, i32 0), i64 9}, %Context* noalias nonnull %__.context_ptr)
	; RangeStmt
	; arg
	store %..any zeroinitializer, %..any* %15
		; index
	store i64 zeroinitializer, i64* %16
		; SliceExpr
	%261 = load i64, i64* %3, align 8
	%262 = load {%..any*, i64}, {%..any*, i64}* %args, align 8
	%263 = extractvalue {%..any*, i64} %262, 1
	call void @__slice_expr_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$f3, i64 0, i32 0), i64 28}, i64 1162, i64 25, i64 %261, i64 %263)
	%264 = extractvalue {%..any*, i64} %262, 0
	%265 = getelementptr inbounds %..any, %..any* %264, i64 %261
	%266 = sub i64 %263, %261
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %17
	%267 = getelementptr inbounds {%..any*, i64}, {%..any*, i64}* %17, i64 0, i32 0
	store %..any* %265, %..any** %267
	%268 = getelementptr inbounds {%..any*, i64}, {%..any*, i64}* %17, i64 0, i32 1
	store i64 %266, i64* %268
	%269 = load {%..any*, i64}, {%..any*, i64}* %17, align 8
	store i64 zeroinitializer, i64* %18
	%270 = extractvalue {%..any*, i64} %269, 1
	store i64 %270, i64* %18
	store i64 zeroinitializer, i64* %19
	store i64 -1, i64* %19
	br label %for.index.loop-67

for.index.loop-67:
	%271 = load i64, i64* %19, align 8
	%272 = add i64 %271, 1
	store i64 %272, i64* %19
	%273 = load i64, i64* %18, align 8
	%274 = icmp slt i64 %272, %273
	br i1 %274, label %for.index.body-68, label %for.index.done-74

for.index.body-68:
	%275 = load i64, i64* %19, align 8
	%276 = extractvalue {%..any*, i64} %269, 0
	%277 = getelementptr inbounds %..any, %..any* %276, i64 %275
	%278 = load %..any, %..any* %277, align 8
	store %..any %278, %..any* %15
	store i64 %275, i64* %16
	; IfStmt
	%279 = load i64, i64* %16, align 8
	%280 = icmp sgt i64 %279, 0
	br i1 %280, label %if.then-69, label %if.done-70

if.then-69:
	%281 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %281, %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$f4, i64 0, i32 0), i64 2}, %Context* noalias nonnull %__.context_ptr)
	br label %if.done-70

if.done-70:
	; IfStmt
	%282 = load %..any, %..any* %15, align 8
	%283 = extractvalue %..any %282, 0
	%284 = extractvalue %..any %282, 1
	%285 = icmp eq %..rawptr %283, null
	%286 = bitcast %..rawptr null to %Type_Info*
	%287 = icmp eq %Type_Info* %284, %286
	%288 = or i1 %285, %287
	br i1 %288, label %if.then-71, label %if.else-72

if.then-71:
	%289 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %289, %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$f5, i64 0, i32 0), i64 5}, %Context* noalias nonnull %__.context_ptr)
	br label %if.done-73

if.else-72:
	%290 = getelementptr inbounds %fmt-4.Fmt_Info, %fmt-4.Fmt_Info* %2, i64 0
	; IndexExpr
	%291 = load {%..any*, i64}, {%..any*, i64}* %args, align 8
	%292 = extractvalue {%..any*, i64} %291, 0
	%293 = load i64, i64* %16, align 8
	%294 = extractvalue {%..any*, i64} %291, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$f6, i64 0, i32 0), i64 28}, i64 1166, i64 39, i64 %293, i64 %294)
	%295 = getelementptr inbounds %..any, %..any* %292, i64 %293
	%296 = load %..any, %..any* %295, align 8
	call void @fmt-4.fmt_arg(%fmt-4.Fmt_Info* %290, %..any %296, i32 118, %Context* noalias nonnull %__.context_ptr)
	br label %if.done-73

if.done-73:
	br label %for.index.loop-67

for.index.done-74:
	%297 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	call void @fmt-4.write_string({i8*, i64, i64, %Allocator}* %297, %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$f7, i64 0, i32 0), i64 1}, %Context* noalias nonnull %__.context_ptr)
	br label %if.done-75

if.done-75:
	; ReturnStmt
	%298 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	%299 = getelementptr inbounds {i8*, i64, i64, %Allocator}, {i8*, i64, i64, %Allocator}* %298, i64 0
	%300 = load {i8*, i64, i64, %Allocator}, {i8*, i64, i64, %Allocator}* %299, align 8
	store {i8*, i64, i64, %Allocator} zeroinitializer, {i8*, i64, i64, %Allocator}* %20
	store {i8*, i64, i64, %Allocator} %300, {i8*, i64, i64, %Allocator}* %20
	%301 = call %..string @fmt-4.to_string({i8*, i64, i64, %Allocator}* %20, %Context* noalias nonnull %__.context_ptr)
	ret %..string %301
}

define {[4 x i8], i64} @utf8-5.encode_rune(i32 %r, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca i32, align 4
	%1 = alloca [4 x i8], align 1
	%2 = alloca i32, align 4
	%3 = alloca {[4 x i8], i64}, align 8
	%4 = alloca {[4 x i8], i64}, align 8
	%5 = alloca {[4 x i8], i64}, align 8
	%6 = alloca {[4 x i8], i64}, align 8
		store i32 %r, i32* %0
	; buf
	store [4 x i8] zeroinitializer, [4 x i8]* %1
		; i
		%7 = load i32, i32* %0, align 4
	%8 = bitcast i32 %7 to i32
	store i32 %8, i32* %2
	; IfStmt
	%9 = load i32, i32* %2, align 4
	%10 = icmp ule i32 %9, 127
	br i1 %10, label %if.then-1, label %if.done-2

if.then-1:
	; AssignStmt
	; IndexExpr
	%11 = getelementptr inbounds [4 x i8], [4 x i8]* %1, i64 0, i32 0
	%12 = load i32, i32* %0, align 4
	%13 = trunc i32 %12 to i8
	store i8 %13, i8* %11
	; ReturnStmt
	%14 = load [4 x i8], [4 x i8]* %1, align 1
	store {[4 x i8], i64} zeroinitializer, {[4 x i8], i64}* %3
	%15 = getelementptr inbounds {[4 x i8], i64}, {[4 x i8], i64}* %3, i64 0, i32 0
	store [4 x i8] %14, [4 x i8]* %15
	%16 = getelementptr inbounds {[4 x i8], i64}, {[4 x i8], i64}* %3, i64 0, i32 1
	store i64 1, i64* %16
	%17 = load {[4 x i8], i64}, {[4 x i8], i64}* %3, align 8
	ret {[4 x i8], i64} %17

if.done-2:
	; IfStmt
	%18 = load i32, i32* %2, align 4
	%19 = icmp ule i32 %18, 2047
	br i1 %19, label %if.then-3, label %if.done-4

if.then-3:
	; AssignStmt
	; IndexExpr
	%20 = getelementptr inbounds [4 x i8], [4 x i8]* %1, i64 0, i32 0
	%21 = load i32, i32* %0, align 4
	%22 = lshr i32 %21, 6
	%23 = trunc i32 %22 to i8
	%24 = or i8 192, %23
	store i8 %24, i8* %20
	; AssignStmt
	; IndexExpr
	%25 = getelementptr inbounds [4 x i8], [4 x i8]* %1, i64 0, i32 1
	%26 = load i32, i32* %0, align 4
	%27 = trunc i32 %26 to i8
	%28 = and i8 %27, 63
	%29 = or i8 128, %28
	store i8 %29, i8* %25
	; ReturnStmt
	%30 = load [4 x i8], [4 x i8]* %1, align 1
	store {[4 x i8], i64} zeroinitializer, {[4 x i8], i64}* %4
	%31 = getelementptr inbounds {[4 x i8], i64}, {[4 x i8], i64}* %4, i64 0, i32 0
	store [4 x i8] %30, [4 x i8]* %31
	%32 = getelementptr inbounds {[4 x i8], i64}, {[4 x i8], i64}* %4, i64 0, i32 1
	store i64 2, i64* %32
	%33 = load {[4 x i8], i64}, {[4 x i8], i64}* %4, align 8
	ret {[4 x i8], i64} %33

if.done-4:
	; IfStmt
	%34 = load i32, i32* %2, align 4
	%35 = icmp ugt i32 %34, 1114111
	br i1 %35, label %if.then-7, label %cmp.or-5

cmp.or-5:
	%36 = load i32, i32* %2, align 4
	%37 = icmp ule i32 55296, %36
	br i1 %37, label %cmp.and-6, label %if.done-8

cmp.and-6:
	%38 = load i32, i32* %2, align 4
	%39 = icmp ule i32 %38, 57343
	br i1 %39, label %if.then-7, label %if.done-8

if.then-7:
	; AssignStmt
	store i32 65533, i32* %0
	br label %if.done-8

if.done-8:
	; IfStmt
	%40 = load i32, i32* %2, align 4
	%41 = icmp ule i32 %40, 65535
	br i1 %41, label %if.then-9, label %if.done-10

if.then-9:
	; AssignStmt
	; IndexExpr
	%42 = getelementptr inbounds [4 x i8], [4 x i8]* %1, i64 0, i32 0
	%43 = load i32, i32* %0, align 4
	%44 = lshr i32 %43, 12
	%45 = trunc i32 %44 to i8
	%46 = or i8 224, %45
	store i8 %46, i8* %42
	; AssignStmt
	; IndexExpr
	%47 = getelementptr inbounds [4 x i8], [4 x i8]* %1, i64 0, i32 1
	%48 = load i32, i32* %0, align 4
	%49 = lshr i32 %48, 6
	%50 = trunc i32 %49 to i8
	%51 = and i8 %50, 63
	%52 = or i8 128, %51
	store i8 %52, i8* %47
	; AssignStmt
	; IndexExpr
	%53 = getelementptr inbounds [4 x i8], [4 x i8]* %1, i64 0, i32 2
	%54 = load i32, i32* %0, align 4
	%55 = trunc i32 %54 to i8
	%56 = and i8 %55, 63
	%57 = or i8 128, %56
	store i8 %57, i8* %53
	; ReturnStmt
	%58 = load [4 x i8], [4 x i8]* %1, align 1
	store {[4 x i8], i64} zeroinitializer, {[4 x i8], i64}* %5
	%59 = getelementptr inbounds {[4 x i8], i64}, {[4 x i8], i64}* %5, i64 0, i32 0
	store [4 x i8] %58, [4 x i8]* %59
	%60 = getelementptr inbounds {[4 x i8], i64}, {[4 x i8], i64}* %5, i64 0, i32 1
	store i64 3, i64* %60
	%61 = load {[4 x i8], i64}, {[4 x i8], i64}* %5, align 8
	ret {[4 x i8], i64} %61

if.done-10:
	; AssignStmt
	; IndexExpr
	%62 = getelementptr inbounds [4 x i8], [4 x i8]* %1, i64 0, i32 0
	%63 = load i32, i32* %0, align 4
	%64 = lshr i32 %63, 18
	%65 = trunc i32 %64 to i8
	%66 = or i8 240, %65
	store i8 %66, i8* %62
	; AssignStmt
	; IndexExpr
	%67 = getelementptr inbounds [4 x i8], [4 x i8]* %1, i64 0, i32 1
	%68 = load i32, i32* %0, align 4
	%69 = lshr i32 %68, 12
	%70 = trunc i32 %69 to i8
	%71 = and i8 %70, 63
	%72 = or i8 128, %71
	store i8 %72, i8* %67
	; AssignStmt
	; IndexExpr
	%73 = getelementptr inbounds [4 x i8], [4 x i8]* %1, i64 0, i32 2
	%74 = load i32, i32* %0, align 4
	%75 = lshr i32 %74, 6
	%76 = trunc i32 %75 to i8
	%77 = and i8 %76, 63
	%78 = or i8 128, %77
	store i8 %78, i8* %73
	; AssignStmt
	; IndexExpr
	%79 = getelementptr inbounds [4 x i8], [4 x i8]* %1, i64 0, i32 3
	%80 = load i32, i32* %0, align 4
	%81 = trunc i32 %80 to i8
	%82 = and i8 %81, 63
	%83 = or i8 128, %82
	store i8 %83, i8* %79
	; ReturnStmt
	%84 = load [4 x i8], [4 x i8]* %1, align 1
	store {[4 x i8], i64} zeroinitializer, {[4 x i8], i64}* %6
	%85 = getelementptr inbounds {[4 x i8], i64}, {[4 x i8], i64}* %6, i64 0, i32 0
	store [4 x i8] %84, [4 x i8]* %85
	%86 = getelementptr inbounds {[4 x i8], i64}, {[4 x i8], i64}* %6, i64 0, i32 1
	store i64 4, i64* %86
	%87 = load {[4 x i8], i64}, {[4 x i8], i64}* %6, align 8
	ret {[4 x i8], i64} %87
}

define {i32, i64} @utf8-5.decode_rune-293(%..string %s, %Context* noalias nonnull %__.context_ptr) alwaysinline #1 {
decls-0:
	%0 = alloca %..string, align 8
	%1 = alloca i8*, align 8
	%2 = alloca {i8*, i64}, align 8
	%3 = alloca {i8*, i64}, align 16
	%4 = alloca {i32, i64}, align 8
		store %..string %s, %..string* %0
	; ReturnStmt
	%5 = load %..string, %..string* %0, align 8
	%6 = extractvalue %..string %5, 0
	store i8* zeroinitializer, i8** %1
	store i8* %6, i8** %1
	%7 = extractvalue %..string %5, 1
	%8 = sub i64 %7, 0
	%9 = load i8*, i8** %1, align 8
	%10 = getelementptr inbounds i8, i8* %9, i64 0
	store {i8*, i64} zeroinitializer, {i8*, i64}* %2
	%11 = getelementptr inbounds {i8*, i64}, {i8*, i64}* %2, i64 0, i32 0
	store i8* %10, i8** %11
	%12 = getelementptr inbounds {i8*, i64}, {i8*, i64}* %2, i64 0, i32 1
	store i64 %8, i64* %12
	%13 = load {i8*, i64}, {i8*, i64}* %2, align 8
	store {i8*, i64} zeroinitializer, {i8*, i64}* %3
	store {i8*, i64} %13, {i8*, i64}* %3
	%14 = call {i32, i64} @utf8-5.decode_rune-294({i8*, i64}* %3, %Context* noalias nonnull %__.context_ptr)
	%15 = extractvalue {i32, i64} %14, 0
	%16 = extractvalue {i32, i64} %14, 1
	store {i32, i64} zeroinitializer, {i32, i64}* %4
	%17 = getelementptr inbounds {i32, i64}, {i32, i64}* %4, i64 0, i32 0
	store i32 %15, i32* %17
	%18 = getelementptr inbounds {i32, i64}, {i32, i64}* %4, i64 0, i32 1
	store i64 %16, i64* %18
	%19 = load {i32, i64}, {i32, i64}* %4, align 8
	ret {i32, i64} %19
}

define {i32, i64} @utf8-5.decode_rune-294({i8*, i64}* %s, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca i64, align 8
	%1 = alloca {i32, i64}, align 8
	%2 = alloca i8, align 1
	%3 = alloca i8, align 1
	%4 = alloca i32, align 4
	%5 = alloca {i32, i64}, align 8
	%6 = alloca i8, align 1
	%7 = alloca %utf8-5.Accept_Range, align 1
	%8 = alloca {i32, i64}, align 8
	%9 = alloca i8, align 1
	%10 = alloca {i32, i64}, align 8
	%11 = alloca {i32, i64}, align 8
	%12 = alloca i8, align 1
	%13 = alloca {i32, i64}, align 8
	%14 = alloca {i32, i64}, align 8
	%15 = alloca i8, align 1
	%16 = alloca {i32, i64}, align 8
	%17 = alloca {i32, i64}, align 8
	%18 = load {i8*, i64}, {i8*, i64}* %s, align 8
	; n
		%19 = load {i8*, i64}, {i8*, i64}* %s, align 8
	%20 = extractvalue {i8*, i64} %19, 1
	store i64 %20, i64* %0
	; IfStmt
	%21 = load i64, i64* %0, align 8
	%22 = icmp slt i64 %21, 1
	br i1 %22, label %if.then-1, label %if.done-2

if.then-1:
	; ReturnStmt
	store {i32, i64} zeroinitializer, {i32, i64}* %1
	%23 = getelementptr inbounds {i32, i64}, {i32, i64}* %1, i64 0, i32 0
	store i32 65533, i32* %23
	%24 = getelementptr inbounds {i32, i64}, {i32, i64}* %1, i64 0, i32 1
	store i64 0, i64* %24
	%25 = load {i32, i64}, {i32, i64}* %1, align 8
	ret {i32, i64} %25

if.done-2:
	; s0
		; IndexExpr
	%26 = load {i8*, i64}, {i8*, i64}* %s, align 8
	%27 = extractvalue {i8*, i64} %26, 0
	%28 = extractvalue {i8*, i64} %26, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([30 x i8], [30 x i8]* @__str$f8, i64 0, i32 0), i64 29}, i64 101, i64 10, i64 0, i64 %28)
	%29 = getelementptr inbounds i8, i8* %27, i64 0
	%30 = load i8, i8* %29, align 1
	store i8 %30, i8* %2
	; x
		; IndexExpr
	%31 = load i8, i8* %2, align 1
	%32 = zext i8 %31 to i64
	%33 = trunc i64 %32 to i32
	%34 = getelementptr inbounds [256 x i8], [256 x i8]* @utf8-5.accept_sizes, i64 0, i32 %33
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([30 x i8], [30 x i8]* @__str$f9, i64 0, i32 0), i64 29}, i64 102, i64 20, i64 %32, i64 256)
	%35 = load i8, i8* %34, align 1
	store i8 %35, i8* %3
	; IfStmt
	%36 = load i8, i8* %3, align 1
	%37 = icmp uge i8 %36, 240
	br i1 %37, label %if.then-3, label %if.done-4

if.then-3:
	; mask
		%38 = load i8, i8* %3, align 1
	%39 = zext i8 %38 to i32
	%40 = shl i32 %39, 31
	%41 = lshr i32 %40, 31
	store i32 %41, i32* %4
	; ReturnStmt
	; IndexExpr
	%42 = load {i8*, i64}, {i8*, i64}* %s, align 8
	%43 = extractvalue {i8*, i64} %42, 0
	%44 = extractvalue {i8*, i64} %42, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([30 x i8], [30 x i8]* @__str$fa, i64 0, i32 0), i64 29}, i64 105, i64 17, i64 0, i64 %44)
	%45 = getelementptr inbounds i8, i8* %43, i64 0
	%46 = load i8, i8* %45, align 1
	%47 = zext i8 %46 to i32
	%48 = load i32, i32* %4, align 4
	%49 = xor i32 %48, -1
	%50 = and i32 %47, %49
	%51 = load i32, i32* %4, align 4
	%52 = and i32 65533, %51
	%53 = or i32 %50, %52
	store {i32, i64} zeroinitializer, {i32, i64}* %5
	%54 = getelementptr inbounds {i32, i64}, {i32, i64}* %5, i64 0, i32 0
	store i32 %53, i32* %54
	%55 = getelementptr inbounds {i32, i64}, {i32, i64}* %5, i64 0, i32 1
	store i64 1, i64* %55
	%56 = load {i32, i64}, {i32, i64}* %5, align 8
	ret {i32, i64} %56

if.done-4:
	; sz
		%57 = load i8, i8* %3, align 1
	%58 = and i8 %57, 7
	store i8 %58, i8* %6
	; accept
		; IndexExpr
	%59 = load i8, i8* %3, align 1
	%60 = lshr i8 %59, 4
	%61 = zext i8 %60 to i64
	%62 = trunc i64 %61 to i32
	%63 = getelementptr inbounds [5 x %utf8-5.Accept_Range], [5 x %utf8-5.Accept_Range]* @utf8-5.accept_ranges, i64 0, i32 %62
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([30 x i8], [30 x i8]* @__str$fb, i64 0, i32 0), i64 29}, i64 108, i64 26, i64 %61, i64 5)
	%64 = load %utf8-5.Accept_Range, %utf8-5.Accept_Range* %63, align 1
	store %utf8-5.Accept_Range %64, %utf8-5.Accept_Range* %7
	; IfStmt
	%65 = load i64, i64* %0, align 8
	%66 = load i8, i8* %6, align 1
	%67 = zext i8 %66 to i64
	%68 = icmp slt i64 %65, %67
	br i1 %68, label %if.then-5, label %if.done-6

if.then-5:
	; ReturnStmt
	store {i32, i64} zeroinitializer, {i32, i64}* %8
	%69 = getelementptr inbounds {i32, i64}, {i32, i64}* %8, i64 0, i32 0
	store i32 65533, i32* %69
	%70 = getelementptr inbounds {i32, i64}, {i32, i64}* %8, i64 0, i32 1
	store i64 1, i64* %70
	%71 = load {i32, i64}, {i32, i64}* %8, align 8
	ret {i32, i64} %71

if.done-6:
	; b1
		; IndexExpr
	%72 = load {i8*, i64}, {i8*, i64}* %s, align 8
	%73 = extractvalue {i8*, i64} %72, 0
	%74 = extractvalue {i8*, i64} %72, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([30 x i8], [30 x i8]* @__str$fc, i64 0, i32 0), i64 29}, i64 112, i64 10, i64 1, i64 %74)
	%75 = getelementptr inbounds i8, i8* %73, i64 1
	%76 = load i8, i8* %75, align 1
	store i8 %76, i8* %9
	; IfStmt
	%77 = load i8, i8* %9, align 1
	; SelectorExpr
	%78 = getelementptr inbounds %utf8-5.Accept_Range, %utf8-5.Accept_Range* %7, i64 0, i32 0
	%79 = load i8, i8* %78, align 1
	%80 = icmp ult i8 %77, %79
	br i1 %80, label %if.then-8, label %cmp.or-7

cmp.or-7:
	; SelectorExpr
	%81 = getelementptr inbounds %utf8-5.Accept_Range, %utf8-5.Accept_Range* %7, i64 0, i32 1
	%82 = load i8, i8* %81, align 1
	%83 = load i8, i8* %9, align 1
	%84 = icmp ult i8 %82, %83
	br i1 %84, label %if.then-8, label %if.done-9

if.then-8:
	; ReturnStmt
	store {i32, i64} zeroinitializer, {i32, i64}* %10
	%85 = getelementptr inbounds {i32, i64}, {i32, i64}* %10, i64 0, i32 0
	store i32 65533, i32* %85
	%86 = getelementptr inbounds {i32, i64}, {i32, i64}* %10, i64 0, i32 1
	store i64 1, i64* %86
	%87 = load {i32, i64}, {i32, i64}* %10, align 8
	ret {i32, i64} %87

if.done-9:
	; IfStmt
	%88 = load i8, i8* %6, align 1
	%89 = icmp eq i8 %88, 2
	br i1 %89, label %if.then-10, label %if.done-11

if.then-10:
	; ReturnStmt
	%90 = load i8, i8* %2, align 1
	%91 = and i8 %90, 31
	%92 = zext i8 %91 to i32
	%93 = shl i32 %92, 6
	%94 = load i8, i8* %9, align 1
	%95 = and i8 %94, 63
	%96 = zext i8 %95 to i32
	%97 = or i32 %93, %96
	store {i32, i64} zeroinitializer, {i32, i64}* %11
	%98 = getelementptr inbounds {i32, i64}, {i32, i64}* %11, i64 0, i32 0
	store i32 %97, i32* %98
	%99 = getelementptr inbounds {i32, i64}, {i32, i64}* %11, i64 0, i32 1
	store i64 2, i64* %99
	%100 = load {i32, i64}, {i32, i64}* %11, align 8
	ret {i32, i64} %100

if.done-11:
	; b2
		; IndexExpr
	%101 = load {i8*, i64}, {i8*, i64}* %s, align 8
	%102 = extractvalue {i8*, i64} %101, 0
	%103 = extractvalue {i8*, i64} %101, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([30 x i8], [30 x i8]* @__str$fd, i64 0, i32 0), i64 29}, i64 119, i64 10, i64 2, i64 %103)
	%104 = getelementptr inbounds i8, i8* %102, i64 2
	%105 = load i8, i8* %104, align 1
	store i8 %105, i8* %12
	; IfStmt
	%106 = load i8, i8* %12, align 1
	%107 = icmp ult i8 %106, 128
	br i1 %107, label %if.then-13, label %cmp.or-12

cmp.or-12:
	%108 = load i8, i8* %12, align 1
	%109 = icmp ult i8 191, %108
	br i1 %109, label %if.then-13, label %if.done-14

if.then-13:
	; ReturnStmt
	store {i32, i64} zeroinitializer, {i32, i64}* %13
	%110 = getelementptr inbounds {i32, i64}, {i32, i64}* %13, i64 0, i32 0
	store i32 65533, i32* %110
	%111 = getelementptr inbounds {i32, i64}, {i32, i64}* %13, i64 0, i32 1
	store i64 1, i64* %111
	%112 = load {i32, i64}, {i32, i64}* %13, align 8
	ret {i32, i64} %112

if.done-14:
	; IfStmt
	%113 = load i8, i8* %6, align 1
	%114 = icmp eq i8 %113, 3
	br i1 %114, label %if.then-15, label %if.done-16

if.then-15:
	; ReturnStmt
	%115 = load i8, i8* %2, align 1
	%116 = and i8 %115, 15
	%117 = zext i8 %116 to i32
	%118 = shl i32 %117, 12
	%119 = load i8, i8* %9, align 1
	%120 = and i8 %119, 63
	%121 = zext i8 %120 to i32
	%122 = shl i32 %121, 6
	%123 = or i32 %118, %122
	%124 = load i8, i8* %12, align 1
	%125 = and i8 %124, 63
	%126 = zext i8 %125 to i32
	%127 = or i32 %123, %126
	store {i32, i64} zeroinitializer, {i32, i64}* %14
	%128 = getelementptr inbounds {i32, i64}, {i32, i64}* %14, i64 0, i32 0
	store i32 %127, i32* %128
	%129 = getelementptr inbounds {i32, i64}, {i32, i64}* %14, i64 0, i32 1
	store i64 3, i64* %129
	%130 = load {i32, i64}, {i32, i64}* %14, align 8
	ret {i32, i64} %130

if.done-16:
	; b3
		; IndexExpr
	%131 = load {i8*, i64}, {i8*, i64}* %s, align 8
	%132 = extractvalue {i8*, i64} %131, 0
	%133 = extractvalue {i8*, i64} %131, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([30 x i8], [30 x i8]* @__str$fe, i64 0, i32 0), i64 29}, i64 126, i64 10, i64 3, i64 %133)
	%134 = getelementptr inbounds i8, i8* %132, i64 3
	%135 = load i8, i8* %134, align 1
	store i8 %135, i8* %15
	; IfStmt
	%136 = load i8, i8* %15, align 1
	%137 = icmp ult i8 %136, 128
	br i1 %137, label %if.then-18, label %cmp.or-17

cmp.or-17:
	%138 = load i8, i8* %15, align 1
	%139 = icmp ult i8 191, %138
	br i1 %139, label %if.then-18, label %if.done-19

if.then-18:
	; ReturnStmt
	store {i32, i64} zeroinitializer, {i32, i64}* %16
	%140 = getelementptr inbounds {i32, i64}, {i32, i64}* %16, i64 0, i32 0
	store i32 65533, i32* %140
	%141 = getelementptr inbounds {i32, i64}, {i32, i64}* %16, i64 0, i32 1
	store i64 1, i64* %141
	%142 = load {i32, i64}, {i32, i64}* %16, align 8
	ret {i32, i64} %142

if.done-19:
	; ReturnStmt
	%143 = load i8, i8* %2, align 1
	%144 = and i8 %143, 7
	%145 = zext i8 %144 to i32
	%146 = shl i32 %145, 18
	%147 = load i8, i8* %9, align 1
	%148 = and i8 %147, 63
	%149 = zext i8 %148 to i32
	%150 = shl i32 %149, 12
	%151 = or i32 %146, %150
	%152 = load i8, i8* %12, align 1
	%153 = and i8 %152, 63
	%154 = zext i8 %153 to i32
	%155 = shl i32 %154, 6
	%156 = or i32 %151, %155
	%157 = load i8, i8* %15, align 1
	%158 = and i8 %157, 63
	%159 = zext i8 %158 to i32
	%160 = or i32 %156, %159
	store {i32, i64} zeroinitializer, {i32, i64}* %17
	%161 = getelementptr inbounds {i32, i64}, {i32, i64}* %17, i64 0, i32 0
	store i32 %160, i32* %161
	%162 = getelementptr inbounds {i32, i64}, {i32, i64}* %17, i64 0, i32 1
	store i64 4, i64* %162
	%163 = load {i32, i64}, {i32, i64}* %17, align 8
	ret {i32, i64} %163
}

define i64 @utf8-5.rune_count-300(%..string %s, %Context* noalias nonnull %__.context_ptr) alwaysinline #1 {
decls-0:
	%0 = alloca %..string, align 8
	%1 = alloca i8*, align 8
	%2 = alloca {i8*, i64}, align 8
	%3 = alloca {i8*, i64}, align 16
		store %..string %s, %..string* %0
	; ReturnStmt
	%4 = load %..string, %..string* %0, align 8
	%5 = extractvalue %..string %4, 0
	store i8* zeroinitializer, i8** %1
	store i8* %5, i8** %1
	%6 = extractvalue %..string %4, 1
	%7 = sub i64 %6, 0
	%8 = load i8*, i8** %1, align 8
	%9 = getelementptr inbounds i8, i8* %8, i64 0
	store {i8*, i64} zeroinitializer, {i8*, i64}* %2
	%10 = getelementptr inbounds {i8*, i64}, {i8*, i64}* %2, i64 0, i32 0
	store i8* %9, i8** %10
	%11 = getelementptr inbounds {i8*, i64}, {i8*, i64}* %2, i64 0, i32 1
	store i64 %7, i64* %11
	%12 = load {i8*, i64}, {i8*, i64}* %2, align 8
	store {i8*, i64} zeroinitializer, {i8*, i64}* %3
	store {i8*, i64} %12, {i8*, i64}* %3
	%13 = call i64 @utf8-5.rune_count-301({i8*, i64}* %3, %Context* noalias nonnull %__.context_ptr)
	ret i64 %13
}

define i64 @utf8-5.rune_count-301({i8*, i64}* %s, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca i64, align 8
	%1 = alloca i64, align 8
	%2 = alloca i64, align 8
	%3 = alloca i8, align 1
	%4 = alloca i8, align 1
	%5 = alloca i64, align 8
	%6 = alloca %utf8-5.Accept_Range, align 1
	%7 = alloca i8, align 1
	%8 = alloca i8, align 1
	%9 = alloca i8, align 1
	%10 = load {i8*, i64}, {i8*, i64}* %s, align 8
	; count
		store i64 0, i64* %0
	; n
		%11 = load {i8*, i64}, {i8*, i64}* %s, align 8
	%12 = extractvalue {i8*, i64} %11, 1
	store i64 %12, i64* %1
	; ForStmt
	; i
		store i64 0, i64* %2
	br label %for.loop-1

for.loop-1:
	%13 = load i64, i64* %2, align 8
	%14 = load i64, i64* %1, align 8
	%15 = icmp slt i64 %13, %14
	br i1 %15, label %for.body-2, label %for.done-26

for.body-2:
	; DeferStmt
	; si
		; IndexExpr
	%16 = load {i8*, i64}, {i8*, i64}* %s, align 8
	%17 = extractvalue {i8*, i64} %16, 0
	%18 = load i64, i64* %2, align 8
	%19 = extractvalue {i8*, i64} %16, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([30 x i8], [30 x i8]* @__str$ff, i64 0, i32 0), i64 29}, i64 223, i64 11, i64 %18, i64 %19)
	%20 = getelementptr inbounds i8, i8* %17, i64 %18
	%21 = load i8, i8* %20, align 1
	store i8 %21, i8* %3
	; IfStmt
	%22 = load i8, i8* %3, align 1
	%23 = icmp ult i8 %22, 128
	br i1 %23, label %if.then-3, label %if.done-4

if.then-3:
	; AssignStmt
	%24 = load i64, i64* %2, align 8
	%25 = add i64 %24, 1
	store i64 %25, i64* %2
	; defer
	; AssignStmt
	%26 = load i64, i64* %0, align 8
	%27 = add i64 %26, 1
	store i64 %27, i64* %0
	; continue
	br label %for.loop-1

if.done-4:
	; x
		; IndexExpr
	%28 = load i8, i8* %3, align 1
	%29 = zext i8 %28 to i64
	%30 = trunc i64 %29 to i32
	%31 = getelementptr inbounds [256 x i8], [256 x i8]* @utf8-5.accept_sizes, i64 0, i32 %30
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([30 x i8], [30 x i8]* @__str$100, i64 0, i32 0), i64 29}, i64 228, i64 21, i64 %29, i64 256)
	%32 = load i8, i8* %31, align 1
	store i8 %32, i8* %4
	; IfStmt
	%33 = load i8, i8* %4, align 1
	%34 = icmp eq i8 %33, 241
	br i1 %34, label %if.then-5, label %if.done-6

if.then-5:
	; AssignStmt
	%35 = load i64, i64* %2, align 8
	%36 = add i64 %35, 1
	store i64 %36, i64* %2
	; defer
	; AssignStmt
	%37 = load i64, i64* %0, align 8
	%38 = add i64 %37, 1
	store i64 %38, i64* %0
	; continue
	br label %for.loop-1

if.done-6:
	; size
		%39 = load i8, i8* %4, align 1
	%40 = and i8 %39, 7
	%41 = zext i8 %40 to i64
	store i64 %41, i64* %5
	; IfStmt
	%42 = load i64, i64* %2, align 8
	%43 = load i64, i64* %5, align 8
	%44 = add i64 %42, %43
	%45 = load i64, i64* %1, align 8
	%46 = icmp sgt i64 %44, %45
	br i1 %46, label %if.then-7, label %if.done-8

if.then-7:
	; AssignStmt
	%47 = load i64, i64* %2, align 8
	%48 = add i64 %47, 1
	store i64 %48, i64* %2
	; defer
	; AssignStmt
	%49 = load i64, i64* %0, align 8
	%50 = add i64 %49, 1
	store i64 %50, i64* %0
	; continue
	br label %for.loop-1

if.done-8:
	; ar
		; IndexExpr
	%51 = load i8, i8* %4, align 1
	%52 = lshr i8 %51, 4
	%53 = zext i8 %52 to i64
	%54 = trunc i64 %53 to i32
	%55 = getelementptr inbounds [5 x %utf8-5.Accept_Range], [5 x %utf8-5.Accept_Range]* @utf8-5.accept_ranges, i64 0, i32 %54
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([30 x i8], [30 x i8]* @__str$101, i64 0, i32 0), i64 29}, i64 238, i64 23, i64 %53, i64 5)
	%56 = load %utf8-5.Accept_Range, %utf8-5.Accept_Range* %55, align 1
	store %utf8-5.Accept_Range %56, %utf8-5.Accept_Range* %6
	; IfStmt
	; b
		; IndexExpr
	%57 = load {i8*, i64}, {i8*, i64}* %s, align 8
	%58 = extractvalue {i8*, i64} %57, 0
	%59 = load i64, i64* %2, align 8
	%60 = add i64 %59, 1
	%61 = extractvalue {i8*, i64} %57, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([30 x i8], [30 x i8]* @__str$102, i64 0, i32 0), i64 29}, i64 239, i64 13, i64 %60, i64 %61)
	%62 = getelementptr inbounds i8, i8* %58, i64 %60
	%63 = load i8, i8* %62, align 1
	store i8 %63, i8* %7
	%64 = load i8, i8* %7, align 1
	; SelectorExpr
	%65 = getelementptr inbounds %utf8-5.Accept_Range, %utf8-5.Accept_Range* %6, i64 0, i32 0
	%66 = load i8, i8* %65, align 1
	%67 = icmp ult i8 %64, %66
	br i1 %67, label %if.then-10, label %cmp.or-9

cmp.or-9:
	; SelectorExpr
	%68 = getelementptr inbounds %utf8-5.Accept_Range, %utf8-5.Accept_Range* %6, i64 0, i32 1
	%69 = load i8, i8* %68, align 1
	%70 = load i8, i8* %7, align 1
	%71 = icmp ult i8 %69, %70
	br i1 %71, label %if.then-10, label %if.else-11

if.then-10:
	; AssignStmt
	store i64 1, i64* %5
	br label %if.done-25

if.else-11:
	; IfStmt
	%72 = load i64, i64* %5, align 8
	%73 = icmp eq i64 %72, 2
	br i1 %73, label %if.then-12, label %if.else-13

if.then-12:
	br label %if.done-24

if.else-13:
	; IfStmt
	; b
		; IndexExpr
	%74 = load {i8*, i64}, {i8*, i64}* %s, align 8
	%75 = extractvalue {i8*, i64} %74, 0
	%76 = load i64, i64* %2, align 8
	%77 = add i64 %76, 2
	%78 = extractvalue {i8*, i64} %74, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([30 x i8], [30 x i8]* @__str$103, i64 0, i32 0), i64 29}, i64 243, i64 20, i64 %77, i64 %78)
	%79 = getelementptr inbounds i8, i8* %75, i64 %77
	%80 = load i8, i8* %79, align 1
	store i8 %80, i8* %8
	%81 = load i8, i8* %8, align 1
	%82 = icmp ult i8 %81, 128
	br i1 %82, label %if.then-15, label %cmp.or-14

cmp.or-14:
	%83 = load i8, i8* %8, align 1
	%84 = icmp ult i8 191, %83
	br i1 %84, label %if.then-15, label %if.else-16

if.then-15:
	; AssignStmt
	store i64 1, i64* %5
	br label %if.done-23

if.else-16:
	; IfStmt
	%85 = load i64, i64* %5, align 8
	%86 = icmp eq i64 %85, 3
	br i1 %86, label %if.then-17, label %if.else-18

if.then-17:
	br label %if.done-22

if.else-18:
	; IfStmt
	; b
		; IndexExpr
	%87 = load {i8*, i64}, {i8*, i64}* %s, align 8
	%88 = extractvalue {i8*, i64} %87, 0
	%89 = load i64, i64* %2, align 8
	%90 = add i64 %89, 3
	%91 = extractvalue {i8*, i64} %87, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([30 x i8], [30 x i8]* @__str$104, i64 0, i32 0), i64 29}, i64 247, i64 20, i64 %90, i64 %91)
	%92 = getelementptr inbounds i8, i8* %88, i64 %90
	%93 = load i8, i8* %92, align 1
	store i8 %93, i8* %9
	%94 = load i8, i8* %9, align 1
	%95 = icmp ult i8 %94, 128
	br i1 %95, label %if.then-20, label %cmp.or-19

cmp.or-19:
	%96 = load i8, i8* %9, align 1
	%97 = icmp ult i8 191, %96
	br i1 %97, label %if.then-20, label %if.done-21

if.then-20:
	; AssignStmt
	store i64 1, i64* %5
	br label %if.done-21

if.done-21:
	br label %if.done-22

if.done-22:
	br label %if.done-23

if.done-23:
	br label %if.done-24

if.done-24:
	br label %if.done-25

if.done-25:
	; AssignStmt
	%98 = load i64, i64* %5, align 8
	%99 = load i64, i64* %2, align 8
	%100 = add i64 %99, %98
	store i64 %100, i64* %2
	; defer
	; AssignStmt
	%101 = load i64, i64* %0, align 8
	%102 = add i64 %101, 1
	store i64 %102, i64* %0
	br label %for.loop-1

for.done-26:
	; ReturnStmt
	%103 = load i64, i64* %0, align 8
	ret i64 %103
}

define %..rawptr @glfw-9.CreateWindow-435(i32 %width, i32 %height, %..string %title, %..rawptr %monitor, %..rawptr %share, %Context* noalias nonnull %__.context_ptr) alwaysinline #1 {
decls-0:
	%0 = alloca i32, align 4
	%1 = alloca i32, align 4
	%2 = alloca %..string, align 8
	%3 = alloca %..rawptr, align 8
	%4 = alloca %..rawptr, align 8
		store i32 %width, i32* %0
		store i32 %height, i32* %1
		store %..string %title, %..string* %2
		store %..rawptr %monitor, %..rawptr* %3
		store %..rawptr %share, %..rawptr* %4
	; ReturnStmt
	%5 = load i32, i32* %0, align 4
	%6 = load i32, i32* %1, align 4
	; IndexExpr
	%7 = load %..string, %..string* %2, align 8
	%8 = extractvalue %..string %7, 0
	%9 = extractvalue %..string %7, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([42 x i8], [42 x i8]* @__str$105, i64 0, i32 0), i64 41}, i64 204, i64 47, i64 0, i64 %9)
	%10 = getelementptr inbounds i8, i8* %8, i64 0
	%11 = getelementptr inbounds i8, i8* %10, i64 0
	%12 = load %..rawptr, %..rawptr* %3, align 8
	%13 = load %..rawptr, %..rawptr* %4, align 8
	%14 = call ccc %..rawptr @glfwCreateWindow(i32 %5, i32 %6, i8* %11, %..rawptr %12, %..rawptr %13)
	ret %..rawptr %14
}

define i1 @glfw-9.GetKey(%..rawptr %window, i32 %key, %Context* noalias nonnull %__.context_ptr) alwaysinline #1 {
decls-0:
	%0 = alloca %..rawptr, align 8
	%1 = alloca i32, align 4
		store %..rawptr %window, %..rawptr* %0
		store i32 %key, i32* %1
	; ReturnStmt
	%2 = load %..rawptr, %..rawptr* %0, align 8
	%3 = load i32, i32* %1, align 4
	%4 = call ccc i32 @glfwGetKey(%..rawptr %2, i32 %3)
	%5 = icmp ne i32 %4, 0
	ret i1 %5
}

define void @glfw-9.SetWindowShouldClose(%..rawptr %window, i1 %set, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca %..rawptr, align 8
	%1 = alloca i1, align 1
		store %..rawptr %window, %..rawptr* %0
		store i1 %set, i1* %1
	%2 = load %..rawptr, %..rawptr* %0, align 8
	; TernaryExpr
	%3 = load i1, i1* %1, align 1
	br i1 %3, label %if.then-1, label %if.else-2

if.then-1:
	br label %if.done-3

if.else-2:
	br label %if.done-3

if.done-3:
	%4 = phi i32 [ 1, %if.then-1 ], [ 0, %if.else-2 ]
	call ccc void @glfwSetWindowShouldClose(%..rawptr %2, i32 %4)
	ret void
}

define void @glfw-9.SetWindowTitle-442(%..rawptr %window, %..string %fmt_string, {%..any*, i64}* %args, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca %..rawptr, align 8
	%1 = alloca %..string, align 8
	%2 = alloca {%..any*, i64}, align 8
	%3 = alloca {%..any*, i64}, align 16
	%4 = alloca [1024 x i8], align 1
	%5 = alloca %..string, align 8
	%6 = alloca {i8*, i64}, align 8
	%7 = alloca {i8*, i64}, align 16
	%8 = alloca {%..any*, i64}, align 16
		store %..rawptr %window, %..rawptr* %0
		store %..string %fmt_string, %..string* %1
	%9 = load {%..any*, i64}, {%..any*, i64}* %args, align 8
	; IfStmt
	%10 = load %..string, %..string* %1, align 8
	%11 = extractvalue %..string %10, 1
	%12 = icmp sge i64 %11, 256
	br i1 %12, label %if.then-1, label %if.done-2

if.then-1:
	%13 = load %..rawptr, %..rawptr* %0, align 8
	; variadic call argument generation
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %2
	%14 = load {%..any*, i64}, {%..any*, i64}* %2, align 8
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %3
	store {%..any*, i64} %14, {%..any*, i64}* %3
	call void @glfw-9.SetWindowTitle-442(%..rawptr %13, %..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$106, i64 0, i32 0), i64 28}, {%..any*, i64}* %3, %Context* noalias nonnull %__.context_ptr)
	; ReturnStmt
	ret void

if.done-2:
	; buf
	store [1024 x i8] zeroinitializer, [1024 x i8]* %4
		; title
		; SelectorExpr
	; SliceExpr
	%15 = load [1024 x i8], [1024 x i8]* %4, align 1
	call void @__slice_expr_error(%..string {i8* getelementptr inbounds ([42 x i8], [42 x i8]* @__str$107, i64 0, i32 0), i64 41}, i64 259, i64 29, i64 0, i64 1024)
	%16 = getelementptr inbounds [1024 x i8], [1024 x i8]* %4, i64 0, i32 0
	%17 = getelementptr inbounds i8, i8* %16, i64 0
	%18 = sub i64 1024, 0
	store {i8*, i64} zeroinitializer, {i8*, i64}* %6
	%19 = getelementptr inbounds {i8*, i64}, {i8*, i64}* %6, i64 0, i32 0
	store i8* %17, i8** %19
	%20 = getelementptr inbounds {i8*, i64}, {i8*, i64}* %6, i64 0, i32 1
	store i64 %18, i64* %20
	%21 = load {i8*, i64}, {i8*, i64}* %6, align 8
	%22 = load %..string, %..string* %1, align 8
	%23 = load {%..any*, i64}, {%..any*, i64}* %args, align 8
	store {i8*, i64} zeroinitializer, {i8*, i64}* %7
	store {i8*, i64} %21, {i8*, i64}* %7
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %8
	store {%..any*, i64} %23, {%..any*, i64}* %8
	%24 = call %..string @fmt-4.bprintf({i8*, i64}* %7, %..string %22, {%..any*, i64}* %8, %Context* noalias nonnull %__.context_ptr)
	store %..string %24, %..string* %5
	%25 = load %..rawptr, %..rawptr* %0, align 8
	; IndexExpr
	%26 = load %..string, %..string* %5, align 8
	%27 = extractvalue %..string %26, 0
	%28 = extractvalue %..string %26, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([42 x i8], [42 x i8]* @__str$108, i64 0, i32 0), i64 41}, i64 260, i64 35, i64 0, i64 %28)
	%29 = getelementptr inbounds i8, i8* %27, i64 0
	%30 = getelementptr inbounds i8, i8* %29, i64 0
	call ccc void @glfwSetWindowTitle(%..rawptr %25, i8* %30)
	ret void
}

define void @glfw-9.calculate_frame_timings(%..rawptr %window, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca %..rawptr, align 8
	%1 = alloca double, align 8
	%2 = alloca double, align 8
	%3 = alloca double, align 8
	%4 = alloca double, align 8
	%5 = alloca %..any, align 8
	%6 = alloca double, align 8
	%7 = alloca %..any, align 8
	%8 = alloca double, align 8
	%9 = alloca %..any, align 8
	%10 = alloca double, align 8
	%11 = alloca %..any, align 8
	%12 = alloca double, align 8
	%13 = alloca {%..any*, i64}, align 8
	%14 = alloca [4 x %..any], align 8
	%15 = alloca {%..any*, i64}, align 16
		store %..rawptr %window, %..rawptr* %0
	; t2
		%16 = call ccc double @glfwGetTime()
	store double %16, double* %1
	; dt
		%17 = load double, double* %1, align 8
	%18 = getelementptr inbounds %glfw-9._TimingStruct, %glfw-9._TimingStruct* @glfw-9.persistent_timing_data, i64 0, i32 0
	%19 = load double, double* %18, align 8
	%20 = fsub double %17, %19
	store double %20, double* %2
	; AssignStmt
	%21 = getelementptr inbounds %glfw-9._TimingStruct, %glfw-9._TimingStruct* @glfw-9.persistent_timing_data, i64 0, i32 0
	%22 = load double, double* %1, align 8
	store double %22, double* %21
	; AssignStmt
	%23 = getelementptr inbounds %glfw-9._TimingStruct, %glfw-9._TimingStruct* @glfw-9.persistent_timing_data, i64 0, i32 1
	%24 = load double, double* %2, align 8
	%25 = load double, double* %23, align 8
	%26 = fadd double %25, %24
	store double %26, double* %23
	; AssignStmt
	%27 = getelementptr inbounds %glfw-9._TimingStruct, %glfw-9._TimingStruct* @glfw-9.persistent_timing_data, i64 0, i32 2
	%28 = load double, double* %2, align 8
	%29 = load double, double* %2, align 8
	%30 = fmul double %28, %29
	%31 = load double, double* %27, align 8
	%32 = fadd double %31, %30
	store double %32, double* %27
	; AssignStmt
	%33 = getelementptr inbounds %glfw-9._TimingStruct, %glfw-9._TimingStruct* @glfw-9.persistent_timing_data, i64 0, i32 5
	%34 = load i64, i64* %33, align 8
	%35 = add i64 %34, 1
	store i64 %35, i64* %33
	; AssignStmt
	%36 = getelementptr inbounds %glfw-9._TimingStruct, %glfw-9._TimingStruct* @glfw-9.persistent_timing_data, i64 0, i32 3
	%37 = load double, double* %2, align 8
	store double %37, double* %36
	; IfStmt
	%38 = getelementptr inbounds %glfw-9._TimingStruct, %glfw-9._TimingStruct* @glfw-9.persistent_timing_data, i64 0, i32 5
	%39 = load i64, i64* %38, align 8
	%40 = getelementptr inbounds %glfw-9._TimingStruct, %glfw-9._TimingStruct* @glfw-9.persistent_timing_data, i64 0, i32 4
	%41 = load i64, i64* %40, align 8
	%42 = icmp eq i64 %39, %41
	br i1 %42, label %if.then-1, label %if.done-2

if.then-1:
	; AssignStmt
	%43 = getelementptr inbounds %glfw-9._TimingStruct, %glfw-9._TimingStruct* @glfw-9.persistent_timing_data, i64 0, i32 1
	%44 = getelementptr inbounds %glfw-9._TimingStruct, %glfw-9._TimingStruct* @glfw-9.persistent_timing_data, i64 0, i32 4
	%45 = load i64, i64* %44, align 8
	%46 = sitofp i64 %45 to double
	%47 = load double, double* %43, align 8
	%48 = fdiv double %47, %46
	store double %48, double* %43
	; AssignStmt
	%49 = getelementptr inbounds %glfw-9._TimingStruct, %glfw-9._TimingStruct* @glfw-9.persistent_timing_data, i64 0, i32 2
	%50 = getelementptr inbounds %glfw-9._TimingStruct, %glfw-9._TimingStruct* @glfw-9.persistent_timing_data, i64 0, i32 4
	%51 = load i64, i64* %50, align 8
	%52 = sitofp i64 %51 to double
	%53 = load double, double* %49, align 8
	%54 = fdiv double %53, %52
	store double %54, double* %49
	; std_dt
		; SelectorExpr
	%55 = getelementptr inbounds %glfw-9._TimingStruct, %glfw-9._TimingStruct* @glfw-9.persistent_timing_data, i64 0, i32 2
	%56 = load double, double* %55, align 8
	%57 = getelementptr inbounds %glfw-9._TimingStruct, %glfw-9._TimingStruct* @glfw-9.persistent_timing_data, i64 0, i32 1
	%58 = load double, double* %57, align 8
	%59 = getelementptr inbounds %glfw-9._TimingStruct, %glfw-9._TimingStruct* @glfw-9.persistent_timing_data, i64 0, i32 1
	%60 = load double, double* %59, align 8
	%61 = fmul double %58, %60
	%62 = fsub double %56, %61
	%63 = call ccc double @llvm.sqrt.f64(double %62)
	store double %63, double* %3
	; ste_dt
		%64 = load double, double* %3, align 8
	; SelectorExpr
	%65 = getelementptr inbounds %glfw-9._TimingStruct, %glfw-9._TimingStruct* @glfw-9.persistent_timing_data, i64 0, i32 4
	%66 = load i64, i64* %65, align 8
	%67 = sitofp i64 %66 to double
	%68 = call ccc double @llvm.sqrt.f64(double %67)
	%69 = fdiv double %64, %68
	store double %69, double* %4
	%70 = load %..rawptr, %..rawptr* %0, align 8
	%71 = getelementptr inbounds %glfw-9._TimingStruct, %glfw-9._TimingStruct* @glfw-9.persistent_timing_data, i64 0, i32 1
	%72 = load double, double* %71, align 8
	%73 = fmul double 0x408f400000000000, %72
	%74 = load double, double* %3, align 8
	%75 = fmul double 0x408f400000000000, %74
	%76 = load double, double* %4, align 8
	%77 = fmul double 0x408f400000000000, %76
	%78 = getelementptr inbounds %glfw-9._TimingStruct, %glfw-9._TimingStruct* @glfw-9.persistent_timing_data, i64 0, i32 1
	%79 = load double, double* %78, align 8
	%80 = fdiv double 0x3ff0000000000000, %79
	store %..any zeroinitializer, %..any* %5
	store double zeroinitializer, double* %6
	store double %73, double* %6
	%81 = bitcast double* %6 to %..rawptr
	%82 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 65
	%83 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 0
	store %..rawptr %81, %..rawptr* %83
	%84 = getelementptr inbounds %..any, %..any* %5, i64 0, i32 1
	store %Type_Info* %82, %Type_Info** %84
	%85 = load %..any, %..any* %5, align 8
	store %..any zeroinitializer, %..any* %7
	store double zeroinitializer, double* %8
	store double %75, double* %8
	%86 = bitcast double* %8 to %..rawptr
	%87 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 65
	%88 = getelementptr inbounds %..any, %..any* %7, i64 0, i32 0
	store %..rawptr %86, %..rawptr* %88
	%89 = getelementptr inbounds %..any, %..any* %7, i64 0, i32 1
	store %Type_Info* %87, %Type_Info** %89
	%90 = load %..any, %..any* %7, align 8
	store %..any zeroinitializer, %..any* %9
	store double zeroinitializer, double* %10
	store double %77, double* %10
	%91 = bitcast double* %10 to %..rawptr
	%92 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 65
	%93 = getelementptr inbounds %..any, %..any* %9, i64 0, i32 0
	store %..rawptr %91, %..rawptr* %93
	%94 = getelementptr inbounds %..any, %..any* %9, i64 0, i32 1
	store %Type_Info* %92, %Type_Info** %94
	%95 = load %..any, %..any* %9, align 8
	store %..any zeroinitializer, %..any* %11
	store double zeroinitializer, double* %12
	store double %80, double* %12
	%96 = bitcast double* %12 to %..rawptr
	%97 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 65
	%98 = getelementptr inbounds %..any, %..any* %11, i64 0, i32 0
	store %..rawptr %96, %..rawptr* %98
	%99 = getelementptr inbounds %..any, %..any* %11, i64 0, i32 1
	store %Type_Info* %97, %Type_Info** %99
	%100 = load %..any, %..any* %11, align 8
	; variadic call argument generation
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %13
	store [4 x %..any] zeroinitializer, [4 x %..any]* %14
	%101 = getelementptr inbounds [4 x %..any], [4 x %..any]* %14, i64 0, i32 0
	store %..any %85, %..any* %101
	%102 = getelementptr inbounds [4 x %..any], [4 x %..any]* %14, i64 0, i32 1
	store %..any %90, %..any* %102
	%103 = getelementptr inbounds [4 x %..any], [4 x %..any]* %14, i64 0, i32 2
	store %..any %95, %..any* %103
	%104 = getelementptr inbounds [4 x %..any], [4 x %..any]* %14, i64 0, i32 3
	store %..any %100, %..any* %104
	%105 = getelementptr inbounds [4 x %..any], [4 x %..any]* %14, i64 0, i32 0
	%106 = getelementptr inbounds {%..any*, i64}, {%..any*, i64}* %13, i64 0, i32 0
	store %..any* %105, %..any** %106
	%107 = getelementptr inbounds {%..any*, i64}, {%..any*, i64}* %13, i64 0, i32 1
	store i64 4, i64* %107
	%108 = load {%..any*, i64}, {%..any*, i64}* %13, align 8
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %15
	store {%..any*, i64} %108, {%..any*, i64}* %15
	call void @glfw-9.SetWindowTitle-442(%..rawptr %70, %..string {i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__str$109, i64 0, i32 0), i64 68}, {%..any*, i64}* %15, %Context* noalias nonnull %__.context_ptr)
	; AssignStmt
	%109 = getelementptr inbounds %glfw-9._TimingStruct, %glfw-9._TimingStruct* @glfw-9.persistent_timing_data, i64 0, i32 4
	%110 = getelementptr inbounds %glfw-9._TimingStruct, %glfw-9._TimingStruct* @glfw-9.persistent_timing_data, i64 0, i32 1
	%111 = load double, double* %110, align 8
	%112 = fdiv double 0x3ff0000000000000, %111
	%113 = fptosi double %112 to i64
	store i64 %113, i64* %109
	; AssignStmt
	%114 = getelementptr inbounds %glfw-9._TimingStruct, %glfw-9._TimingStruct* @glfw-9.persistent_timing_data, i64 0, i32 1
	store double 0x0000000000000000, double* %114
	; AssignStmt
	%115 = getelementptr inbounds %glfw-9._TimingStruct, %glfw-9._TimingStruct* @glfw-9.persistent_timing_data, i64 0, i32 2
	store double 0x0000000000000000, double* %115
	; AssignStmt
	%116 = getelementptr inbounds %glfw-9._TimingStruct, %glfw-9._TimingStruct* @glfw-9.persistent_timing_data, i64 0, i32 5
	store i64 0, i64* %116
	br label %if.done-2

if.done-2:
	ret void
}

define void @engine-10.start(%engine-10.Engine_Config* %config, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca %glfw-9.Vid_Mode*, align 8
	%1 = alloca i1, align 1
	%2 = alloca i64, align 8
	%3 = alloca {%..any*, i64}, align 8
	%4 = alloca {%..any*, i64}, align 16
	%5 = alloca %Source_Code_Location, align 16
	%6 = alloca {%engine-10.Sprite_Data*, i64, i64, %Allocator}, align 8
	%7 = alloca %Source_Code_Location, align 16
	%8 = load %engine-10.Engine_Config, %engine-10.Engine_Config* %config, align 8
	; SelectorExpr
	%9 = bitcast void (i32, i8*)* @engine-10.start.error_callback-0 to void (i32, i8*)*
	%10 = call ccc void (i32, i8*)* @glfwSetErrorCallback(void (i32, i8*)* %9)
	; IfStmt
	; SelectorExpr
	%11 = call ccc i32 @glfwInit()
	%12 = icmp eq i32 %11, 0
	br i1 %12, label %if.then-1, label %if.done-2

if.then-1:
	; ReturnStmt
	ret void

if.done-2:
	; SelectorExpr
	; SelectorExpr
	%13 = getelementptr inbounds %engine-10.Engine_Config, %engine-10.Engine_Config* %config, i64 0, i32 5
	%14 = load i32, i32* %13, align 4
	call ccc void @glfwWindowHint(i32 139266, i32 %14)
	; SelectorExpr
	; SelectorExpr
	%15 = getelementptr inbounds %engine-10.Engine_Config, %engine-10.Engine_Config* %config, i64 0, i32 6
	%16 = load i32, i32* %15, align 4
	call ccc void @glfwWindowHint(i32 139267, i32 %16)
	; SelectorExpr
	call ccc void @glfwWindowHint(i32 139272, i32 204801)
	; AssignStmt
	; SelectorExpr
	; SelectorExpr
	%17 = getelementptr inbounds %engine-10.Engine_Config, %engine-10.Engine_Config* %config, i64 0, i32 3
	%18 = load i32, i32* %17, align 4
	; SelectorExpr
	%19 = getelementptr inbounds %engine-10.Engine_Config, %engine-10.Engine_Config* %config, i64 0, i32 4
	%20 = load i32, i32* %19, align 4
	; SelectorExpr
	%21 = getelementptr inbounds %engine-10.Engine_Config, %engine-10.Engine_Config* %config, i64 0, i32 0
	%22 = load %..string, %..string* %21, align 8
	%23 = call %..rawptr @glfw-9.CreateWindow-435(i32 %18, i32 %20, %..string %22, %..rawptr zeroinitializer, %..rawptr zeroinitializer, %Context* noalias nonnull %__.context_ptr)
	store %..rawptr %23, %..rawptr* @engine-10.window
	; IfStmt
	%24 = load %..rawptr, %..rawptr* @engine-10.window, align 8
	%25 = icmp eq %..rawptr %24, zeroinitializer
	br i1 %25, label %if.then-3, label %if.done-4

if.then-3:
	; ReturnStmt
	ret void

if.done-4:
	; video_mode
		; SelectorExpr
	; SelectorExpr
	%26 = call ccc %..rawptr @glfwGetPrimaryMonitor()
	%27 = call ccc %glfw-9.Vid_Mode* @glfwGetVideoMode(%..rawptr %26)
	store %glfw-9.Vid_Mode* %27, %glfw-9.Vid_Mode** %0
	; SelectorExpr
	%28 = load %..rawptr, %..rawptr* @engine-10.window, align 8
	; SelectorExpr
	%29 = load %glfw-9.Vid_Mode*, %glfw-9.Vid_Mode** %0, align 8
	%30 = getelementptr inbounds %glfw-9.Vid_Mode, %glfw-9.Vid_Mode* %29, i64 0
	%31 = getelementptr inbounds %glfw-9.Vid_Mode, %glfw-9.Vid_Mode* %30, i64 0, i32 0
	%32 = load i32, i32* %31, align 4
	%33 = sdiv i32 %32, 2
	; SelectorExpr
	%34 = getelementptr inbounds %engine-10.Engine_Config, %engine-10.Engine_Config* %config, i64 0, i32 3
	%35 = load i32, i32* %34, align 4
	%36 = sdiv i32 %35, 2
	%37 = sub i32 %33, %36
	; SelectorExpr
	%38 = load %glfw-9.Vid_Mode*, %glfw-9.Vid_Mode** %0, align 8
	%39 = getelementptr inbounds %glfw-9.Vid_Mode, %glfw-9.Vid_Mode* %38, i64 0
	%40 = getelementptr inbounds %glfw-9.Vid_Mode, %glfw-9.Vid_Mode* %39, i64 0, i32 1
	%41 = load i32, i32* %40, align 4
	%42 = sdiv i32 %41, 2
	; SelectorExpr
	%43 = getelementptr inbounds %engine-10.Engine_Config, %engine-10.Engine_Config* %config, i64 0, i32 4
	%44 = load i32, i32* %43, align 4
	%45 = sdiv i32 %44, 2
	%46 = sub i32 %42, %45
	call ccc void @glfwSetWindowPos(%..rawptr %28, i32 %37, i32 %46)
	; SelectorExpr
	%47 = load %..rawptr, %..rawptr* @engine-10.window, align 8
	call ccc void @glfwMakeContextCurrent(%..rawptr %47)
	; SelectorExpr
	call ccc void @glfwSwapInterval(i32 1)
	; SelectorExpr
	%48 = load %..rawptr, %..rawptr* @engine-10.window, align 8
	%49 = bitcast void (%..rawptr, i32, i32)* @engine-10.start.size_callback-1 to void (%..rawptr, i32, i32)*
	%50 = call ccc void (%..rawptr, i32, i32)* @glfwSetWindowSizeCallback(%..rawptr %48, void (%..rawptr, i32, i32)* %49)
	; SelectorExpr
	call void @gl-21.load_up_to(i64 3, i64 3, void (%..rawptr, %..string, %Context*)* @engine-10.start$anon-0, %Context* noalias nonnull %__.context_ptr)
	; AssignStmt
	; SelectorExpr
	%51 = getelementptr inbounds %engine-10.Engine_Config, %engine-10.Engine_Config* %config, i64 0, i32 7
	%52 = load float, float* %51, align 4
	store float %52, float* @engine-10.camera_size
	%53 = load %..rawptr, %..rawptr* @engine-10.window, align 8
	; SelectorExpr
	%54 = getelementptr inbounds %engine-10.Engine_Config, %engine-10.Engine_Config* %config, i64 0, i32 3
	%55 = load i32, i32* %54, align 4
	; SelectorExpr
	%56 = getelementptr inbounds %engine-10.Engine_Config, %engine-10.Engine_Config* %config, i64 0, i32 4
	%57 = load i32, i32* %56, align 4
	call ccc void @engine-10.start.size_callback-1(%..rawptr %53, i32 %55, i32 %57)
	; SelectorExpr
	%58 = load %..rawptr, %..rawptr* @engine-10.window, align 8
	%59 = bitcast void (%..rawptr, double, double)* @engine-10.start$anon-1 to void (%..rawptr, double, double)*
	%60 = call ccc void (%..rawptr, double, double)* @glfwSetScrollCallback(%..rawptr %58, void (%..rawptr, double, double)* %59)
	; SelectorExpr
	%61 = load %..rawptr, %..rawptr* @engine-10.window, align 8
	%62 = bitcast void (%..rawptr, i32, i32, i32, i32)* @engine-10.start$anon-2 to void (%..rawptr, i32, i32, i32, i32)*
	%63 = call ccc void (%..rawptr, i32, i32, i32, i32)* @glfwSetKeyCallback(%..rawptr %61, void (%..rawptr, i32, i32, i32, i32)* %62)
	; shader_success
	store i1 zeroinitializer, i1* %1
		; AssignStmt
	; SelectorExpr
	%64 = call i64 @gl-21.load_shaders(%..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$10a, i64 0, i32 0), i64 11}, %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$10b, i64 0, i32 0), i64 13}, %Context* noalias nonnull %__.context_ptr)
	store i64 zeroinitializer, i64* %2
	store i64 %64, i64* %2
	%65 = bitcast i64* %2 to {i32, i1}*
	%66 = load {i32, i1}, {i32, i1}* %65, align 4
	%67 = extractvalue {i32, i1} %66, 0
	%68 = extractvalue {i32, i1} %66, 1
	store i32 %67, i32* @engine-10.instanced_shader_program
	store i1 %68, i1* %1
	%69 = load i1, i1* %1, align 1
	; variadic call argument generation
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %3
	%70 = load {%..any*, i64}, {%..any*, i64}* %3, align 8
	%71 = call %Source_Code_Location @make_source_code_location(%..string {i8* getelementptr inbounds ([42 x i8], [42 x i8]* @__str$10c, i64 0, i32 0), i64 41}, i64 125, i64 2, %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$10d, i64 0, i32 0), i64 5})
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %4
	store {%..any*, i64} %70, {%..any*, i64}* %4
	store %Source_Code_Location zeroinitializer, %Source_Code_Location* %5
	store %Source_Code_Location %71, %Source_Code_Location* %5
	%72 = call i1 @assert(i1 %69, %..string zeroinitializer, {%..any*, i64}* %4, %Source_Code_Location* %5)
	; SelectorExpr
	%73 = load void (i32, i32*)*, void (i32, i32*)** @gl-21.GenVertexArrays, align 8
	%74 = getelementptr inbounds i32, i32* @engine-10.vao, i64 0
	call ccc void %73(i32 1, i32* %74)
	; DeferStmt
	; SelectorExpr
	%75 = load void (i32)*, void (i32)** @gl-21.BindVertexArray, align 8
	%76 = load i32, i32* @engine-10.vao, align 4
	call ccc void %75(i32 %76)
	; SelectorExpr
	%77 = load void (i32, i32*)*, void (i32, i32*)** @gl-21.GenBuffers, align 8
	%78 = getelementptr inbounds i32, i32* @engine-10.vbo, i64 0
	call ccc void %77(i32 1, i32* %78)
	; SelectorExpr
	%79 = load void (i32, i32)*, void (i32, i32)** @gl-21.BindBuffer, align 8
	%80 = load i32, i32* @engine-10.vbo, align 4
	call ccc void %79(i32 34962, i32 %80)
	; SelectorExpr
	%81 = load void (i32, i64, %..rawptr, i32)*, void (i32, i64, %..rawptr, i32)** @gl-21.BufferData, align 8
	; IndexExpr
	%82 = getelementptr inbounds [6 x {[0 x <8 x i8>], [2 x float]}], [6 x {[0 x <8 x i8>], [2 x float]}]* @engine-10.sprite_vbo, i64 0, i32 0
	%83 = getelementptr inbounds {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %82, i64 0
	%84 = bitcast {[0 x <8 x i8>], [2 x float]}* %83 to %..rawptr
	call ccc void %81(i32 34962, i64 48, %..rawptr %84, i32 35044)
	; SelectorExpr
	%85 = load void (i32, i32, i32, i8, i32, %..rawptr)*, void (i32, i32, i32, i8, i32, %..rawptr)** @gl-21.VertexAttribPointer, align 8
	call ccc void %85(i32 0, i32 2, i32 5126, i8 0, i32 8, %..rawptr zeroinitializer)
	; SelectorExpr
	%86 = load void (i32)*, void (i32)** @gl-21.EnableVertexAttribArray, align 8
	call ccc void %86(i32 0)
	; SelectorExpr
	%87 = load void (i32, i32*)*, void (i32, i32*)** @gl-21.GenBuffers, align 8
	%88 = getelementptr inbounds i32, i32* @engine-10.transform_buffer, i64 0
	call ccc void %87(i32 1, i32* %88)
	; SelectorExpr
	%89 = load void (i32, i32)*, void (i32, i32)** @gl-21.BindBuffer, align 8
	%90 = load i32, i32* @engine-10.transform_buffer, align 4
	call ccc void %89(i32 34962, i32 %90)
	; SelectorExpr
	%91 = load void (i32, i32, i32, i8, i32, %..rawptr)*, void (i32, i32, i32, i8, i32, %..rawptr)** @gl-21.VertexAttribPointer, align 8
	call ccc void %91(i32 2, i32 2, i32 5126, i8 0, i32 32, %..rawptr inttoptr (i64 16 to %..rawptr))
	; SelectorExpr
	%92 = load void (i32)*, void (i32)** @gl-21.EnableVertexAttribArray, align 8
	call ccc void %92(i32 2)
	; SelectorExpr
	%93 = load void (i32, i32, i32, i8, i32, %..rawptr)*, void (i32, i32, i32, i8, i32, %..rawptr)** @gl-21.VertexAttribPointer, align 8
	call ccc void %93(i32 3, i32 2, i32 5126, i8 0, i32 32, %..rawptr inttoptr (i64 24 to %..rawptr))
	; SelectorExpr
	%94 = load void (i32)*, void (i32)** @gl-21.EnableVertexAttribArray, align 8
	call ccc void %94(i32 3)
	; SelectorExpr
	%95 = load void (i32, i32, i32, i32, %..rawptr)*, void (i32, i32, i32, i32, %..rawptr)** @gl-21.VertexAttribIPointer, align 8
	call ccc void %95(i32 4, i32 1, i32 5124, i32 32, %..rawptr null)
	; SelectorExpr
	%96 = load void (i32)*, void (i32)** @gl-21.EnableVertexAttribArray, align 8
	call ccc void %96(i32 4)
	; SelectorExpr
	%97 = load void (i32, i32, i32, i32, %..rawptr)*, void (i32, i32, i32, i32, %..rawptr)** @gl-21.VertexAttribIPointer, align 8
	call ccc void %97(i32 5, i32 1, i32 5124, i32 32, %..rawptr inttoptr (i64 4 to %..rawptr))
	; SelectorExpr
	%98 = load void (i32)*, void (i32)** @gl-21.EnableVertexAttribArray, align 8
	call ccc void %98(i32 5)
	; SelectorExpr
	%99 = load void (i32, i32, i32, i32, %..rawptr)*, void (i32, i32, i32, i32, %..rawptr)** @gl-21.VertexAttribIPointer, align 8
	call ccc void %99(i32 6, i32 1, i32 5124, i32 32, %..rawptr inttoptr (i64 8 to %..rawptr))
	; SelectorExpr
	%100 = load void (i32)*, void (i32)** @gl-21.EnableVertexAttribArray, align 8
	call ccc void %100(i32 6)
	; AssignStmt
	; make
	call void @__dynamic_array_expr_error(%..string {i8* getelementptr inbounds ([42 x i8], [42 x i8]* @__str$10e, i64 0, i32 0), i64 41}, i64 163, i64 17, i64 0, i64 0, i64 4)
	store {%engine-10.Sprite_Data*, i64, i64, %Allocator} zeroinitializer, {%engine-10.Sprite_Data*, i64, i64, %Allocator}* %6
	%101 = bitcast {%engine-10.Sprite_Data*, i64, i64, %Allocator}* %6 to %..rawptr
	%102 = call %Source_Code_Location @make_source_code_location(%..string {i8* getelementptr inbounds ([42 x i8], [42 x i8]* @__str$10f, i64 0, i32 0), i64 41}, i64 163, i64 17, %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$110, i64 0, i32 0), i64 5})
	store %Source_Code_Location zeroinitializer, %Source_Code_Location* %7
	store %Source_Code_Location %102, %Source_Code_Location* %7
	call void @__dynamic_array_make(%..rawptr %101, i64 32, i64 8, i64 0, i64 4, %Source_Code_Location* %7, %Context* noalias nonnull %__.context_ptr)
	%103 = load {%engine-10.Sprite_Data*, i64, i64, %Allocator}, {%engine-10.Sprite_Data*, i64, i64, %Allocator}* %6, align 8
	store {%engine-10.Sprite_Data*, i64, i64, %Allocator} %103, {%engine-10.Sprite_Data*, i64, i64, %Allocator}* @engine-10.sprites
	; SelectorExpr
	%104 = load void (float, float, float, float)*, void (float, float, float, float)** @gl-21.ClearColor, align 8
	call ccc void %104(float 0x3fe0000000000000, float 0x3fb9999980000000, float 0x3fc9999980000000, float 0x3ff0000000000000)
	; SelectorExpr
	%105 = load void (i32)*, void (i32)** @gl-21.Enable, align 8
	call ccc void %105(i32 3042)
	; SelectorExpr
	%106 = load void (i32, i32)*, void (i32, i32)** @gl-21.BlendFunc, align 8
	call ccc void %106(i32 770, i32 771)
	; SelectorExpr
	%107 = getelementptr inbounds %engine-10.Engine_Config, %engine-10.Engine_Config* %config, i64 0, i32 1
	%108 = load void (%Context*)*, void (%Context*)** %107, align 8
	call void %108(%Context* noalias nonnull %__.context_ptr)
	; ForStmt
	br label %for.loop-5

for.loop-5:
	; SelectorExpr
	%109 = load %..rawptr, %..rawptr* @engine-10.window, align 8
	%110 = call ccc i32 @glfwWindowShouldClose(%..rawptr %109)
	%111 = icmp eq i32 %110, 0
	br i1 %111, label %for.body-6, label %for.done-9

for.body-6:
	; SelectorExpr
	%112 = load %..rawptr, %..rawptr* @engine-10.window, align 8
	call void @glfw-9.calculate_frame_timings(%..rawptr %112, %Context* noalias nonnull %__.context_ptr)
	; SelectorExpr
	call ccc void @glfwPollEvents()
	; IfStmt
	; SelectorExpr
	%113 = load %..rawptr, %..rawptr* @engine-10.window, align 8
	%114 = call i1 @glfw-9.GetKey(%..rawptr %113, i32 256, %Context* noalias nonnull %__.context_ptr)
	br i1 %114, label %if.then-7, label %if.done-8

if.then-7:
	; SelectorExpr
	%115 = load %..rawptr, %..rawptr* @engine-10.window, align 8
	call void @glfw-9.SetWindowShouldClose(%..rawptr %115, i1 true, %Context* noalias nonnull %__.context_ptr)
	br label %if.done-8

if.done-8:
	; SelectorExpr
	%116 = load void (i32)*, void (i32)** @gl-21.Clear, align 8
	call ccc void %116(i32 16384)
	%117 = getelementptr inbounds {%engine-10.Sprite_Data*, i64, i64, %Allocator}, {%engine-10.Sprite_Data*, i64, i64, %Allocator}* @engine-10.sprites, i64 0
	call void @_preload-0.clear-13324({%engine-10.Sprite_Data*, i64, i64, %Allocator}* %117)
	; SelectorExpr
	%118 = getelementptr inbounds %engine-10.Engine_Config, %engine-10.Engine_Config* %config, i64 0, i32 2
	%119 = load void (%Context*)*, void (%Context*)** %118, align 8
	call void %119(%Context* noalias nonnull %__.context_ptr)
	br label %for.loop-5

for.done-9:
	; defer
	; SelectorExpr
	%120 = load void (i32, i32*)*, void (i32, i32*)** @gl-21.DeleteVertexArrays, align 8
	%121 = getelementptr inbounds i32, i32* @engine-10.vao, i64 0
	call ccc void %120(i32 1, i32* %121)
	ret void
}

define ccc void @engine-10.start.error_callback-0(i32 %error, i8* %desc) #0 {
decls-0:
	%0 = alloca i32, align 4
	%1 = alloca i8*, align 8
	%2 = alloca %Context, align 8
	%3 = alloca %..any, align 8
	%4 = alloca %..any, align 8
	%5 = alloca %..string, align 8
	%6 = alloca {%..any*, i64}, align 8
	%7 = alloca [2 x %..any], align 8
	%8 = alloca {%..any*, i64}, align 16
		store i32 %error, i32* %0
		store i8* %desc, i8** %1
	; SelectorExpr
	%9 = load i32, i32* %0, align 4
	; SelectorExpr
	%10 = load i8*, i8** %1, align 8
	store %Context zeroinitializer, %Context* %2
	%11 = load %Context, %Context* @__ggv$0, align 8
	store %Context %11, %Context* %2
	%12 = call %..string @strings-20.to_odin_string(i8* %10, %Context* noalias nonnull %2)
	store %..any zeroinitializer, %..any* %3
	%13 = bitcast i32* %0 to %..rawptr
	%14 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	%15 = getelementptr inbounds %..any, %..any* %3, i64 0, i32 0
	store %..rawptr %13, %..rawptr* %15
	%16 = getelementptr inbounds %..any, %..any* %3, i64 0, i32 1
	store %Type_Info* %14, %Type_Info** %16
	%17 = load %..any, %..any* %3, align 8
	store %..any zeroinitializer, %..any* %4
	store %..string zeroinitializer, %..string* %5
	store %..string %12, %..string* %5
	%18 = bitcast %..string* %5 to %..rawptr
	%19 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%20 = getelementptr inbounds %..any, %..any* %4, i64 0, i32 0
	store %..rawptr %18, %..rawptr* %20
	%21 = getelementptr inbounds %..any, %..any* %4, i64 0, i32 1
	store %Type_Info* %19, %Type_Info** %21
	%22 = load %..any, %..any* %4, align 8
	; variadic call argument generation
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %6
	store [2 x %..any] zeroinitializer, [2 x %..any]* %7
	%23 = getelementptr inbounds [2 x %..any], [2 x %..any]* %7, i64 0, i32 0
	store %..any %17, %..any* %23
	%24 = getelementptr inbounds [2 x %..any], [2 x %..any]* %7, i64 0, i32 1
	store %..any %22, %..any* %24
	%25 = getelementptr inbounds [2 x %..any], [2 x %..any]* %7, i64 0, i32 0
	%26 = getelementptr inbounds {%..any*, i64}, {%..any*, i64}* %6, i64 0, i32 0
	store %..any* %25, %..any** %26
	%27 = getelementptr inbounds {%..any*, i64}, {%..any*, i64}* %6, i64 0, i32 1
	store i64 2, i64* %27
	%28 = load {%..any*, i64}, {%..any*, i64}* %6, align 8
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %8
	store {%..any*, i64} %28, {%..any*, i64}* %8
	%29 = call i64 @fmt-4.printf(%..string {i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__str$111, i64 0, i32 0), i64 22}, {%..any*, i64}* %8, %Context* noalias nonnull %2)
	ret void
}

define ccc void @engine-10.start.size_callback-1(%..rawptr %window, i32 %w, i32 %h) #0 {
decls-0:
	%0 = alloca %..rawptr, align 8
	%1 = alloca i32, align 4
	%2 = alloca i32, align 4
	%3 = alloca float, align 4
	%4 = alloca float, align 4
	%5 = alloca float, align 4
	%6 = alloca float, align 4
	%7 = alloca float, align 4
	%8 = alloca [4 x [4 x float]], align 4
	%9 = alloca %Context, align 8
	%10 = alloca [4 x [4 x float]], align 16
	%11 = alloca [4 x [4 x float]], align 16
		store %..rawptr %window, %..rawptr* %0
		store i32 %w, i32* %1
		store i32 %h, i32* %2
	; AssignStmt
	%12 = load i32, i32* %1, align 4
	store i32 %12, i32* @engine-10.current_window_width
	; AssignStmt
	%13 = load i32, i32* %2, align 4
	store i32 %13, i32* @engine-10.current_window_height
	; aspect
		%14 = load i32, i32* %1, align 4
	%15 = sitofp i32 %14 to float
	%16 = load i32, i32* %2, align 4
	%17 = sitofp i32 %16 to float
	%18 = fdiv float %15, %17
	store float %18, float* %3
	; top
		%19 = load float, float* @engine-10.camera_size, align 4
	store float %19, float* %4
	; bottom
		%20 = load float, float* @engine-10.camera_size, align 4
	%21 = fsub float 0x0000000000000000, %20
	store float %21, float* %5
	; left
		%22 = load float, float* @engine-10.camera_size, align 4
	%23 = fsub float 0x0000000000000000, %22
	%24 = load float, float* %3, align 4
	%25 = fmul float %23, %24
	store float %25, float* %6
	; right
		%26 = load float, float* @engine-10.camera_size, align 4
	%27 = load float, float* %3, align 4
	%28 = fmul float %26, %27
	store float %28, float* %7
	; ortho
		%29 = load float, float* %6, align 4
	%30 = load float, float* %7, align 4
	%31 = load float, float* %5, align 4
	%32 = load float, float* %4, align 4
	store %Context zeroinitializer, %Context* %9
	%33 = load %Context, %Context* @__ggv$0, align 8
	store %Context %33, %Context* %9
	%34 = call [4 x [4 x float]] @math-19.ortho3d(float %29, float %30, float %31, float %32, float 0xbff0000000000000, float 0x3ff0000000000000, %Context* noalias nonnull %9)
	store [4 x [4 x float]] %34, [4 x [4 x float]]* %8
	; AssignStmt
	%35 = call [4 x [4 x float]] @math-19.mat4_identity(%Context* noalias nonnull %9)
	%36 = load [4 x [4 x float]], [4 x [4 x float]]* %8, align 4
	store [4 x [4 x float]] zeroinitializer, [4 x [4 x float]]* %10
	store [4 x [4 x float]] %35, [4 x [4 x float]]* %10
	store [4 x [4 x float]] zeroinitializer, [4 x [4 x float]]* %11
	store [4 x [4 x float]] %36, [4 x [4 x float]]* %11
	%37 = call [4 x [4 x float]] @math-19.mul-1166([4 x [4 x float]]* %10, [4 x [4 x float]]* %11, %Context* noalias nonnull %9)
	store [4 x [4 x float]] %37, [4 x [4 x float]]* @engine-10.transform
	; SelectorExpr
	%38 = load void (i32, i32, i32, i32)*, void (i32, i32, i32, i32)** @gl-21.Viewport, align 8
	%39 = load i32, i32* %1, align 4
	%40 = load i32, i32* %2, align 4
	call ccc void %38(i32 0, i32 0, i32 %39, i32 %40)
	ret void
}

define void @engine-10.start$anon-0(%..rawptr %p, %..string %name, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca %..rawptr, align 8
	%1 = alloca %..string, align 8
	store %..rawptr %p, %..rawptr* %0
	store %..string %name, %..string* %1
	; AssignStmt
	%2 = load %..rawptr, %..rawptr* %0, align 8
	%3 = bitcast %..rawptr %2 to %..rawptr*
	%4 = getelementptr inbounds %..rawptr, %..rawptr* %3, i64 0
	; SelectorExpr
	; IndexExpr
	%5 = load %..string, %..string* %1, align 8
	%6 = extractvalue %..string %5, 0
	%7 = extractvalue %..string %5, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([42 x i8], [42 x i8]* @__str$112, i64 0, i32 0), i64 41}, i64 89, i64 57, i64 0, i64 %7)
	%8 = getelementptr inbounds i8, i8* %6, i64 0
	%9 = getelementptr inbounds i8, i8* %8, i64 0
	%10 = call ccc %..rawptr @glfwGetProcAddress(i8* %9)
	store %..rawptr %10, %..rawptr* %4
	ret void
}

define ccc void @engine-10.start$anon-1(%..rawptr %window, double %x, double %y) #0 {
decls-0:
	%0 = alloca %..rawptr, align 8
	%1 = alloca double, align 8
	%2 = alloca double, align 8
	store %..rawptr %window, %..rawptr* %0
	store double %x, double* %1
	store double %y, double* %2
	; AssignStmt
	%3 = load double, double* %2, align 8
	%4 = fptrunc double %3 to float
	%5 = load float, float* @engine-10.camera_size, align 4
	%6 = fmul float %4, %5
	%7 = fmul float %6, 0x3fb9999980000000
	%8 = load float, float* @engine-10.camera_size, align 4
	%9 = fsub float %8, %7
	store float %9, float* @engine-10.camera_size
	%10 = load %..rawptr, %..rawptr* %0, align 8
	%11 = load i32, i32* @engine-10.current_window_width, align 4
	%12 = load i32, i32* @engine-10.current_window_height, align 4
	call ccc void @engine-10.start.size_callback-1(%..rawptr %10, i32 %11, i32 %12)
	ret void
}

define ccc void @engine-10.start$anon-2(%..rawptr %window, i32 %key, i32 %scancode, i32 %action, i32 %mods) #0 {
decls-0:
	%0 = alloca %..rawptr, align 8
	%1 = alloca i32, align 4
	%2 = alloca i32, align 4
	%3 = alloca i32, align 4
	%4 = alloca i32, align 4
	store %..rawptr %window, %..rawptr* %0
	store i32 %key, i32* %1
	store i32 %scancode, i32* %2
	store i32 %action, i32* %3
	store i32 %mods, i32* %4
	; IfStmt
	%5 = load i32, i32* %3, align 4
	%6 = icmp eq i32 %5, 2
	br i1 %6, label %if.then-2, label %cmp.or-1

cmp.or-1:
	%7 = load i32, i32* %3, align 4
	%8 = icmp eq i32 %7, 1
	br i1 %8, label %if.then-2, label %if.done-11

if.then-2:
	; IfStmt
	%9 = load i32, i32* %1, align 4
	%10 = icmp eq i32 %9, 263
	br i1 %10, label %if.then-3, label %if.done-4

if.then-3:
	; AssignStmt
	; SelectorExpr
	%11 = getelementptr inbounds {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* @engine-10.camera_position, i64 0, i32 1, i32 0
	%12 = load float, float* %11, align 4
	%13 = fsub float %12, 0x4029999980000000
	store float %13, float* %11
	br label %if.done-4

if.done-4:
	; IfStmt
	%14 = load i32, i32* %1, align 4
	%15 = icmp eq i32 %14, 262
	br i1 %15, label %if.then-5, label %if.done-6

if.then-5:
	; AssignStmt
	; SelectorExpr
	%16 = getelementptr inbounds {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* @engine-10.camera_position, i64 0, i32 1, i32 0
	%17 = load float, float* %16, align 4
	%18 = fadd float %17, 0x4029999980000000
	store float %18, float* %16
	br label %if.done-6

if.done-6:
	; IfStmt
	%19 = load i32, i32* %1, align 4
	%20 = icmp eq i32 %19, 265
	br i1 %20, label %if.then-7, label %if.done-8

if.then-7:
	; AssignStmt
	; SelectorExpr
	%21 = getelementptr inbounds {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* @engine-10.camera_position, i64 0, i32 1, i32 1
	%22 = load float, float* %21, align 4
	%23 = fadd float %22, 0x4029999980000000
	store float %23, float* %21
	br label %if.done-8

if.done-8:
	; IfStmt
	%24 = load i32, i32* %1, align 4
	%25 = icmp eq i32 %24, 264
	br i1 %25, label %if.then-9, label %if.done-10

if.then-9:
	; AssignStmt
	; SelectorExpr
	%26 = getelementptr inbounds {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* @engine-10.camera_position, i64 0, i32 1, i32 1
	%27 = load float, float* %26, align 4
	%28 = fsub float %27, 0x4029999980000000
	store float %28, float* %26
	br label %if.done-10

if.done-10:
	br label %if.done-11

if.done-11:
	ret void
}

define void @engine-10.submit_sprite(%engine-10.Sprite* %sprite, i64 %position, i64 %scale, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca {[0 x <8 x i8>], [2 x float]}, align 8
	%1 = alloca {[0 x <8 x i8>], [2 x float]}, align 8
	%2 = alloca %engine-10.Sprite_Data, align 8
	%3 = alloca %engine-10.Sprite_Data, align 8
	%4 = alloca {%engine-10.Sprite_Data*, i64}, align 8
	%5 = alloca [1 x %engine-10.Sprite_Data], align 8
	%6 = alloca {%engine-10.Sprite_Data*, i64}, align 16
	%7 = alloca %Source_Code_Location, align 16
	%8 = load %engine-10.Sprite, %engine-10.Sprite* %sprite, align 4
		%9 = bitcast {[0 x <8 x i8>], [2 x float]}* %0 to i64*
	store i64 %position, i64* %9
	%10 = load {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %0, align 8
		%11 = bitcast {[0 x <8 x i8>], [2 x float]}* %1 to i64*
	store i64 %scale, i64* %11
	%12 = load {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %1, align 8
	; data
		; CompoundLit
	store %engine-10.Sprite_Data zeroinitializer, %engine-10.Sprite_Data* %3
	store %engine-10.Sprite_Data {%engine-10.Sprite zeroinitializer, {[0 x <8 x i8>], [2 x float]} zeroinitializer, {[0 x <8 x i8>], [2 x float]} zeroinitializer}, %engine-10.Sprite_Data* %3
	%13 = load %engine-10.Sprite, %engine-10.Sprite* %sprite, align 4
	%14 = getelementptr inbounds %engine-10.Sprite_Data, %engine-10.Sprite_Data* %3, i64 0, i32 0
	store %engine-10.Sprite %13, %engine-10.Sprite* %14
	%15 = load {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %0, align 8
	%16 = getelementptr inbounds %engine-10.Sprite_Data, %engine-10.Sprite_Data* %3, i64 0, i32 1
	store {[0 x <8 x i8>], [2 x float]} %15, {[0 x <8 x i8>], [2 x float]}* %16
	%17 = load {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %1, align 8
	%18 = getelementptr inbounds %engine-10.Sprite_Data, %engine-10.Sprite_Data* %3, i64 0, i32 2
	store {[0 x <8 x i8>], [2 x float]} %17, {[0 x <8 x i8>], [2 x float]}* %18
	%19 = load %engine-10.Sprite_Data, %engine-10.Sprite_Data* %3, align 8
	store %engine-10.Sprite_Data %19, %engine-10.Sprite_Data* %2
	%20 = getelementptr inbounds {%engine-10.Sprite_Data*, i64, i64, %Allocator}, {%engine-10.Sprite_Data*, i64, i64, %Allocator}* @engine-10.sprites, i64 0
	%21 = load %engine-10.Sprite_Data, %engine-10.Sprite_Data* %2, align 8
	; variadic call argument generation
	store {%engine-10.Sprite_Data*, i64} zeroinitializer, {%engine-10.Sprite_Data*, i64}* %4
	store [1 x %engine-10.Sprite_Data] zeroinitializer, [1 x %engine-10.Sprite_Data]* %5
	%22 = getelementptr inbounds [1 x %engine-10.Sprite_Data], [1 x %engine-10.Sprite_Data]* %5, i64 0, i32 0
	store %engine-10.Sprite_Data %21, %engine-10.Sprite_Data* %22
	%23 = getelementptr inbounds [1 x %engine-10.Sprite_Data], [1 x %engine-10.Sprite_Data]* %5, i64 0, i32 0
	%24 = getelementptr inbounds {%engine-10.Sprite_Data*, i64}, {%engine-10.Sprite_Data*, i64}* %4, i64 0, i32 0
	store %engine-10.Sprite_Data* %23, %engine-10.Sprite_Data** %24
	%25 = getelementptr inbounds {%engine-10.Sprite_Data*, i64}, {%engine-10.Sprite_Data*, i64}* %4, i64 0, i32 1
	store i64 1, i64* %25
	%26 = load {%engine-10.Sprite_Data*, i64}, {%engine-10.Sprite_Data*, i64}* %4, align 8
	%27 = call %Source_Code_Location @make_source_code_location(%..string {i8* getelementptr inbounds ([42 x i8], [42 x i8]* @__str$113, i64 0, i32 0), i64 41}, i64 206, i64 2, %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$114, i64 0, i32 0), i64 13})
	store {%engine-10.Sprite_Data*, i64} zeroinitializer, {%engine-10.Sprite_Data*, i64}* %6
	store {%engine-10.Sprite_Data*, i64} %26, {%engine-10.Sprite_Data*, i64}* %6
	store %Source_Code_Location zeroinitializer, %Source_Code_Location* %7
	store %Source_Code_Location %27, %Source_Code_Location* %7
	%28 = call i64 @_preload-0.append-13336({%engine-10.Sprite_Data*, i64, i64, %Allocator}* %20, {%engine-10.Sprite_Data*, i64}* %6, %Source_Code_Location* %7, %Context* noalias nonnull %__.context_ptr)
	ret void
}

define void @engine-10.flush_sprites(%Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca %..string, align 8
	%1 = alloca i32, align 4
	%2 = alloca i32, align 4
	; SelectorExpr
	%3 = load void (i32)*, void (i32)** @gl-21.UseProgram, align 8
	%4 = load i32, i32* @engine-10.instanced_shader_program, align 4
	call ccc void %3(i32 %4)
	; SelectorExpr
	%5 = load void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)** @gl-21.UniformMatrix4fv, align 8
	%6 = load i32, i32* @engine-10.instanced_shader_program, align 4
	%7 = call i32 @engine-10.get_uniform_location(i32 %6, %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$115, i64 0, i32 0), i64 10}, %Context* noalias nonnull %__.context_ptr)
	; IndexExpr
	; IndexExpr
	%8 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* @engine-10.transform, i64 0, i32 0
	%9 = getelementptr inbounds [4 x float], [4 x float]* %8, i64 0, i32 0
	%10 = getelementptr inbounds float, float* %9, i64 0
	call ccc void %5(i32 %7, i32 1, i8 0, float* %10)
	; SelectorExpr
	%11 = load void (i32, float, float)*, void (i32, float, float)** @gl-21.Uniform2f, align 8
	%12 = load i32, i32* @engine-10.instanced_shader_program, align 4
	%13 = call i32 @engine-10.get_uniform_location(i32 %12, %..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$116, i64 0, i32 0), i64 16}, %Context* noalias nonnull %__.context_ptr)
	; SelectorExpr
	%14 = getelementptr inbounds {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* @engine-10.camera_position, i64 0, i32 1, i32 0
	%15 = load float, float* %14, align 4
	; SelectorExpr
	%16 = getelementptr inbounds {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* @engine-10.camera_position, i64 0, i32 1, i32 1
	%17 = load float, float* %16, align 4
	call ccc void %11(i32 %13, float %15, float %17)
	; SelectorExpr
	%18 = load void (i32, i32)*, void (i32, i32)** @gl-21.BindBuffer, align 8
	%19 = load i32, i32* @engine-10.transform_buffer, align 4
	call ccc void %18(i32 34962, i32 %19)
	; SelectorExpr
	%20 = load void (i32, i64, %..rawptr, i32)*, void (i32, i64, %..rawptr, i32)** @gl-21.BufferData, align 8
	%21 = load {%engine-10.Sprite_Data*, i64, i64, %Allocator}, {%engine-10.Sprite_Data*, i64, i64, %Allocator}* @engine-10.sprites, align 8
	%22 = extractvalue {%engine-10.Sprite_Data*, i64, i64, %Allocator} %21, 1
	%23 = mul i64 32, %22
	; IndexExpr
	%24 = load {%engine-10.Sprite_Data*, i64, i64, %Allocator}, {%engine-10.Sprite_Data*, i64, i64, %Allocator}* @engine-10.sprites, align 8
	%25 = extractvalue {%engine-10.Sprite_Data*, i64, i64, %Allocator} %24, 0
	%26 = extractvalue {%engine-10.Sprite_Data*, i64, i64, %Allocator} %24, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([42 x i8], [42 x i8]* @__str$117, i64 0, i32 0), i64 41}, i64 215, i64 79, i64 0, i64 %26)
	%27 = getelementptr inbounds %engine-10.Sprite_Data, %engine-10.Sprite_Data* %25, i64 0
	%28 = getelementptr inbounds %engine-10.Sprite_Data, %engine-10.Sprite_Data* %27, i64 0
	%29 = bitcast %engine-10.Sprite_Data* %28 to %..rawptr
	call ccc void %20(i32 34962, i64 %23, %..rawptr %29, i32 35044)
	; name
	store %..string zeroinitializer, %..string* %0
		; location
	store i32 zeroinitializer, i32* %1
		; AssignStmt
	store %..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$118, i64 0, i32 0), i64 14}, %..string* %0
	; AssignStmt
	; SelectorExpr
	%30 = load i32 (i32, i8*)*, i32 (i32, i8*)** @gl-21.GetUniformLocation, align 8
	%31 = load i32, i32* @engine-10.instanced_shader_program, align 4
	; IndexExpr
	%32 = load %..string, %..string* %0, align 8
	%33 = extractvalue %..string %32, 0
	%34 = extractvalue %..string %32, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([42 x i8], [42 x i8]* @__str$119, i64 0, i32 0), i64 41}, i64 220, i64 67, i64 0, i64 %34)
	%35 = getelementptr inbounds i8, i8* %33, i64 0
	%36 = getelementptr inbounds i8, i8* %35, i64 0
	%37 = call ccc i32 %30(i32 %31, i8* %36)
	store i32 %37, i32* %1
	; SelectorExpr
	%38 = load void (i32, i32)*, void (i32, i32)** @gl-21.Uniform1i, align 8
	%39 = load i32, i32* %1, align 4
	call ccc void %38(i32 %39, i32 0)
	; AssignStmt
	store %..string {i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__str$11a, i64 0, i32 0), i64 17}, %..string* %0
	; AssignStmt
	; SelectorExpr
	%40 = load i32 (i32, i8*)*, i32 (i32, i8*)** @gl-21.GetUniformLocation, align 8
	%41 = load i32, i32* @engine-10.instanced_shader_program, align 4
	; IndexExpr
	%42 = load %..string, %..string* %0, align 8
	%43 = extractvalue %..string %42, 0
	%44 = extractvalue %..string %42, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([42 x i8], [42 x i8]* @__str$11b, i64 0, i32 0), i64 41}, i64 224, i64 67, i64 0, i64 %44)
	%45 = getelementptr inbounds i8, i8* %43, i64 0
	%46 = getelementptr inbounds i8, i8* %45, i64 0
	%47 = call ccc i32 %40(i32 %41, i8* %46)
	store i32 %47, i32* %1
	; SelectorExpr
	%48 = load void (i32, i32)*, void (i32, i32)** @gl-21.Uniform1i, align 8
	%49 = load i32, i32* %1, align 4
	call ccc void %48(i32 %49, i32 1)
	; SelectorExpr
	%50 = load void (i32)*, void (i32)** @gl-21.ActiveTexture, align 8
	call ccc void %50(i32 33984)
	; SelectorExpr
	%51 = load void (i32, i32)*, void (i32, i32)** @gl-21.BindTexture, align 8
	%52 = load i32, i32* @engine-10.atlas_texture, align 4
	call ccc void %51(i32 3553, i32 %52)
	; SelectorExpr
	%53 = load void (i32)*, void (i32)** @gl-21.ActiveTexture, align 8
	call ccc void %53(i32 33985)
	; SelectorExpr
	%54 = load void (i32, i32)*, void (i32, i32)** @gl-21.BindTexture, align 8
	%55 = load i32, i32* @engine-10.metadata_texture, align 4
	call ccc void %54(i32 3552, i32 %55)
	; SelectorExpr
	%56 = load void (i32, i32)*, void (i32, i32)** @gl-21.VertexAttribDivisor, align 8
	call ccc void %56(i32 2, i32 1)
	; SelectorExpr
	%57 = load void (i32, i32)*, void (i32, i32)** @gl-21.VertexAttribDivisor, align 8
	call ccc void %57(i32 3, i32 1)
	; SelectorExpr
	%58 = load void (i32, i32)*, void (i32, i32)** @gl-21.VertexAttribDivisor, align 8
	call ccc void %58(i32 4, i32 1)
	; SelectorExpr
	%59 = load void (i32, i32)*, void (i32, i32)** @gl-21.VertexAttribDivisor, align 8
	call ccc void %59(i32 5, i32 1)
	; SelectorExpr
	%60 = load void (i32, i32)*, void (i32, i32)** @gl-21.VertexAttribDivisor, align 8
	call ccc void %60(i32 6, i32 1)
	; num_sprites
		%61 = load {%engine-10.Sprite_Data*, i64, i64, %Allocator}, {%engine-10.Sprite_Data*, i64, i64, %Allocator}* @engine-10.sprites, align 8
	%62 = extractvalue {%engine-10.Sprite_Data*, i64, i64, %Allocator} %61, 1
	%63 = trunc i64 %62 to i32
	store i32 %63, i32* %2
	; SelectorExpr
	%64 = load void (i32, i32, i32, i32)*, void (i32, i32, i32, i32)** @gl-21.DrawArraysInstanced, align 8
	%65 = load i32, i32* %2, align 4
	call ccc void %64(i32 4, i32 0, i32 6, i32 %65)
	; SelectorExpr
	%66 = load %..rawptr, %..rawptr* @engine-10.window, align 8
	call ccc void @glfwSwapBuffers(%..rawptr %66)
	ret void
}

define %engine-10.Sprite @engine-10.load_sprite(%..string %filepath, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca %..string, align 8
	%1 = alloca {%..any*, i64}, align 8
	%2 = alloca {%..any*, i64}, align 16
	%3 = alloca %Source_Code_Location, align 16
	%4 = alloca [1024 x i8], align 1
	%5 = alloca i32, align 4
	%6 = alloca i32, align 4
	%7 = alloca i32, align 4
	%8 = alloca i8*, align 8
	%9 = alloca float, align 4
	%10 = alloca float, align 4
	%11 = alloca float, align 4
	%12 = alloca float, align 4
	%13 = alloca [6 x %engine-10.load_sprite.Metadata_Texture_Entry-1047], align 8
	%14 = alloca [6 x %engine-10.load_sprite.Metadata_Texture_Entry-1047], align 8
	%15 = alloca %engine-10.load_sprite.Metadata_Texture_Entry-1047, align 8
	%16 = alloca {[0 x <8 x i8>], [2 x float]}, align 8
	%17 = alloca %engine-10.load_sprite.Metadata_Texture_Entry-1047, align 8
	%18 = alloca {[0 x <8 x i8>], [2 x float]}, align 8
	%19 = alloca %engine-10.load_sprite.Metadata_Texture_Entry-1047, align 8
	%20 = alloca {[0 x <8 x i8>], [2 x float]}, align 8
	%21 = alloca %engine-10.load_sprite.Metadata_Texture_Entry-1047, align 8
	%22 = alloca {[0 x <8 x i8>], [2 x float]}, align 8
	%23 = alloca %engine-10.load_sprite.Metadata_Texture_Entry-1047, align 8
	%24 = alloca {[0 x <8 x i8>], [2 x float]}, align 8
	%25 = alloca %engine-10.load_sprite.Metadata_Texture_Entry-1047, align 8
	%26 = alloca {[0 x <8 x i8>], [2 x float]}, align 8
	%27 = alloca %Source_Code_Location, align 16
	%28 = alloca %engine-10.Sprite, align 4
		store %..string %filepath, %..string* %0
	; IfStmt
	%29 = load i1, i1* @engine-10.atlas_loaded, align 1
	br i1 %29, label %if.done-2, label %if.then-1

if.then-1:
	; AssignStmt
	store i1 true, i1* @engine-10.atlas_loaded
	; SelectorExpr
	%30 = load void (i32, i32*)*, void (i32, i32*)** @gl-21.GenTextures, align 8
	%31 = getelementptr inbounds i32, i32* @engine-10.metadata_texture, i64 0
	call ccc void %30(i32 1, i32* %31)
	; SelectorExpr
	%32 = load void (i32, i32)*, void (i32, i32)** @gl-21.BindTexture, align 8
	%33 = load i32, i32* @engine-10.metadata_texture, align 4
	call ccc void %32(i32 3552, i32 %33)
	; SelectorExpr
	%34 = load void (i32, i32, i32, i32, i32, i32, i32, %..rawptr)*, void (i32, i32, i32, i32, i32, i32, i32, %..rawptr)** @gl-21.TexImage1D, align 8
	call ccc void %34(i32 3552, i32 0, i32 33328, i32 2048, i32 0, i32 33319, i32 5126, %..rawptr zeroinitializer)
	; SelectorExpr
	%35 = load void (i32, i32, i32)*, void (i32, i32, i32)** @gl-21.TexParameteri, align 8
	call ccc void %35(i32 3552, i32 33085, i32 0)
	; SelectorExpr
	%36 = load void (i32, i32*)*, void (i32, i32*)** @gl-21.GenTextures, align 8
	%37 = getelementptr inbounds i32, i32* @engine-10.atlas_texture, i64 0
	call ccc void %36(i32 1, i32* %37)
	; SelectorExpr
	%38 = load void (i32, i32)*, void (i32, i32)** @gl-21.BindTexture, align 8
	%39 = load i32, i32* @engine-10.atlas_texture, align 4
	call ccc void %38(i32 3553, i32 %39)
	; SelectorExpr
	%40 = load void (i32, i32, i32, i32, i32, i32, i32, i32, %..rawptr)*, void (i32, i32, i32, i32, i32, i32, i32, i32, %..rawptr)** @gl-21.TexImage2D, align 8
	call ccc void %40(i32 3553, i32 0, i32 6408, i32 2048, i32 2048, i32 0, i32 6408, i32 5121, %..rawptr zeroinitializer)
	br label %if.done-2

if.done-2:
	%41 = load %..string, %..string* %0, align 8
	%42 = extractvalue %..string %41, 1
	%43 = icmp sle i64 %42, 1023
	; variadic call argument generation
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %1
	%44 = load {%..any*, i64}, {%..any*, i64}* %1, align 8
	%45 = call %Source_Code_Location @make_source_code_location(%..string {i8* getelementptr inbounds ([42 x i8], [42 x i8]* @__str$11c, i64 0, i32 0), i64 41}, i64 267, i64 2, %..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$11d, i64 0, i32 0), i64 11})
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %2
	store {%..any*, i64} %44, {%..any*, i64}* %2
	store %Source_Code_Location zeroinitializer, %Source_Code_Location* %3
	store %Source_Code_Location %45, %Source_Code_Location* %3
	%46 = call i1 @assert(i1 %43, %..string zeroinitializer, {%..any*, i64}* %2, %Source_Code_Location* %3)
	; filepath_c
	store [1024 x i8] zeroinitializer, [1024 x i8]* %4
		; SelectorExpr
	; IndexExpr
	%47 = getelementptr inbounds [1024 x i8], [1024 x i8]* %4, i64 0, i32 0
	%48 = getelementptr inbounds i8, i8* %47, i64 0
	; IndexExpr
	%49 = load %..string, %..string* %0, align 8
	%50 = extractvalue %..string %49, 0
	%51 = extractvalue %..string %49, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([42 x i8], [42 x i8]* @__str$11e, i64 0, i32 0), i64 41}, i64 269, i64 37, i64 0, i64 %51)
	%52 = getelementptr inbounds i8, i8* %50, i64 0
	%53 = getelementptr inbounds i8, i8* %52, i64 0
	%54 = load %..string, %..string* %0, align 8
	%55 = extractvalue %..string %54, 1
	%56 = bitcast i8* %48 to %..rawptr
	%57 = bitcast i8* %53 to %..rawptr
	%58 = call %..rawptr @mem-16.copy(%..rawptr %56, %..rawptr %57, i64 %55)
	; AssignStmt
	; IndexExpr
	%59 = load %..string, %..string* %0, align 8
	%60 = extractvalue %..string %59, 1
	%61 = trunc i64 %60 to i32
	%62 = getelementptr inbounds [1024 x i8], [1024 x i8]* %4, i64 0, i32 %61
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([42 x i8], [42 x i8]* @__str$11f, i64 0, i32 0), i64 41}, i64 270, i64 13, i64 %60, i64 1024)
	store i8 0, i8* %62
	; SelectorExpr
	call ccc void @stbi_set_flip_vertically_on_load(i32 1)
	; w
	store i32 zeroinitializer, i32* %5
		; h
	store i32 zeroinitializer, i32* %6
		; channels
	store i32 zeroinitializer, i32* %7
		; texture_data
		; SelectorExpr
	; IndexExpr
	%63 = getelementptr inbounds [1024 x i8], [1024 x i8]* %4, i64 0, i32 0
	%64 = getelementptr inbounds i8, i8* %63, i64 0
	%65 = getelementptr inbounds i32, i32* %5, i64 0
	%66 = getelementptr inbounds i32, i32* %6, i64 0
	%67 = getelementptr inbounds i32, i32* %7, i64 0
	%68 = call ccc i8* @stbi_load(i8* %64, i32* %65, i32* %66, i32* %67, i32 0)
	store i8* %68, i8** %8
	; SelectorExpr
	%69 = load void (i32, i32)*, void (i32, i32)** @gl-21.BindTexture, align 8
	%70 = load i32, i32* @engine-10.atlas_texture, align 4
	call ccc void %69(i32 3553, i32 %70)
	; SelectorExpr
	%71 = load void (i32, i32, i32, i32, i32, i32, i32, i32, %..rawptr)*, void (i32, i32, i32, i32, i32, i32, i32, i32, %..rawptr)** @gl-21.TexSubImage2D, align 8
	%72 = load i32, i32* @engine-10.atlas_x, align 4
	%73 = load i32, i32* %5, align 4
	%74 = load i32, i32* %6, align 4
	%75 = load i8*, i8** %8, align 8
	%76 = bitcast i8* %75 to %..rawptr
	call ccc void %71(i32 3553, i32 0, i32 %72, i32 0, i32 %73, i32 %74, i32 6408, i32 5121, %..rawptr %76)
	; SelectorExpr
	%77 = load void (i32, i32, i32)*, void (i32, i32, i32)** @gl-21.TexParameteri, align 8
	call ccc void %77(i32 3553, i32 10242, i32 33648)
	; SelectorExpr
	%78 = load void (i32, i32, i32)*, void (i32, i32, i32)** @gl-21.TexParameteri, align 8
	call ccc void %78(i32 3553, i32 10243, i32 33648)
	; SelectorExpr
	%79 = load void (i32, i32, i32)*, void (i32, i32, i32)** @gl-21.TexParameteri, align 8
	call ccc void %79(i32 3553, i32 10241, i32 9728)
	; SelectorExpr
	%80 = load void (i32, i32, i32)*, void (i32, i32, i32)** @gl-21.TexParameteri, align 8
	call ccc void %80(i32 3553, i32 10240, i32 9728)
	; x01
		%81 = load i32, i32* @engine-10.atlas_x, align 4
	%82 = sitofp i32 %81 to float
	%83 = fdiv float %82, 0x40a0000000000000
	store float %83, float* %9
	; y01
		store float 0x0000000000000000, float* %10
	; w01
		%84 = load i32, i32* %5, align 4
	%85 = sitofp i32 %84 to float
	%86 = fdiv float %85, 0x40a0000000000000
	store float %86, float* %11
	; h01
		%87 = load i32, i32* %6, align 4
	%88 = sitofp i32 %87 to float
	%89 = fdiv float %88, 0x40a0000000000000
	store float %89, float* %12
	; coords
		; CompoundLit
	store [6 x %engine-10.load_sprite.Metadata_Texture_Entry-1047] zeroinitializer, [6 x %engine-10.load_sprite.Metadata_Texture_Entry-1047]* %14
	store [6 x %engine-10.load_sprite.Metadata_Texture_Entry-1047] [%engine-10.load_sprite.Metadata_Texture_Entry-1047 zeroinitializer, %engine-10.load_sprite.Metadata_Texture_Entry-1047 zeroinitializer, %engine-10.load_sprite.Metadata_Texture_Entry-1047 zeroinitializer, %engine-10.load_sprite.Metadata_Texture_Entry-1047 zeroinitializer, %engine-10.load_sprite.Metadata_Texture_Entry-1047 zeroinitializer, %engine-10.load_sprite.Metadata_Texture_Entry-1047 zeroinitializer], [6 x %engine-10.load_sprite.Metadata_Texture_Entry-1047]* %14
	; CompoundLit
	store %engine-10.load_sprite.Metadata_Texture_Entry-1047 zeroinitializer, %engine-10.load_sprite.Metadata_Texture_Entry-1047* %15
	store %engine-10.load_sprite.Metadata_Texture_Entry-1047 {{[0 x <8 x i8>], [2 x float]} zeroinitializer}, %engine-10.load_sprite.Metadata_Texture_Entry-1047* %15
	; CompoundLit
	store {[0 x <8 x i8>], [2 x float]} zeroinitializer, {[0 x <8 x i8>], [2 x float]}* %16
	store {[0 x <8 x i8>], [2 x float]} {[0 x <8 x i8>] zeroinitializer, [2 x float][float zeroinitializer, float zeroinitializer]}, {[0 x <8 x i8>], [2 x float]}* %16
	%90 = load float, float* %9, align 4
	%91 = getelementptr inbounds {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %16, i64 0, i32 1, i32 0
	store float %90, float* %91
	%92 = load float, float* %10, align 4
	%93 = getelementptr inbounds {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %16, i64 0, i32 1, i32 1
	store float %92, float* %93
	%94 = load {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %16, align 8
	%95 = getelementptr inbounds %engine-10.load_sprite.Metadata_Texture_Entry-1047, %engine-10.load_sprite.Metadata_Texture_Entry-1047* %15, i64 0, i32 0
	store {[0 x <8 x i8>], [2 x float]} %94, {[0 x <8 x i8>], [2 x float]}* %95
	%96 = load %engine-10.load_sprite.Metadata_Texture_Entry-1047, %engine-10.load_sprite.Metadata_Texture_Entry-1047* %15, align 8
	%97 = getelementptr inbounds [6 x %engine-10.load_sprite.Metadata_Texture_Entry-1047], [6 x %engine-10.load_sprite.Metadata_Texture_Entry-1047]* %14, i64 0, i32 0
	store %engine-10.load_sprite.Metadata_Texture_Entry-1047 %96, %engine-10.load_sprite.Metadata_Texture_Entry-1047* %97
	; CompoundLit
	store %engine-10.load_sprite.Metadata_Texture_Entry-1047 zeroinitializer, %engine-10.load_sprite.Metadata_Texture_Entry-1047* %17
	store %engine-10.load_sprite.Metadata_Texture_Entry-1047 {{[0 x <8 x i8>], [2 x float]} zeroinitializer}, %engine-10.load_sprite.Metadata_Texture_Entry-1047* %17
	; CompoundLit
	store {[0 x <8 x i8>], [2 x float]} zeroinitializer, {[0 x <8 x i8>], [2 x float]}* %18
	store {[0 x <8 x i8>], [2 x float]} {[0 x <8 x i8>] zeroinitializer, [2 x float][float zeroinitializer, float zeroinitializer]}, {[0 x <8 x i8>], [2 x float]}* %18
	%98 = load float, float* %9, align 4
	%99 = getelementptr inbounds {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %18, i64 0, i32 1, i32 0
	store float %98, float* %99
	%100 = load float, float* %10, align 4
	%101 = load float, float* %12, align 4
	%102 = fadd float %100, %101
	%103 = getelementptr inbounds {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %18, i64 0, i32 1, i32 1
	store float %102, float* %103
	%104 = load {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %18, align 8
	%105 = getelementptr inbounds %engine-10.load_sprite.Metadata_Texture_Entry-1047, %engine-10.load_sprite.Metadata_Texture_Entry-1047* %17, i64 0, i32 0
	store {[0 x <8 x i8>], [2 x float]} %104, {[0 x <8 x i8>], [2 x float]}* %105
	%106 = load %engine-10.load_sprite.Metadata_Texture_Entry-1047, %engine-10.load_sprite.Metadata_Texture_Entry-1047* %17, align 8
	%107 = getelementptr inbounds [6 x %engine-10.load_sprite.Metadata_Texture_Entry-1047], [6 x %engine-10.load_sprite.Metadata_Texture_Entry-1047]* %14, i64 0, i32 1
	store %engine-10.load_sprite.Metadata_Texture_Entry-1047 %106, %engine-10.load_sprite.Metadata_Texture_Entry-1047* %107
	; CompoundLit
	store %engine-10.load_sprite.Metadata_Texture_Entry-1047 zeroinitializer, %engine-10.load_sprite.Metadata_Texture_Entry-1047* %19
	store %engine-10.load_sprite.Metadata_Texture_Entry-1047 {{[0 x <8 x i8>], [2 x float]} zeroinitializer}, %engine-10.load_sprite.Metadata_Texture_Entry-1047* %19
	; CompoundLit
	store {[0 x <8 x i8>], [2 x float]} zeroinitializer, {[0 x <8 x i8>], [2 x float]}* %20
	store {[0 x <8 x i8>], [2 x float]} {[0 x <8 x i8>] zeroinitializer, [2 x float][float zeroinitializer, float zeroinitializer]}, {[0 x <8 x i8>], [2 x float]}* %20
	%108 = load float, float* %9, align 4
	%109 = load float, float* %11, align 4
	%110 = fadd float %108, %109
	%111 = getelementptr inbounds {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %20, i64 0, i32 1, i32 0
	store float %110, float* %111
	%112 = load float, float* %10, align 4
	%113 = load float, float* %12, align 4
	%114 = fadd float %112, %113
	%115 = getelementptr inbounds {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %20, i64 0, i32 1, i32 1
	store float %114, float* %115
	%116 = load {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %20, align 8
	%117 = getelementptr inbounds %engine-10.load_sprite.Metadata_Texture_Entry-1047, %engine-10.load_sprite.Metadata_Texture_Entry-1047* %19, i64 0, i32 0
	store {[0 x <8 x i8>], [2 x float]} %116, {[0 x <8 x i8>], [2 x float]}* %117
	%118 = load %engine-10.load_sprite.Metadata_Texture_Entry-1047, %engine-10.load_sprite.Metadata_Texture_Entry-1047* %19, align 8
	%119 = getelementptr inbounds [6 x %engine-10.load_sprite.Metadata_Texture_Entry-1047], [6 x %engine-10.load_sprite.Metadata_Texture_Entry-1047]* %14, i64 0, i32 2
	store %engine-10.load_sprite.Metadata_Texture_Entry-1047 %118, %engine-10.load_sprite.Metadata_Texture_Entry-1047* %119
	; CompoundLit
	store %engine-10.load_sprite.Metadata_Texture_Entry-1047 zeroinitializer, %engine-10.load_sprite.Metadata_Texture_Entry-1047* %21
	store %engine-10.load_sprite.Metadata_Texture_Entry-1047 {{[0 x <8 x i8>], [2 x float]} zeroinitializer}, %engine-10.load_sprite.Metadata_Texture_Entry-1047* %21
	; CompoundLit
	store {[0 x <8 x i8>], [2 x float]} zeroinitializer, {[0 x <8 x i8>], [2 x float]}* %22
	store {[0 x <8 x i8>], [2 x float]} {[0 x <8 x i8>] zeroinitializer, [2 x float][float zeroinitializer, float zeroinitializer]}, {[0 x <8 x i8>], [2 x float]}* %22
	%120 = load float, float* %9, align 4
	%121 = load float, float* %11, align 4
	%122 = fadd float %120, %121
	%123 = getelementptr inbounds {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %22, i64 0, i32 1, i32 0
	store float %122, float* %123
	%124 = load float, float* %10, align 4
	%125 = load float, float* %12, align 4
	%126 = fadd float %124, %125
	%127 = getelementptr inbounds {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %22, i64 0, i32 1, i32 1
	store float %126, float* %127
	%128 = load {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %22, align 8
	%129 = getelementptr inbounds %engine-10.load_sprite.Metadata_Texture_Entry-1047, %engine-10.load_sprite.Metadata_Texture_Entry-1047* %21, i64 0, i32 0
	store {[0 x <8 x i8>], [2 x float]} %128, {[0 x <8 x i8>], [2 x float]}* %129
	%130 = load %engine-10.load_sprite.Metadata_Texture_Entry-1047, %engine-10.load_sprite.Metadata_Texture_Entry-1047* %21, align 8
	%131 = getelementptr inbounds [6 x %engine-10.load_sprite.Metadata_Texture_Entry-1047], [6 x %engine-10.load_sprite.Metadata_Texture_Entry-1047]* %14, i64 0, i32 3
	store %engine-10.load_sprite.Metadata_Texture_Entry-1047 %130, %engine-10.load_sprite.Metadata_Texture_Entry-1047* %131
	; CompoundLit
	store %engine-10.load_sprite.Metadata_Texture_Entry-1047 zeroinitializer, %engine-10.load_sprite.Metadata_Texture_Entry-1047* %23
	store %engine-10.load_sprite.Metadata_Texture_Entry-1047 {{[0 x <8 x i8>], [2 x float]} zeroinitializer}, %engine-10.load_sprite.Metadata_Texture_Entry-1047* %23
	; CompoundLit
	store {[0 x <8 x i8>], [2 x float]} zeroinitializer, {[0 x <8 x i8>], [2 x float]}* %24
	store {[0 x <8 x i8>], [2 x float]} {[0 x <8 x i8>] zeroinitializer, [2 x float][float zeroinitializer, float zeroinitializer]}, {[0 x <8 x i8>], [2 x float]}* %24
	%132 = load float, float* %9, align 4
	%133 = load float, float* %11, align 4
	%134 = fadd float %132, %133
	%135 = getelementptr inbounds {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %24, i64 0, i32 1, i32 0
	store float %134, float* %135
	%136 = load float, float* %10, align 4
	%137 = getelementptr inbounds {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %24, i64 0, i32 1, i32 1
	store float %136, float* %137
	%138 = load {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %24, align 8
	%139 = getelementptr inbounds %engine-10.load_sprite.Metadata_Texture_Entry-1047, %engine-10.load_sprite.Metadata_Texture_Entry-1047* %23, i64 0, i32 0
	store {[0 x <8 x i8>], [2 x float]} %138, {[0 x <8 x i8>], [2 x float]}* %139
	%140 = load %engine-10.load_sprite.Metadata_Texture_Entry-1047, %engine-10.load_sprite.Metadata_Texture_Entry-1047* %23, align 8
	%141 = getelementptr inbounds [6 x %engine-10.load_sprite.Metadata_Texture_Entry-1047], [6 x %engine-10.load_sprite.Metadata_Texture_Entry-1047]* %14, i64 0, i32 4
	store %engine-10.load_sprite.Metadata_Texture_Entry-1047 %140, %engine-10.load_sprite.Metadata_Texture_Entry-1047* %141
	; CompoundLit
	store %engine-10.load_sprite.Metadata_Texture_Entry-1047 zeroinitializer, %engine-10.load_sprite.Metadata_Texture_Entry-1047* %25
	store %engine-10.load_sprite.Metadata_Texture_Entry-1047 {{[0 x <8 x i8>], [2 x float]} zeroinitializer}, %engine-10.load_sprite.Metadata_Texture_Entry-1047* %25
	; CompoundLit
	store {[0 x <8 x i8>], [2 x float]} zeroinitializer, {[0 x <8 x i8>], [2 x float]}* %26
	store {[0 x <8 x i8>], [2 x float]} {[0 x <8 x i8>] zeroinitializer, [2 x float][float zeroinitializer, float zeroinitializer]}, {[0 x <8 x i8>], [2 x float]}* %26
	%142 = load float, float* %9, align 4
	%143 = getelementptr inbounds {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %26, i64 0, i32 1, i32 0
	store float %142, float* %143
	%144 = load float, float* %10, align 4
	%145 = getelementptr inbounds {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %26, i64 0, i32 1, i32 1
	store float %144, float* %145
	%146 = load {[0 x <8 x i8>], [2 x float]}, {[0 x <8 x i8>], [2 x float]}* %26, align 8
	%147 = getelementptr inbounds %engine-10.load_sprite.Metadata_Texture_Entry-1047, %engine-10.load_sprite.Metadata_Texture_Entry-1047* %25, i64 0, i32 0
	store {[0 x <8 x i8>], [2 x float]} %146, {[0 x <8 x i8>], [2 x float]}* %147
	%148 = load %engine-10.load_sprite.Metadata_Texture_Entry-1047, %engine-10.load_sprite.Metadata_Texture_Entry-1047* %25, align 8
	%149 = getelementptr inbounds [6 x %engine-10.load_sprite.Metadata_Texture_Entry-1047], [6 x %engine-10.load_sprite.Metadata_Texture_Entry-1047]* %14, i64 0, i32 5
	store %engine-10.load_sprite.Metadata_Texture_Entry-1047 %148, %engine-10.load_sprite.Metadata_Texture_Entry-1047* %149
	%150 = load [6 x %engine-10.load_sprite.Metadata_Texture_Entry-1047], [6 x %engine-10.load_sprite.Metadata_Texture_Entry-1047]* %14, align 8
	store [6 x %engine-10.load_sprite.Metadata_Texture_Entry-1047] %150, [6 x %engine-10.load_sprite.Metadata_Texture_Entry-1047]* %13
	; SelectorExpr
	%151 = load void (i32, i32)*, void (i32, i32)** @gl-21.BindTexture, align 8
	%152 = load i32, i32* @engine-10.metadata_texture, align 4
	call ccc void %151(i32 3552, i32 %152)
	; SelectorExpr
	%153 = load void (i32, i32, i32, i32, i32, i32, %..rawptr)*, void (i32, i32, i32, i32, i32, i32, %..rawptr)** @gl-21.TexSubImage1D, align 8
	%154 = load i32, i32* @engine-10.sprite_index, align 4
	%155 = mul i32 %154, 6
	; IndexExpr
	%156 = getelementptr inbounds [6 x %engine-10.load_sprite.Metadata_Texture_Entry-1047], [6 x %engine-10.load_sprite.Metadata_Texture_Entry-1047]* %13, i64 0, i32 0
	%157 = getelementptr inbounds %engine-10.load_sprite.Metadata_Texture_Entry-1047, %engine-10.load_sprite.Metadata_Texture_Entry-1047* %156, i64 0
	%158 = bitcast %engine-10.load_sprite.Metadata_Texture_Entry-1047* %157 to %..rawptr
	call ccc void %153(i32 3552, i32 0, i32 %155, i32 6, i32 33319, i32 5126, %..rawptr %158)
	%159 = call %Source_Code_Location @make_source_code_location(%..string {i8* getelementptr inbounds ([42 x i8], [42 x i8]* @__str$120, i64 0, i32 0), i64 41}, i64 305, i64 2, %..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$121, i64 0, i32 0), i64 11})
	store %Source_Code_Location zeroinitializer, %Source_Code_Location* %27
	store %Source_Code_Location %159, %Source_Code_Location* %27
	call void @engine-10.print_errors(%Source_Code_Location* %27, %Context* noalias nonnull %__.context_ptr)
	; sprite
	store %engine-10.Sprite zeroinitializer, %engine-10.Sprite* %28
		; AssignStmt
	; SelectorExpr
	%160 = getelementptr inbounds %engine-10.Sprite, %engine-10.Sprite* %28, i64 0, i32 0
	%161 = load i32, i32* @engine-10.sprite_index, align 4
	store i32 %161, i32* %160
	; AssignStmt
	; SelectorExpr
	%162 = getelementptr inbounds %engine-10.Sprite, %engine-10.Sprite* %28, i64 0, i32 1
	%163 = load i32, i32* %5, align 4
	store i32 %163, i32* %162
	; AssignStmt
	; SelectorExpr
	%164 = getelementptr inbounds %engine-10.Sprite, %engine-10.Sprite* %28, i64 0, i32 2
	%165 = load i32, i32* %6, align 4
	store i32 %165, i32* %164
	; AssignStmt
	%166 = load i32, i32* %5, align 4
	%167 = load i32, i32* @engine-10.atlas_x, align 4
	%168 = add i32 %167, %166
	store i32 %168, i32* @engine-10.atlas_x
	; AssignStmt
	%169 = load i32, i32* @engine-10.sprite_index, align 4
	%170 = add i32 %169, 1
	store i32 %170, i32* @engine-10.sprite_index
	; ReturnStmt
	%171 = load %engine-10.Sprite, %engine-10.Sprite* %28, align 4
	ret %engine-10.Sprite %171
}

define void @engine-10.print_errors(%Source_Code_Location* %location, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca i32, align 4
	%1 = alloca %..any, align 8
	%2 = alloca %..any, align 8
	%3 = alloca {%..any*, i64}, align 8
	%4 = alloca [2 x %..any], align 8
	%5 = alloca {%..any*, i64}, align 16
	%6 = load %Source_Code_Location, %Source_Code_Location* %location, align 8
	; ForStmt
	br label %for.body-1

for.body-1:
	; err
		; SelectorExpr
	%7 = load i32 ()*, i32 ()** @gl-21.GetError, align 8
	%8 = call ccc i32 %7()
	store i32 %8, i32* %0
	; IfStmt
	%9 = load i32, i32* %0, align 4
	%10 = icmp eq i32 %9, 0
	br i1 %10, label %if.then-2, label %if.done-3

if.then-2:
	; break
	ret void

if.done-3:
	; SelectorExpr
	%11 = load %Source_Code_Location, %Source_Code_Location* %location, align 8
	%12 = load i32, i32* %0, align 4
	store %..any zeroinitializer, %..any* %1
	%13 = bitcast %Source_Code_Location* %location to %..rawptr
	%14 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 81
	%15 = getelementptr inbounds %..any, %..any* %1, i64 0, i32 0
	store %..rawptr %13, %..rawptr* %15
	%16 = getelementptr inbounds %..any, %..any* %1, i64 0, i32 1
	store %Type_Info* %14, %Type_Info** %16
	%17 = load %..any, %..any* %1, align 8
	store %..any zeroinitializer, %..any* %2
	%18 = bitcast i32* %0 to %..rawptr
	%19 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	%20 = getelementptr inbounds %..any, %..any* %2, i64 0, i32 0
	store %..rawptr %18, %..rawptr* %20
	%21 = getelementptr inbounds %..any, %..any* %2, i64 0, i32 1
	store %Type_Info* %19, %Type_Info** %21
	%22 = load %..any, %..any* %2, align 8
	; variadic call argument generation
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %3
	store [2 x %..any] zeroinitializer, [2 x %..any]* %4
	%23 = getelementptr inbounds [2 x %..any], [2 x %..any]* %4, i64 0, i32 0
	store %..any %17, %..any* %23
	%24 = getelementptr inbounds [2 x %..any], [2 x %..any]* %4, i64 0, i32 1
	store %..any %22, %..any* %24
	%25 = getelementptr inbounds [2 x %..any], [2 x %..any]* %4, i64 0, i32 0
	%26 = getelementptr inbounds {%..any*, i64}, {%..any*, i64}* %3, i64 0, i32 0
	store %..any* %25, %..any** %26
	%27 = getelementptr inbounds {%..any*, i64}, {%..any*, i64}* %3, i64 0, i32 1
	store i64 2, i64* %27
	%28 = load {%..any*, i64}, {%..any*, i64}* %3, align 8
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %5
	store {%..any*, i64} %28, {%..any*, i64}* %5
	%29 = call i64 @fmt-4.println({%..any*, i64}* %5, %Context* noalias nonnull %__.context_ptr)
	br label %for.body-1
}

define i32 @engine-10.get_uniform_location(i32 %program, %..string %str, %Context* noalias nonnull %__.context_ptr) alwaysinline #1 {
decls-0:
	%0 = alloca i32, align 4
	%1 = alloca %..string, align 8
		store i32 %program, i32* %0
		store %..string %str, %..string* %1
	; ReturnStmt
	; SelectorExpr
	%2 = load i32 (i32, i8*)*, i32 (i32, i8*)** @gl-21.GetUniformLocation, align 8
	%3 = load i32, i32* %0, align 4
	; IndexExpr
	%4 = load %..string, %..string* %1, align 8
	%5 = extractvalue %..string %4, 0
	%6 = extractvalue %..string %4, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([42 x i8], [42 x i8]* @__str$122, i64 0, i32 0), i64 41}, i64 330, i64 45, i64 0, i64 %6)
	%7 = getelementptr inbounds i8, i8* %5, i64 0
	%8 = getelementptr inbounds i8, i8* %7, i64 0
	%9 = call ccc i32 %2(i32 %3, i8* %8)
	ret i32 %9
}

define {i64, i64} @os_windows-12.open(%..string %path, i64 %mode, i32 %perm, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca %..string, align 8
	%1 = alloca i64, align 8
	%2 = alloca i32, align 4
	%3 = alloca {i64, i64}, align 8
	%4 = alloca i32, align 4
	%5 = alloca i32, align 4
	%6 = alloca %windows-23.Security_Attributes*, align 8
	%7 = alloca %windows-23.Security_Attributes, align 8
	%8 = alloca i32, align 4
	%9 = alloca [300 x i8], align 1
	%10 = alloca {i8*, i64}, align 8
	%11 = alloca i8*, align 8
	%12 = alloca {i8*, i64}, align 8
	%13 = alloca {i8*, i64}, align 16
	%14 = alloca {i8*, i64}, align 16
	%15 = alloca i64, align 8
	%16 = alloca {i64, i64}, align 8
	%17 = alloca i64, align 8
	%18 = alloca {i64, i64}, align 8
		store %..string %path, %..string* %0
		store i64 %mode, i64* %1
		store i32 %perm, i32* %2
	; IfStmt
	%19 = load %..string, %..string* %0, align 8
	%20 = extractvalue %..string %19, 1
	%21 = icmp eq i64 %20, 0
	br i1 %21, label %if.then-1, label %if.done-2

if.then-1:
	; ReturnStmt
	store {i64, i64} zeroinitializer, {i64, i64}* %3
	%22 = getelementptr inbounds {i64, i64}, {i64, i64}* %3, i64 0, i32 0
	store i64 18446744073709551615, i64* %22
	%23 = getelementptr inbounds {i64, i64}, {i64, i64}* %3, i64 0, i32 1
	store i64 2, i64* %23
	%24 = load {i64, i64}, {i64, i64}* %3, align 8
	ret {i64, i64} %24

if.done-2:
	; access
	store i32 zeroinitializer, i32* %4
		; SwitchStmt
	%25 = load i64, i64* %1, align 8
	%26 = and i64 %25, 3
	%27 = icmp eq i64 %26, 0
	br i1 %27, label %switch.case.body-4, label %switch.case.next-3

switch.case.next-3:
	%28 = icmp eq i64 %26, 1
	br i1 %28, label %switch.fall.body-6, label %switch.case.next-5

switch.case.body-4:
	; AssignStmt
	store i32 2147483648, i32* %4
	br label %switch.done-9

switch.case.next-5:
	%29 = icmp eq i64 %26, 2
	br i1 %29, label %switch.fall.body-8, label %switch.case.next-7

switch.fall.body-6:
	; AssignStmt
	store i32 1073741824, i32* %4
	br label %switch.done-9

switch.case.next-7:
	br label %switch.done-9

switch.fall.body-8:
	; AssignStmt
	store i32 3221225472, i32* %4
	br label %switch.done-9

switch.done-9:
	; IfStmt
	%30 = load i64, i64* %1, align 8
	%31 = and i64 %30, 64
	%32 = icmp ne i64 %31, 0
	br i1 %32, label %if.then-10, label %if.done-11

if.then-10:
	; AssignStmt
	%33 = load i32, i32* %4, align 4
	%34 = or i32 %33, 1073741824
	store i32 %34, i32* %4
	br label %if.done-11

if.done-11:
	; IfStmt
	%35 = load i64, i64* %1, align 8
	%36 = and i64 %35, 1024
	%37 = icmp ne i64 %36, 0
	br i1 %37, label %if.then-12, label %if.done-13

if.then-12:
	; AssignStmt
	%38 = load i32, i32* %4, align 4
	%39 = xor i32 1073741824, -1
	%40 = and i32 %38, %39
	store i32 %40, i32* %4
	; AssignStmt
	%41 = load i32, i32* %4, align 4
	%42 = or i32 %41, 4
	store i32 %42, i32* %4
	br label %if.done-13

if.done-13:
	; share_mode
		store i32 3, i32* %5
	; sa
		store %windows-23.Security_Attributes* zeroinitializer, %windows-23.Security_Attributes** %6
	; sa_inherit
		store %windows-23.Security_Attributes {i32 24, %..rawptr zeroinitializer, i32 1}, %windows-23.Security_Attributes* %7
	; IfStmt
	%43 = load i64, i64* %1, align 8
	%44 = and i64 %43, 524288
	%45 = icmp eq i64 %44, 0
	br i1 %45, label %if.then-14, label %if.done-15

if.then-14:
	; AssignStmt
	%46 = getelementptr inbounds %windows-23.Security_Attributes, %windows-23.Security_Attributes* %7, i64 0
	store %windows-23.Security_Attributes* %46, %windows-23.Security_Attributes** %6
	br label %if.done-15

if.done-15:
	; create_mode
	store i32 zeroinitializer, i32* %8
		; SwitchStmt
	%47 = load i64, i64* %1, align 8
	%48 = and i64 %47, 192
	%49 = icmp eq i64 %48, 192
	%50 = icmp eq i1 true, %49
	br i1 %50, label %switch.case.body-17, label %switch.case.next-16

switch.case.next-16:
	%51 = load i64, i64* %1, align 8
	%52 = and i64 %51, 576
	%53 = icmp eq i64 %52, 576
	%54 = icmp eq i1 true, %53
	br i1 %54, label %switch.fall.body-19, label %switch.case.next-18

switch.case.body-17:
	; AssignStmt
	store i32 1, i32* %8
	br label %switch.done-24

switch.case.next-18:
	%55 = load i64, i64* %1, align 8
	%56 = and i64 %55, 64
	%57 = icmp eq i64 %56, 64
	%58 = icmp eq i1 true, %57
	br i1 %58, label %switch.fall.body-21, label %switch.case.next-20

switch.fall.body-19:
	; AssignStmt
	store i32 2, i32* %8
	br label %switch.done-24

switch.case.next-20:
	%59 = load i64, i64* %1, align 8
	%60 = and i64 %59, 512
	%61 = icmp eq i64 %60, 512
	%62 = icmp eq i1 true, %61
	br i1 %62, label %switch.fall.body-23, label %switch.case.next-22

switch.fall.body-21:
	; AssignStmt
	store i32 4, i32* %8
	br label %switch.done-24

switch.case.next-22:
	; AssignStmt
	store i32 3, i32* %8
	br label %switch.done-24

switch.fall.body-23:
	; AssignStmt
	store i32 5, i32* %8
	br label %switch.done-24

switch.done-24:
	; buf
	store [300 x i8] zeroinitializer, [300 x i8]* %9
		; SliceExpr
	%63 = load [300 x i8], [300 x i8]* %9, align 1
	call void @__slice_expr_error(%..string {i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__str$123, i64 0, i32 0), i64 35}, i64 99, i64 10, i64 0, i64 300)
	%64 = getelementptr inbounds [300 x i8], [300 x i8]* %9, i64 0, i32 0
	%65 = getelementptr inbounds i8, i8* %64, i64 0
	%66 = sub i64 300, 0
	store {i8*, i64} zeroinitializer, {i8*, i64}* %10
	%67 = getelementptr inbounds {i8*, i64}, {i8*, i64}* %10, i64 0, i32 0
	store i8* %65, i8** %67
	%68 = getelementptr inbounds {i8*, i64}, {i8*, i64}* %10, i64 0, i32 1
	store i64 %66, i64* %68
	%69 = load {i8*, i64}, {i8*, i64}* %10, align 8
	%70 = load %..string, %..string* %0, align 8
	%71 = extractvalue %..string %70, 0
	store i8* zeroinitializer, i8** %11
	store i8* %71, i8** %11
	%72 = extractvalue %..string %70, 1
	%73 = sub i64 %72, 0
	%74 = load i8*, i8** %11, align 8
	%75 = getelementptr inbounds i8, i8* %74, i64 0
	store {i8*, i64} zeroinitializer, {i8*, i64}* %12
	%76 = getelementptr inbounds {i8*, i64}, {i8*, i64}* %12, i64 0, i32 0
	store i8* %75, i8** %76
	%77 = getelementptr inbounds {i8*, i64}, {i8*, i64}* %12, i64 0, i32 1
	store i64 %73, i64* %77
	%78 = load {i8*, i64}, {i8*, i64}* %12, align 8
	store {i8*, i64} zeroinitializer, {i8*, i64}* %13
	store {i8*, i64} %69, {i8*, i64}* %13
	store {i8*, i64} zeroinitializer, {i8*, i64}* %14
	store {i8*, i64} %78, {i8*, i64}* %14
	%79 = call i64 @_preload-0.copy-13377({i8*, i64}* %13, {i8*, i64}* %14)
	; handle
		; SelectorExpr
	; IndexExpr
	%80 = getelementptr inbounds [300 x i8], [300 x i8]* %9, i64 0, i32 0
	%81 = getelementptr inbounds i8, i8* %80, i64 0
	%82 = load i32, i32* %4, align 4
	%83 = load i32, i32* %5, align 4
	%84 = load %windows-23.Security_Attributes*, %windows-23.Security_Attributes** %6, align 8
	%85 = load i32, i32* %8, align 4
	%86 = bitcast %windows-23.Security_Attributes* %84 to %..rawptr
	%87 = call cc 64 %..rawptr @CreateFileA(i8* %81, i32 %82, i32 %83, %..rawptr %86, i32 %85, i32 128, %..rawptr zeroinitializer)
	%88 = ptrtoint %..rawptr %87 to i64
	store i64 %88, i64* %15
	; IfStmt
	%89 = load i64, i64* %15, align 8
	%90 = icmp ne i64 %89, 18446744073709551615
	br i1 %90, label %if.then-25, label %if.done-26

if.then-25:
	; ReturnStmt
	%91 = load i64, i64* %15, align 8
	store {i64, i64} zeroinitializer, {i64, i64}* %16
	%92 = getelementptr inbounds {i64, i64}, {i64, i64}* %16, i64 0, i32 0
	store i64 %91, i64* %92
	%93 = getelementptr inbounds {i64, i64}, {i64, i64}* %16, i64 0, i32 1
	store i64 0, i64* %93
	%94 = load {i64, i64}, {i64, i64}* %16, align 8
	ret {i64, i64} %94

if.done-26:
	; err
		; SelectorExpr
	%95 = call cc 64 i32 @GetLastError()
	%96 = sext i32 %95 to i64
	store i64 %96, i64* %17
	; ReturnStmt
	%97 = load i64, i64* %17, align 8
	store {i64, i64} zeroinitializer, {i64, i64}* %18
	%98 = getelementptr inbounds {i64, i64}, {i64, i64}* %18, i64 0, i32 0
	store i64 18446744073709551615, i64* %98
	%99 = getelementptr inbounds {i64, i64}, {i64, i64}* %18, i64 0, i32 1
	store i64 %97, i64* %99
	%100 = load {i64, i64}, {i64, i64}* %18, align 8
	ret {i64, i64} %100
}

define void @os_windows-12.close(i64 %fd, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca i64, align 8
		store i64 %fd, i64* %0
	; SelectorExpr
	%1 = load i64, i64* %0, align 8
	%2 = inttoptr i64 %1 to %..rawptr
	%3 = call cc 64 i32 @CloseHandle(%..rawptr %2)
	ret void
}

define {i64, i64} @os_windows-12.write(i64 %fd, {i8*, i64}* %data, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca i64, align 8
	%1 = alloca {i64, i64}, align 8
	%2 = alloca i32, align 4
	%3 = alloca i64, align 8
	%4 = alloca i64, align 8
	%5 = alloca i64, align 8
	%6 = alloca i32, align 4
	%7 = alloca i32, align 4
	%8 = alloca i64, align 8
	%9 = alloca {i64, i64}, align 8
	%10 = alloca {i64, i64}, align 8
		store i64 %fd, i64* %0
	%11 = load {i8*, i64}, {i8*, i64}* %data, align 8
	; IfStmt
	%12 = load {i8*, i64}, {i8*, i64}* %data, align 8
	%13 = extractvalue {i8*, i64} %12, 1
	%14 = icmp eq i64 %13, 0
	br i1 %14, label %if.then-1, label %if.done-2

if.then-1:
	; ReturnStmt
	store {i64, i64} zeroinitializer, {i64, i64}* %1
	%15 = getelementptr inbounds {i64, i64}, {i64, i64}* %1, i64 0, i32 0
	store i64 0, i64* %15
	%16 = getelementptr inbounds {i64, i64}, {i64, i64}* %1, i64 0, i32 1
	store i64 0, i64* %16
	%17 = load {i64, i64}, {i64, i64}* %1, align 8
	ret {i64, i64} %17

if.done-2:
	; single_write_length
	store i32 zeroinitializer, i32* %2
		; total_write
	store i64 zeroinitializer, i64* %3
		; length
		%18 = load {i8*, i64}, {i8*, i64}* %data, align 8
	%19 = extractvalue {i8*, i64} %18, 1
	%20 = bitcast i64 %19 to i64
	store i64 %20, i64* %4
	; ForStmt
	br label %for.loop-3

for.loop-3:
	%21 = load i64, i64* %3, align 8
	%22 = load i64, i64* %4, align 8
	%23 = icmp slt i64 %21, %22
	br i1 %23, label %for.body-4, label %for.done-8

for.body-4:
	; remaining
		%24 = load i64, i64* %4, align 8
	%25 = load i64, i64* %3, align 8
	%26 = sub i64 %24, %25
	store i64 %26, i64* %5
	; to_write
		; min
	%27 = load i64, i64* %5, align 8
	%28 = trunc i64 %27 to i32
	%29 = icmp slt i32 %28, 2147483647
	%30 = select i1 %29, i32 %28, i32 2147483647
	store i32 %30, i32* %6
	; e
		; SelectorExpr
	%31 = load i64, i64* %0, align 8
	%32 = inttoptr i64 %31 to %..rawptr
	; IndexExpr
	%33 = load {i8*, i64}, {i8*, i64}* %data, align 8
	%34 = extractvalue {i8*, i64} %33, 0
	%35 = load i64, i64* %3, align 8
	%36 = bitcast i64 %35 to i64
	%37 = extractvalue {i8*, i64} %33, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__str$124, i64 0, i32 0), i64 35}, i64 125, i64 49, i64 %36, i64 %37)
	%38 = getelementptr inbounds i8, i8* %34, i64 %36
	%39 = getelementptr inbounds i8, i8* %38, i64 0
	%40 = load i32, i32* %6, align 4
	%41 = getelementptr inbounds i32, i32* %2, i64 0
	%42 = bitcast i8* %39 to %..rawptr
	%43 = call cc 64 i32 @WriteFile(%..rawptr %32, %..rawptr %42, i32 %40, i32* %41, %..rawptr zeroinitializer)
	store i32 %43, i32* %7
	; IfStmt
	%44 = load i32, i32* %2, align 4
	%45 = icmp sle i32 %44, 0
	br i1 %45, label %if.then-6, label %cmp.or-5

cmp.or-5:
	%46 = load i32, i32* %7, align 4
	%47 = icmp eq i32 %46, 0
	br i1 %47, label %if.then-6, label %if.done-7

if.then-6:
	; err
		; SelectorExpr
	%48 = call cc 64 i32 @GetLastError()
	%49 = sext i32 %48 to i64
	store i64 %49, i64* %8
	; ReturnStmt
	%50 = load i64, i64* %3, align 8
	%51 = bitcast i64 %50 to i64
	%52 = load i64, i64* %8, align 8
	store {i64, i64} zeroinitializer, {i64, i64}* %9
	%53 = getelementptr inbounds {i64, i64}, {i64, i64}* %9, i64 0, i32 0
	store i64 %51, i64* %53
	%54 = getelementptr inbounds {i64, i64}, {i64, i64}* %9, i64 0, i32 1
	store i64 %52, i64* %54
	%55 = load {i64, i64}, {i64, i64}* %9, align 8
	ret {i64, i64} %55

if.done-7:
	; AssignStmt
	%56 = load i32, i32* %2, align 4
	%57 = sext i32 %56 to i64
	%58 = load i64, i64* %3, align 8
	%59 = add i64 %58, %57
	store i64 %59, i64* %3
	br label %for.loop-3

for.done-8:
	; ReturnStmt
	%60 = load i64, i64* %3, align 8
	%61 = bitcast i64 %60 to i64
	store {i64, i64} zeroinitializer, {i64, i64}* %10
	%62 = getelementptr inbounds {i64, i64}, {i64, i64}* %10, i64 0, i32 0
	store i64 %61, i64* %62
	%63 = getelementptr inbounds {i64, i64}, {i64, i64}* %10, i64 0, i32 1
	store i64 0, i64* %63
	%64 = load {i64, i64}, {i64, i64}* %10, align 8
	ret {i64, i64} %64
}

define {i64, i64} @os_windows-12.read(i64 %fd, {i8*, i64}* %data, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca i64, align 8
	%1 = alloca {i64, i64}, align 8
	%2 = alloca i32, align 4
	%3 = alloca i64, align 8
	%4 = alloca i64, align 8
	%5 = alloca i64, align 8
	%6 = alloca i32, align 4
	%7 = alloca i32, align 4
	%8 = alloca i64, align 8
	%9 = alloca {i64, i64}, align 8
	%10 = alloca {i64, i64}, align 8
		store i64 %fd, i64* %0
	%11 = load {i8*, i64}, {i8*, i64}* %data, align 8
	; IfStmt
	%12 = load {i8*, i64}, {i8*, i64}* %data, align 8
	%13 = extractvalue {i8*, i64} %12, 1
	%14 = icmp eq i64 %13, 0
	br i1 %14, label %if.then-1, label %if.done-2

if.then-1:
	; ReturnStmt
	store {i64, i64} zeroinitializer, {i64, i64}* %1
	%15 = getelementptr inbounds {i64, i64}, {i64, i64}* %1, i64 0, i32 0
	store i64 0, i64* %15
	%16 = getelementptr inbounds {i64, i64}, {i64, i64}* %1, i64 0, i32 1
	store i64 0, i64* %16
	%17 = load {i64, i64}, {i64, i64}* %1, align 8
	ret {i64, i64} %17

if.done-2:
	; single_read_length
	store i32 zeroinitializer, i32* %2
		; total_read
	store i64 zeroinitializer, i64* %3
		; length
		%18 = load {i8*, i64}, {i8*, i64}* %data, align 8
	%19 = extractvalue {i8*, i64} %18, 1
	%20 = bitcast i64 %19 to i64
	store i64 %20, i64* %4
	; ForStmt
	br label %for.loop-3

for.loop-3:
	%21 = load i64, i64* %3, align 8
	%22 = load i64, i64* %4, align 8
	%23 = icmp slt i64 %21, %22
	br i1 %23, label %for.body-4, label %for.done-8

for.body-4:
	; remaining
		%24 = load i64, i64* %4, align 8
	%25 = load i64, i64* %3, align 8
	%26 = sub i64 %24, %25
	store i64 %26, i64* %5
	; to_read
		; min
	%27 = load i64, i64* %5, align 8
	%28 = trunc i64 %27 to i32
	%29 = icmp ult i32 %28, 4294967295
	%30 = select i1 %29, i32 %28, i32 4294967295
	store i32 %30, i32* %6
	; e
		; SelectorExpr
	%31 = load i64, i64* %0, align 8
	%32 = inttoptr i64 %31 to %..rawptr
	; IndexExpr
	%33 = load {i8*, i64}, {i8*, i64}* %data, align 8
	%34 = extractvalue {i8*, i64} %33, 0
	%35 = load i64, i64* %3, align 8
	%36 = bitcast i64 %35 to i64
	%37 = extractvalue {i8*, i64} %33, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__str$125, i64 0, i32 0), i64 35}, i64 147, i64 48, i64 %36, i64 %37)
	%38 = getelementptr inbounds i8, i8* %34, i64 %36
	%39 = getelementptr inbounds i8, i8* %38, i64 0
	%40 = load i32, i32* %6, align 4
	%41 = getelementptr inbounds i32, i32* %2, i64 0
	%42 = bitcast i8* %39 to %..rawptr
	%43 = call cc 64 i32 @ReadFile(%..rawptr %32, %..rawptr %42, i32 %40, i32* %41, %..rawptr zeroinitializer)
	store i32 %43, i32* %7
	; IfStmt
	%44 = load i32, i32* %2, align 4
	%45 = icmp sle i32 %44, 0
	br i1 %45, label %if.then-6, label %cmp.or-5

cmp.or-5:
	%46 = load i32, i32* %7, align 4
	%47 = icmp eq i32 %46, 0
	br i1 %47, label %if.then-6, label %if.done-7

if.then-6:
	; err
		; SelectorExpr
	%48 = call cc 64 i32 @GetLastError()
	%49 = sext i32 %48 to i64
	store i64 %49, i64* %8
	; ReturnStmt
	%50 = load i64, i64* %3, align 8
	%51 = bitcast i64 %50 to i64
	%52 = load i64, i64* %8, align 8
	store {i64, i64} zeroinitializer, {i64, i64}* %9
	%53 = getelementptr inbounds {i64, i64}, {i64, i64}* %9, i64 0, i32 0
	store i64 %51, i64* %53
	%54 = getelementptr inbounds {i64, i64}, {i64, i64}* %9, i64 0, i32 1
	store i64 %52, i64* %54
	%55 = load {i64, i64}, {i64, i64}* %9, align 8
	ret {i64, i64} %55

if.done-7:
	; AssignStmt
	%56 = load i32, i32* %2, align 4
	%57 = sext i32 %56 to i64
	%58 = load i64, i64* %3, align 8
	%59 = add i64 %58, %57
	store i64 %59, i64* %3
	br label %for.loop-3

for.done-8:
	; ReturnStmt
	%60 = load i64, i64* %3, align 8
	%61 = bitcast i64 %60 to i64
	store {i64, i64} zeroinitializer, {i64, i64}* %10
	%62 = getelementptr inbounds {i64, i64}, {i64, i64}* %10, i64 0, i32 0
	store i64 %61, i64* %62
	%63 = getelementptr inbounds {i64, i64}, {i64, i64}* %10, i64 0, i32 1
	store i64 0, i64* %63
	%64 = load {i64, i64}, {i64, i64}* %10, align 8
	ret {i64, i64} %64
}

define {i64, i64} @os_windows-12.file_size(i64 %fd, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca i64, align 8
	%1 = alloca i64, align 8
	%2 = alloca i64, align 8
	%3 = alloca {i64, i64}, align 8
		store i64 %fd, i64* %0
	; length
	store i64 zeroinitializer, i64* %1
		; err
	store i64 zeroinitializer, i64* %2
		; IfStmt
	; SelectorExpr
	%4 = load i64, i64* %0, align 8
	%5 = inttoptr i64 %4 to %..rawptr
	%6 = getelementptr inbounds i64, i64* %1, i64 0
	%7 = call cc 64 i32 @GetFileSizeEx(%..rawptr %5, i64* %6)
	%8 = icmp eq i32 %7, 0
	br i1 %8, label %if.then-1, label %if.done-2

if.then-1:
	; AssignStmt
	; SelectorExpr
	%9 = call cc 64 i32 @GetLastError()
	%10 = sext i32 %9 to i64
	store i64 %10, i64* %2
	br label %if.done-2

if.done-2:
	; ReturnStmt
	%11 = load i64, i64* %1, align 8
	%12 = load i64, i64* %2, align 8
	store {i64, i64} zeroinitializer, {i64, i64}* %3
	%13 = getelementptr inbounds {i64, i64}, {i64, i64}* %3, i64 0, i32 0
	store i64 %11, i64* %13
	%14 = getelementptr inbounds {i64, i64}, {i64, i64}* %3, i64 0, i32 1
	store i64 %12, i64* %14
	%15 = load {i64, i64}, {i64, i64}* %3, align 8
	ret {i64, i64} %15
}

define i64 @os_windows-12.get_std_handle(i64 %h, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca i64, align 8
	%1 = alloca %..rawptr, align 8
		store i64 %h, i64* %0
	; fd
		; SelectorExpr
	%2 = load i64, i64* %0, align 8
	%3 = trunc i64 %2 to i32
	%4 = call cc 64 %..rawptr @GetStdHandle(i32 %3)
	store %..rawptr %4, %..rawptr* %1
	; SelectorExpr
	%5 = load %..rawptr, %..rawptr* %1, align 8
	%6 = call cc 64 i32 @SetHandleInformation(%..rawptr %5, i32 1, i32 0)
	; ReturnStmt
	%7 = load %..rawptr, %..rawptr* %1, align 8
	%8 = ptrtoint %..rawptr %7 to i64
	ret i64 %8
}

define %..rawptr @os_windows-12.heap_alloc(i64 %size, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca i64, align 8
		store i64 %size, i64* %0
	; ReturnStmt
	; SelectorExpr
	; SelectorExpr
	%1 = call cc 64 %..rawptr @GetProcessHeap()
	%2 = load i64, i64* %0, align 8
	%3 = call cc 64 %..rawptr @HeapAlloc(%..rawptr %1, i32 8, i64 %2)
	ret %..rawptr %3
}

define %..rawptr @os_windows-12.heap_resize(%..rawptr %ptr, i64 %new_size, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca %..rawptr, align 8
	%1 = alloca i64, align 8
		store %..rawptr %ptr, %..rawptr* %0
		store i64 %new_size, i64* %1
	; IfStmt
	%2 = load i64, i64* %1, align 8
	%3 = icmp eq i64 %2, 0
	br i1 %3, label %if.then-1, label %if.done-2

if.then-1:
	%4 = load %..rawptr, %..rawptr* %0, align 8
	call void @os_windows-12.heap_free(%..rawptr %4, %Context* noalias nonnull %__.context_ptr)
	; ReturnStmt
	ret %..rawptr zeroinitializer

if.done-2:
	; IfStmt
	%5 = load %..rawptr, %..rawptr* %0, align 8
	%6 = icmp eq %..rawptr %5, zeroinitializer
	br i1 %6, label %if.then-3, label %if.done-4

if.then-3:
	; ReturnStmt
	%7 = load i64, i64* %1, align 8
	%8 = call %..rawptr @os_windows-12.heap_alloc(i64 %7, %Context* noalias nonnull %__.context_ptr)
	ret %..rawptr %8

if.done-4:
	; ReturnStmt
	; SelectorExpr
	; SelectorExpr
	%9 = call cc 64 %..rawptr @GetProcessHeap()
	%10 = load %..rawptr, %..rawptr* %0, align 8
	%11 = load i64, i64* %1, align 8
	%12 = call cc 64 %..rawptr @HeapReAlloc(%..rawptr %9, i32 8, %..rawptr %10, i64 %11)
	ret %..rawptr %12
}

define void @os_windows-12.heap_free(%..rawptr %ptr, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca %..rawptr, align 8
		store %..rawptr %ptr, %..rawptr* %0
	; IfStmt
	%1 = load %..rawptr, %..rawptr* %0, align 8
	%2 = icmp eq %..rawptr %1, zeroinitializer
	br i1 %2, label %if.then-1, label %if.done-2

if.then-1:
	; ReturnStmt
	ret void

if.done-2:
	; SelectorExpr
	; SelectorExpr
	%3 = call cc 64 %..rawptr @GetProcessHeap()
	%4 = load %..rawptr, %..rawptr* %0, align 8
	%5 = call cc 64 i32 @HeapFree(%..rawptr %3, i32 0, %..rawptr %4)
	ret void
}

define i64 @os_windows-12.current_thread_id(%Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	; ReturnStmt
	; SelectorExpr
	%0 = call cc 64 i32 @GetCurrentThreadId()
	%1 = zext i32 %0 to i64
	ret i64 %1
}

define %..rawptr @mem-16.copy(%..rawptr %dst, %..rawptr %src, i64 %len) #0 {
decls-0:
	%0 = alloca %..rawptr, align 8
	%1 = alloca %..rawptr, align 8
	%2 = alloca i64, align 8
		store %..rawptr %dst, %..rawptr* %0
		store %..rawptr %src, %..rawptr* %1
		store i64 %len, i64* %2
	; ReturnStmt
	%3 = load %..rawptr, %..rawptr* %0, align 8
	%4 = load %..rawptr, %..rawptr* %1, align 8
	%5 = load i64, i64* %2, align 8
	%6 = call %..rawptr @__mem_copy(%..rawptr %3, %..rawptr %4, i64 %5)
	ret %..rawptr %6
}

define i1 @types-17.is_any(%Type_Info* %info, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca %Type_Info*, align 8
	%1 = alloca i1, align 1
	%2 = alloca %Type_Info*, align 8
	%3 = alloca {%Type_Info_Any, i1}, align 1
		store %Type_Info* %info, %Type_Info** %0
	; IfStmt
	%4 = load %Type_Info*, %Type_Info** %0, align 8
	%5 = icmp eq %Type_Info* %4, zeroinitializer
	br i1 %5, label %if.then-1, label %if.done-2

if.then-1:
	; ReturnStmt
	ret i1 false

if.done-2:
	; ok
		; SelectorExpr
	%6 = load %Type_Info*, %Type_Info** %0, align 8
	%7 = call %Type_Info* @type_info_base(%Type_Info* %6, %Context* noalias nonnull %__.context_ptr)
	store %Type_Info* zeroinitializer, %Type_Info** %2
	store %Type_Info* %7, %Type_Info** %2
	%8 = load %Type_Info*, %Type_Info** %2, align 8
	%9 = getelementptr inbounds %Type_Info, %Type_Info* %8, i64 0
	%10 = getelementptr inbounds %Type_Info, %Type_Info* %9, i64 0, i32 2
	%11 = load {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %10, align 8
	; cast - union_cast
	store {%Type_Info_Any, i1} zeroinitializer, {%Type_Info_Any, i1}* %3
	%12 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %10, i64 0, i32 2 ; UnionTagPtr
	%13 = load i8, i8* %12, align 1
	%14 = icmp eq i8 %13, 8
	br i1 %14, label %union_cast.ok-3, label %union_cast.end-4

union_cast.ok-3:
	%15 = getelementptr inbounds {%Type_Info_Any, i1}, {%Type_Info_Any, i1}* %3, i64 0, i32 0
	%16 = getelementptr inbounds {%Type_Info_Any, i1}, {%Type_Info_Any, i1}* %3, i64 0, i32 1
	%17 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %10 to %Type_Info_Any*
	%18 = load %Type_Info_Any, %Type_Info_Any* %17, align 1
	store %Type_Info_Any %18, %Type_Info_Any* %15
	store i1 true, i1* %16
	br label %union_cast.end-4

union_cast.end-4:
	%19 = load {%Type_Info_Any, i1}, {%Type_Info_Any, i1}* %3, align 1
	%20 = extractvalue {%Type_Info_Any, i1} %19, 0
	%21 = extractvalue {%Type_Info_Any, i1} %19, 1
	store i1 %21, i1* %1
	; ReturnStmt
	%22 = load i1, i1* %1, align 1
	ret i1 %22
}

define i1 @types-17.is_string(%Type_Info* %info, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca %Type_Info*, align 8
	%1 = alloca i1, align 1
	%2 = alloca %Type_Info*, align 8
	%3 = alloca {%Type_Info_String, i1}, align 1
		store %Type_Info* %info, %Type_Info** %0
	; IfStmt
	%4 = load %Type_Info*, %Type_Info** %0, align 8
	%5 = icmp eq %Type_Info* %4, zeroinitializer
	br i1 %5, label %if.then-1, label %if.done-2

if.then-1:
	; ReturnStmt
	ret i1 false

if.done-2:
	; ok
		; SelectorExpr
	%6 = load %Type_Info*, %Type_Info** %0, align 8
	%7 = call %Type_Info* @type_info_base(%Type_Info* %6, %Context* noalias nonnull %__.context_ptr)
	store %Type_Info* zeroinitializer, %Type_Info** %2
	store %Type_Info* %7, %Type_Info** %2
	%8 = load %Type_Info*, %Type_Info** %2, align 8
	%9 = getelementptr inbounds %Type_Info, %Type_Info* %8, i64 0
	%10 = getelementptr inbounds %Type_Info, %Type_Info* %9, i64 0, i32 2
	%11 = load {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %10, align 8
	; cast - union_cast
	store {%Type_Info_String, i1} zeroinitializer, {%Type_Info_String, i1}* %3
	%12 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %10, i64 0, i32 2 ; UnionTagPtr
	%13 = load i8, i8* %12, align 1
	%14 = icmp eq i8 %13, 6
	br i1 %14, label %union_cast.ok-3, label %union_cast.end-4

union_cast.ok-3:
	%15 = getelementptr inbounds {%Type_Info_String, i1}, {%Type_Info_String, i1}* %3, i64 0, i32 0
	%16 = getelementptr inbounds {%Type_Info_String, i1}, {%Type_Info_String, i1}* %3, i64 0, i32 1
	%17 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %10 to %Type_Info_String*
	%18 = load %Type_Info_String, %Type_Info_String* %17, align 1
	store %Type_Info_String %18, %Type_Info_String* %15
	store i1 true, i1* %16
	br label %union_cast.end-4

union_cast.end-4:
	%19 = load {%Type_Info_String, i1}, {%Type_Info_String, i1}* %3, align 1
	%20 = extractvalue {%Type_Info_String, i1} %19, 0
	%21 = extractvalue {%Type_Info_String, i1} %19, 1
	store i1 %21, i1* %1
	; ReturnStmt
	%22 = load i1, i1* %1, align 1
	ret i1 %22
}

define %..string @strconv-18.append_float({i8*, i64}* %buf, double %f, i8 %fmt, i64 %prec, i64 %bit_size, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca double, align 8
	%1 = alloca i8, align 1
	%2 = alloca i64, align 8
	%3 = alloca i64, align 8
	%4 = alloca {i8*, i64}, align 16
	%5 = alloca %..string, align 8
	%6 = load {i8*, i64}, {i8*, i64}* %buf, align 8
		store double %f, double* %0
		store i8 %fmt, i8* %1
		store i64 %prec, i64* %2
		store i64 %bit_size, i64* %3
	; ReturnStmt
	%7 = load {i8*, i64}, {i8*, i64}* %buf, align 8
	%8 = load double, double* %0, align 8
	%9 = load i8, i8* %1, align 1
	%10 = load i64, i64* %2, align 8
	%11 = load i64, i64* %3, align 8
	store {i8*, i64} zeroinitializer, {i8*, i64}* %4
	store {i8*, i64} %7, {i8*, i64}* %4
	%12 = call {i8*, i64} @strconv-18.generic_ftoa({i8*, i64}* %4, double %8, i8 %9, i64 %10, i64 %11, %Context* noalias nonnull %__.context_ptr)
	%13 = extractvalue {i8*, i64} %12, 0
	%14 = extractvalue {i8*, i64} %12, 1
	store %..string zeroinitializer, %..string* %5
	%15 = getelementptr inbounds %..string, %..string* %5, i64 0, i32 0
	store i8* %13, i8** %15
	%16 = getelementptr inbounds %..string, %..string* %5, i64 0, i32 1
	store i64 %14, i64* %16
	%17 = load %..string, %..string* %5, align 8
	ret %..string %17
}

define {i8*, i64} @strconv-18.generic_ftoa({i8*, i64}* %buf, double %val, i8 %fmt, i64 %prec, i64 %bit_size, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca double, align 8
	%1 = alloca i8, align 1
	%2 = alloca i64, align 8
	%3 = alloca i64, align 8
	%4 = alloca i64, align 8
	%5 = alloca %strconv-18.FloatInfo*, align 8
	%6 = alloca {%..any*, i64}, align 8
	%7 = alloca {%..any*, i64}, align 16
	%8 = alloca %Source_Code_Location, align 16
	%9 = alloca i1, align 1
	%10 = alloca i64, align 8
	%11 = alloca i64, align 8
	%12 = alloca %..string, align 8
	%13 = alloca i64, align 8
	%14 = alloca i8*, align 8
	%15 = alloca {i8*, i64}, align 8
	%16 = alloca {i8*, i64}, align 16
	%17 = alloca {i8*, i64}, align 16
	%18 = alloca {i8*, i64}, align 8
	%19 = alloca %decimal-24.Decimal, align 8
	%20 = alloca %decimal-24.Decimal*, align 8
	%21 = alloca %strconv-18.DecimalSlice, align 8
	%22 = alloca i1, align 1
	%23 = alloca %strconv-18.DecimalSlice, align 8
	%24 = alloca {i8*, i64}, align 8
	%25 = alloca %strconv-18.DecimalSlice, align 8
	%26 = alloca {i8*, i64}, align 8
	%27 = alloca {i8*, i64}, align 16
	%28 = alloca %strconv-18.DecimalSlice, align 16
	%29 = load {i8*, i64}, {i8*, i64}* %buf, align 8
		store double %val, double* %0
		store i8 %fmt, i8* %1
		store i64 %prec, i64* %2
		store i64 %bit_size, i64* %3
	; bits
	store i64 zeroinitializer, i64* %4
		; flt
	store %strconv-18.FloatInfo* zeroinitializer, %strconv-18.FloatInfo** %5
		; SwitchStmt
	%30 = load i64, i64* %3, align 8
	%31 = icmp eq i64 %30, 32
	br i1 %31, label %switch.case.body-2, label %switch.case.next-1

switch.case.next-1:
	%32 = icmp eq i64 %30, 64
	br i1 %32, label %switch.fall.body-4, label %switch.case.next-3

switch.case.body-2:
	; AssignStmt
	%33 = load double, double* %0, align 8
	%34 = fptrunc double %33 to float
	%35 = bitcast float %34 to i32
	%36 = zext i32 %35 to i64
	store i64 %36, i64* %4
	; AssignStmt
	%37 = getelementptr inbounds %strconv-18.FloatInfo, %strconv-18.FloatInfo* @strconv-18._f32_info, i64 0
	store %strconv-18.FloatInfo* %37, %strconv-18.FloatInfo** %5
	br label %switch.done-5

switch.case.next-3:
	; variadic call argument generation
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %6
	%38 = load {%..any*, i64}, {%..any*, i64}* %6, align 8
	%39 = call %Source_Code_Location @make_source_code_location(%..string {i8* getelementptr inbounds ([33 x i8], [33 x i8]* @__str$126, i64 0, i32 0), i64 32}, i64 240, i64 3, %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$127, i64 0, i32 0), i64 12})
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %7
	store {%..any*, i64} %38, {%..any*, i64}* %7
	store %Source_Code_Location zeroinitializer, %Source_Code_Location* %8
	store %Source_Code_Location %39, %Source_Code_Location* %8
	call void @panic(%..string {i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__str$128, i64 0, i32 0), i64 25}, {%..any*, i64}* %7, %Source_Code_Location* %8)
	br label %switch.done-5

switch.fall.body-4:
	; AssignStmt
	%40 = load double, double* %0, align 8
	%41 = bitcast double %40 to i64
	store i64 %41, i64* %4
	; AssignStmt
	%42 = getelementptr inbounds %strconv-18.FloatInfo, %strconv-18.FloatInfo* @strconv-18._f64_info, i64 0
	store %strconv-18.FloatInfo* %42, %strconv-18.FloatInfo** %5
	br label %switch.done-5

switch.done-5:
	; neg
		%43 = load i64, i64* %4, align 8
	; SelectorExpr
	%44 = load %strconv-18.FloatInfo*, %strconv-18.FloatInfo** %5, align 8
	%45 = getelementptr inbounds %strconv-18.FloatInfo, %strconv-18.FloatInfo* %44, i64 0
	%46 = getelementptr inbounds %strconv-18.FloatInfo, %strconv-18.FloatInfo* %45, i64 0, i32 1
	%47 = load i64, i64* %46, align 8
	; SelectorExpr
	%48 = load %strconv-18.FloatInfo*, %strconv-18.FloatInfo** %5, align 8
	%49 = getelementptr inbounds %strconv-18.FloatInfo, %strconv-18.FloatInfo* %48, i64 0
	%50 = getelementptr inbounds %strconv-18.FloatInfo, %strconv-18.FloatInfo* %49, i64 0, i32 0
	%51 = load i64, i64* %50, align 8
	%52 = add i64 %47, %51
	%53 = bitcast i64 %52 to i64
	%54 = lshr i64 %43, %53
	%55 = icmp ne i64 %54, 0
	store i1 %55, i1* %9
	; exp
		%56 = load i64, i64* %4, align 8
	; SelectorExpr
	%57 = load %strconv-18.FloatInfo*, %strconv-18.FloatInfo** %5, align 8
	%58 = getelementptr inbounds %strconv-18.FloatInfo, %strconv-18.FloatInfo* %57, i64 0
	%59 = getelementptr inbounds %strconv-18.FloatInfo, %strconv-18.FloatInfo* %58, i64 0, i32 0
	%60 = load i64, i64* %59, align 8
	%61 = bitcast i64 %60 to i64
	%62 = lshr i64 %56, %61
	%63 = bitcast i64 %62 to i64
	; SelectorExpr
	%64 = load %strconv-18.FloatInfo*, %strconv-18.FloatInfo** %5, align 8
	%65 = getelementptr inbounds %strconv-18.FloatInfo, %strconv-18.FloatInfo* %64, i64 0
	%66 = getelementptr inbounds %strconv-18.FloatInfo, %strconv-18.FloatInfo* %65, i64 0, i32 1
	%67 = load i64, i64* %66, align 8
	%68 = bitcast i64 %67 to i64
	%69 = shl i64 1, %68
	%70 = sub i64 %69, 1
	%71 = and i64 %63, %70
	store i64 %71, i64* %10
	; mant
		%72 = load i64, i64* %4, align 8
	; SelectorExpr
	%73 = load %strconv-18.FloatInfo*, %strconv-18.FloatInfo** %5, align 8
	%74 = getelementptr inbounds %strconv-18.FloatInfo, %strconv-18.FloatInfo* %73, i64 0
	%75 = getelementptr inbounds %strconv-18.FloatInfo, %strconv-18.FloatInfo* %74, i64 0, i32 0
	%76 = load i64, i64* %75, align 8
	%77 = bitcast i64 %76 to i64
	%78 = shl i64 1, %77
	%79 = sub i64 %78, 1
	%80 = and i64 %72, %79
	store i64 %80, i64* %11
	; SwitchStmt
	%81 = load i64, i64* %10, align 8
	; SelectorExpr
	%82 = load %strconv-18.FloatInfo*, %strconv-18.FloatInfo** %5, align 8
	%83 = getelementptr inbounds %strconv-18.FloatInfo, %strconv-18.FloatInfo* %82, i64 0
	%84 = getelementptr inbounds %strconv-18.FloatInfo, %strconv-18.FloatInfo* %83, i64 0, i32 1
	%85 = load i64, i64* %84, align 8
	%86 = bitcast i64 %85 to i64
	%87 = shl i64 1, %86
	%88 = sub i64 %87, 1
	%89 = icmp eq i64 %81, %88
	br i1 %89, label %switch.case.body-7, label %switch.case.next-6

switch.case.next-6:
	%90 = icmp eq i64 %81, 0
	br i1 %90, label %switch.fall.body-15, label %switch.case.next-14

switch.case.body-7:
	; s
	store %..string zeroinitializer, %..string* %12
		; IfStmt
	%91 = load i64, i64* %11, align 8
	%92 = icmp ne i64 %91, 0
	br i1 %92, label %if.then-8, label %if.else-9

if.then-8:
	; AssignStmt
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$129, i64 0, i32 0), i64 3}, %..string* %12
	br label %if.done-13

if.else-9:
	; IfStmt
	%93 = load i1, i1* %9, align 1
	br i1 %93, label %if.then-10, label %if.else-11

if.then-10:
	; AssignStmt
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$12a, i64 0, i32 0), i64 4}, %..string* %12
	br label %if.done-12

if.else-11:
	; AssignStmt
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$12b, i64 0, i32 0), i64 4}, %..string* %12
	br label %if.done-12

if.done-12:
	br label %if.done-13

if.done-13:
	; n
		%94 = load {i8*, i64}, {i8*, i64}* %buf, align 8
	%95 = load %..string, %..string* %12, align 8
	%96 = extractvalue %..string %95, 0
	store i8* zeroinitializer, i8** %14
	store i8* %96, i8** %14
	%97 = extractvalue %..string %95, 1
	%98 = sub i64 %97, 0
	%99 = load i8*, i8** %14, align 8
	%100 = getelementptr inbounds i8, i8* %99, i64 0
	store {i8*, i64} zeroinitializer, {i8*, i64}* %15
	%101 = getelementptr inbounds {i8*, i64}, {i8*, i64}* %15, i64 0, i32 0
	store i8* %100, i8** %101
	%102 = getelementptr inbounds {i8*, i64}, {i8*, i64}* %15, i64 0, i32 1
	store i64 %98, i64* %102
	%103 = load {i8*, i64}, {i8*, i64}* %15, align 8
	store {i8*, i64} zeroinitializer, {i8*, i64}* %16
	store {i8*, i64} %94, {i8*, i64}* %16
	store {i8*, i64} zeroinitializer, {i8*, i64}* %17
	store {i8*, i64} %103, {i8*, i64}* %17
	%104 = call i64 @_preload-0.copy-13377({i8*, i64}* %16, {i8*, i64}* %17)
	store i64 %104, i64* %13
	; ReturnStmt
	; SliceExpr
	%105 = load i64, i64* %13, align 8
	%106 = load {i8*, i64}, {i8*, i64}* %buf, align 8
	call void @__slice_expr_error(%..string {i8* getelementptr inbounds ([33 x i8], [33 x i8]* @__str$12c, i64 0, i32 0), i64 32}, i64 258, i64 13, i64 0, i64 %105)
	%107 = extractvalue {i8*, i64} %106, 0
	%108 = getelementptr inbounds i8, i8* %107, i64 0
	%109 = sub i64 %105, 0
	store {i8*, i64} zeroinitializer, {i8*, i64}* %18
	%110 = getelementptr inbounds {i8*, i64}, {i8*, i64}* %18, i64 0, i32 0
	store i8* %108, i8** %110
	%111 = getelementptr inbounds {i8*, i64}, {i8*, i64}* %18, i64 0, i32 1
	store i64 %109, i64* %111
	%112 = load {i8*, i64}, {i8*, i64}* %18, align 8
	ret {i8*, i64} %112

switch.case.next-14:
	; AssignStmt
	; SelectorExpr
	%113 = load %strconv-18.FloatInfo*, %strconv-18.FloatInfo** %5, align 8
	%114 = getelementptr inbounds %strconv-18.FloatInfo, %strconv-18.FloatInfo* %113, i64 0
	%115 = getelementptr inbounds %strconv-18.FloatInfo, %strconv-18.FloatInfo* %114, i64 0, i32 0
	%116 = load i64, i64* %115, align 8
	%117 = bitcast i64 %116 to i64
	%118 = shl i64 1, %117
	%119 = load i64, i64* %11, align 8
	%120 = or i64 %119, %118
	store i64 %120, i64* %11
	br label %switch.done-16

switch.fall.body-15:
	; AssignStmt
	%121 = load i64, i64* %10, align 8
	%122 = add i64 %121, 1
	store i64 %122, i64* %10
	br label %switch.done-16

switch.done-16:
	; AssignStmt
	; SelectorExpr
	%123 = load %strconv-18.FloatInfo*, %strconv-18.FloatInfo** %5, align 8
	%124 = getelementptr inbounds %strconv-18.FloatInfo, %strconv-18.FloatInfo* %123, i64 0
	%125 = getelementptr inbounds %strconv-18.FloatInfo, %strconv-18.FloatInfo* %124, i64 0, i32 2
	%126 = load i64, i64* %125, align 8
	%127 = load i64, i64* %10, align 8
	%128 = add i64 %127, %126
	store i64 %128, i64* %10
	; d_
	store %decimal-24.Decimal zeroinitializer, %decimal-24.Decimal* %19
		; d
		%129 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %19, i64 0
	store %decimal-24.Decimal* %129, %decimal-24.Decimal** %20
	%130 = load %decimal-24.Decimal*, %decimal-24.Decimal** %20, align 8
	%131 = load i64, i64* %11, align 8
	call void @decimal-24.assign(%decimal-24.Decimal* %130, i64 %131, %Context* noalias nonnull %__.context_ptr)
	%132 = load %decimal-24.Decimal*, %decimal-24.Decimal** %20, align 8
	%133 = load i64, i64* %10, align 8
	; SelectorExpr
	%134 = load %strconv-18.FloatInfo*, %strconv-18.FloatInfo** %5, align 8
	%135 = getelementptr inbounds %strconv-18.FloatInfo, %strconv-18.FloatInfo* %134, i64 0
	%136 = getelementptr inbounds %strconv-18.FloatInfo, %strconv-18.FloatInfo* %135, i64 0, i32 0
	%137 = load i64, i64* %136, align 8
	%138 = bitcast i64 %137 to i64
	%139 = sub i64 %133, %138
	call void @decimal-24.shift(%decimal-24.Decimal* %132, i64 %139, %Context* noalias nonnull %__.context_ptr)
	; digs
	store %strconv-18.DecimalSlice zeroinitializer, %strconv-18.DecimalSlice* %21
		; shortest
		%140 = load i64, i64* %2, align 8
	%141 = icmp slt i64 %140, 0
	store i1 %141, i1* %22
	; IfStmt
	%142 = load i1, i1* %22, align 1
	br i1 %142, label %if.then-17, label %if.else-28

if.then-17:
	%143 = load %decimal-24.Decimal*, %decimal-24.Decimal** %20, align 8
	%144 = load i64, i64* %11, align 8
	%145 = load i64, i64* %10, align 8
	%146 = load %strconv-18.FloatInfo*, %strconv-18.FloatInfo** %5, align 8
	call void @strconv-18.round_shortest(%decimal-24.Decimal* %143, i64 %144, i64 %145, %strconv-18.FloatInfo* %146, %Context* noalias nonnull %__.context_ptr)
	; AssignStmt
	; CompoundLit
	store %strconv-18.DecimalSlice zeroinitializer, %strconv-18.DecimalSlice* %23
	store %strconv-18.DecimalSlice {{i8*, i64} zeroinitializer, i64 zeroinitializer, i64 zeroinitializer, i1 zeroinitializer}, %strconv-18.DecimalSlice* %23
	; SliceExpr
	; SelectorExpr
	%147 = load %decimal-24.Decimal*, %decimal-24.Decimal** %20, align 8
	%148 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %147, i64 0
	%149 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %148, i64 0, i32 2
	%150 = load [384 x i8], [384 x i8]* %149, align 1
	call void @__slice_expr_error(%..string {i8* getelementptr inbounds ([33 x i8], [33 x i8]* @__str$12d, i64 0, i32 0), i64 32}, i64 277, i64 40, i64 0, i64 384)
	%151 = getelementptr inbounds [384 x i8], [384 x i8]* %149, i64 0, i32 0
	%152 = getelementptr inbounds i8, i8* %151, i64 0
	%153 = sub i64 384, 0
	store {i8*, i64} zeroinitializer, {i8*, i64}* %24
	%154 = getelementptr inbounds {i8*, i64}, {i8*, i64}* %24, i64 0, i32 0
	store i8* %152, i8** %154
	%155 = getelementptr inbounds {i8*, i64}, {i8*, i64}* %24, i64 0, i32 1
	store i64 %153, i64* %155
	%156 = load {i8*, i64}, {i8*, i64}* %24, align 8
	%157 = getelementptr inbounds %strconv-18.DecimalSlice, %strconv-18.DecimalSlice* %23, i64 0, i32 0
	store {i8*, i64} %156, {i8*, i64}* %157
	; SelectorExpr
	%158 = load %decimal-24.Decimal*, %decimal-24.Decimal** %20, align 8
	%159 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %158, i64 0
	%160 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %159, i64 0, i32 0
	%161 = load i64, i64* %160, align 8
	%162 = getelementptr inbounds %strconv-18.DecimalSlice, %strconv-18.DecimalSlice* %23, i64 0, i32 1
	store i64 %161, i64* %162
	; SelectorExpr
	%163 = load %decimal-24.Decimal*, %decimal-24.Decimal** %20, align 8
	%164 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %163, i64 0
	%165 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %164, i64 0, i32 1
	%166 = load i64, i64* %165, align 8
	%167 = getelementptr inbounds %strconv-18.DecimalSlice, %strconv-18.DecimalSlice* %23, i64 0, i32 2
	store i64 %166, i64* %167
	%168 = load %strconv-18.DecimalSlice, %strconv-18.DecimalSlice* %23, align 8
	store %strconv-18.DecimalSlice %168, %strconv-18.DecimalSlice* %21
	; SwitchStmt
	%169 = load i8, i8* %1, align 1
	%170 = icmp eq i8 %169, 101
	br i1 %170, label %switch.case.body-20, label %switch.case.next-18

switch.case.next-18:
	%171 = icmp eq i8 %169, 69
	br i1 %171, label %switch.case.body-20, label %switch.case.next-19

switch.case.next-19:
	%172 = icmp eq i8 %169, 102
	br i1 %172, label %switch.fall.body-23, label %switch.case.next-21

switch.case.body-20:
	; AssignStmt
	; SelectorExpr
	%173 = getelementptr inbounds %strconv-18.DecimalSlice, %strconv-18.DecimalSlice* %21, i64 0, i32 1
	%174 = load i64, i64* %173, align 8
	%175 = sub i64 %174, 1
	store i64 %175, i64* %2
	br label %switch.done-27

switch.case.next-21:
	%176 = icmp eq i8 %169, 70
	br i1 %176, label %switch.fall.body-23, label %switch.case.next-22

switch.case.next-22:
	%177 = icmp eq i8 %169, 103
	br i1 %177, label %switch.fall.body-26, label %switch.case.next-24

switch.fall.body-23:
	; AssignStmt
	; max
	; SelectorExpr
	%178 = getelementptr inbounds %strconv-18.DecimalSlice, %strconv-18.DecimalSlice* %21, i64 0, i32 1
	%179 = load i64, i64* %178, align 8
	; SelectorExpr
	%180 = getelementptr inbounds %strconv-18.DecimalSlice, %strconv-18.DecimalSlice* %21, i64 0, i32 2
	%181 = load i64, i64* %180, align 8
	%182 = sub i64 %179, %181
	%183 = icmp sgt i64 %182, 0
	%184 = select i1 %183, i64 %182, i64 0
	store i64 %184, i64* %2
	br label %switch.done-27

switch.case.next-24:
	%185 = icmp eq i8 %169, 71
	br i1 %185, label %switch.fall.body-26, label %switch.case.next-25

switch.case.next-25:
	br label %switch.done-27

switch.fall.body-26:
	; AssignStmt
	; SelectorExpr
	%186 = getelementptr inbounds %strconv-18.DecimalSlice, %strconv-18.DecimalSlice* %21, i64 0, i32 1
	%187 = load i64, i64* %186, align 8
	store i64 %187, i64* %2
	br label %switch.done-27

switch.done-27:
	br label %if.done-41

if.else-28:
	; SwitchStmt
	%188 = load i8, i8* %1, align 1
	%189 = icmp eq i8 %188, 101
	br i1 %189, label %switch.case.body-31, label %switch.case.next-29

switch.case.next-29:
	%190 = icmp eq i8 %188, 69
	br i1 %190, label %switch.case.body-31, label %switch.case.next-30

switch.case.next-30:
	%191 = icmp eq i8 %188, 102
	br i1 %191, label %switch.fall.body-34, label %switch.case.next-32

switch.case.body-31:
	%192 = load %decimal-24.Decimal*, %decimal-24.Decimal** %20, align 8
	%193 = load i64, i64* %2, align 8
	%194 = add i64 %193, 1
	call void @decimal-24.round(%decimal-24.Decimal* %192, i64 %194, %Context* noalias nonnull %__.context_ptr)
	br label %switch.done-40

switch.case.next-32:
	%195 = icmp eq i8 %188, 70
	br i1 %195, label %switch.fall.body-34, label %switch.case.next-33

switch.case.next-33:
	%196 = icmp eq i8 %188, 103
	br i1 %196, label %switch.fall.body-37, label %switch.case.next-35

switch.fall.body-34:
	%197 = load %decimal-24.Decimal*, %decimal-24.Decimal** %20, align 8
	; SelectorExpr
	%198 = load %decimal-24.Decimal*, %decimal-24.Decimal** %20, align 8
	%199 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %198, i64 0
	%200 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %199, i64 0, i32 1
	%201 = load i64, i64* %200, align 8
	%202 = load i64, i64* %2, align 8
	%203 = add i64 %201, %202
	call void @decimal-24.round(%decimal-24.Decimal* %197, i64 %203, %Context* noalias nonnull %__.context_ptr)
	br label %switch.done-40

switch.case.next-35:
	%204 = icmp eq i8 %188, 71
	br i1 %204, label %switch.fall.body-37, label %switch.case.next-36

switch.case.next-36:
	br label %switch.done-40

switch.fall.body-37:
	; IfStmt
	%205 = load i64, i64* %2, align 8
	%206 = icmp eq i64 %205, 0
	br i1 %206, label %if.then-38, label %if.done-39

if.then-38:
	; AssignStmt
	store i64 1, i64* %2
	br label %if.done-39

if.done-39:
	%207 = load %decimal-24.Decimal*, %decimal-24.Decimal** %20, align 8
	%208 = load i64, i64* %2, align 8
	call void @decimal-24.round(%decimal-24.Decimal* %207, i64 %208, %Context* noalias nonnull %__.context_ptr)
	br label %switch.done-40

switch.done-40:
	; AssignStmt
	; CompoundLit
	store %strconv-18.DecimalSlice zeroinitializer, %strconv-18.DecimalSlice* %25
	store %strconv-18.DecimalSlice {{i8*, i64} zeroinitializer, i64 zeroinitializer, i64 zeroinitializer, i1 zeroinitializer}, %strconv-18.DecimalSlice* %25
	; SliceExpr
	; SelectorExpr
	%209 = load %decimal-24.Decimal*, %decimal-24.Decimal** %20, align 8
	%210 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %209, i64 0
	%211 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %210, i64 0, i32 2
	%212 = load [384 x i8], [384 x i8]* %211, align 1
	call void @__slice_expr_error(%..string {i8* getelementptr inbounds ([33 x i8], [33 x i8]* @__str$12e, i64 0, i32 0), i64 32}, i64 294, i64 40, i64 0, i64 384)
	%213 = getelementptr inbounds [384 x i8], [384 x i8]* %211, i64 0, i32 0
	%214 = getelementptr inbounds i8, i8* %213, i64 0
	%215 = sub i64 384, 0
	store {i8*, i64} zeroinitializer, {i8*, i64}* %26
	%216 = getelementptr inbounds {i8*, i64}, {i8*, i64}* %26, i64 0, i32 0
	store i8* %214, i8** %216
	%217 = getelementptr inbounds {i8*, i64}, {i8*, i64}* %26, i64 0, i32 1
	store i64 %215, i64* %217
	%218 = load {i8*, i64}, {i8*, i64}* %26, align 8
	%219 = getelementptr inbounds %strconv-18.DecimalSlice, %strconv-18.DecimalSlice* %25, i64 0, i32 0
	store {i8*, i64} %218, {i8*, i64}* %219
	; SelectorExpr
	%220 = load %decimal-24.Decimal*, %decimal-24.Decimal** %20, align 8
	%221 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %220, i64 0
	%222 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %221, i64 0, i32 0
	%223 = load i64, i64* %222, align 8
	%224 = getelementptr inbounds %strconv-18.DecimalSlice, %strconv-18.DecimalSlice* %25, i64 0, i32 1
	store i64 %223, i64* %224
	; SelectorExpr
	%225 = load %decimal-24.Decimal*, %decimal-24.Decimal** %20, align 8
	%226 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %225, i64 0
	%227 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %226, i64 0, i32 1
	%228 = load i64, i64* %227, align 8
	%229 = getelementptr inbounds %strconv-18.DecimalSlice, %strconv-18.DecimalSlice* %25, i64 0, i32 2
	store i64 %228, i64* %229
	%230 = load %strconv-18.DecimalSlice, %strconv-18.DecimalSlice* %25, align 8
	store %strconv-18.DecimalSlice %230, %strconv-18.DecimalSlice* %21
	br label %if.done-41

if.done-41:
	; ReturnStmt
	%231 = load {i8*, i64}, {i8*, i64}* %buf, align 8
	%232 = load i1, i1* %22, align 1
	%233 = load i1, i1* %9, align 1
	%234 = load %strconv-18.DecimalSlice, %strconv-18.DecimalSlice* %21, align 8
	%235 = load i64, i64* %2, align 8
	%236 = load i8, i8* %1, align 1
	store {i8*, i64} zeroinitializer, {i8*, i64}* %27
	store {i8*, i64} %231, {i8*, i64}* %27
	store %strconv-18.DecimalSlice zeroinitializer, %strconv-18.DecimalSlice* %28
	store %strconv-18.DecimalSlice %234, %strconv-18.DecimalSlice* %28
	%237 = call {i8*, i64} @strconv-18.format_digits({i8*, i64}* %27, i1 %232, i1 %233, %strconv-18.DecimalSlice* %28, i64 %235, i8 %236, %Context* noalias nonnull %__.context_ptr)
	ret {i8*, i64} %237
}

define {i8*, i64} @strconv-18.format_digits({i8*, i64}* %buf, i1 %shortest, i1 %neg, %strconv-18.DecimalSlice* %digs, i64 %prec, i8 %fmt, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca i1, align 1
	%1 = alloca i1, align 1
	%2 = alloca i64, align 8
	%3 = alloca i8, align 1
	%4 = alloca %strconv-18.format_digits.Buffer-1048, align 8
	%5 = alloca %strconv-18.format_digits.Buffer-1048, align 8
	%6 = alloca {i8*, i64}, align 8
	%7 = alloca [1 x i8], align 1
	%8 = alloca {i8*, i64}, align 16
	%9 = alloca i64, align 8
	%10 = alloca {i8*, i64}, align 8
	%11 = alloca {i8*, i64}, align 16
	%12 = alloca {i8*, i64}, align 8
	%13 = alloca [1 x i8], align 1
	%14 = alloca {i8*, i64}, align 16
	%15 = alloca {i8*, i64}, align 8
	%16 = alloca [1 x i8], align 1
	%17 = alloca {i8*, i64}, align 16
	%18 = alloca {i8*, i64}, align 8
	%19 = alloca [1 x i8], align 1
	%20 = alloca {i8*, i64}, align 16
	%21 = alloca i64, align 8
	%22 = alloca i64, align 8
	%23 = alloca i64, align 8
	%24 = alloca i8, align 1
	%25 = alloca i64, align 8
	%26 = alloca {i8*, i64}, align 8
	%27 = alloca [1 x i8], align 1
	%28 = alloca {i8*, i64}, align 16
	%29 = alloca %strconv-18.format_digits.Buffer-1048, align 16
	%30 = alloca {%..any*, i64}, align 8
	%31 = alloca {%..any*, i64}, align 16
	%32 = alloca %Source_Code_Location, align 16
	%33 = alloca %strconv-18.format_digits.Buffer-1048, align 16
	%34 = alloca {%..any*, i64}, align 8
	%35 = alloca {%..any*, i64}, align 16
	%36 = alloca %Source_Code_Location, align 16
	%37 = alloca %strconv-18.format_digits.Buffer-1048, align 16
	%38 = alloca {i8*, i64}, align 8
	%39 = alloca [2 x i8], align 1
	%40 = alloca {i8*, i64}, align 16
	%41 = alloca %strconv-18.format_digits.Buffer-1048, align 16
	%42 = load {i8*, i64}, {i8*, i64}* %buf, align 8
		store i1 %shortest, i1* %0
		store i1 %neg, i1* %1
	%43 = load %strconv-18.DecimalSlice, %strconv-18.DecimalSlice* %digs, align 8
		store i64 %prec, i64* %2
		store i8 %fmt, i8* %3
	; b
		; CompoundLit
	store %strconv-18.format_digits.Buffer-1048 zeroinitializer, %strconv-18.format_digits.Buffer-1048* %5
	store %strconv-18.format_digits.Buffer-1048 {{i8*, i64} zeroinitializer, i64 zeroinitializer}, %strconv-18.format_digits.Buffer-1048* %5
	%44 = load {i8*, i64}, {i8*, i64}* %buf, align 8
	%45 = getelementptr inbounds %strconv-18.format_digits.Buffer-1048, %strconv-18.format_digits.Buffer-1048* %5, i64 0, i32 0
	store {i8*, i64} %44, {i8*, i64}* %45
	%46 = load %strconv-18.format_digits.Buffer-1048, %strconv-18.format_digits.Buffer-1048* %5, align 8
	store %strconv-18.format_digits.Buffer-1048 %46, %strconv-18.format_digits.Buffer-1048* %4
	; SwitchStmt
	%47 = load i8, i8* %3, align 1
	%48 = icmp eq i8 %47, 102
	br i1 %48, label %switch.case.body-3, label %switch.case.next-1

switch.case.next-1:
	%49 = icmp eq i8 %47, 70
	br i1 %49, label %switch.case.body-3, label %switch.case.next-2

switch.case.next-2:
	%50 = icmp eq i8 %47, 101
	br i1 %50, label %switch.fall.body-23, label %switch.case.next-21

switch.case.body-3:
	%51 = getelementptr inbounds %strconv-18.format_digits.Buffer-1048, %strconv-18.format_digits.Buffer-1048* %4, i64 0
	; TernaryExpr
	%52 = load i1, i1* %1, align 1
	br i1 %52, label %if.then-4, label %if.else-5

if.then-4:
	br label %if.done-6

if.else-5:
	br label %if.done-6

if.done-6:
	%53 = phi i32 [ 45, %if.then-4 ], [ 43, %if.else-5 ]
	%54 = trunc i32 %53 to i8
	; variadic call argument generation
	store {i8*, i64} zeroinitializer, {i8*, i64}* %6
	store [1 x i8] zeroinitializer, [1 x i8]* %7
	%55 = getelementptr inbounds [1 x i8], [1 x i8]* %7, i64 0, i32 0
	store i8 %54, i8* %55
	%56 = getelementptr inbounds [1 x i8], [1 x i8]* %7, i64 0, i32 0
	%57 = getelementptr inbounds {i8*, i64}, {i8*, i64}* %6, i64 0, i32 0
	store i8* %56, i8** %57
	%58 = getelementptr inbounds {i8*, i64}, {i8*, i64}* %6, i64 0, i32 1
	store i64 1, i64* %58
	%59 = load {i8*, i64}, {i8*, i64}* %6, align 8
	store {i8*, i64} zeroinitializer, {i8*, i64}* %8
	store {i8*, i64} %59, {i8*, i64}* %8
	call void @strconv-18.format_digits.add_bytes-1(%strconv-18.format_digits.Buffer-1048* %51, {i8*, i64}* %8, %Context* noalias nonnull %__.context_ptr)
	; IfStmt
	; SelectorExpr
	%60 = getelementptr inbounds %strconv-18.DecimalSlice, %strconv-18.DecimalSlice* %digs, i64 0, i32 2
	%61 = load i64, i64* %60, align 8
	%62 = icmp sgt i64 %61, 0
	br i1 %62, label %if.then-7, label %if.else-11

if.then-7:
	; m
		; min
	; SelectorExpr
	%63 = getelementptr inbounds %strconv-18.DecimalSlice, %strconv-18.DecimalSlice* %digs, i64 0, i32 1
	%64 = load i64, i64* %63, align 8
	; SelectorExpr
	%65 = getelementptr inbounds %strconv-18.DecimalSlice, %strconv-18.DecimalSlice* %digs, i64 0, i32 2
	%66 = load i64, i64* %65, align 8
	%67 = icmp slt i64 %64, %66
	%68 = select i1 %67, i64 %64, i64 %66
	store i64 %68, i64* %9
	%69 = getelementptr inbounds %strconv-18.format_digits.Buffer-1048, %strconv-18.format_digits.Buffer-1048* %4, i64 0
	; SliceExpr
	%70 = load i64, i64* %9, align 8
	; SelectorExpr
	%71 = getelementptr inbounds %strconv-18.DecimalSlice, %strconv-18.DecimalSlice* %digs, i64 0, i32 0
	%72 = load {i8*, i64}, {i8*, i64}* %71, align 8
	call void @__slice_expr_error(%..string {i8* getelementptr inbounds ([33 x i8], [33 x i8]* @__str$12f, i64 0, i32 0), i64 32}, i64 321, i64 32, i64 0, i64 %70)
	%73 = extractvalue {i8*, i64} %72, 0
	%74 = getelementptr inbounds i8, i8* %73, i64 0
	%75 = sub i64 %70, 0
	store {i8*, i64} zeroinitializer, {i8*, i64}* %10
	%76 = getelementptr inbounds {i8*, i64}, {i8*, i64}* %10, i64 0, i32 0
	store i8* %74, i8** %76
	%77 = getelementptr inbounds {i8*, i64}, {i8*, i64}* %10, i64 0, i32 1
	store i64 %75, i64* %77
	%78 = load {i8*, i64}, {i8*, i64}* %10, align 8
	store {i8*, i64} zeroinitializer, {i8*, i64}* %11
	store {i8*, i64} %78, {i8*, i64}* %11
	call void @strconv-18.format_digits.add_bytes-1(%strconv-18.format_digits.Buffer-1048* %69, {i8*, i64}* %11, %Context* noalias nonnull %__.context_ptr)
	; ForStmt
	br label %for.loop-8

for.loop-8:
	%79 = load i64, i64* %9, align 8
	; SelectorExpr
	%80 = getelementptr inbounds %strconv-18.DecimalSlice, %strconv-18.DecimalSlice* %digs, i64 0, i32 2
	%81 = load i64, i64* %80, align 8
	%82 = icmp slt i64 %79, %81
	br i1 %82, label %for.body-9, label %for.done-10

for.body-9:
	%83 = getelementptr inbounds %strconv-18.format_digits.Buffer-1048, %strconv-18.format_digits.Buffer-1048* %4, i64 0
	; variadic call argument generation
	store {i8*, i64} zeroinitializer, {i8*, i64}* %12
	store [1 x i8] zeroinitializer, [1 x i8]* %13
	%84 = getelementptr inbounds [1 x i8], [1 x i8]* %13, i64 0, i32 0
	store i8 48, i8* %84
	%85 = getelementptr inbounds [1 x i8], [1 x i8]* %13, i64 0, i32 0
	%86 = getelementptr inbounds {i8*, i64}, {i8*, i64}* %12, i64 0, i32 0
	store i8* %85, i8** %86
	%87 = getelementptr inbounds {i8*, i64}, {i8*, i64}* %12, i64 0, i32 1
	store i64 1, i64* %87
	%88 = load {i8*, i64}, {i8*, i64}* %12, align 8
	store {i8*, i64} zeroinitializer, {i8*, i64}* %14
	store {i8*, i64} %88, {i8*, i64}* %14
	call void @strconv-18.format_digits.add_bytes-1(%strconv-18.format_digits.Buffer-1048* %83, {i8*, i64}* %14, %Context* noalias nonnull %__.context_ptr)
	; AssignStmt
	%89 = load i64, i64* %9, align 8
	%90 = add i64 %89, 1
	store i64 %90, i64* %9
	br label %for.loop-8

for.done-10:
	br label %if.done-12

if.else-11:
	%91 = getelementptr inbounds %strconv-18.format_digits.Buffer-1048, %strconv-18.format_digits.Buffer-1048* %4, i64 0
	; variadic call argument generation
	store {i8*, i64} zeroinitializer, {i8*, i64}* %15
	store [1 x i8] zeroinitializer, [1 x i8]* %16
	%92 = getelementptr inbounds [1 x i8], [1 x i8]* %16, i64 0, i32 0
	store i8 48, i8* %92
	%93 = getelementptr inbounds [1 x i8], [1 x i8]* %16, i64 0, i32 0
	%94 = getelementptr inbounds {i8*, i64}, {i8*, i64}* %15, i64 0, i32 0
	store i8* %93, i8** %94
	%95 = getelementptr inbounds {i8*, i64}, {i8*, i64}* %15, i64 0, i32 1
	store i64 1, i64* %95
	%96 = load {i8*, i64}, {i8*, i64}* %15, align 8
	store {i8*, i64} zeroinitializer, {i8*, i64}* %17
	store {i8*, i64} %96, {i8*, i64}* %17
	call void @strconv-18.format_digits.add_bytes-1(%strconv-18.format_digits.Buffer-1048* %91, {i8*, i64}* %17, %Context* noalias nonnull %__.context_ptr)
	br label %if.done-12

if.done-12:
	; IfStmt
	%97 = load i64, i64* %2, align 8
	%98 = icmp sgt i64 %97, 0
	br i1 %98, label %if.then-13, label %if.done-20

if.then-13:
	%99 = getelementptr inbounds %strconv-18.format_digits.Buffer-1048, %strconv-18.format_digits.Buffer-1048* %4, i64 0
	; variadic call argument generation
	store {i8*, i64} zeroinitializer, {i8*, i64}* %18
	store [1 x i8] zeroinitializer, [1 x i8]* %19
	%100 = getelementptr inbounds [1 x i8], [1 x i8]* %19, i64 0, i32 0
	store i8 46, i8* %100
	%101 = getelementptr inbounds [1 x i8], [1 x i8]* %19, i64 0, i32 0
	%102 = getelementptr inbounds {i8*, i64}, {i8*, i64}* %18, i64 0, i32 0
	store i8* %101, i8** %102
	%103 = getelementptr inbounds {i8*, i64}, {i8*, i64}* %18, i64 0, i32 1
	store i64 1, i64* %103
	%104 = load {i8*, i64}, {i8*, i64}* %18, align 8
	store {i8*, i64} zeroinitializer, {i8*, i64}* %20
	store {i8*, i64} %104, {i8*, i64}* %20
	call void @strconv-18.format_digits.add_bytes-1(%strconv-18.format_digits.Buffer-1048* %99, {i8*, i64}* %20, %Context* noalias nonnull %__.context_ptr)
	; RangeStmt
	; i
	store i64 zeroinitializer, i64* %21
		store i64 zeroinitializer, i64* %22
	store i64 0, i64* %22
	store i64 zeroinitializer, i64* %23
	store i64 0, i64* %23
	br label %for.interval.loop-14

for.interval.loop-14:
	%105 = load i64, i64* %2, align 8
	%106 = load i64, i64* %22, align 8
	%107 = icmp slt i64 %106, %105
	br i1 %107, label %for.interval.body-15, label %for.interval.done-19

for.interval.body-15:
	%108 = load i64, i64* %22, align 8
	%109 = load i64, i64* %23, align 8
	%110 = load i64, i64* %22, align 8
	%111 = add i64 %110, 1
	store i64 %111, i64* %22
	%112 = load i64, i64* %23, align 8
	%113 = add i64 %112, 1
	store i64 %113, i64* %23
	store i64 %108, i64* %21
	; c
		store i8 48, i8* %24
	; IfStmt
	; j
		; SelectorExpr
	%114 = getelementptr inbounds %strconv-18.DecimalSlice, %strconv-18.DecimalSlice* %digs, i64 0, i32 2
	%115 = load i64, i64* %114, align 8
	%116 = load i64, i64* %21, align 8
	%117 = add i64 %115, %116
	store i64 %117, i64* %25
	%118 = load i64, i64* %25, align 8
	%119 = icmp sle i64 0, %118
	br i1 %119, label %cmp.and-16, label %if.done-18

cmp.and-16:
	%120 = load i64, i64* %25, align 8
	; SelectorExpr
	%121 = getelementptr inbounds %strconv-18.DecimalSlice, %strconv-18.DecimalSlice* %digs, i64 0, i32 1
	%122 = load i64, i64* %121, align 8
	%123 = icmp slt i64 %120, %122
	br i1 %123, label %if.then-17, label %if.done-18

if.then-17:
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%124 = getelementptr inbounds %strconv-18.DecimalSlice, %strconv-18.DecimalSlice* %digs, i64 0, i32 0
	%125 = load {i8*, i64}, {i8*, i64}* %124, align 8
	%126 = extractvalue {i8*, i64} %125, 0
	%127 = load i64, i64* %25, align 8
	%128 = extractvalue {i8*, i64} %125, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([33 x i8], [33 x i8]* @__str$130, i64 0, i32 0), i64 32}, i64 336, i64 22, i64 %127, i64 %128)
	%129 = getelementptr inbounds i8, i8* %126, i64 %127
	%130 = load i8, i8* %129, align 1
	store i8 %130, i8* %24
	br label %if.done-18

if.done-18:
	%131 = getelementptr inbounds %strconv-18.format_digits.Buffer-1048, %strconv-18.format_digits.Buffer-1048* %4, i64 0
	%132 = load i8, i8* %24, align 1
	; variadic call argument generation
	store {i8*, i64} zeroinitializer, {i8*, i64}* %26
	store [1 x i8] zeroinitializer, [1 x i8]* %27
	%133 = getelementptr inbounds [1 x i8], [1 x i8]* %27, i64 0, i32 0
	store i8 %132, i8* %133
	%134 = getelementptr inbounds [1 x i8], [1 x i8]* %27, i64 0, i32 0
	%135 = getelementptr inbounds {i8*, i64}, {i8*, i64}* %26, i64 0, i32 0
	store i8* %134, i8** %135
	%136 = getelementptr inbounds {i8*, i64}, {i8*, i64}* %26, i64 0, i32 1
	store i64 1, i64* %136
	%137 = load {i8*, i64}, {i8*, i64}* %26, align 8
	store {i8*, i64} zeroinitializer, {i8*, i64}* %28
	store {i8*, i64} %137, {i8*, i64}* %28
	call void @strconv-18.format_digits.add_bytes-1(%strconv-18.format_digits.Buffer-1048* %131, {i8*, i64}* %28, %Context* noalias nonnull %__.context_ptr)
	br label %for.interval.loop-14

for.interval.done-19:
	br label %if.done-20

if.done-20:
	; ReturnStmt
	%138 = load %strconv-18.format_digits.Buffer-1048, %strconv-18.format_digits.Buffer-1048* %4, align 8
	store %strconv-18.format_digits.Buffer-1048 zeroinitializer, %strconv-18.format_digits.Buffer-1048* %29
	store %strconv-18.format_digits.Buffer-1048 %138, %strconv-18.format_digits.Buffer-1048* %29
	%139 = call {i8*, i64} @strconv-18.format_digits.to_bytes-0(%strconv-18.format_digits.Buffer-1048* %29, %Context* noalias nonnull %__.context_ptr)
	ret {i8*, i64} %139

switch.case.next-21:
	%140 = icmp eq i8 %47, 69
	br i1 %140, label %switch.fall.body-23, label %switch.case.next-22

switch.case.next-22:
	%141 = icmp eq i8 %47, 103
	br i1 %141, label %switch.fall.body-26, label %switch.case.next-24

switch.fall.body-23:
	; variadic call argument generation
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %30
	%142 = load {%..any*, i64}, {%..any*, i64}* %30, align 8
	%143 = call %Source_Code_Location @make_source_code_location(%..string {i8* getelementptr inbounds ([33 x i8], [33 x i8]* @__str$131, i64 0, i32 0), i64 32}, i64 344, i64 3, %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$132, i64 0, i32 0), i64 13})
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %31
	store {%..any*, i64} %142, {%..any*, i64}* %31
	store %Source_Code_Location zeroinitializer, %Source_Code_Location* %32
	store %Source_Code_Location %143, %Source_Code_Location* %32
	call void @panic(%..string {i8* getelementptr inbounds ([49 x i8], [49 x i8]* @__str$133, i64 0, i32 0), i64 48}, {%..any*, i64}* %31, %Source_Code_Location* %32)
	; ReturnStmt
	%144 = load %strconv-18.format_digits.Buffer-1048, %strconv-18.format_digits.Buffer-1048* %4, align 8
	store %strconv-18.format_digits.Buffer-1048 zeroinitializer, %strconv-18.format_digits.Buffer-1048* %33
	store %strconv-18.format_digits.Buffer-1048 %144, %strconv-18.format_digits.Buffer-1048* %33
	%145 = call {i8*, i64} @strconv-18.format_digits.to_bytes-0(%strconv-18.format_digits.Buffer-1048* %33, %Context* noalias nonnull %__.context_ptr)
	ret {i8*, i64} %145

switch.case.next-24:
	%146 = icmp eq i8 %47, 71
	br i1 %146, label %switch.fall.body-26, label %switch.case.next-25

switch.case.next-25:
	%147 = getelementptr inbounds %strconv-18.format_digits.Buffer-1048, %strconv-18.format_digits.Buffer-1048* %4, i64 0
	%148 = load i8, i8* %3, align 1
	; variadic call argument generation
	store {i8*, i64} zeroinitializer, {i8*, i64}* %38
	store [2 x i8] zeroinitializer, [2 x i8]* %39
	%149 = getelementptr inbounds [2 x i8], [2 x i8]* %39, i64 0, i32 0
	store i8 37, i8* %149
	%150 = getelementptr inbounds [2 x i8], [2 x i8]* %39, i64 0, i32 1
	store i8 %148, i8* %150
	%151 = getelementptr inbounds [2 x i8], [2 x i8]* %39, i64 0, i32 0
	%152 = getelementptr inbounds {i8*, i64}, {i8*, i64}* %38, i64 0, i32 0
	store i8* %151, i8** %152
	%153 = getelementptr inbounds {i8*, i64}, {i8*, i64}* %38, i64 0, i32 1
	store i64 2, i64* %153
	%154 = load {i8*, i64}, {i8*, i64}* %38, align 8
	store {i8*, i64} zeroinitializer, {i8*, i64}* %40
	store {i8*, i64} %154, {i8*, i64}* %40
	call void @strconv-18.format_digits.add_bytes-1(%strconv-18.format_digits.Buffer-1048* %147, {i8*, i64}* %40, %Context* noalias nonnull %__.context_ptr)
	; ReturnStmt
	%155 = load %strconv-18.format_digits.Buffer-1048, %strconv-18.format_digits.Buffer-1048* %4, align 8
	store %strconv-18.format_digits.Buffer-1048 zeroinitializer, %strconv-18.format_digits.Buffer-1048* %41
	store %strconv-18.format_digits.Buffer-1048 %155, %strconv-18.format_digits.Buffer-1048* %41
	%156 = call {i8*, i64} @strconv-18.format_digits.to_bytes-0(%strconv-18.format_digits.Buffer-1048* %41, %Context* noalias nonnull %__.context_ptr)
	ret {i8*, i64} %156

switch.fall.body-26:
	; variadic call argument generation
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %34
	%157 = load {%..any*, i64}, {%..any*, i64}* %34, align 8
	%158 = call %Source_Code_Location @make_source_code_location(%..string {i8* getelementptr inbounds ([33 x i8], [33 x i8]* @__str$134, i64 0, i32 0), i64 32}, i64 348, i64 3, %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$135, i64 0, i32 0), i64 13})
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %35
	store {%..any*, i64} %157, {%..any*, i64}* %35
	store %Source_Code_Location zeroinitializer, %Source_Code_Location* %36
	store %Source_Code_Location %158, %Source_Code_Location* %36
	call void @panic(%..string {i8* getelementptr inbounds ([49 x i8], [49 x i8]* @__str$136, i64 0, i32 0), i64 48}, {%..any*, i64}* %35, %Source_Code_Location* %36)
	; ReturnStmt
	%159 = load %strconv-18.format_digits.Buffer-1048, %strconv-18.format_digits.Buffer-1048* %4, align 8
	store %strconv-18.format_digits.Buffer-1048 zeroinitializer, %strconv-18.format_digits.Buffer-1048* %37
	store %strconv-18.format_digits.Buffer-1048 %159, %strconv-18.format_digits.Buffer-1048* %37
	%160 = call {i8*, i64} @strconv-18.format_digits.to_bytes-0(%strconv-18.format_digits.Buffer-1048* %37, %Context* noalias nonnull %__.context_ptr)
	ret {i8*, i64} %160
}

define {i8*, i64} @strconv-18.format_digits.to_bytes-0(%strconv-18.format_digits.Buffer-1048* %b, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca {i8*, i64}, align 8
	%1 = load %strconv-18.format_digits.Buffer-1048, %strconv-18.format_digits.Buffer-1048* %b, align 8
	; ReturnStmt
	; SliceExpr
	; SelectorExpr
	%2 = getelementptr inbounds %strconv-18.format_digits.Buffer-1048, %strconv-18.format_digits.Buffer-1048* %b, i64 0, i32 1
	%3 = load i64, i64* %2, align 8
	; SelectorExpr
	%4 = getelementptr inbounds %strconv-18.format_digits.Buffer-1048, %strconv-18.format_digits.Buffer-1048* %b, i64 0, i32 0
	%5 = load {i8*, i64}, {i8*, i64}* %4, align 8
	call void @__slice_expr_error(%..string {i8* getelementptr inbounds ([33 x i8], [33 x i8]* @__str$137, i64 0, i32 0), i64 32}, i64 307, i64 53, i64 0, i64 %3)
	%6 = extractvalue {i8*, i64} %5, 0
	%7 = getelementptr inbounds i8, i8* %6, i64 0
	%8 = sub i64 %3, 0
	store {i8*, i64} zeroinitializer, {i8*, i64}* %0
	%9 = getelementptr inbounds {i8*, i64}, {i8*, i64}* %0, i64 0, i32 0
	store i8* %7, i8** %9
	%10 = getelementptr inbounds {i8*, i64}, {i8*, i64}* %0, i64 0, i32 1
	store i64 %8, i64* %10
	%11 = load {i8*, i64}, {i8*, i64}* %0, align 8
	ret {i8*, i64} %11
}

define void @strconv-18.format_digits.add_bytes-1(%strconv-18.format_digits.Buffer-1048* %buf, {i8*, i64}* %bytes, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca %strconv-18.format_digits.Buffer-1048*, align 8
	%1 = alloca {i8*, i64}, align 8
	%2 = alloca {i8*, i64}, align 16
	%3 = alloca {i8*, i64}, align 16
		store %strconv-18.format_digits.Buffer-1048* %buf, %strconv-18.format_digits.Buffer-1048** %0
	%4 = load {i8*, i64}, {i8*, i64}* %bytes, align 8
	; AssignStmt
	; SelectorExpr
	%5 = load %strconv-18.format_digits.Buffer-1048*, %strconv-18.format_digits.Buffer-1048** %0, align 8
	%6 = getelementptr inbounds %strconv-18.format_digits.Buffer-1048, %strconv-18.format_digits.Buffer-1048* %5, i64 0
	%7 = getelementptr inbounds %strconv-18.format_digits.Buffer-1048, %strconv-18.format_digits.Buffer-1048* %6, i64 0, i32 1
	; SliceExpr
	; SelectorExpr
	%8 = load %strconv-18.format_digits.Buffer-1048*, %strconv-18.format_digits.Buffer-1048** %0, align 8
	%9 = getelementptr inbounds %strconv-18.format_digits.Buffer-1048, %strconv-18.format_digits.Buffer-1048* %8, i64 0
	%10 = getelementptr inbounds %strconv-18.format_digits.Buffer-1048, %strconv-18.format_digits.Buffer-1048* %9, i64 0, i32 1
	%11 = load i64, i64* %10, align 8
	; SelectorExpr
	%12 = load %strconv-18.format_digits.Buffer-1048*, %strconv-18.format_digits.Buffer-1048** %0, align 8
	%13 = getelementptr inbounds %strconv-18.format_digits.Buffer-1048, %strconv-18.format_digits.Buffer-1048* %12, i64 0
	%14 = getelementptr inbounds %strconv-18.format_digits.Buffer-1048, %strconv-18.format_digits.Buffer-1048* %13, i64 0, i32 0
	%15 = load {i8*, i64}, {i8*, i64}* %14, align 8
	%16 = extractvalue {i8*, i64} %15, 1
	call void @__slice_expr_error(%..string {i8* getelementptr inbounds ([33 x i8], [33 x i8]* @__str$138, i64 0, i32 0), i64 32}, i64 309, i64 22, i64 %11, i64 %16)
	%17 = extractvalue {i8*, i64} %15, 0
	%18 = getelementptr inbounds i8, i8* %17, i64 %11
	%19 = sub i64 %16, %11
	store {i8*, i64} zeroinitializer, {i8*, i64}* %1
	%20 = getelementptr inbounds {i8*, i64}, {i8*, i64}* %1, i64 0, i32 0
	store i8* %18, i8** %20
	%21 = getelementptr inbounds {i8*, i64}, {i8*, i64}* %1, i64 0, i32 1
	store i64 %19, i64* %21
	%22 = load {i8*, i64}, {i8*, i64}* %1, align 8
	%23 = load {i8*, i64}, {i8*, i64}* %bytes, align 8
	store {i8*, i64} zeroinitializer, {i8*, i64}* %2
	store {i8*, i64} %22, {i8*, i64}* %2
	store {i8*, i64} zeroinitializer, {i8*, i64}* %3
	store {i8*, i64} %23, {i8*, i64}* %3
	%24 = call i64 @_preload-0.copy-13377({i8*, i64}* %2, {i8*, i64}* %3)
	%25 = load i64, i64* %7, align 8
	%26 = add i64 %25, %24
	store i64 %26, i64* %7
	ret void
}

define void @strconv-18.round_shortest(%decimal-24.Decimal* %d, i64 %mant, i64 %exp, %strconv-18.FloatInfo* %flt, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca %decimal-24.Decimal*, align 8
	%1 = alloca i64, align 8
	%2 = alloca i64, align 8
	%3 = alloca %strconv-18.FloatInfo*, align 8
	%4 = alloca i64, align 8
	%5 = alloca %decimal-24.Decimal, align 8
	%6 = alloca %decimal-24.Decimal*, align 8
	%7 = alloca i64, align 8
	%8 = alloca i64, align 8
	%9 = alloca %decimal-24.Decimal, align 8
	%10 = alloca %decimal-24.Decimal*, align 8
	%11 = alloca i1, align 1
	%12 = alloca i64, align 8
	%13 = alloca i64, align 8
	%14 = alloca i64, align 8
	%15 = alloca i8, align 1
	%16 = alloca i8, align 1
	%17 = alloca i8, align 1
	%18 = alloca i1, align 1
	%19 = alloca i1, align 1
		store %decimal-24.Decimal* %d, %decimal-24.Decimal** %0
		store i64 %mant, i64* %1
		store i64 %exp, i64* %2
		store %strconv-18.FloatInfo* %flt, %strconv-18.FloatInfo** %3
	; IfStmt
	%20 = load i64, i64* %1, align 8
	%21 = icmp eq i64 %20, 0
	br i1 %21, label %if.then-1, label %if.done-2

if.then-1:
	; AssignStmt
	; SelectorExpr
	%22 = load %decimal-24.Decimal*, %decimal-24.Decimal** %0, align 8
	%23 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %22, i64 0
	%24 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %23, i64 0, i32 0
	store i64 0, i64* %24
	; ReturnStmt
	ret void

if.done-2:
	; minexp
		; SelectorExpr
	%25 = load %strconv-18.FloatInfo*, %strconv-18.FloatInfo** %3, align 8
	%26 = getelementptr inbounds %strconv-18.FloatInfo, %strconv-18.FloatInfo* %25, i64 0
	%27 = getelementptr inbounds %strconv-18.FloatInfo, %strconv-18.FloatInfo* %26, i64 0, i32 2
	%28 = load i64, i64* %27, align 8
	%29 = add i64 %28, 1
	store i64 %29, i64* %4
	; IfStmt
	%30 = load i64, i64* %2, align 8
	%31 = load i64, i64* %4, align 8
	%32 = icmp sgt i64 %30, %31
	br i1 %32, label %cmp.and-3, label %if.done-5

cmp.and-3:
	; SelectorExpr
	%33 = load %decimal-24.Decimal*, %decimal-24.Decimal** %0, align 8
	%34 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %33, i64 0
	%35 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %34, i64 0, i32 1
	%36 = load i64, i64* %35, align 8
	; SelectorExpr
	%37 = load %decimal-24.Decimal*, %decimal-24.Decimal** %0, align 8
	%38 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %37, i64 0
	%39 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %38, i64 0, i32 0
	%40 = load i64, i64* %39, align 8
	%41 = sub i64 %36, %40
	%42 = mul i64 332, %41
	%43 = load i64, i64* %2, align 8
	; SelectorExpr
	%44 = load %strconv-18.FloatInfo*, %strconv-18.FloatInfo** %3, align 8
	%45 = getelementptr inbounds %strconv-18.FloatInfo, %strconv-18.FloatInfo* %44, i64 0
	%46 = getelementptr inbounds %strconv-18.FloatInfo, %strconv-18.FloatInfo* %45, i64 0, i32 0
	%47 = load i64, i64* %46, align 8
	%48 = bitcast i64 %47 to i64
	%49 = sub i64 %43, %48
	%50 = mul i64 100, %49
	%51 = icmp sge i64 %42, %50
	br i1 %51, label %if.then-4, label %if.done-5

if.then-4:
	; ReturnStmt
	ret void

if.done-5:
	; upper_
	store %decimal-24.Decimal zeroinitializer, %decimal-24.Decimal* %5
		; upper
		%52 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %5, i64 0
	store %decimal-24.Decimal* %52, %decimal-24.Decimal** %6
	%53 = load %decimal-24.Decimal*, %decimal-24.Decimal** %6, align 8
	%54 = load i64, i64* %1, align 8
	%55 = mul i64 2, %54
	%56 = sub i64 %55, 1
	call void @decimal-24.assign(%decimal-24.Decimal* %53, i64 %56, %Context* noalias nonnull %__.context_ptr)
	%57 = load %decimal-24.Decimal*, %decimal-24.Decimal** %6, align 8
	%58 = load i64, i64* %2, align 8
	; SelectorExpr
	%59 = load %strconv-18.FloatInfo*, %strconv-18.FloatInfo** %3, align 8
	%60 = getelementptr inbounds %strconv-18.FloatInfo, %strconv-18.FloatInfo* %59, i64 0
	%61 = getelementptr inbounds %strconv-18.FloatInfo, %strconv-18.FloatInfo* %60, i64 0, i32 0
	%62 = load i64, i64* %61, align 8
	%63 = bitcast i64 %62 to i64
	%64 = sub i64 %58, %63
	%65 = sub i64 %64, 1
	call void @decimal-24.shift(%decimal-24.Decimal* %57, i64 %65, %Context* noalias nonnull %__.context_ptr)
	; mantlo
	store i64 zeroinitializer, i64* %7
		; explo
	store i64 zeroinitializer, i64* %8
		; IfStmt
	%66 = load i64, i64* %1, align 8
	; SelectorExpr
	%67 = load %strconv-18.FloatInfo*, %strconv-18.FloatInfo** %3, align 8
	%68 = getelementptr inbounds %strconv-18.FloatInfo, %strconv-18.FloatInfo* %67, i64 0
	%69 = getelementptr inbounds %strconv-18.FloatInfo, %strconv-18.FloatInfo* %68, i64 0, i32 0
	%70 = load i64, i64* %69, align 8
	%71 = bitcast i64 %70 to i64
	%72 = shl i64 1, %71
	%73 = bitcast i64 %72 to i64
	%74 = icmp ugt i64 %66, %73
	br i1 %74, label %if.then-7, label %cmp.or-6

cmp.or-6:
	%75 = load i64, i64* %2, align 8
	%76 = load i64, i64* %4, align 8
	%77 = icmp eq i64 %75, %76
	br i1 %77, label %if.then-7, label %if.else-8

if.then-7:
	; AssignStmt
	%78 = load i64, i64* %1, align 8
	%79 = sub i64 %78, 1
	store i64 %79, i64* %7
	; AssignStmt
	%80 = load i64, i64* %2, align 8
	store i64 %80, i64* %8
	br label %if.done-9

if.else-8:
	; AssignStmt
	%81 = load i64, i64* %1, align 8
	%82 = mul i64 2, %81
	%83 = sub i64 %82, 1
	store i64 %83, i64* %7
	; AssignStmt
	%84 = load i64, i64* %2, align 8
	%85 = sub i64 %84, 1
	store i64 %85, i64* %8
	br label %if.done-9

if.done-9:
	; lower_
	store %decimal-24.Decimal zeroinitializer, %decimal-24.Decimal* %9
		; lower
		%86 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %9, i64 0
	store %decimal-24.Decimal* %86, %decimal-24.Decimal** %10
	%87 = load %decimal-24.Decimal*, %decimal-24.Decimal** %10, align 8
	%88 = load i64, i64* %7, align 8
	%89 = mul i64 2, %88
	%90 = add i64 %89, 1
	call void @decimal-24.assign(%decimal-24.Decimal* %87, i64 %90, %Context* noalias nonnull %__.context_ptr)
	%91 = load %decimal-24.Decimal*, %decimal-24.Decimal** %10, align 8
	%92 = load i64, i64* %8, align 8
	; SelectorExpr
	%93 = load %strconv-18.FloatInfo*, %strconv-18.FloatInfo** %3, align 8
	%94 = getelementptr inbounds %strconv-18.FloatInfo, %strconv-18.FloatInfo* %93, i64 0
	%95 = getelementptr inbounds %strconv-18.FloatInfo, %strconv-18.FloatInfo* %94, i64 0, i32 0
	%96 = load i64, i64* %95, align 8
	%97 = bitcast i64 %96 to i64
	%98 = sub i64 %92, %97
	%99 = sub i64 %98, 1
	call void @decimal-24.shift(%decimal-24.Decimal* %91, i64 %99, %Context* noalias nonnull %__.context_ptr)
	; inclusive
		%100 = load i64, i64* %1, align 8
	%101 = urem i64 %100, 2
	%102 = icmp eq i64 %101, 0
	store i1 %102, i1* %11
	; RangeStmt
	; i
	store i64 zeroinitializer, i64* %12
		store i64 zeroinitializer, i64* %13
	store i64 0, i64* %13
	store i64 zeroinitializer, i64* %14
	store i64 0, i64* %14
	br label %for.interval.loop-10

for.interval.loop-10:
	; SelectorExpr
	%103 = load %decimal-24.Decimal*, %decimal-24.Decimal** %0, align 8
	%104 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %103, i64 0
	%105 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %104, i64 0, i32 0
	%106 = load i64, i64* %105, align 8
	%107 = load i64, i64* %13, align 8
	%108 = icmp slt i64 %107, %106
	br i1 %108, label %for.interval.body-11, label %for.interval.done-34

for.interval.body-11:
	%109 = load i64, i64* %13, align 8
	%110 = load i64, i64* %14, align 8
	%111 = load i64, i64* %13, align 8
	%112 = add i64 %111, 1
	store i64 %112, i64* %13
	%113 = load i64, i64* %14, align 8
	%114 = add i64 %113, 1
	store i64 %114, i64* %14
	store i64 %109, i64* %12
	; l
		store i8 48, i8* %15
	; IfStmt
	%115 = load i64, i64* %12, align 8
	; SelectorExpr
	%116 = load %decimal-24.Decimal*, %decimal-24.Decimal** %10, align 8
	%117 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %116, i64 0
	%118 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %117, i64 0, i32 0
	%119 = load i64, i64* %118, align 8
	%120 = icmp slt i64 %115, %119
	br i1 %120, label %if.then-12, label %if.done-13

if.then-12:
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%121 = load %decimal-24.Decimal*, %decimal-24.Decimal** %10, align 8
	%122 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %121, i64 0
	%123 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %122, i64 0, i32 2
	%124 = load i64, i64* %12, align 8
	%125 = trunc i64 %124 to i32
	%126 = getelementptr inbounds [384 x i8], [384 x i8]* %123, i64 0, i32 %125
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([33 x i8], [33 x i8]* @__str$139, i64 0, i32 0), i64 32}, i64 399, i64 21, i64 %124, i64 384)
	%127 = load i8, i8* %126, align 1
	store i8 %127, i8* %15
	br label %if.done-13

if.done-13:
	; m
		; IndexExpr
	; SelectorExpr
	%128 = load %decimal-24.Decimal*, %decimal-24.Decimal** %0, align 8
	%129 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %128, i64 0
	%130 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %129, i64 0, i32 2
	%131 = load i64, i64* %12, align 8
	%132 = trunc i64 %131 to i32
	%133 = getelementptr inbounds [384 x i8], [384 x i8]* %130, i64 0, i32 %132
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([33 x i8], [33 x i8]* @__str$13a, i64 0, i32 0), i64 32}, i64 401, i64 17, i64 %131, i64 384)
	%134 = load i8, i8* %133, align 1
	store i8 %134, i8* %16
	; u
		store i8 48, i8* %17
	; IfStmt
	%135 = load i64, i64* %12, align 8
	; SelectorExpr
	%136 = load %decimal-24.Decimal*, %decimal-24.Decimal** %6, align 8
	%137 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %136, i64 0
	%138 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %137, i64 0, i32 0
	%139 = load i64, i64* %138, align 8
	%140 = icmp slt i64 %135, %139
	br i1 %140, label %if.then-14, label %if.done-15

if.then-14:
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%141 = load %decimal-24.Decimal*, %decimal-24.Decimal** %6, align 8
	%142 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %141, i64 0
	%143 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %142, i64 0, i32 2
	%144 = load i64, i64* %12, align 8
	%145 = trunc i64 %144 to i32
	%146 = getelementptr inbounds [384 x i8], [384 x i8]* %143, i64 0, i32 %145
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([33 x i8], [33 x i8]* @__str$13b, i64 0, i32 0), i64 32}, i64 404, i64 21, i64 %144, i64 384)
	%147 = load i8, i8* %146, align 1
	store i8 %147, i8* %17
	br label %if.done-15

if.done-15:
	; ok_round_down
		%148 = load i8, i8* %15, align 1
	%149 = load i8, i8* %16, align 1
	%150 = icmp ne i8 %148, %149
	%151 = load i8, i8* %15, align 1
	%152 = load i8, i8* %16, align 1
	%153 = icmp ne i8 %151, %152
	br i1 %153, label %logical.cmp.done-19, label %logical.cmp.rhs-16

logical.cmp.rhs-16:
	%154 = load i1, i1* %11, align 1
	%155 = load i1, i1* %11, align 1
	br i1 %155, label %logical.cmp.rhs-17, label %logical.cmp.done-18

logical.cmp.rhs-17:
	%156 = load i64, i64* %12, align 8
	%157 = add i64 %156, 1
	; SelectorExpr
	%158 = load %decimal-24.Decimal*, %decimal-24.Decimal** %10, align 8
	%159 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %158, i64 0
	%160 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %159, i64 0, i32 0
	%161 = load i64, i64* %160, align 8
	%162 = icmp eq i64 %157, %161
	br label %logical.cmp.done-18

logical.cmp.done-18:
	%163 = phi i1 [ false, %logical.cmp.rhs-16 ], [ %162, %logical.cmp.rhs-17 ]
	br label %logical.cmp.done-19

logical.cmp.done-19:
	%164 = phi i1 [ true, %if.done-15 ], [ %163, %logical.cmp.done-18 ]
	store i1 %164, i1* %18
	; ok_round_up
		%165 = load i8, i8* %16, align 1
	%166 = load i8, i8* %17, align 1
	%167 = icmp ne i8 %165, %166
	%168 = load i8, i8* %16, align 1
	%169 = load i8, i8* %17, align 1
	%170 = icmp ne i8 %168, %169
	br i1 %170, label %logical.cmp.rhs-20, label %logical.cmp.done-26

logical.cmp.rhs-20:
	%171 = load i1, i1* %11, align 1
	%172 = load i1, i1* %11, align 1
	br i1 %172, label %logical.cmp.done-22, label %logical.cmp.rhs-21

logical.cmp.rhs-21:
	%173 = load i8, i8* %16, align 1
	%174 = add i8 %173, 1
	%175 = load i8, i8* %17, align 1
	%176 = icmp ult i8 %174, %175
	br label %logical.cmp.done-22

logical.cmp.done-22:
	%177 = phi i1 [ true, %logical.cmp.rhs-20 ], [ %176, %logical.cmp.rhs-21 ]
	%178 = load i1, i1* %11, align 1
	br i1 %178, label %logical.cmp.done-25, label %cmp.or-23

cmp.or-23:
	%179 = load i8, i8* %16, align 1
	%180 = add i8 %179, 1
	%181 = load i8, i8* %17, align 1
	%182 = icmp ult i8 %180, %181
	br i1 %182, label %logical.cmp.done-25, label %logical.cmp.rhs-24

logical.cmp.rhs-24:
	%183 = load i64, i64* %12, align 8
	%184 = add i64 %183, 1
	; SelectorExpr
	%185 = load %decimal-24.Decimal*, %decimal-24.Decimal** %6, align 8
	%186 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %185, i64 0
	%187 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %186, i64 0, i32 0
	%188 = load i64, i64* %187, align 8
	%189 = icmp slt i64 %184, %188
	br label %logical.cmp.done-25

logical.cmp.done-25:
	%190 = phi i1 [ true, %logical.cmp.done-22 ], [ true, %cmp.or-23 ], [ %189, %logical.cmp.rhs-24 ]
	br label %logical.cmp.done-26

logical.cmp.done-26:
	%191 = phi i1 [ false, %logical.cmp.done-19 ], [ %190, %logical.cmp.done-25 ]
	store i1 %191, i1* %19
	; IfStmt
	%192 = load i1, i1* %18, align 1
	br i1 %192, label %cmp.and-27, label %if.done-29

cmp.and-27:
	%193 = load i1, i1* %19, align 1
	br i1 %193, label %if.then-28, label %if.done-29

if.then-28:
	%194 = load %decimal-24.Decimal*, %decimal-24.Decimal** %0, align 8
	%195 = load i64, i64* %12, align 8
	%196 = add i64 %195, 1
	call void @decimal-24.round(%decimal-24.Decimal* %194, i64 %196, %Context* noalias nonnull %__.context_ptr)
	; ReturnStmt
	ret void

if.done-29:
	; IfStmt
	%197 = load i1, i1* %18, align 1
	br i1 %197, label %if.then-30, label %if.done-31

if.then-30:
	%198 = load %decimal-24.Decimal*, %decimal-24.Decimal** %0, align 8
	%199 = load i64, i64* %12, align 8
	%200 = add i64 %199, 1
	call void @decimal-24.round_down(%decimal-24.Decimal* %198, i64 %200, %Context* noalias nonnull %__.context_ptr)
	; ReturnStmt
	ret void

if.done-31:
	; IfStmt
	%201 = load i1, i1* %19, align 1
	br i1 %201, label %if.then-32, label %if.done-33

if.then-32:
	%202 = load %decimal-24.Decimal*, %decimal-24.Decimal** %0, align 8
	%203 = load i64, i64* %12, align 8
	%204 = add i64 %203, 1
	call void @decimal-24.round_up(%decimal-24.Decimal* %202, i64 %204, %Context* noalias nonnull %__.context_ptr)
	; ReturnStmt
	ret void

if.done-33:
	br label %for.interval.loop-10

for.interval.done-34:
	ret void
}

define {i128, i1} @strconv-18.is_integer_negative(i128* %u, i1 %is_signed, i64 %bit_size, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca i1, align 1
	%1 = alloca i64, align 8
	%2 = alloca i1, align 1
	%3 = alloca i8, align 1
	%4 = alloca i16, align 2
	%5 = alloca i32, align 4
	%6 = alloca i64, align 8
	%7 = alloca i128, align 8
	%8 = alloca {%..any*, i64}, align 8
	%9 = alloca {%..any*, i64}, align 16
	%10 = alloca %Source_Code_Location, align 16
	%11 = alloca {i128, i1}, align 8
	%12 = load i128, i128* %u, align 8
		store i1 %is_signed, i1* %0
		store i64 %bit_size, i64* %1
	; neg
		store i1 false, i1* %2
	; IfStmt
	%13 = load i1, i1* %0, align 1
	br i1 %13, label %if.then-1, label %if.done-13

if.then-1:
	; SwitchStmt
	%14 = load i64, i64* %1, align 8
	%15 = icmp eq i64 %14, 8
	br i1 %15, label %switch.case.body-3, label %switch.case.next-2

switch.case.next-2:
	%16 = icmp eq i64 %14, 16
	br i1 %16, label %switch.fall.body-5, label %switch.case.next-4

switch.case.body-3:
	; i
		%17 = load i128, i128* %u, align 8
	%18 = trunc i128 %17 to i8
	store i8 %18, i8* %3
	; AssignStmt
	%19 = load i8, i8* %3, align 1
	%20 = icmp slt i8 %19, 0
	store i1 %20, i1* %2
	; AssignStmt
	; abs
	%21 = load i8, i8* %3, align 1
	%22 = icmp slt i8 %21, 0
	%23 = sub i8 0, %21
	%24 = select i1 %22, i8 %23, i8 %21
	%25 = sext i8 %24 to i128
	store i128 %25, i128* %u
	br label %switch.done-12

switch.case.next-4:
	%26 = icmp eq i64 %14, 32
	br i1 %26, label %switch.fall.body-7, label %switch.case.next-6

switch.fall.body-5:
	; i
		%27 = load i128, i128* %u, align 8
	%28 = trunc i128 %27 to i16
	store i16 %28, i16* %4
	; AssignStmt
	%29 = load i16, i16* %4, align 2
	%30 = icmp slt i16 %29, 0
	store i1 %30, i1* %2
	; AssignStmt
	; abs
	%31 = load i16, i16* %4, align 2
	%32 = icmp slt i16 %31, 0
	%33 = sub i16 0, %31
	%34 = select i1 %32, i16 %33, i16 %31
	%35 = sext i16 %34 to i128
	store i128 %35, i128* %u
	br label %switch.done-12

switch.case.next-6:
	%36 = icmp eq i64 %14, 64
	br i1 %36, label %switch.fall.body-9, label %switch.case.next-8

switch.fall.body-7:
	; i
		%37 = load i128, i128* %u, align 8
	%38 = trunc i128 %37 to i32
	store i32 %38, i32* %5
	; AssignStmt
	%39 = load i32, i32* %5, align 4
	%40 = icmp slt i32 %39, 0
	store i1 %40, i1* %2
	; AssignStmt
	; abs
	%41 = load i32, i32* %5, align 4
	%42 = icmp slt i32 %41, 0
	%43 = sub i32 0, %41
	%44 = select i1 %42, i32 %43, i32 %41
	%45 = sext i32 %44 to i128
	store i128 %45, i128* %u
	br label %switch.done-12

switch.case.next-8:
	%46 = icmp eq i64 %14, 128
	br i1 %46, label %switch.fall.body-11, label %switch.case.next-10

switch.fall.body-9:
	; i
		%47 = load i128, i128* %u, align 8
	%48 = trunc i128 %47 to i64
	store i64 %48, i64* %6
	; AssignStmt
	%49 = load i64, i64* %6, align 8
	%50 = icmp slt i64 %49, 0
	store i1 %50, i1* %2
	; AssignStmt
	; abs
	%51 = load i64, i64* %6, align 8
	%52 = icmp slt i64 %51, 0
	%53 = sub i64 0, %51
	%54 = select i1 %52, i64 %53, i64 %51
	%55 = sext i64 %54 to i128
	store i128 %55, i128* %u
	br label %switch.done-12

switch.case.next-10:
	; variadic call argument generation
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %8
	%56 = load {%..any*, i64}, {%..any*, i64}* %8, align 8
	%57 = call %Source_Code_Location @make_source_code_location(%..string {i8* getelementptr inbounds ([33 x i8], [33 x i8]* @__str$13c, i64 0, i32 0), i64 32}, i64 455, i64 4, %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$13d, i64 0, i32 0), i64 19})
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %9
	store {%..any*, i64} %56, {%..any*, i64}* %9
	store %Source_Code_Location zeroinitializer, %Source_Code_Location* %10
	store %Source_Code_Location %57, %Source_Code_Location* %10
	call void @panic(%..string {i8* getelementptr inbounds ([42 x i8], [42 x i8]* @__str$13e, i64 0, i32 0), i64 41}, {%..any*, i64}* %9, %Source_Code_Location* %10)
	br label %switch.done-12

switch.fall.body-11:
	; i
		%58 = load i128, i128* %u, align 8
	%59 = bitcast i128 %58 to i128
	store i128 %59, i128* %7
	; AssignStmt
	%60 = load i128, i128* %7, align 8
	%61 = icmp slt i128 %60, 0
	store i1 %61, i1* %2
	; AssignStmt
	; abs
	%62 = load i128, i128* %7, align 8
	%63 = icmp slt i128 %62, 0
	%64 = sub i128 0, %62
	%65 = select i1 %63, i128 %64, i128 %62
	%66 = bitcast i128 %65 to i128
	store i128 %66, i128* %u
	br label %switch.done-12

switch.done-12:
	br label %if.done-13

if.done-13:
	; ReturnStmt
	%67 = load i128, i128* %u, align 8
	%68 = load i1, i1* %2, align 1
	store {i128, i1} zeroinitializer, {i128, i1}* %11
	%69 = getelementptr inbounds {i128, i1}, {i128, i1}* %11, i64 0, i32 0
	store i128 %67, i128* %69
	%70 = getelementptr inbounds {i128, i1}, {i128, i1}* %11, i64 0, i32 1
	store i1 %68, i1* %70
	%71 = load {i128, i1}, {i128, i1}* %11, align 8
	ret {i128, i1} %71
}

define %..string @strconv-18.append_bits({i8*, i64}* %buf, i128* %u, i64 %base, i1 %is_signed, i64 %bit_size, %..string %digits, i64 %flags, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca i64, align 8
	%1 = alloca i1, align 1
	%2 = alloca i64, align 8
	%3 = alloca %..string, align 8
	%4 = alloca i64, align 8
	%5 = alloca {%..any*, i64}, align 8
	%6 = alloca {%..any*, i64}, align 16
	%7 = alloca %Source_Code_Location, align 16
	%8 = alloca i1, align 1
	%9 = alloca [129 x i8], align 1
	%10 = alloca i64, align 8
	%11 = alloca i128, align 16
	%12 = alloca i128, align 8
	%13 = alloca i128, align 16
	%14 = alloca i128, align 16
	%15 = alloca i128, align 8
	%16 = alloca i128, align 16
	%17 = alloca i128, align 16
	%18 = alloca i128, align 8
	%19 = alloca i128, align 16
	%20 = alloca i128, align 16
	%21 = alloca i128, align 8
	%22 = alloca i1, align 1
	%23 = alloca {i8*, i64}, align 8
	%24 = alloca {i8*, i64}, align 8
	%25 = alloca {i8*, i64}, align 16
	%26 = alloca {i8*, i64}, align 16
	%27 = alloca {i8*, i64}, align 8
	%28 = alloca %..string, align 8
	%29 = load {i8*, i64}, {i8*, i64}* %buf, align 8
	%30 = load i128, i128* %u, align 8
		store i64 %base, i64* %0
		store i1 %is_signed, i1* %1
		store i64 %bit_size, i64* %2
		store %..string %digits, %..string* %3
		store i64 %flags, i64* %4
	; IfStmt
	%31 = load i64, i64* %0, align 8
	%32 = icmp slt i64 %31, 2
	br i1 %32, label %if.then-2, label %cmp.or-1

cmp.or-1:
	%33 = load i64, i64* %0, align 8
	%34 = icmp sgt i64 %33, 32
	br i1 %34, label %if.then-2, label %if.done-3

if.then-2:
	; variadic call argument generation
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %5
	%35 = load {%..any*, i64}, {%..any*, i64}* %5, align 8
	%36 = call %Source_Code_Location @make_source_code_location(%..string {i8* getelementptr inbounds ([33 x i8], [33 x i8]* @__str$13f, i64 0, i32 0), i64 32}, i64 463, i64 3, %..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$140, i64 0, i32 0), i64 11})
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %6
	store {%..any*, i64} %35, {%..any*, i64}* %6
	store %Source_Code_Location zeroinitializer, %Source_Code_Location* %7
	store %Source_Code_Location %36, %Source_Code_Location* %7
	call void @panic(%..string {i8* getelementptr inbounds ([44 x i8], [44 x i8]* @__str$141, i64 0, i32 0), i64 43}, {%..any*, i64}* %6, %Source_Code_Location* %7)
	br label %if.done-3

if.done-3:
	; neg
	store i1 zeroinitializer, i1* %8
		; a
	store [129 x i8] zeroinitializer, [129 x i8]* %9
		; i
		store i64 129, i64* %10
	; AssignStmt
	%37 = load i128, i128* %u, align 8
	%38 = load i1, i1* %1, align 1
	%39 = load i64, i64* %2, align 8
	store i128 zeroinitializer, i128* %11
	store i128 %37, i128* %11
	%40 = call {i128, i1} @strconv-18.is_integer_negative(i128* %11, i1 %38, i64 %39, %Context* noalias nonnull %__.context_ptr)
	%41 = extractvalue {i128, i1} %40, 0
	%42 = extractvalue {i128, i1} %40, 1
	store i128 %41, i128* %u
	store i1 %42, i1* %8
	; b
		%43 = load i64, i64* %0, align 8
	%44 = sext i64 %43 to i128
	store i128 %44, i128* %12
	; ForStmt
	br label %for.loop-4

for.loop-4:
	%45 = load i128, i128* %u, align 8
	%46 = load i128, i128* %12, align 8
	%47 = icmp uge i128 %45, %46
	br i1 %47, label %for.body-5, label %for.done-6

for.body-5:
	; AssignStmt
	%48 = load i64, i64* %10, align 8
	%49 = sub i64 %48, 1
	store i64 %49, i64* %10
	; AssignStmt
	; IndexExpr
	%50 = load i64, i64* %10, align 8
	%51 = trunc i64 %50 to i32
	%52 = getelementptr inbounds [129 x i8], [129 x i8]* %9, i64 0, i32 %51
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([33 x i8], [33 x i8]* @__str$142, i64 0, i32 0), i64 32}, i64 472, i64 11, i64 %50, i64 129)
	; IndexExpr
	%53 = load %..string, %..string* %3, align 8
	%54 = extractvalue %..string %53, 0
	%55 = extractvalue %..string %53, 1
	%56 = load i128, i128* %u, align 8
	%57 = load i128, i128* %12, align 8
	store i128 zeroinitializer, i128* %13
	store i128 %56, i128* %13
	store i128 zeroinitializer, i128* %14
	store i128 %57, i128* %14
	store i128 zeroinitializer, i128* %15
	call ccc void @__umodti3(i128* %15, i128* %13, i128* %14)
	%58 = load i128, i128* %15, align 8
	%59 = trunc i128 %58 to i64
	%60 = bitcast i64 %59 to i64
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([33 x i8], [33 x i8]* @__str$143, i64 0, i32 0), i64 32}, i64 472, i64 23, i64 %60, i64 %55)
	%61 = getelementptr inbounds i8, i8* %54, i64 %60
	%62 = load i8, i8* %61, align 1
	store i8 %62, i8* %52
	; AssignStmt
	%63 = load i128, i128* %12, align 8
	%64 = load i128, i128* %u, align 8
	store i128 zeroinitializer, i128* %16
	store i128 %64, i128* %16
	store i128 zeroinitializer, i128* %17
	store i128 %63, i128* %17
	store i128 zeroinitializer, i128* %18
	call ccc void @__udivti3(i128* %18, i128* %16, i128* %17)
	%65 = load i128, i128* %18, align 8
	store i128 %65, i128* %u
	br label %for.loop-4

for.done-6:
	; AssignStmt
	%66 = load i64, i64* %10, align 8
	%67 = sub i64 %66, 1
	store i64 %67, i64* %10
	; AssignStmt
	; IndexExpr
	%68 = load i64, i64* %10, align 8
	%69 = trunc i64 %68 to i32
	%70 = getelementptr inbounds [129 x i8], [129 x i8]* %9, i64 0, i32 %69
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([33 x i8], [33 x i8]* @__str$144, i64 0, i32 0), i64 32}, i64 475, i64 10, i64 %68, i64 129)
	; IndexExpr
	%71 = load %..string, %..string* %3, align 8
	%72 = extractvalue %..string %71, 0
	%73 = extractvalue %..string %71, 1
	%74 = load i128, i128* %u, align 8
	%75 = load i128, i128* %12, align 8
	store i128 zeroinitializer, i128* %19
	store i128 %74, i128* %19
	store i128 zeroinitializer, i128* %20
	store i128 %75, i128* %20
	store i128 zeroinitializer, i128* %21
	call ccc void @__umodti3(i128* %21, i128* %19, i128* %20)
	%76 = load i128, i128* %21, align 8
	%77 = trunc i128 %76 to i64
	%78 = bitcast i64 %77 to i64
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([33 x i8], [33 x i8]* @__str$145, i64 0, i32 0), i64 32}, i64 475, i64 22, i64 %78, i64 %73)
	%79 = getelementptr inbounds i8, i8* %72, i64 %78
	%80 = load i8, i8* %79, align 1
	store i8 %80, i8* %70
	; IfStmt
	%81 = load i64, i64* %4, align 8
	%82 = and i64 %81, 1
	%83 = icmp ne i64 %82, 0
	br i1 %83, label %if.then-7, label %if.done-21

if.then-7:
	; ok
		store i1 true, i1* %22
	; SwitchStmt
	%84 = load i64, i64* %0, align 8
	%85 = icmp eq i64 %84, 2
	br i1 %85, label %switch.case.body-9, label %switch.case.next-8

switch.case.next-8:
	%86 = icmp eq i64 %84, 8
	br i1 %86, label %switch.fall.body-11, label %switch.case.next-10

switch.case.body-9:
	; AssignStmt
	%87 = load i64, i64* %10, align 8
	%88 = sub i64 %87, 1
	store i64 %88, i64* %10
	; AssignStmt
	; IndexExpr
	%89 = load i64, i64* %10, align 8
	%90 = trunc i64 %89 to i32
	%91 = getelementptr inbounds [129 x i8], [129 x i8]* %9, i64 0, i32 %90
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([33 x i8], [33 x i8]* @__str$146, i64 0, i32 0), i64 32}, i64 480, i64 20, i64 %89, i64 129)
	store i8 98, i8* %91
	br label %switch.done-18

switch.case.next-10:
	%92 = icmp eq i64 %84, 10
	br i1 %92, label %switch.fall.body-13, label %switch.case.next-12

switch.fall.body-11:
	; AssignStmt
	%93 = load i64, i64* %10, align 8
	%94 = sub i64 %93, 1
	store i64 %94, i64* %10
	; AssignStmt
	; IndexExpr
	%95 = load i64, i64* %10, align 8
	%96 = trunc i64 %95 to i32
	%97 = getelementptr inbounds [129 x i8], [129 x i8]* %9, i64 0, i32 %96
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([33 x i8], [33 x i8]* @__str$147, i64 0, i32 0), i64 32}, i64 481, i64 20, i64 %95, i64 129)
	store i8 111, i8* %97
	br label %switch.done-18

switch.case.next-12:
	%98 = icmp eq i64 %84, 12
	br i1 %98, label %switch.fall.body-15, label %switch.case.next-14

switch.fall.body-13:
	; AssignStmt
	%99 = load i64, i64* %10, align 8
	%100 = sub i64 %99, 1
	store i64 %100, i64* %10
	; AssignStmt
	; IndexExpr
	%101 = load i64, i64* %10, align 8
	%102 = trunc i64 %101 to i32
	%103 = getelementptr inbounds [129 x i8], [129 x i8]* %9, i64 0, i32 %102
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([33 x i8], [33 x i8]* @__str$148, i64 0, i32 0), i64 32}, i64 482, i64 20, i64 %101, i64 129)
	store i8 100, i8* %103
	br label %switch.done-18

switch.case.next-14:
	%104 = icmp eq i64 %84, 16
	br i1 %104, label %switch.fall.body-17, label %switch.case.next-16

switch.fall.body-15:
	; AssignStmt
	%105 = load i64, i64* %10, align 8
	%106 = sub i64 %105, 1
	store i64 %106, i64* %10
	; AssignStmt
	; IndexExpr
	%107 = load i64, i64* %10, align 8
	%108 = trunc i64 %107 to i32
	%109 = getelementptr inbounds [129 x i8], [129 x i8]* %9, i64 0, i32 %108
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([33 x i8], [33 x i8]* @__str$149, i64 0, i32 0), i64 32}, i64 483, i64 20, i64 %107, i64 129)
	store i8 122, i8* %109
	br label %switch.done-18

switch.case.next-16:
	; AssignStmt
	store i1 false, i1* %22
	br label %switch.done-18

switch.fall.body-17:
	; AssignStmt
	%110 = load i64, i64* %10, align 8
	%111 = sub i64 %110, 1
	store i64 %111, i64* %10
	; AssignStmt
	; IndexExpr
	%112 = load i64, i64* %10, align 8
	%113 = trunc i64 %112 to i32
	%114 = getelementptr inbounds [129 x i8], [129 x i8]* %9, i64 0, i32 %113
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([33 x i8], [33 x i8]* @__str$14a, i64 0, i32 0), i64 32}, i64 484, i64 20, i64 %112, i64 129)
	store i8 120, i8* %114
	br label %switch.done-18

switch.done-18:
	; IfStmt
	%115 = load i1, i1* %22, align 1
	br i1 %115, label %if.then-19, label %if.done-20

if.then-19:
	; AssignStmt
	%116 = load i64, i64* %10, align 8
	%117 = sub i64 %116, 1
	store i64 %117, i64* %10
	; AssignStmt
	; IndexExpr
	%118 = load i64, i64* %10, align 8
	%119 = trunc i64 %118 to i32
	%120 = getelementptr inbounds [129 x i8], [129 x i8]* %9, i64 0, i32 %119
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([33 x i8], [33 x i8]* @__str$14b, i64 0, i32 0), i64 32}, i64 488, i64 12, i64 %118, i64 129)
	store i8 48, i8* %120
	br label %if.done-20

if.done-20:
	br label %if.done-21

if.done-21:
	; SwitchStmt
	%121 = load i1, i1* %8, align 1
	%122 = icmp eq i1 true, %121
	br i1 %122, label %switch.case.body-23, label %switch.case.next-22

switch.case.next-22:
	%123 = load i64, i64* %4, align 8
	%124 = and i64 %123, 2
	%125 = icmp ne i64 %124, 0
	%126 = icmp eq i1 true, %125
	br i1 %126, label %switch.fall.body-25, label %switch.case.next-24

switch.case.body-23:
	; AssignStmt
	%127 = load i64, i64* %10, align 8
	%128 = sub i64 %127, 1
	store i64 %128, i64* %10
	; AssignStmt
	; IndexExpr
	%129 = load i64, i64* %10, align 8
	%130 = trunc i64 %129 to i32
	%131 = getelementptr inbounds [129 x i8], [129 x i8]* %9, i64 0, i32 %130
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([33 x i8], [33 x i8]* @__str$14c, i64 0, i32 0), i64 32}, i64 494, i64 11, i64 %129, i64 129)
	store i8 45, i8* %131
	br label %switch.done-28

switch.case.next-24:
	%132 = load i64, i64* %4, align 8
	%133 = and i64 %132, 4
	%134 = icmp ne i64 %133, 0
	%135 = icmp eq i1 true, %134
	br i1 %135, label %switch.fall.body-27, label %switch.case.next-26

switch.fall.body-25:
	; AssignStmt
	%136 = load i64, i64* %10, align 8
	%137 = sub i64 %136, 1
	store i64 %137, i64* %10
	; AssignStmt
	; IndexExpr
	%138 = load i64, i64* %10, align 8
	%139 = trunc i64 %138 to i32
	%140 = getelementptr inbounds [129 x i8], [129 x i8]* %9, i64 0, i32 %139
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([33 x i8], [33 x i8]* @__str$14d, i64 0, i32 0), i64 32}, i64 496, i64 11, i64 %138, i64 129)
	store i8 43, i8* %140
	br label %switch.done-28

switch.case.next-26:
	br label %switch.done-28

switch.fall.body-27:
	; AssignStmt
	%141 = load i64, i64* %10, align 8
	%142 = sub i64 %141, 1
	store i64 %142, i64* %10
	; AssignStmt
	; IndexExpr
	%143 = load i64, i64* %10, align 8
	%144 = trunc i64 %143 to i32
	%145 = getelementptr inbounds [129 x i8], [129 x i8]* %9, i64 0, i32 %144
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([33 x i8], [33 x i8]* @__str$14e, i64 0, i32 0), i64 32}, i64 498, i64 11, i64 %143, i64 129)
	store i8 32, i8* %145
	br label %switch.done-28

switch.done-28:
	; out
		; SliceExpr
	%146 = load i64, i64* %10, align 8
	%147 = load [129 x i8], [129 x i8]* %9, align 1
	call void @__slice_expr_error(%..string {i8* getelementptr inbounds ([33 x i8], [33 x i8]* @__str$14f, i64 0, i32 0), i64 32}, i64 501, i64 10, i64 %146, i64 129)
	%148 = getelementptr inbounds [129 x i8], [129 x i8]* %9, i64 0, i32 0
	%149 = getelementptr inbounds i8, i8* %148, i64 %146
	%150 = sub i64 129, %146
	store {i8*, i64} zeroinitializer, {i8*, i64}* %24
	%151 = getelementptr inbounds {i8*, i64}, {i8*, i64}* %24, i64 0, i32 0
	store i8* %149, i8** %151
	%152 = getelementptr inbounds {i8*, i64}, {i8*, i64}* %24, i64 0, i32 1
	store i64 %150, i64* %152
	%153 = load {i8*, i64}, {i8*, i64}* %24, align 8
	store {i8*, i64} %153, {i8*, i64}* %23
	%154 = load {i8*, i64}, {i8*, i64}* %buf, align 8
	%155 = load {i8*, i64}, {i8*, i64}* %23, align 8
	store {i8*, i64} zeroinitializer, {i8*, i64}* %25
	store {i8*, i64} %154, {i8*, i64}* %25
	store {i8*, i64} zeroinitializer, {i8*, i64}* %26
	store {i8*, i64} %155, {i8*, i64}* %26
	%156 = call i64 @_preload-0.copy-13377({i8*, i64}* %25, {i8*, i64}* %26)
	; ReturnStmt
	; SliceExpr
	%157 = load {i8*, i64}, {i8*, i64}* %23, align 8
	%158 = extractvalue {i8*, i64} %157, 1
	%159 = load {i8*, i64}, {i8*, i64}* %buf, align 8
	call void @__slice_expr_error(%..string {i8* getelementptr inbounds ([33 x i8], [33 x i8]* @__str$150, i64 0, i32 0), i64 32}, i64 503, i64 19, i64 0, i64 %158)
	%160 = extractvalue {i8*, i64} %159, 0
	%161 = getelementptr inbounds i8, i8* %160, i64 0
	%162 = sub i64 %158, 0
	store {i8*, i64} zeroinitializer, {i8*, i64}* %27
	%163 = getelementptr inbounds {i8*, i64}, {i8*, i64}* %27, i64 0, i32 0
	store i8* %161, i8** %163
	%164 = getelementptr inbounds {i8*, i64}, {i8*, i64}* %27, i64 0, i32 1
	store i64 %162, i64* %164
	%165 = load {i8*, i64}, {i8*, i64}* %27, align 8
	%166 = extractvalue {i8*, i64} %165, 0
	%167 = extractvalue {i8*, i64} %165, 1
	store %..string zeroinitializer, %..string* %28
	%168 = getelementptr inbounds %..string, %..string* %28, i64 0, i32 0
	store i8* %166, i8** %168
	%169 = getelementptr inbounds %..string, %..string* %28, i64 0, i32 1
	store i64 %167, i64* %169
	%170 = load %..string, %..string* %28, align 8
	ret %..string %170
}

define [4 x [4 x float]] @math-19.mat4_identity(%Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	; ReturnStmt
	ret [4 x [4 x float]] [[4 x float] [float 0x3ff0000000000000, float 0x0000000000000000, float 0x0000000000000000, float 0x0000000000000000], [4 x float] [float 0x0000000000000000, float 0x3ff0000000000000, float 0x0000000000000000, float 0x0000000000000000], [4 x float] [float 0x0000000000000000, float 0x0000000000000000, float 0x3ff0000000000000, float 0x0000000000000000], [4 x float] [float 0x0000000000000000, float 0x0000000000000000, float 0x0000000000000000, float 0x3ff0000000000000]]
}

define [4 x [4 x float]] @math-19.mul-1166([4 x [4 x float]]* %a, [4 x [4 x float]]* %b, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca [4 x [4 x float]], align 4
	%1 = alloca i64, align 8
	%2 = alloca i64, align 8
	%3 = alloca i64, align 8
	%4 = alloca i64, align 8
	%5 = alloca i64, align 8
	%6 = alloca i64, align 8
	%7 = load [4 x [4 x float]], [4 x [4 x float]]* %a, align 4
	%8 = load [4 x [4 x float]], [4 x [4 x float]]* %b, align 4
	; c
	store [4 x [4 x float]] zeroinitializer, [4 x [4 x float]]* %0
		; RangeStmt
	; j
	store i64 zeroinitializer, i64* %1
		store i64 zeroinitializer, i64* %2
	store i64 0, i64* %2
	store i64 zeroinitializer, i64* %3
	store i64 0, i64* %3
	br label %for.interval.loop-1

for.interval.loop-1:
	%9 = load i64, i64* %2, align 8
	%10 = icmp slt i64 %9, 4
	br i1 %10, label %for.interval.body-2, label %for.interval.done-6

for.interval.body-2:
	%11 = load i64, i64* %2, align 8
	%12 = load i64, i64* %3, align 8
	%13 = load i64, i64* %2, align 8
	%14 = add i64 %13, 1
	store i64 %14, i64* %2
	%15 = load i64, i64* %3, align 8
	%16 = add i64 %15, 1
	store i64 %16, i64* %3
	store i64 %11, i64* %1
	; RangeStmt
	; i
	store i64 zeroinitializer, i64* %4
		store i64 zeroinitializer, i64* %5
	store i64 0, i64* %5
	store i64 zeroinitializer, i64* %6
	store i64 0, i64* %6
	br label %for.interval.loop-3

for.interval.loop-3:
	%17 = load i64, i64* %5, align 8
	%18 = icmp slt i64 %17, 4
	br i1 %18, label %for.interval.body-4, label %for.interval.done-5

for.interval.body-4:
	%19 = load i64, i64* %5, align 8
	%20 = load i64, i64* %6, align 8
	%21 = load i64, i64* %5, align 8
	%22 = add i64 %21, 1
	store i64 %22, i64* %5
	%23 = load i64, i64* %6, align 8
	%24 = add i64 %23, 1
	store i64 %24, i64* %6
	store i64 %19, i64* %4
	; AssignStmt
	; IndexExpr
	; IndexExpr
	%25 = load i64, i64* %1, align 8
	%26 = trunc i64 %25 to i32
	%27 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %0, i64 0, i32 %26
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([30 x i8], [30 x i8]* @__str$151, i64 0, i32 0), i64 29}, i64 171, i64 6, i64 %25, i64 4)
	%28 = load i64, i64* %4, align 8
	%29 = trunc i64 %28 to i32
	%30 = getelementptr inbounds [4 x float], [4 x float]* %27, i64 0, i32 %29
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([30 x i8], [30 x i8]* @__str$152, i64 0, i32 0), i64 29}, i64 171, i64 9, i64 %28, i64 4)
	; IndexExpr
	; IndexExpr
	%31 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %a, i64 0, i32 0
	%32 = load i64, i64* %4, align 8
	%33 = trunc i64 %32 to i32
	%34 = getelementptr inbounds [4 x float], [4 x float]* %31, i64 0, i32 %33
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([30 x i8], [30 x i8]* @__str$153, i64 0, i32 0), i64 29}, i64 171, i64 19, i64 %32, i64 4)
	%35 = load float, float* %34, align 4
	; IndexExpr
	; IndexExpr
	%36 = load i64, i64* %1, align 8
	%37 = trunc i64 %36 to i32
	%38 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %b, i64 0, i32 %37
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([30 x i8], [30 x i8]* @__str$154, i64 0, i32 0), i64 29}, i64 171, i64 24, i64 %36, i64 4)
	%39 = getelementptr inbounds [4 x float], [4 x float]* %38, i64 0, i32 0
	%40 = load float, float* %39, align 4
	%41 = fmul float %35, %40
	; IndexExpr
	; IndexExpr
	%42 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %a, i64 0, i32 1
	%43 = load i64, i64* %4, align 8
	%44 = trunc i64 %43 to i32
	%45 = getelementptr inbounds [4 x float], [4 x float]* %42, i64 0, i32 %44
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([30 x i8], [30 x i8]* @__str$155, i64 0, i32 0), i64 29}, i64 172, i64 19, i64 %43, i64 4)
	%46 = load float, float* %45, align 4
	; IndexExpr
	; IndexExpr
	%47 = load i64, i64* %1, align 8
	%48 = trunc i64 %47 to i32
	%49 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %b, i64 0, i32 %48
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([30 x i8], [30 x i8]* @__str$156, i64 0, i32 0), i64 29}, i64 172, i64 24, i64 %47, i64 4)
	%50 = getelementptr inbounds [4 x float], [4 x float]* %49, i64 0, i32 1
	%51 = load float, float* %50, align 4
	%52 = fmul float %46, %51
	%53 = fadd float %41, %52
	; IndexExpr
	; IndexExpr
	%54 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %a, i64 0, i32 2
	%55 = load i64, i64* %4, align 8
	%56 = trunc i64 %55 to i32
	%57 = getelementptr inbounds [4 x float], [4 x float]* %54, i64 0, i32 %56
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([30 x i8], [30 x i8]* @__str$157, i64 0, i32 0), i64 29}, i64 173, i64 19, i64 %55, i64 4)
	%58 = load float, float* %57, align 4
	; IndexExpr
	; IndexExpr
	%59 = load i64, i64* %1, align 8
	%60 = trunc i64 %59 to i32
	%61 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %b, i64 0, i32 %60
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([30 x i8], [30 x i8]* @__str$158, i64 0, i32 0), i64 29}, i64 173, i64 24, i64 %59, i64 4)
	%62 = getelementptr inbounds [4 x float], [4 x float]* %61, i64 0, i32 2
	%63 = load float, float* %62, align 4
	%64 = fmul float %58, %63
	%65 = fadd float %53, %64
	; IndexExpr
	; IndexExpr
	%66 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %a, i64 0, i32 3
	%67 = load i64, i64* %4, align 8
	%68 = trunc i64 %67 to i32
	%69 = getelementptr inbounds [4 x float], [4 x float]* %66, i64 0, i32 %68
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([30 x i8], [30 x i8]* @__str$159, i64 0, i32 0), i64 29}, i64 174, i64 19, i64 %67, i64 4)
	%70 = load float, float* %69, align 4
	; IndexExpr
	; IndexExpr
	%71 = load i64, i64* %1, align 8
	%72 = trunc i64 %71 to i32
	%73 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %b, i64 0, i32 %72
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([30 x i8], [30 x i8]* @__str$15a, i64 0, i32 0), i64 29}, i64 174, i64 24, i64 %71, i64 4)
	%74 = getelementptr inbounds [4 x float], [4 x float]* %73, i64 0, i32 3
	%75 = load float, float* %74, align 4
	%76 = fmul float %70, %75
	%77 = fadd float %65, %76
	store float %77, float* %30
	br label %for.interval.loop-3

for.interval.done-5:
	br label %for.interval.loop-1

for.interval.done-6:
	; ReturnStmt
	%78 = load [4 x [4 x float]], [4 x [4 x float]]* %0, align 4
	ret [4 x [4 x float]] %78
}

define [4 x [4 x float]] @math-19.ortho3d(float %left, float %right, float %bottom, float %top, float %near, float %far, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca float, align 4
	%1 = alloca float, align 4
	%2 = alloca float, align 4
	%3 = alloca float, align 4
	%4 = alloca float, align 4
	%5 = alloca float, align 4
	%6 = alloca [4 x [4 x float]], align 4
		store float %left, float* %0
		store float %right, float* %1
		store float %bottom, float* %2
		store float %top, float* %3
		store float %near, float* %4
		store float %far, float* %5
	; m
		%7 = call [4 x [4 x float]] @math-19.mat4_identity(%Context* noalias nonnull %__.context_ptr)
	store [4 x [4 x float]] %7, [4 x [4 x float]]* %6
	; AssignStmt
	; IndexExpr
	; IndexExpr
	%8 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %6, i64 0, i32 0
	%9 = getelementptr inbounds [4 x float], [4 x float]* %8, i64 0, i32 0
	%10 = load float, float* %1, align 4
	%11 = load float, float* %0, align 4
	%12 = fsub float %10, %11
	%13 = fdiv float 0x4000000000000000, %12
	store float %13, float* %9
	; AssignStmt
	; IndexExpr
	; IndexExpr
	%14 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %6, i64 0, i32 1
	%15 = getelementptr inbounds [4 x float], [4 x float]* %14, i64 0, i32 1
	%16 = load float, float* %3, align 4
	%17 = load float, float* %2, align 4
	%18 = fsub float %16, %17
	%19 = fdiv float 0x4000000000000000, %18
	store float %19, float* %15
	; AssignStmt
	; IndexExpr
	; IndexExpr
	%20 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %6, i64 0, i32 2
	%21 = getelementptr inbounds [4 x float], [4 x float]* %20, i64 0, i32 2
	%22 = load float, float* %5, align 4
	%23 = load float, float* %4, align 4
	%24 = fsub float %22, %23
	%25 = fdiv float 0xc000000000000000, %24
	store float %25, float* %21
	; AssignStmt
	; IndexExpr
	; IndexExpr
	%26 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %6, i64 0, i32 3
	%27 = getelementptr inbounds [4 x float], [4 x float]* %26, i64 0, i32 0
	%28 = load float, float* %1, align 4
	%29 = load float, float* %0, align 4
	%30 = fadd float %28, %29
	%31 = fsub float 0x0000000000000000, %30
	%32 = load float, float* %1, align 4
	%33 = load float, float* %0, align 4
	%34 = fsub float %32, %33
	%35 = fdiv float %31, %34
	store float %35, float* %27
	; AssignStmt
	; IndexExpr
	; IndexExpr
	%36 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %6, i64 0, i32 3
	%37 = getelementptr inbounds [4 x float], [4 x float]* %36, i64 0, i32 1
	%38 = load float, float* %3, align 4
	%39 = load float, float* %2, align 4
	%40 = fadd float %38, %39
	%41 = fsub float 0x0000000000000000, %40
	%42 = load float, float* %3, align 4
	%43 = load float, float* %2, align 4
	%44 = fsub float %42, %43
	%45 = fdiv float %41, %44
	store float %45, float* %37
	; AssignStmt
	; IndexExpr
	; IndexExpr
	%46 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %6, i64 0, i32 3
	%47 = getelementptr inbounds [4 x float], [4 x float]* %46, i64 0, i32 2
	%48 = load float, float* %5, align 4
	%49 = load float, float* %4, align 4
	%50 = fadd float %48, %49
	%51 = fsub float 0x0000000000000000, %50
	%52 = load float, float* %5, align 4
	%53 = load float, float* %4, align 4
	%54 = fsub float %52, %53
	%55 = fdiv float %51, %54
	store float %55, float* %47
	; ReturnStmt
	%56 = load [4 x [4 x float]], [4 x [4 x float]]* %6, align 4
	ret [4 x [4 x float]] %56
}

define %..string @strings-20.to_odin_string(i8* %str, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca i8*, align 8
	%1 = alloca i8*, align 8
	%2 = alloca %..string, align 8
		store i8* %str, i8** %0
	; IfStmt
	%3 = load i8*, i8** %0, align 8
	%4 = icmp eq i8* %3, zeroinitializer
	br i1 %4, label %if.then-1, label %if.done-2

if.then-1:
	; ReturnStmt
	ret %..string zeroinitializer

if.done-2:
	; end
		%5 = load i8*, i8** %0, align 8
	store i8* %5, i8** %1
	; ForStmt
	br label %for.loop-3

for.loop-3:
	%6 = load i8*, i8** %1, align 8
	%7 = getelementptr inbounds i8, i8* %6, i64 0
	%8 = load i8, i8* %7, align 1
	%9 = icmp ne i8 %8, 0
	br i1 %9, label %for.body-4, label %for.done-5

for.body-4:
	; AssignStmt
	%10 = load i8*, i8** %1, align 8
	%11 = getelementptr inbounds i8, i8* %10, i64 1
	store i8* %11, i8** %1
	br label %for.loop-3

for.done-5:
	; ReturnStmt
	; SelectorExpr
	%12 = load i8*, i8** %0, align 8
	%13 = load i8*, i8** %1, align 8
	%14 = load i8*, i8** %0, align 8
	%15 = ptrtoint i8* %13 to i64
	%16 = bitcast i64 %15 to i64
	%17 = ptrtoint i8* %14 to i64
	%18 = bitcast i64 %17 to i64
	%19 = sub i64 %16, %18
	%20 = sdiv i64 %19, 1
	%21 = call {i8*, i64} @mem-16.slice_ptr-12743(i8* %12, i64 %20)
	%22 = extractvalue {i8*, i64} %21, 0
	%23 = extractvalue {i8*, i64} %21, 1
	store %..string zeroinitializer, %..string* %2
	%24 = getelementptr inbounds %..string, %..string* %2, i64 0, i32 0
	store i8* %22, i8** %24
	%25 = getelementptr inbounds %..string, %..string* %2, i64 0, i32 1
	store i64 %23, i64* %25
	%26 = load %..string, %..string* %2, align 8
	ret %..string %26
}

define void @gl-21.load_up_to(i64 %major, i64 %minor, void (%..rawptr, %..string, %Context*)* %set_proc_address, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca i64, align 8
	%1 = alloca i64, align 8
	%2 = alloca void (%..rawptr, %..string, %Context*)*, align 8
		store i64 %major, i64* %0
		store i64 %minor, i64* %1
		store void (%..rawptr, %..string, %Context*)* %set_proc_address, void (%..rawptr, %..string, %Context*)** %2
	; SwitchStmt
	%3 = load i64, i64* %0, align 8
	%4 = mul i64 %3, 10
	%5 = load i64, i64* %1, align 8
	%6 = add i64 %4, %5
	%7 = icmp eq i64 %6, 46
	br i1 %7, label %switch.case.body-2, label %switch.case.next-1

switch.case.next-1:
	%8 = icmp eq i64 %6, 45
	br i1 %8, label %switch.fall.body-4, label %switch.case.next-3

switch.case.body-2:
	%9 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %2, align 8
	call void @gl-21.load_4_6(void (%..rawptr, %..string, %Context*)* %9, %Context* noalias nonnull %__.context_ptr)
	; fallthrough
	br label %switch.fall.body-4

switch.case.next-3:
	%10 = icmp eq i64 %6, 44
	br i1 %10, label %switch.fall.body-6, label %switch.case.next-5

switch.fall.body-4:
	%11 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %2, align 8
	call void @gl-21.load_4_5(void (%..rawptr, %..string, %Context*)* %11, %Context* noalias nonnull %__.context_ptr)
	; fallthrough
	br label %switch.fall.body-6

switch.case.next-5:
	%12 = icmp eq i64 %6, 43
	br i1 %12, label %switch.fall.body-8, label %switch.case.next-7

switch.fall.body-6:
	%13 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %2, align 8
	call void @gl-21.load_4_4(void (%..rawptr, %..string, %Context*)* %13, %Context* noalias nonnull %__.context_ptr)
	; fallthrough
	br label %switch.fall.body-8

switch.case.next-7:
	%14 = icmp eq i64 %6, 42
	br i1 %14, label %switch.fall.body-10, label %switch.case.next-9

switch.fall.body-8:
	%15 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %2, align 8
	call void @gl-21.load_4_3(void (%..rawptr, %..string, %Context*)* %15, %Context* noalias nonnull %__.context_ptr)
	; fallthrough
	br label %switch.fall.body-10

switch.case.next-9:
	%16 = icmp eq i64 %6, 41
	br i1 %16, label %switch.fall.body-12, label %switch.case.next-11

switch.fall.body-10:
	%17 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %2, align 8
	call void @gl-21.load_4_2(void (%..rawptr, %..string, %Context*)* %17, %Context* noalias nonnull %__.context_ptr)
	; fallthrough
	br label %switch.fall.body-12

switch.case.next-11:
	%18 = icmp eq i64 %6, 40
	br i1 %18, label %switch.fall.body-14, label %switch.case.next-13

switch.fall.body-12:
	%19 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %2, align 8
	call void @gl-21.load_4_1(void (%..rawptr, %..string, %Context*)* %19, %Context* noalias nonnull %__.context_ptr)
	; fallthrough
	br label %switch.fall.body-14

switch.case.next-13:
	%20 = icmp eq i64 %6, 33
	br i1 %20, label %switch.fall.body-16, label %switch.case.next-15

switch.fall.body-14:
	%21 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %2, align 8
	call void @gl-21.load_4_0(void (%..rawptr, %..string, %Context*)* %21, %Context* noalias nonnull %__.context_ptr)
	; fallthrough
	br label %switch.fall.body-16

switch.case.next-15:
	%22 = icmp eq i64 %6, 32
	br i1 %22, label %switch.fall.body-18, label %switch.case.next-17

switch.fall.body-16:
	%23 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %2, align 8
	call void @gl-21.load_3_3(void (%..rawptr, %..string, %Context*)* %23, %Context* noalias nonnull %__.context_ptr)
	; fallthrough
	br label %switch.fall.body-18

switch.case.next-17:
	%24 = icmp eq i64 %6, 31
	br i1 %24, label %switch.fall.body-20, label %switch.case.next-19

switch.fall.body-18:
	%25 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %2, align 8
	call void @gl-21.load_3_2(void (%..rawptr, %..string, %Context*)* %25, %Context* noalias nonnull %__.context_ptr)
	; fallthrough
	br label %switch.fall.body-20

switch.case.next-19:
	%26 = icmp eq i64 %6, 30
	br i1 %26, label %switch.fall.body-22, label %switch.case.next-21

switch.fall.body-20:
	%27 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %2, align 8
	call void @gl-21.load_3_1(void (%..rawptr, %..string, %Context*)* %27, %Context* noalias nonnull %__.context_ptr)
	; fallthrough
	br label %switch.fall.body-22

switch.case.next-21:
	%28 = icmp eq i64 %6, 21
	br i1 %28, label %switch.fall.body-24, label %switch.case.next-23

switch.fall.body-22:
	%29 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %2, align 8
	call void @gl-21.load_3_0(void (%..rawptr, %..string, %Context*)* %29, %Context* noalias nonnull %__.context_ptr)
	; fallthrough
	br label %switch.fall.body-24

switch.case.next-23:
	%30 = icmp eq i64 %6, 20
	br i1 %30, label %switch.fall.body-26, label %switch.case.next-25

switch.fall.body-24:
	%31 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %2, align 8
	call void @gl-21.load_2_1(void (%..rawptr, %..string, %Context*)* %31, %Context* noalias nonnull %__.context_ptr)
	; fallthrough
	br label %switch.fall.body-26

switch.case.next-25:
	%32 = icmp eq i64 %6, 15
	br i1 %32, label %switch.fall.body-28, label %switch.case.next-27

switch.fall.body-26:
	%33 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %2, align 8
	call void @gl-21.load_2_0(void (%..rawptr, %..string, %Context*)* %33, %Context* noalias nonnull %__.context_ptr)
	; fallthrough
	br label %switch.fall.body-28

switch.case.next-27:
	%34 = icmp eq i64 %6, 14
	br i1 %34, label %switch.fall.body-30, label %switch.case.next-29

switch.fall.body-28:
	%35 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %2, align 8
	call void @gl-21.load_1_5(void (%..rawptr, %..string, %Context*)* %35, %Context* noalias nonnull %__.context_ptr)
	; fallthrough
	br label %switch.fall.body-30

switch.case.next-29:
	%36 = icmp eq i64 %6, 13
	br i1 %36, label %switch.fall.body-32, label %switch.case.next-31

switch.fall.body-30:
	%37 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %2, align 8
	call void @gl-21.load_1_4(void (%..rawptr, %..string, %Context*)* %37, %Context* noalias nonnull %__.context_ptr)
	; fallthrough
	br label %switch.fall.body-32

switch.case.next-31:
	%38 = icmp eq i64 %6, 12
	br i1 %38, label %switch.fall.body-34, label %switch.case.next-33

switch.fall.body-32:
	%39 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %2, align 8
	call void @gl-21.load_1_3(void (%..rawptr, %..string, %Context*)* %39, %Context* noalias nonnull %__.context_ptr)
	; fallthrough
	br label %switch.fall.body-34

switch.case.next-33:
	%40 = icmp eq i64 %6, 11
	br i1 %40, label %switch.fall.body-36, label %switch.case.next-35

switch.fall.body-34:
	%41 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %2, align 8
	call void @gl-21.load_1_2(void (%..rawptr, %..string, %Context*)* %41, %Context* noalias nonnull %__.context_ptr)
	; fallthrough
	br label %switch.fall.body-36

switch.case.next-35:
	%42 = icmp eq i64 %6, 10
	br i1 %42, label %switch.fall.body-38, label %switch.case.next-37

switch.fall.body-36:
	%43 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %2, align 8
	call void @gl-21.load_1_1(void (%..rawptr, %..string, %Context*)* %43, %Context* noalias nonnull %__.context_ptr)
	; fallthrough
	br label %switch.fall.body-38

switch.case.next-37:
	br label %switch.done-39

switch.fall.body-38:
	%44 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %2, align 8
	call void @gl-21.load_1_0(void (%..rawptr, %..string, %Context*)* %44, %Context* noalias nonnull %__.context_ptr)
	br label %switch.done-39

switch.done-39:
	ret void
}

define void @gl-21.load_1_0(void (%..rawptr, %..string, %Context*)* %set_proc_address, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca void (%..rawptr, %..string, %Context*)*, align 8
		store void (%..rawptr, %..string, %Context*)* %set_proc_address, void (%..rawptr, %..string, %Context*)** %0
	%1 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%2 = getelementptr inbounds void (i32)*, void (i32)** @gl-21.CullFace, i64 0
	%3 = bitcast void (i32)** %2 to %..rawptr
	call void %1(%..rawptr %3, %..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$15b, i64 0, i32 0), i64 11}, %Context* noalias nonnull %__.context_ptr)
	%4 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%5 = getelementptr inbounds void (i32)*, void (i32)** @gl-21.FrontFace, i64 0
	%6 = bitcast void (i32)** %5 to %..rawptr
	call void %4(%..rawptr %6, %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$15c, i64 0, i32 0), i64 12}, %Context* noalias nonnull %__.context_ptr)
	%7 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%8 = getelementptr inbounds void (i32, i32)*, void (i32, i32)** @gl-21.Hint, i64 0
	%9 = bitcast void (i32, i32)** %8 to %..rawptr
	call void %7(%..rawptr %9, %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$15d, i64 0, i32 0), i64 7}, %Context* noalias nonnull %__.context_ptr)
	%10 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%11 = getelementptr inbounds void (float)*, void (float)** @gl-21.LineWidth, i64 0
	%12 = bitcast void (float)** %11 to %..rawptr
	call void %10(%..rawptr %12, %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$15e, i64 0, i32 0), i64 12}, %Context* noalias nonnull %__.context_ptr)
	%13 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%14 = getelementptr inbounds void (float)*, void (float)** @gl-21.PointSize, i64 0
	%15 = bitcast void (float)** %14 to %..rawptr
	call void %13(%..rawptr %15, %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$15f, i64 0, i32 0), i64 12}, %Context* noalias nonnull %__.context_ptr)
	%16 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%17 = getelementptr inbounds void (i32, i32)*, void (i32, i32)** @gl-21.PolygonMode, i64 0
	%18 = bitcast void (i32, i32)** %17 to %..rawptr
	call void %16(%..rawptr %18, %..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$160, i64 0, i32 0), i64 14}, %Context* noalias nonnull %__.context_ptr)
	%19 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%20 = getelementptr inbounds void (i32, i32, i32, i32)*, void (i32, i32, i32, i32)** @gl-21.Scissor, i64 0
	%21 = bitcast void (i32, i32, i32, i32)** %20 to %..rawptr
	call void %19(%..rawptr %21, %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$161, i64 0, i32 0), i64 10}, %Context* noalias nonnull %__.context_ptr)
	%22 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%23 = getelementptr inbounds void (i32, i32, float)*, void (i32, i32, float)** @gl-21.TexParameterf, i64 0
	%24 = bitcast void (i32, i32, float)** %23 to %..rawptr
	call void %22(%..rawptr %24, %..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$162, i64 0, i32 0), i64 16}, %Context* noalias nonnull %__.context_ptr)
	%25 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%26 = getelementptr inbounds void (i32, i32, float*)*, void (i32, i32, float*)** @gl-21.TexParameterfv, i64 0
	%27 = bitcast void (i32, i32, float*)** %26 to %..rawptr
	call void %25(%..rawptr %27, %..string {i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__str$163, i64 0, i32 0), i64 17}, %Context* noalias nonnull %__.context_ptr)
	%28 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%29 = getelementptr inbounds void (i32, i32, i32)*, void (i32, i32, i32)** @gl-21.TexParameteri, i64 0
	%30 = bitcast void (i32, i32, i32)** %29 to %..rawptr
	call void %28(%..rawptr %30, %..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$164, i64 0, i32 0), i64 16}, %Context* noalias nonnull %__.context_ptr)
	%31 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%32 = getelementptr inbounds void (i32, i32, i32*)*, void (i32, i32, i32*)** @gl-21.TexParameteriv, i64 0
	%33 = bitcast void (i32, i32, i32*)** %32 to %..rawptr
	call void %31(%..rawptr %33, %..string {i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__str$165, i64 0, i32 0), i64 17}, %Context* noalias nonnull %__.context_ptr)
	%34 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%35 = getelementptr inbounds void (i32, i32, i32, i32, i32, i32, i32, %..rawptr)*, void (i32, i32, i32, i32, i32, i32, i32, %..rawptr)** @gl-21.TexImage1D, i64 0
	%36 = bitcast void (i32, i32, i32, i32, i32, i32, i32, %..rawptr)** %35 to %..rawptr
	call void %34(%..rawptr %36, %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$166, i64 0, i32 0), i64 13}, %Context* noalias nonnull %__.context_ptr)
	%37 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%38 = getelementptr inbounds void (i32, i32, i32, i32, i32, i32, i32, i32, %..rawptr)*, void (i32, i32, i32, i32, i32, i32, i32, i32, %..rawptr)** @gl-21.TexImage2D, i64 0
	%39 = bitcast void (i32, i32, i32, i32, i32, i32, i32, i32, %..rawptr)** %38 to %..rawptr
	call void %37(%..rawptr %39, %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$167, i64 0, i32 0), i64 13}, %Context* noalias nonnull %__.context_ptr)
	%40 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%41 = getelementptr inbounds void (i32)*, void (i32)** @gl-21.DrawBuffer, i64 0
	%42 = bitcast void (i32)** %41 to %..rawptr
	call void %40(%..rawptr %42, %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$168, i64 0, i32 0), i64 13}, %Context* noalias nonnull %__.context_ptr)
	%43 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%44 = getelementptr inbounds void (i32)*, void (i32)** @gl-21.Clear, i64 0
	%45 = bitcast void (i32)** %44 to %..rawptr
	call void %43(%..rawptr %45, %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$169, i64 0, i32 0), i64 8}, %Context* noalias nonnull %__.context_ptr)
	%46 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%47 = getelementptr inbounds void (float, float, float, float)*, void (float, float, float, float)** @gl-21.ClearColor, i64 0
	%48 = bitcast void (float, float, float, float)** %47 to %..rawptr
	call void %46(%..rawptr %48, %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$16a, i64 0, i32 0), i64 13}, %Context* noalias nonnull %__.context_ptr)
	%49 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%50 = getelementptr inbounds void (i32)*, void (i32)** @gl-21.ClearStencil, i64 0
	%51 = bitcast void (i32)** %50 to %..rawptr
	call void %49(%..rawptr %51, %..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$16b, i64 0, i32 0), i64 15}, %Context* noalias nonnull %__.context_ptr)
	%52 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%53 = getelementptr inbounds void (double)*, void (double)** @gl-21.ClearDepth, i64 0
	%54 = bitcast void (double)** %53 to %..rawptr
	call void %52(%..rawptr %54, %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$16c, i64 0, i32 0), i64 13}, %Context* noalias nonnull %__.context_ptr)
	%55 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%56 = getelementptr inbounds void (i32)*, void (i32)** @gl-21.StencilMask, i64 0
	%57 = bitcast void (i32)** %56 to %..rawptr
	call void %55(%..rawptr %57, %..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$16d, i64 0, i32 0), i64 14}, %Context* noalias nonnull %__.context_ptr)
	%58 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%59 = getelementptr inbounds void (i8, i8, i8, i8)*, void (i8, i8, i8, i8)** @gl-21.ColorMask, i64 0
	%60 = bitcast void (i8, i8, i8, i8)** %59 to %..rawptr
	call void %58(%..rawptr %60, %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$16e, i64 0, i32 0), i64 12}, %Context* noalias nonnull %__.context_ptr)
	%61 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%62 = getelementptr inbounds void (i8)*, void (i8)** @gl-21.DepthMask, i64 0
	%63 = bitcast void (i8)** %62 to %..rawptr
	call void %61(%..rawptr %63, %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$16f, i64 0, i32 0), i64 12}, %Context* noalias nonnull %__.context_ptr)
	%64 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%65 = getelementptr inbounds void (i32)*, void (i32)** @gl-21.Disable, i64 0
	%66 = bitcast void (i32)** %65 to %..rawptr
	call void %64(%..rawptr %66, %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$170, i64 0, i32 0), i64 10}, %Context* noalias nonnull %__.context_ptr)
	%67 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%68 = getelementptr inbounds void (i32)*, void (i32)** @gl-21.Enable, i64 0
	%69 = bitcast void (i32)** %68 to %..rawptr
	call void %67(%..rawptr %69, %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$171, i64 0, i32 0), i64 9}, %Context* noalias nonnull %__.context_ptr)
	%70 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%71 = getelementptr inbounds void ()*, void ()** @gl-21.Finish, i64 0
	%72 = bitcast void ()** %71 to %..rawptr
	call void %70(%..rawptr %72, %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$172, i64 0, i32 0), i64 9}, %Context* noalias nonnull %__.context_ptr)
	%73 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%74 = getelementptr inbounds void ()*, void ()** @gl-21.Flush, i64 0
	%75 = bitcast void ()** %74 to %..rawptr
	call void %73(%..rawptr %75, %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$173, i64 0, i32 0), i64 8}, %Context* noalias nonnull %__.context_ptr)
	%76 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%77 = getelementptr inbounds void (i32, i32)*, void (i32, i32)** @gl-21.BlendFunc, i64 0
	%78 = bitcast void (i32, i32)** %77 to %..rawptr
	call void %76(%..rawptr %78, %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$174, i64 0, i32 0), i64 12}, %Context* noalias nonnull %__.context_ptr)
	%79 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%80 = getelementptr inbounds void (i32)*, void (i32)** @gl-21.LogicOp, i64 0
	%81 = bitcast void (i32)** %80 to %..rawptr
	call void %79(%..rawptr %81, %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$175, i64 0, i32 0), i64 10}, %Context* noalias nonnull %__.context_ptr)
	%82 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%83 = getelementptr inbounds void (i32, i32, i32)*, void (i32, i32, i32)** @gl-21.StencilFunc, i64 0
	%84 = bitcast void (i32, i32, i32)** %83 to %..rawptr
	call void %82(%..rawptr %84, %..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$176, i64 0, i32 0), i64 14}, %Context* noalias nonnull %__.context_ptr)
	%85 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%86 = getelementptr inbounds void (i32, i32, i32)*, void (i32, i32, i32)** @gl-21.StencilOp, i64 0
	%87 = bitcast void (i32, i32, i32)** %86 to %..rawptr
	call void %85(%..rawptr %87, %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$177, i64 0, i32 0), i64 12}, %Context* noalias nonnull %__.context_ptr)
	%88 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%89 = getelementptr inbounds void (i32)*, void (i32)** @gl-21.DepthFunc, i64 0
	%90 = bitcast void (i32)** %89 to %..rawptr
	call void %88(%..rawptr %90, %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$178, i64 0, i32 0), i64 12}, %Context* noalias nonnull %__.context_ptr)
	%91 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%92 = getelementptr inbounds void (i32, float)*, void (i32, float)** @gl-21.PixelStoref, i64 0
	%93 = bitcast void (i32, float)** %92 to %..rawptr
	call void %91(%..rawptr %93, %..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$179, i64 0, i32 0), i64 14}, %Context* noalias nonnull %__.context_ptr)
	%94 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%95 = getelementptr inbounds void (i32, i32)*, void (i32, i32)** @gl-21.PixelStorei, i64 0
	%96 = bitcast void (i32, i32)** %95 to %..rawptr
	call void %94(%..rawptr %96, %..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$17a, i64 0, i32 0), i64 14}, %Context* noalias nonnull %__.context_ptr)
	%97 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%98 = getelementptr inbounds void (i32)*, void (i32)** @gl-21.ReadBuffer, i64 0
	%99 = bitcast void (i32)** %98 to %..rawptr
	call void %97(%..rawptr %99, %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$17b, i64 0, i32 0), i64 13}, %Context* noalias nonnull %__.context_ptr)
	%100 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%101 = getelementptr inbounds void (i32, i32, i32, i32, i32, i32, %..rawptr)*, void (i32, i32, i32, i32, i32, i32, %..rawptr)** @gl-21.ReadPixels, i64 0
	%102 = bitcast void (i32, i32, i32, i32, i32, i32, %..rawptr)** %101 to %..rawptr
	call void %100(%..rawptr %102, %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$17c, i64 0, i32 0), i64 13}, %Context* noalias nonnull %__.context_ptr)
	%103 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%104 = getelementptr inbounds void (i32, i8*)*, void (i32, i8*)** @gl-21.GetBooleanv, i64 0
	%105 = bitcast void (i32, i8*)** %104 to %..rawptr
	call void %103(%..rawptr %105, %..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$17d, i64 0, i32 0), i64 14}, %Context* noalias nonnull %__.context_ptr)
	%106 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%107 = getelementptr inbounds void (i32, double*)*, void (i32, double*)** @gl-21.GetDoublev, i64 0
	%108 = bitcast void (i32, double*)** %107 to %..rawptr
	call void %106(%..rawptr %108, %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$17e, i64 0, i32 0), i64 13}, %Context* noalias nonnull %__.context_ptr)
	%109 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%110 = getelementptr inbounds i32 ()*, i32 ()** @gl-21.GetError, i64 0
	%111 = bitcast i32 ()** %110 to %..rawptr
	call void %109(%..rawptr %111, %..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$17f, i64 0, i32 0), i64 11}, %Context* noalias nonnull %__.context_ptr)
	%112 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%113 = getelementptr inbounds void (i32, float*)*, void (i32, float*)** @gl-21.GetFloatv, i64 0
	%114 = bitcast void (i32, float*)** %113 to %..rawptr
	call void %112(%..rawptr %114, %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$180, i64 0, i32 0), i64 12}, %Context* noalias nonnull %__.context_ptr)
	%115 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%116 = getelementptr inbounds void (i32, i32*)*, void (i32, i32*)** @gl-21.GetIntegerv, i64 0
	%117 = bitcast void (i32, i32*)** %116 to %..rawptr
	call void %115(%..rawptr %117, %..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$181, i64 0, i32 0), i64 14}, %Context* noalias nonnull %__.context_ptr)
	%118 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%119 = getelementptr inbounds i8* (i32)*, i8* (i32)** @gl-21.GetString, i64 0
	%120 = bitcast i8* (i32)** %119 to %..rawptr
	call void %118(%..rawptr %120, %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$182, i64 0, i32 0), i64 12}, %Context* noalias nonnull %__.context_ptr)
	%121 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%122 = getelementptr inbounds void (i32, i32, i32, i32, %..rawptr)*, void (i32, i32, i32, i32, %..rawptr)** @gl-21.GetTexImage, i64 0
	%123 = bitcast void (i32, i32, i32, i32, %..rawptr)** %122 to %..rawptr
	call void %121(%..rawptr %123, %..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$183, i64 0, i32 0), i64 14}, %Context* noalias nonnull %__.context_ptr)
	%124 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%125 = getelementptr inbounds void (i32, i32, float*)*, void (i32, i32, float*)** @gl-21.GetTexParameterfv, i64 0
	%126 = bitcast void (i32, i32, float*)** %125 to %..rawptr
	call void %124(%..rawptr %126, %..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$184, i64 0, i32 0), i64 20}, %Context* noalias nonnull %__.context_ptr)
	%127 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%128 = getelementptr inbounds void (i32, i32, i32*)*, void (i32, i32, i32*)** @gl-21.GetTexParameteriv, i64 0
	%129 = bitcast void (i32, i32, i32*)** %128 to %..rawptr
	call void %127(%..rawptr %129, %..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$185, i64 0, i32 0), i64 20}, %Context* noalias nonnull %__.context_ptr)
	%130 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%131 = getelementptr inbounds void (i32, i32, i32, float*)*, void (i32, i32, i32, float*)** @gl-21.GetTexLevelParameterfv, i64 0
	%132 = bitcast void (i32, i32, i32, float*)** %131 to %..rawptr
	call void %130(%..rawptr %132, %..string {i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__str$186, i64 0, i32 0), i64 25}, %Context* noalias nonnull %__.context_ptr)
	%133 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%134 = getelementptr inbounds void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)** @gl-21.GetTexLevelParameteriv, i64 0
	%135 = bitcast void (i32, i32, i32, i32*)** %134 to %..rawptr
	call void %133(%..rawptr %135, %..string {i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__str$187, i64 0, i32 0), i64 25}, %Context* noalias nonnull %__.context_ptr)
	%136 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%137 = getelementptr inbounds i8 (i32)*, i8 (i32)** @gl-21.IsEnabled, i64 0
	%138 = bitcast i8 (i32)** %137 to %..rawptr
	call void %136(%..rawptr %138, %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$188, i64 0, i32 0), i64 12}, %Context* noalias nonnull %__.context_ptr)
	%139 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%140 = getelementptr inbounds void (double, double)*, void (double, double)** @gl-21.DepthRange, i64 0
	%141 = bitcast void (double, double)** %140 to %..rawptr
	call void %139(%..rawptr %141, %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$189, i64 0, i32 0), i64 13}, %Context* noalias nonnull %__.context_ptr)
	%142 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%143 = getelementptr inbounds void (i32, i32, i32, i32)*, void (i32, i32, i32, i32)** @gl-21.Viewport, i64 0
	%144 = bitcast void (i32, i32, i32, i32)** %143 to %..rawptr
	call void %142(%..rawptr %144, %..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$18a, i64 0, i32 0), i64 11}, %Context* noalias nonnull %__.context_ptr)
	ret void
}

define void @gl-21.load_1_1(void (%..rawptr, %..string, %Context*)* %set_proc_address, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca void (%..rawptr, %..string, %Context*)*, align 8
		store void (%..rawptr, %..string, %Context*)* %set_proc_address, void (%..rawptr, %..string, %Context*)** %0
	%1 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%2 = getelementptr inbounds void (i32, i32, i32)*, void (i32, i32, i32)** @gl-21.DrawArrays, i64 0
	%3 = bitcast void (i32, i32, i32)** %2 to %..rawptr
	call void %1(%..rawptr %3, %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$18b, i64 0, i32 0), i64 13}, %Context* noalias nonnull %__.context_ptr)
	%4 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%5 = getelementptr inbounds void (i32, i32, i32, %..rawptr)*, void (i32, i32, i32, %..rawptr)** @gl-21.DrawElements, i64 0
	%6 = bitcast void (i32, i32, i32, %..rawptr)** %5 to %..rawptr
	call void %4(%..rawptr %6, %..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$18c, i64 0, i32 0), i64 15}, %Context* noalias nonnull %__.context_ptr)
	%7 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%8 = getelementptr inbounds void (float, float)*, void (float, float)** @gl-21.PolygonOffset, i64 0
	%9 = bitcast void (float, float)** %8 to %..rawptr
	call void %7(%..rawptr %9, %..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$18d, i64 0, i32 0), i64 16}, %Context* noalias nonnull %__.context_ptr)
	%10 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%11 = getelementptr inbounds void (i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32)** @gl-21.CopyTexImage1D, i64 0
	%12 = bitcast void (i32, i32, i32, i32, i32, i32, i32)** %11 to %..rawptr
	call void %10(%..rawptr %12, %..string {i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__str$18e, i64 0, i32 0), i64 17}, %Context* noalias nonnull %__.context_ptr)
	%13 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%14 = getelementptr inbounds void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32)** @gl-21.CopyTexImage2D, i64 0
	%15 = bitcast void (i32, i32, i32, i32, i32, i32, i32, i32)** %14 to %..rawptr
	call void %13(%..rawptr %15, %..string {i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__str$18f, i64 0, i32 0), i64 17}, %Context* noalias nonnull %__.context_ptr)
	%16 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%17 = getelementptr inbounds void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)** @gl-21.CopyTexSubImage1D, i64 0
	%18 = bitcast void (i32, i32, i32, i32, i32, i32)** %17 to %..rawptr
	call void %16(%..rawptr %18, %..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$190, i64 0, i32 0), i64 20}, %Context* noalias nonnull %__.context_ptr)
	%19 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%20 = getelementptr inbounds void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32)** @gl-21.CopyTexSubImage2D, i64 0
	%21 = bitcast void (i32, i32, i32, i32, i32, i32, i32, i32)** %20 to %..rawptr
	call void %19(%..rawptr %21, %..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$191, i64 0, i32 0), i64 20}, %Context* noalias nonnull %__.context_ptr)
	%22 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%23 = getelementptr inbounds void (i32, i32, i32, i32, i32, i32, %..rawptr)*, void (i32, i32, i32, i32, i32, i32, %..rawptr)** @gl-21.TexSubImage1D, i64 0
	%24 = bitcast void (i32, i32, i32, i32, i32, i32, %..rawptr)** %23 to %..rawptr
	call void %22(%..rawptr %24, %..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$192, i64 0, i32 0), i64 16}, %Context* noalias nonnull %__.context_ptr)
	%25 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%26 = getelementptr inbounds void (i32, i32, i32, i32, i32, i32, i32, i32, %..rawptr)*, void (i32, i32, i32, i32, i32, i32, i32, i32, %..rawptr)** @gl-21.TexSubImage2D, i64 0
	%27 = bitcast void (i32, i32, i32, i32, i32, i32, i32, i32, %..rawptr)** %26 to %..rawptr
	call void %25(%..rawptr %27, %..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$193, i64 0, i32 0), i64 16}, %Context* noalias nonnull %__.context_ptr)
	%28 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%29 = getelementptr inbounds void (i32, i32)*, void (i32, i32)** @gl-21.BindTexture, i64 0
	%30 = bitcast void (i32, i32)** %29 to %..rawptr
	call void %28(%..rawptr %30, %..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$194, i64 0, i32 0), i64 14}, %Context* noalias nonnull %__.context_ptr)
	%31 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%32 = getelementptr inbounds void (i32, i32*)*, void (i32, i32*)** @gl-21.DeleteTextures, i64 0
	%33 = bitcast void (i32, i32*)** %32 to %..rawptr
	call void %31(%..rawptr %33, %..string {i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__str$195, i64 0, i32 0), i64 17}, %Context* noalias nonnull %__.context_ptr)
	%34 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%35 = getelementptr inbounds void (i32, i32*)*, void (i32, i32*)** @gl-21.GenTextures, i64 0
	%36 = bitcast void (i32, i32*)** %35 to %..rawptr
	call void %34(%..rawptr %36, %..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$196, i64 0, i32 0), i64 14}, %Context* noalias nonnull %__.context_ptr)
	%37 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%38 = getelementptr inbounds i8 (i32)*, i8 (i32)** @gl-21.IsTexture, i64 0
	%39 = bitcast i8 (i32)** %38 to %..rawptr
	call void %37(%..rawptr %39, %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$197, i64 0, i32 0), i64 12}, %Context* noalias nonnull %__.context_ptr)
	ret void
}

define void @gl-21.load_1_2(void (%..rawptr, %..string, %Context*)* %set_proc_address, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca void (%..rawptr, %..string, %Context*)*, align 8
		store void (%..rawptr, %..string, %Context*)* %set_proc_address, void (%..rawptr, %..string, %Context*)** %0
	%1 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%2 = getelementptr inbounds void (i32, i32, i32, i32, i32, %..rawptr)*, void (i32, i32, i32, i32, i32, %..rawptr)** @gl-21.DrawRangeElements, i64 0
	%3 = bitcast void (i32, i32, i32, i32, i32, %..rawptr)** %2 to %..rawptr
	call void %1(%..rawptr %3, %..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$198, i64 0, i32 0), i64 20}, %Context* noalias nonnull %__.context_ptr)
	%4 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%5 = getelementptr inbounds void (i32, i32, i32, i32, i32, i32, i32, i32, i32, %..rawptr)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, %..rawptr)** @gl-21.TexImage3D, i64 0
	%6 = bitcast void (i32, i32, i32, i32, i32, i32, i32, i32, i32, %..rawptr)** %5 to %..rawptr
	call void %4(%..rawptr %6, %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$199, i64 0, i32 0), i64 13}, %Context* noalias nonnull %__.context_ptr)
	%7 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%8 = getelementptr inbounds void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %..rawptr)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %..rawptr)** @gl-21.TexSubImage3D, i64 0
	%9 = bitcast void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %..rawptr)** %8 to %..rawptr
	call void %7(%..rawptr %9, %..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$19a, i64 0, i32 0), i64 16}, %Context* noalias nonnull %__.context_ptr)
	%10 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%11 = getelementptr inbounds void (i32, i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32)** @gl-21.CopyTexSubImage3D, i64 0
	%12 = bitcast void (i32, i32, i32, i32, i32, i32, i32, i32, i32)** %11 to %..rawptr
	call void %10(%..rawptr %12, %..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$19b, i64 0, i32 0), i64 20}, %Context* noalias nonnull %__.context_ptr)
	ret void
}

define void @gl-21.load_1_3(void (%..rawptr, %..string, %Context*)* %set_proc_address, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca void (%..rawptr, %..string, %Context*)*, align 8
		store void (%..rawptr, %..string, %Context*)* %set_proc_address, void (%..rawptr, %..string, %Context*)** %0
	%1 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%2 = getelementptr inbounds void (i32)*, void (i32)** @gl-21.ActiveTexture, i64 0
	%3 = bitcast void (i32)** %2 to %..rawptr
	call void %1(%..rawptr %3, %..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$19c, i64 0, i32 0), i64 16}, %Context* noalias nonnull %__.context_ptr)
	%4 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%5 = getelementptr inbounds void (float, i8)*, void (float, i8)** @gl-21.SampleCoverage, i64 0
	%6 = bitcast void (float, i8)** %5 to %..rawptr
	call void %4(%..rawptr %6, %..string {i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__str$19d, i64 0, i32 0), i64 17}, %Context* noalias nonnull %__.context_ptr)
	%7 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%8 = getelementptr inbounds void (i32, i32, i32, i32, i32, i32, i32, i32, %..rawptr)*, void (i32, i32, i32, i32, i32, i32, i32, i32, %..rawptr)** @gl-21.CompressedTexImage3D, i64 0
	%9 = bitcast void (i32, i32, i32, i32, i32, i32, i32, i32, %..rawptr)** %8 to %..rawptr
	call void %7(%..rawptr %9, %..string {i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__str$19e, i64 0, i32 0), i64 23}, %Context* noalias nonnull %__.context_ptr)
	%10 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%11 = getelementptr inbounds void (i32, i32, i32, i32, i32, i32, i32, %..rawptr)*, void (i32, i32, i32, i32, i32, i32, i32, %..rawptr)** @gl-21.CompressedTexImage2D, i64 0
	%12 = bitcast void (i32, i32, i32, i32, i32, i32, i32, %..rawptr)** %11 to %..rawptr
	call void %10(%..rawptr %12, %..string {i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__str$19f, i64 0, i32 0), i64 23}, %Context* noalias nonnull %__.context_ptr)
	%13 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%14 = getelementptr inbounds void (i32, i32, i32, i32, i32, i32, %..rawptr)*, void (i32, i32, i32, i32, i32, i32, %..rawptr)** @gl-21.CompressedTexImage1D, i64 0
	%15 = bitcast void (i32, i32, i32, i32, i32, i32, %..rawptr)** %14 to %..rawptr
	call void %13(%..rawptr %15, %..string {i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__str$1a0, i64 0, i32 0), i64 23}, %Context* noalias nonnull %__.context_ptr)
	%16 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%17 = getelementptr inbounds void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %..rawptr)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %..rawptr)** @gl-21.CompressedTexSubImage3D, i64 0
	%18 = bitcast void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %..rawptr)** %17 to %..rawptr
	call void %16(%..rawptr %18, %..string {i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__str$1a1, i64 0, i32 0), i64 26}, %Context* noalias nonnull %__.context_ptr)
	%19 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%20 = getelementptr inbounds void (i32, i32, i32, i32, i32, i32, i32, i32, %..rawptr)*, void (i32, i32, i32, i32, i32, i32, i32, i32, %..rawptr)** @gl-21.CompressedTexSubImage2D, i64 0
	%21 = bitcast void (i32, i32, i32, i32, i32, i32, i32, i32, %..rawptr)** %20 to %..rawptr
	call void %19(%..rawptr %21, %..string {i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__str$1a2, i64 0, i32 0), i64 26}, %Context* noalias nonnull %__.context_ptr)
	%22 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%23 = getelementptr inbounds void (i32, i32, i32, i32, i32, i32, %..rawptr)*, void (i32, i32, i32, i32, i32, i32, %..rawptr)** @gl-21.CompressedTexSubImage1D, i64 0
	%24 = bitcast void (i32, i32, i32, i32, i32, i32, %..rawptr)** %23 to %..rawptr
	call void %22(%..rawptr %24, %..string {i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__str$1a3, i64 0, i32 0), i64 26}, %Context* noalias nonnull %__.context_ptr)
	%25 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%26 = getelementptr inbounds void (i32, i32, %..rawptr)*, void (i32, i32, %..rawptr)** @gl-21.GetCompressedTexImage, i64 0
	%27 = bitcast void (i32, i32, %..rawptr)** %26 to %..rawptr
	call void %25(%..rawptr %27, %..string {i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__str$1a4, i64 0, i32 0), i64 24}, %Context* noalias nonnull %__.context_ptr)
	ret void
}

define void @gl-21.load_1_4(void (%..rawptr, %..string, %Context*)* %set_proc_address, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca void (%..rawptr, %..string, %Context*)*, align 8
		store void (%..rawptr, %..string, %Context*)* %set_proc_address, void (%..rawptr, %..string, %Context*)** %0
	%1 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%2 = getelementptr inbounds void (i32, i32, i32, i32)*, void (i32, i32, i32, i32)** @gl-21.BlendFuncSeparate, i64 0
	%3 = bitcast void (i32, i32, i32, i32)** %2 to %..rawptr
	call void %1(%..rawptr %3, %..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$1a5, i64 0, i32 0), i64 20}, %Context* noalias nonnull %__.context_ptr)
	%4 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%5 = getelementptr inbounds void (i32, i32*, i32*, i32)*, void (i32, i32*, i32*, i32)** @gl-21.MultiDrawArrays, i64 0
	%6 = bitcast void (i32, i32*, i32*, i32)** %5 to %..rawptr
	call void %4(%..rawptr %6, %..string {i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__str$1a6, i64 0, i32 0), i64 18}, %Context* noalias nonnull %__.context_ptr)
	%7 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%8 = getelementptr inbounds void (i32, i32*, i32, %..rawptr*, i32)*, void (i32, i32*, i32, %..rawptr*, i32)** @gl-21.MultiDrawElements, i64 0
	%9 = bitcast void (i32, i32*, i32, %..rawptr*, i32)** %8 to %..rawptr
	call void %7(%..rawptr %9, %..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$1a7, i64 0, i32 0), i64 20}, %Context* noalias nonnull %__.context_ptr)
	%10 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%11 = getelementptr inbounds void (i32, float)*, void (i32, float)** @gl-21.PointParameterf, i64 0
	%12 = bitcast void (i32, float)** %11 to %..rawptr
	call void %10(%..rawptr %12, %..string {i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__str$1a8, i64 0, i32 0), i64 18}, %Context* noalias nonnull %__.context_ptr)
	%13 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%14 = getelementptr inbounds void (i32, float*)*, void (i32, float*)** @gl-21.PointParameterfv, i64 0
	%15 = bitcast void (i32, float*)** %14 to %..rawptr
	call void %13(%..rawptr %15, %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$1a9, i64 0, i32 0), i64 19}, %Context* noalias nonnull %__.context_ptr)
	%16 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%17 = getelementptr inbounds void (i32, i32)*, void (i32, i32)** @gl-21.PointParameteri, i64 0
	%18 = bitcast void (i32, i32)** %17 to %..rawptr
	call void %16(%..rawptr %18, %..string {i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__str$1aa, i64 0, i32 0), i64 18}, %Context* noalias nonnull %__.context_ptr)
	%19 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%20 = getelementptr inbounds void (i32, i32*)*, void (i32, i32*)** @gl-21.PointParameteriv, i64 0
	%21 = bitcast void (i32, i32*)** %20 to %..rawptr
	call void %19(%..rawptr %21, %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$1ab, i64 0, i32 0), i64 19}, %Context* noalias nonnull %__.context_ptr)
	%22 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%23 = getelementptr inbounds void (float, float, float, float)*, void (float, float, float, float)** @gl-21.BlendColor, i64 0
	%24 = bitcast void (float, float, float, float)** %23 to %..rawptr
	call void %22(%..rawptr %24, %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$1ac, i64 0, i32 0), i64 13}, %Context* noalias nonnull %__.context_ptr)
	%25 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%26 = getelementptr inbounds void (i32)*, void (i32)** @gl-21.BlendEquation, i64 0
	%27 = bitcast void (i32)** %26 to %..rawptr
	call void %25(%..rawptr %27, %..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$1ad, i64 0, i32 0), i64 16}, %Context* noalias nonnull %__.context_ptr)
	ret void
}

define void @gl-21.load_1_5(void (%..rawptr, %..string, %Context*)* %set_proc_address, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca void (%..rawptr, %..string, %Context*)*, align 8
		store void (%..rawptr, %..string, %Context*)* %set_proc_address, void (%..rawptr, %..string, %Context*)** %0
	%1 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%2 = getelementptr inbounds void (i32, i32*)*, void (i32, i32*)** @gl-21.GenQueries, i64 0
	%3 = bitcast void (i32, i32*)** %2 to %..rawptr
	call void %1(%..rawptr %3, %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$1ae, i64 0, i32 0), i64 13}, %Context* noalias nonnull %__.context_ptr)
	%4 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%5 = getelementptr inbounds void (i32, i32*)*, void (i32, i32*)** @gl-21.DeleteQueries, i64 0
	%6 = bitcast void (i32, i32*)** %5 to %..rawptr
	call void %4(%..rawptr %6, %..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$1af, i64 0, i32 0), i64 16}, %Context* noalias nonnull %__.context_ptr)
	%7 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%8 = getelementptr inbounds i8 (i32)*, i8 (i32)** @gl-21.IsQuery, i64 0
	%9 = bitcast i8 (i32)** %8 to %..rawptr
	call void %7(%..rawptr %9, %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$1b0, i64 0, i32 0), i64 10}, %Context* noalias nonnull %__.context_ptr)
	%10 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%11 = getelementptr inbounds void (i32, i32)*, void (i32, i32)** @gl-21.BeginQuery, i64 0
	%12 = bitcast void (i32, i32)** %11 to %..rawptr
	call void %10(%..rawptr %12, %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$1b1, i64 0, i32 0), i64 13}, %Context* noalias nonnull %__.context_ptr)
	%13 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%14 = getelementptr inbounds void (i32)*, void (i32)** @gl-21.EndQuery, i64 0
	%15 = bitcast void (i32)** %14 to %..rawptr
	call void %13(%..rawptr %15, %..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$1b2, i64 0, i32 0), i64 11}, %Context* noalias nonnull %__.context_ptr)
	%16 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%17 = getelementptr inbounds void (i32, i32, i32*)*, void (i32, i32, i32*)** @gl-21.GetQueryiv, i64 0
	%18 = bitcast void (i32, i32, i32*)** %17 to %..rawptr
	call void %16(%..rawptr %18, %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$1b3, i64 0, i32 0), i64 13}, %Context* noalias nonnull %__.context_ptr)
	%19 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%20 = getelementptr inbounds void (i32, i32, i32*)*, void (i32, i32, i32*)** @gl-21.GetQueryObjectiv, i64 0
	%21 = bitcast void (i32, i32, i32*)** %20 to %..rawptr
	call void %19(%..rawptr %21, %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$1b4, i64 0, i32 0), i64 19}, %Context* noalias nonnull %__.context_ptr)
	%22 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%23 = getelementptr inbounds void (i32, i32, i32*)*, void (i32, i32, i32*)** @gl-21.GetQueryObjectuiv, i64 0
	%24 = bitcast void (i32, i32, i32*)** %23 to %..rawptr
	call void %22(%..rawptr %24, %..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$1b5, i64 0, i32 0), i64 20}, %Context* noalias nonnull %__.context_ptr)
	%25 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%26 = getelementptr inbounds void (i32, i32)*, void (i32, i32)** @gl-21.BindBuffer, i64 0
	%27 = bitcast void (i32, i32)** %26 to %..rawptr
	call void %25(%..rawptr %27, %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$1b6, i64 0, i32 0), i64 13}, %Context* noalias nonnull %__.context_ptr)
	%28 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%29 = getelementptr inbounds void (i32, i32*)*, void (i32, i32*)** @gl-21.DeleteBuffers, i64 0
	%30 = bitcast void (i32, i32*)** %29 to %..rawptr
	call void %28(%..rawptr %30, %..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$1b7, i64 0, i32 0), i64 16}, %Context* noalias nonnull %__.context_ptr)
	%31 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%32 = getelementptr inbounds void (i32, i32*)*, void (i32, i32*)** @gl-21.GenBuffers, i64 0
	%33 = bitcast void (i32, i32*)** %32 to %..rawptr
	call void %31(%..rawptr %33, %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$1b8, i64 0, i32 0), i64 13}, %Context* noalias nonnull %__.context_ptr)
	%34 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%35 = getelementptr inbounds i8 (i32)*, i8 (i32)** @gl-21.IsBuffer, i64 0
	%36 = bitcast i8 (i32)** %35 to %..rawptr
	call void %34(%..rawptr %36, %..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$1b9, i64 0, i32 0), i64 11}, %Context* noalias nonnull %__.context_ptr)
	%37 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%38 = getelementptr inbounds void (i32, i64, %..rawptr, i32)*, void (i32, i64, %..rawptr, i32)** @gl-21.BufferData, i64 0
	%39 = bitcast void (i32, i64, %..rawptr, i32)** %38 to %..rawptr
	call void %37(%..rawptr %39, %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$1ba, i64 0, i32 0), i64 13}, %Context* noalias nonnull %__.context_ptr)
	%40 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%41 = getelementptr inbounds void (i32, i64, i64, %..rawptr)*, void (i32, i64, i64, %..rawptr)** @gl-21.BufferSubData, i64 0
	%42 = bitcast void (i32, i64, i64, %..rawptr)** %41 to %..rawptr
	call void %40(%..rawptr %42, %..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$1bb, i64 0, i32 0), i64 16}, %Context* noalias nonnull %__.context_ptr)
	%43 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%44 = getelementptr inbounds void (i32, i64, i64, %..rawptr)*, void (i32, i64, i64, %..rawptr)** @gl-21.GetBufferSubData, i64 0
	%45 = bitcast void (i32, i64, i64, %..rawptr)** %44 to %..rawptr
	call void %43(%..rawptr %45, %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$1bc, i64 0, i32 0), i64 19}, %Context* noalias nonnull %__.context_ptr)
	%46 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%47 = getelementptr inbounds %..rawptr (i32, i32)*, %..rawptr (i32, i32)** @gl-21.MapBuffer, i64 0
	%48 = bitcast %..rawptr (i32, i32)** %47 to %..rawptr
	call void %46(%..rawptr %48, %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$1bd, i64 0, i32 0), i64 12}, %Context* noalias nonnull %__.context_ptr)
	%49 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%50 = getelementptr inbounds i8 (i32)*, i8 (i32)** @gl-21.UnmapBuffer, i64 0
	%51 = bitcast i8 (i32)** %50 to %..rawptr
	call void %49(%..rawptr %51, %..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$1be, i64 0, i32 0), i64 14}, %Context* noalias nonnull %__.context_ptr)
	%52 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%53 = getelementptr inbounds void (i32, i32, i32*)*, void (i32, i32, i32*)** @gl-21.GetBufferParameteriv, i64 0
	%54 = bitcast void (i32, i32, i32*)** %53 to %..rawptr
	call void %52(%..rawptr %54, %..string {i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__str$1bf, i64 0, i32 0), i64 23}, %Context* noalias nonnull %__.context_ptr)
	%55 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%56 = getelementptr inbounds void (i32, i32, %..rawptr*)*, void (i32, i32, %..rawptr*)** @gl-21.GetBufferPointerv, i64 0
	%57 = bitcast void (i32, i32, %..rawptr*)** %56 to %..rawptr
	call void %55(%..rawptr %57, %..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$1c0, i64 0, i32 0), i64 20}, %Context* noalias nonnull %__.context_ptr)
	ret void
}

define void @gl-21.load_2_0(void (%..rawptr, %..string, %Context*)* %set_proc_address, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca void (%..rawptr, %..string, %Context*)*, align 8
		store void (%..rawptr, %..string, %Context*)* %set_proc_address, void (%..rawptr, %..string, %Context*)** %0
	%1 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%2 = getelementptr inbounds void (i32, i32)*, void (i32, i32)** @gl-21.BlendEquationSeparate, i64 0
	%3 = bitcast void (i32, i32)** %2 to %..rawptr
	call void %1(%..rawptr %3, %..string {i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__str$1c1, i64 0, i32 0), i64 24}, %Context* noalias nonnull %__.context_ptr)
	%4 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%5 = getelementptr inbounds void (i32, i32*)*, void (i32, i32*)** @gl-21.DrawBuffers, i64 0
	%6 = bitcast void (i32, i32*)** %5 to %..rawptr
	call void %4(%..rawptr %6, %..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$1c2, i64 0, i32 0), i64 14}, %Context* noalias nonnull %__.context_ptr)
	%7 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%8 = getelementptr inbounds void (i32, i32, i32, i32)*, void (i32, i32, i32, i32)** @gl-21.StencilOpSeparate, i64 0
	%9 = bitcast void (i32, i32, i32, i32)** %8 to %..rawptr
	call void %7(%..rawptr %9, %..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$1c3, i64 0, i32 0), i64 20}, %Context* noalias nonnull %__.context_ptr)
	%10 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%11 = getelementptr inbounds void (i32, i32, i32, i32)*, void (i32, i32, i32, i32)** @gl-21.StencilFuncSeparate, i64 0
	%12 = bitcast void (i32, i32, i32, i32)** %11 to %..rawptr
	call void %10(%..rawptr %12, %..string {i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__str$1c4, i64 0, i32 0), i64 22}, %Context* noalias nonnull %__.context_ptr)
	%13 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%14 = getelementptr inbounds void (i32, i32)*, void (i32, i32)** @gl-21.StencilMaskSeparate, i64 0
	%15 = bitcast void (i32, i32)** %14 to %..rawptr
	call void %13(%..rawptr %15, %..string {i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__str$1c5, i64 0, i32 0), i64 22}, %Context* noalias nonnull %__.context_ptr)
	%16 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%17 = getelementptr inbounds void (i32, i32)*, void (i32, i32)** @gl-21.AttachShader, i64 0
	%18 = bitcast void (i32, i32)** %17 to %..rawptr
	call void %16(%..rawptr %18, %..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$1c6, i64 0, i32 0), i64 15}, %Context* noalias nonnull %__.context_ptr)
	%19 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%20 = getelementptr inbounds void (i32, i32, i8*)*, void (i32, i32, i8*)** @gl-21.BindAttribLocation, i64 0
	%21 = bitcast void (i32, i32, i8*)** %20 to %..rawptr
	call void %19(%..rawptr %21, %..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1c7, i64 0, i32 0), i64 21}, %Context* noalias nonnull %__.context_ptr)
	%22 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%23 = getelementptr inbounds void (i32)*, void (i32)** @gl-21.CompileShader, i64 0
	%24 = bitcast void (i32)** %23 to %..rawptr
	call void %22(%..rawptr %24, %..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$1c8, i64 0, i32 0), i64 16}, %Context* noalias nonnull %__.context_ptr)
	%25 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%26 = getelementptr inbounds i32 ()*, i32 ()** @gl-21.CreateProgram, i64 0
	%27 = bitcast i32 ()** %26 to %..rawptr
	call void %25(%..rawptr %27, %..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$1c9, i64 0, i32 0), i64 16}, %Context* noalias nonnull %__.context_ptr)
	%28 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%29 = getelementptr inbounds i32 (i32)*, i32 (i32)** @gl-21.CreateShader, i64 0
	%30 = bitcast i32 (i32)** %29 to %..rawptr
	call void %28(%..rawptr %30, %..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$1ca, i64 0, i32 0), i64 15}, %Context* noalias nonnull %__.context_ptr)
	%31 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%32 = getelementptr inbounds void (i32)*, void (i32)** @gl-21.DeleteProgram, i64 0
	%33 = bitcast void (i32)** %32 to %..rawptr
	call void %31(%..rawptr %33, %..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$1cb, i64 0, i32 0), i64 16}, %Context* noalias nonnull %__.context_ptr)
	%34 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%35 = getelementptr inbounds void (i32)*, void (i32)** @gl-21.DeleteShader, i64 0
	%36 = bitcast void (i32)** %35 to %..rawptr
	call void %34(%..rawptr %36, %..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$1cc, i64 0, i32 0), i64 15}, %Context* noalias nonnull %__.context_ptr)
	%37 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%38 = getelementptr inbounds void (i32, i32)*, void (i32, i32)** @gl-21.DetachShader, i64 0
	%39 = bitcast void (i32, i32)** %38 to %..rawptr
	call void %37(%..rawptr %39, %..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$1cd, i64 0, i32 0), i64 15}, %Context* noalias nonnull %__.context_ptr)
	%40 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%41 = getelementptr inbounds void (i32)*, void (i32)** @gl-21.DisableVertexAttribArray, i64 0
	%42 = bitcast void (i32)** %41 to %..rawptr
	call void %40(%..rawptr %42, %..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$1ce, i64 0, i32 0), i64 27}, %Context* noalias nonnull %__.context_ptr)
	%43 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%44 = getelementptr inbounds void (i32)*, void (i32)** @gl-21.EnableVertexAttribArray, i64 0
	%45 = bitcast void (i32)** %44 to %..rawptr
	call void %43(%..rawptr %45, %..string {i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__str$1cf, i64 0, i32 0), i64 26}, %Context* noalias nonnull %__.context_ptr)
	%46 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%47 = getelementptr inbounds void (i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32, i32*, i32*, i32*, i8*)** @gl-21.GetActiveAttrib, i64 0
	%48 = bitcast void (i32, i32, i32, i32*, i32*, i32*, i8*)** %47 to %..rawptr
	call void %46(%..rawptr %48, %..string {i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__str$1d0, i64 0, i32 0), i64 18}, %Context* noalias nonnull %__.context_ptr)
	%49 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%50 = getelementptr inbounds void (i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32, i32*, i32*, i32*, i8*)** @gl-21.GetActiveUniform, i64 0
	%51 = bitcast void (i32, i32, i32, i32*, i32*, i32*, i8*)** %50 to %..rawptr
	call void %49(%..rawptr %51, %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$1d1, i64 0, i32 0), i64 19}, %Context* noalias nonnull %__.context_ptr)
	%52 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%53 = getelementptr inbounds void (i32, i32, i32*, i32*)*, void (i32, i32, i32*, i32*)** @gl-21.GetAttachedShaders, i64 0
	%54 = bitcast void (i32, i32, i32*, i32*)** %53 to %..rawptr
	call void %52(%..rawptr %54, %..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1d2, i64 0, i32 0), i64 21}, %Context* noalias nonnull %__.context_ptr)
	%55 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%56 = getelementptr inbounds i32 (i32, i8*)*, i32 (i32, i8*)** @gl-21.GetAttribLocation, i64 0
	%57 = bitcast i32 (i32, i8*)** %56 to %..rawptr
	call void %55(%..rawptr %57, %..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$1d3, i64 0, i32 0), i64 20}, %Context* noalias nonnull %__.context_ptr)
	%58 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%59 = getelementptr inbounds void (i32, i32, i32*)*, void (i32, i32, i32*)** @gl-21.GetProgramiv, i64 0
	%60 = bitcast void (i32, i32, i32*)** %59 to %..rawptr
	call void %58(%..rawptr %60, %..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$1d4, i64 0, i32 0), i64 15}, %Context* noalias nonnull %__.context_ptr)
	%61 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%62 = getelementptr inbounds void (i32, i32, i32*, i8*)*, void (i32, i32, i32*, i8*)** @gl-21.GetProgramInfoLog, i64 0
	%63 = bitcast void (i32, i32, i32*, i8*)** %62 to %..rawptr
	call void %61(%..rawptr %63, %..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$1d5, i64 0, i32 0), i64 20}, %Context* noalias nonnull %__.context_ptr)
	%64 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%65 = getelementptr inbounds void (i32, i32, i32*)*, void (i32, i32, i32*)** @gl-21.GetShaderiv, i64 0
	%66 = bitcast void (i32, i32, i32*)** %65 to %..rawptr
	call void %64(%..rawptr %66, %..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$1d6, i64 0, i32 0), i64 14}, %Context* noalias nonnull %__.context_ptr)
	%67 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%68 = getelementptr inbounds void (i32, i32, i32*, i8*)*, void (i32, i32, i32*, i8*)** @gl-21.GetShaderInfoLog, i64 0
	%69 = bitcast void (i32, i32, i32*, i8*)** %68 to %..rawptr
	call void %67(%..rawptr %69, %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$1d7, i64 0, i32 0), i64 19}, %Context* noalias nonnull %__.context_ptr)
	%70 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%71 = getelementptr inbounds void (i32, i32, i32*, i8*)*, void (i32, i32, i32*, i8*)** @gl-21.GetShaderSource, i64 0
	%72 = bitcast void (i32, i32, i32*, i8*)** %71 to %..rawptr
	call void %70(%..rawptr %72, %..string {i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__str$1d8, i64 0, i32 0), i64 18}, %Context* noalias nonnull %__.context_ptr)
	%73 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%74 = getelementptr inbounds i32 (i32, i8*)*, i32 (i32, i8*)** @gl-21.GetUniformLocation, i64 0
	%75 = bitcast i32 (i32, i8*)** %74 to %..rawptr
	call void %73(%..rawptr %75, %..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$1d9, i64 0, i32 0), i64 21}, %Context* noalias nonnull %__.context_ptr)
	%76 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%77 = getelementptr inbounds void (i32, i32, float*)*, void (i32, i32, float*)** @gl-21.GetUniformfv, i64 0
	%78 = bitcast void (i32, i32, float*)** %77 to %..rawptr
	call void %76(%..rawptr %78, %..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$1da, i64 0, i32 0), i64 15}, %Context* noalias nonnull %__.context_ptr)
	%79 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%80 = getelementptr inbounds void (i32, i32, i32*)*, void (i32, i32, i32*)** @gl-21.GetUniformiv, i64 0
	%81 = bitcast void (i32, i32, i32*)** %80 to %..rawptr
	call void %79(%..rawptr %81, %..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$1db, i64 0, i32 0), i64 15}, %Context* noalias nonnull %__.context_ptr)
	%82 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%83 = getelementptr inbounds void (i32, i32, double*)*, void (i32, i32, double*)** @gl-21.GetVertexAttribdv, i64 0
	%84 = bitcast void (i32, i32, double*)** %83 to %..rawptr
	call void %82(%..rawptr %84, %..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$1dc, i64 0, i32 0), i64 20}, %Context* noalias nonnull %__.context_ptr)
	%85 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%86 = getelementptr inbounds void (i32, i32, float*)*, void (i32, i32, float*)** @gl-21.GetVertexAttribfv, i64 0
	%87 = bitcast void (i32, i32, float*)** %86 to %..rawptr
	call void %85(%..rawptr %87, %..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$1dd, i64 0, i32 0), i64 20}, %Context* noalias nonnull %__.context_ptr)
	%88 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%89 = getelementptr inbounds void (i32, i32, i32*)*, void (i32, i32, i32*)** @gl-21.GetVertexAttribiv, i64 0
	%90 = bitcast void (i32, i32, i32*)** %89 to %..rawptr
	call void %88(%..rawptr %90, %..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$1de, i64 0, i32 0), i64 20}, %Context* noalias nonnull %__.context_ptr)
	%91 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%92 = getelementptr inbounds void (i32, i32, %..rawptr*)*, void (i32, i32, %..rawptr*)** @gl-21.GetVertexAttribPointerv, i64 0
	%93 = bitcast void (i32, i32, %..rawptr*)** %92 to %..rawptr
	call void %91(%..rawptr %93, %..string {i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__str$1df, i64 0, i32 0), i64 26}, %Context* noalias nonnull %__.context_ptr)
	%94 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%95 = getelementptr inbounds i8 (i32)*, i8 (i32)** @gl-21.IsProgram, i64 0
	%96 = bitcast i8 (i32)** %95 to %..rawptr
	call void %94(%..rawptr %96, %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$1e0, i64 0, i32 0), i64 12}, %Context* noalias nonnull %__.context_ptr)
	%97 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%98 = getelementptr inbounds i8 (i32)*, i8 (i32)** @gl-21.IsShader, i64 0
	%99 = bitcast i8 (i32)** %98 to %..rawptr
	call void %97(%..rawptr %99, %..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$1e1, i64 0, i32 0), i64 11}, %Context* noalias nonnull %__.context_ptr)
	%100 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%101 = getelementptr inbounds void (i32)*, void (i32)** @gl-21.LinkProgram, i64 0
	%102 = bitcast void (i32)** %101 to %..rawptr
	call void %100(%..rawptr %102, %..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$1e2, i64 0, i32 0), i64 14}, %Context* noalias nonnull %__.context_ptr)
	%103 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%104 = getelementptr inbounds void (i32, i32, i8**, i32*)*, void (i32, i32, i8**, i32*)** @gl-21.ShaderSource, i64 0
	%105 = bitcast void (i32, i32, i8**, i32*)** %104 to %..rawptr
	call void %103(%..rawptr %105, %..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$1e3, i64 0, i32 0), i64 15}, %Context* noalias nonnull %__.context_ptr)
	%106 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%107 = getelementptr inbounds void (i32)*, void (i32)** @gl-21.UseProgram, i64 0
	%108 = bitcast void (i32)** %107 to %..rawptr
	call void %106(%..rawptr %108, %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$1e4, i64 0, i32 0), i64 13}, %Context* noalias nonnull %__.context_ptr)
	%109 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%110 = getelementptr inbounds void (i32, float)*, void (i32, float)** @gl-21.Uniform1f, i64 0
	%111 = bitcast void (i32, float)** %110 to %..rawptr
	call void %109(%..rawptr %111, %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$1e5, i64 0, i32 0), i64 12}, %Context* noalias nonnull %__.context_ptr)
	%112 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%113 = getelementptr inbounds void (i32, float, float)*, void (i32, float, float)** @gl-21.Uniform2f, i64 0
	%114 = bitcast void (i32, float, float)** %113 to %..rawptr
	call void %112(%..rawptr %114, %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$1e6, i64 0, i32 0), i64 12}, %Context* noalias nonnull %__.context_ptr)
	%115 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%116 = getelementptr inbounds void (i32, float, float, float)*, void (i32, float, float, float)** @gl-21.Uniform3f, i64 0
	%117 = bitcast void (i32, float, float, float)** %116 to %..rawptr
	call void %115(%..rawptr %117, %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$1e7, i64 0, i32 0), i64 12}, %Context* noalias nonnull %__.context_ptr)
	%118 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%119 = getelementptr inbounds void (i32, float, float, float, float)*, void (i32, float, float, float, float)** @gl-21.Uniform4f, i64 0
	%120 = bitcast void (i32, float, float, float, float)** %119 to %..rawptr
	call void %118(%..rawptr %120, %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$1e8, i64 0, i32 0), i64 12}, %Context* noalias nonnull %__.context_ptr)
	%121 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%122 = getelementptr inbounds void (i32, i32)*, void (i32, i32)** @gl-21.Uniform1i, i64 0
	%123 = bitcast void (i32, i32)** %122 to %..rawptr
	call void %121(%..rawptr %123, %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$1e9, i64 0, i32 0), i64 12}, %Context* noalias nonnull %__.context_ptr)
	%124 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%125 = getelementptr inbounds void (i32, i32, i32)*, void (i32, i32, i32)** @gl-21.Uniform2i, i64 0
	%126 = bitcast void (i32, i32, i32)** %125 to %..rawptr
	call void %124(%..rawptr %126, %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$1ea, i64 0, i32 0), i64 12}, %Context* noalias nonnull %__.context_ptr)
	%127 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%128 = getelementptr inbounds void (i32, i32, i32, i32)*, void (i32, i32, i32, i32)** @gl-21.Uniform3i, i64 0
	%129 = bitcast void (i32, i32, i32, i32)** %128 to %..rawptr
	call void %127(%..rawptr %129, %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$1eb, i64 0, i32 0), i64 12}, %Context* noalias nonnull %__.context_ptr)
	%130 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%131 = getelementptr inbounds void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)** @gl-21.Uniform4i, i64 0
	%132 = bitcast void (i32, i32, i32, i32, i32)** %131 to %..rawptr
	call void %130(%..rawptr %132, %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$1ec, i64 0, i32 0), i64 12}, %Context* noalias nonnull %__.context_ptr)
	%133 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%134 = getelementptr inbounds void (i32, i32, float*)*, void (i32, i32, float*)** @gl-21.Uniform1fv, i64 0
	%135 = bitcast void (i32, i32, float*)** %134 to %..rawptr
	call void %133(%..rawptr %135, %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$1ed, i64 0, i32 0), i64 13}, %Context* noalias nonnull %__.context_ptr)
	%136 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%137 = getelementptr inbounds void (i32, i32, float*)*, void (i32, i32, float*)** @gl-21.Uniform2fv, i64 0
	%138 = bitcast void (i32, i32, float*)** %137 to %..rawptr
	call void %136(%..rawptr %138, %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$1ee, i64 0, i32 0), i64 13}, %Context* noalias nonnull %__.context_ptr)
	%139 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%140 = getelementptr inbounds void (i32, i32, float*)*, void (i32, i32, float*)** @gl-21.Uniform3fv, i64 0
	%141 = bitcast void (i32, i32, float*)** %140 to %..rawptr
	call void %139(%..rawptr %141, %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$1ef, i64 0, i32 0), i64 13}, %Context* noalias nonnull %__.context_ptr)
	%142 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%143 = getelementptr inbounds void (i32, i32, float*)*, void (i32, i32, float*)** @gl-21.Uniform4fv, i64 0
	%144 = bitcast void (i32, i32, float*)** %143 to %..rawptr
	call void %142(%..rawptr %144, %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$1f0, i64 0, i32 0), i64 13}, %Context* noalias nonnull %__.context_ptr)
	%145 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%146 = getelementptr inbounds void (i32, i32, i32*)*, void (i32, i32, i32*)** @gl-21.Uniform1iv, i64 0
	%147 = bitcast void (i32, i32, i32*)** %146 to %..rawptr
	call void %145(%..rawptr %147, %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$1f1, i64 0, i32 0), i64 13}, %Context* noalias nonnull %__.context_ptr)
	%148 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%149 = getelementptr inbounds void (i32, i32, i32*)*, void (i32, i32, i32*)** @gl-21.Uniform2iv, i64 0
	%150 = bitcast void (i32, i32, i32*)** %149 to %..rawptr
	call void %148(%..rawptr %150, %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$1f2, i64 0, i32 0), i64 13}, %Context* noalias nonnull %__.context_ptr)
	%151 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%152 = getelementptr inbounds void (i32, i32, i32*)*, void (i32, i32, i32*)** @gl-21.Uniform3iv, i64 0
	%153 = bitcast void (i32, i32, i32*)** %152 to %..rawptr
	call void %151(%..rawptr %153, %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$1f3, i64 0, i32 0), i64 13}, %Context* noalias nonnull %__.context_ptr)
	%154 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%155 = getelementptr inbounds void (i32, i32, i32*)*, void (i32, i32, i32*)** @gl-21.Uniform4iv, i64 0
	%156 = bitcast void (i32, i32, i32*)** %155 to %..rawptr
	call void %154(%..rawptr %156, %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$1f4, i64 0, i32 0), i64 13}, %Context* noalias nonnull %__.context_ptr)
	%157 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%158 = getelementptr inbounds void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)** @gl-21.UniformMatrix2fv, i64 0
	%159 = bitcast void (i32, i32, i8, float*)** %158 to %..rawptr
	call void %157(%..rawptr %159, %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$1f5, i64 0, i32 0), i64 19}, %Context* noalias nonnull %__.context_ptr)
	%160 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%161 = getelementptr inbounds void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)** @gl-21.UniformMatrix3fv, i64 0
	%162 = bitcast void (i32, i32, i8, float*)** %161 to %..rawptr
	call void %160(%..rawptr %162, %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$1f6, i64 0, i32 0), i64 19}, %Context* noalias nonnull %__.context_ptr)
	%163 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%164 = getelementptr inbounds void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)** @gl-21.UniformMatrix4fv, i64 0
	%165 = bitcast void (i32, i32, i8, float*)** %164 to %..rawptr
	call void %163(%..rawptr %165, %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$1f7, i64 0, i32 0), i64 19}, %Context* noalias nonnull %__.context_ptr)
	%166 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%167 = getelementptr inbounds void (i32)*, void (i32)** @gl-21.ValidateProgram, i64 0
	%168 = bitcast void (i32)** %167 to %..rawptr
	call void %166(%..rawptr %168, %..string {i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__str$1f8, i64 0, i32 0), i64 18}, %Context* noalias nonnull %__.context_ptr)
	%169 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%170 = getelementptr inbounds void (i32, double)*, void (i32, double)** @gl-21.VertexAttrib1d, i64 0
	%171 = bitcast void (i32, double)** %170 to %..rawptr
	call void %169(%..rawptr %171, %..string {i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__str$1f9, i64 0, i32 0), i64 17}, %Context* noalias nonnull %__.context_ptr)
	%172 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%173 = getelementptr inbounds void (i32, double*)*, void (i32, double*)** @gl-21.VertexAttrib1dv, i64 0
	%174 = bitcast void (i32, double*)** %173 to %..rawptr
	call void %172(%..rawptr %174, %..string {i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__str$1fa, i64 0, i32 0), i64 18}, %Context* noalias nonnull %__.context_ptr)
	%175 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%176 = getelementptr inbounds void (i32, float)*, void (i32, float)** @gl-21.VertexAttrib1f, i64 0
	%177 = bitcast void (i32, float)** %176 to %..rawptr
	call void %175(%..rawptr %177, %..string {i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__str$1fb, i64 0, i32 0), i64 17}, %Context* noalias nonnull %__.context_ptr)
	%178 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%179 = getelementptr inbounds void (i32, float*)*, void (i32, float*)** @gl-21.VertexAttrib1fv, i64 0
	%180 = bitcast void (i32, float*)** %179 to %..rawptr
	call void %178(%..rawptr %180, %..string {i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__str$1fc, i64 0, i32 0), i64 18}, %Context* noalias nonnull %__.context_ptr)
	%181 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%182 = getelementptr inbounds void (i32, i16)*, void (i32, i16)** @gl-21.VertexAttrib1s, i64 0
	%183 = bitcast void (i32, i16)** %182 to %..rawptr
	call void %181(%..rawptr %183, %..string {i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__str$1fd, i64 0, i32 0), i64 17}, %Context* noalias nonnull %__.context_ptr)
	%184 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%185 = getelementptr inbounds void (i32, i16*)*, void (i32, i16*)** @gl-21.VertexAttrib1sv, i64 0
	%186 = bitcast void (i32, i16*)** %185 to %..rawptr
	call void %184(%..rawptr %186, %..string {i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__str$1fe, i64 0, i32 0), i64 18}, %Context* noalias nonnull %__.context_ptr)
	%187 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%188 = getelementptr inbounds void (i32, double, double)*, void (i32, double, double)** @gl-21.VertexAttrib2d, i64 0
	%189 = bitcast void (i32, double, double)** %188 to %..rawptr
	call void %187(%..rawptr %189, %..string {i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__str$1ff, i64 0, i32 0), i64 17}, %Context* noalias nonnull %__.context_ptr)
	%190 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%191 = getelementptr inbounds void (i32, double*)*, void (i32, double*)** @gl-21.VertexAttrib2dv, i64 0
	%192 = bitcast void (i32, double*)** %191 to %..rawptr
	call void %190(%..rawptr %192, %..string {i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__str$200, i64 0, i32 0), i64 18}, %Context* noalias nonnull %__.context_ptr)
	%193 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%194 = getelementptr inbounds void (i32, float, float)*, void (i32, float, float)** @gl-21.VertexAttrib2f, i64 0
	%195 = bitcast void (i32, float, float)** %194 to %..rawptr
	call void %193(%..rawptr %195, %..string {i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__str$201, i64 0, i32 0), i64 17}, %Context* noalias nonnull %__.context_ptr)
	%196 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%197 = getelementptr inbounds void (i32, float*)*, void (i32, float*)** @gl-21.VertexAttrib2fv, i64 0
	%198 = bitcast void (i32, float*)** %197 to %..rawptr
	call void %196(%..rawptr %198, %..string {i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__str$202, i64 0, i32 0), i64 18}, %Context* noalias nonnull %__.context_ptr)
	%199 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%200 = getelementptr inbounds void (i32, i16, i16)*, void (i32, i16, i16)** @gl-21.VertexAttrib2s, i64 0
	%201 = bitcast void (i32, i16, i16)** %200 to %..rawptr
	call void %199(%..rawptr %201, %..string {i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__str$203, i64 0, i32 0), i64 17}, %Context* noalias nonnull %__.context_ptr)
	%202 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%203 = getelementptr inbounds void (i32, i16*)*, void (i32, i16*)** @gl-21.VertexAttrib2sv, i64 0
	%204 = bitcast void (i32, i16*)** %203 to %..rawptr
	call void %202(%..rawptr %204, %..string {i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__str$204, i64 0, i32 0), i64 18}, %Context* noalias nonnull %__.context_ptr)
	%205 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%206 = getelementptr inbounds void (i32, double, double, double)*, void (i32, double, double, double)** @gl-21.VertexAttrib3d, i64 0
	%207 = bitcast void (i32, double, double, double)** %206 to %..rawptr
	call void %205(%..rawptr %207, %..string {i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__str$205, i64 0, i32 0), i64 17}, %Context* noalias nonnull %__.context_ptr)
	%208 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%209 = getelementptr inbounds void (i32, double*)*, void (i32, double*)** @gl-21.VertexAttrib3dv, i64 0
	%210 = bitcast void (i32, double*)** %209 to %..rawptr
	call void %208(%..rawptr %210, %..string {i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__str$206, i64 0, i32 0), i64 18}, %Context* noalias nonnull %__.context_ptr)
	%211 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%212 = getelementptr inbounds void (i32, float, float, float)*, void (i32, float, float, float)** @gl-21.VertexAttrib3f, i64 0
	%213 = bitcast void (i32, float, float, float)** %212 to %..rawptr
	call void %211(%..rawptr %213, %..string {i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__str$207, i64 0, i32 0), i64 17}, %Context* noalias nonnull %__.context_ptr)
	%214 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%215 = getelementptr inbounds void (i32, float*)*, void (i32, float*)** @gl-21.VertexAttrib3fv, i64 0
	%216 = bitcast void (i32, float*)** %215 to %..rawptr
	call void %214(%..rawptr %216, %..string {i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__str$208, i64 0, i32 0), i64 18}, %Context* noalias nonnull %__.context_ptr)
	%217 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%218 = getelementptr inbounds void (i32, i16, i16, i16)*, void (i32, i16, i16, i16)** @gl-21.VertexAttrib3s, i64 0
	%219 = bitcast void (i32, i16, i16, i16)** %218 to %..rawptr
	call void %217(%..rawptr %219, %..string {i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__str$209, i64 0, i32 0), i64 17}, %Context* noalias nonnull %__.context_ptr)
	%220 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%221 = getelementptr inbounds void (i32, i16*)*, void (i32, i16*)** @gl-21.VertexAttrib3sv, i64 0
	%222 = bitcast void (i32, i16*)** %221 to %..rawptr
	call void %220(%..rawptr %222, %..string {i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__str$20a, i64 0, i32 0), i64 18}, %Context* noalias nonnull %__.context_ptr)
	%223 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%224 = getelementptr inbounds void (i32, i8*)*, void (i32, i8*)** @gl-21.VertexAttrib4Nbv, i64 0
	%225 = bitcast void (i32, i8*)** %224 to %..rawptr
	call void %223(%..rawptr %225, %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$20b, i64 0, i32 0), i64 19}, %Context* noalias nonnull %__.context_ptr)
	%226 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%227 = getelementptr inbounds void (i32, i32*)*, void (i32, i32*)** @gl-21.VertexAttrib4Niv, i64 0
	%228 = bitcast void (i32, i32*)** %227 to %..rawptr
	call void %226(%..rawptr %228, %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$20c, i64 0, i32 0), i64 19}, %Context* noalias nonnull %__.context_ptr)
	%229 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%230 = getelementptr inbounds void (i32, i16*)*, void (i32, i16*)** @gl-21.VertexAttrib4Nsv, i64 0
	%231 = bitcast void (i32, i16*)** %230 to %..rawptr
	call void %229(%..rawptr %231, %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$20d, i64 0, i32 0), i64 19}, %Context* noalias nonnull %__.context_ptr)
	%232 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%233 = getelementptr inbounds void (i32, i8, i8, i8, i8)*, void (i32, i8, i8, i8, i8)** @gl-21.VertexAttrib4Nub, i64 0
	%234 = bitcast void (i32, i8, i8, i8, i8)** %233 to %..rawptr
	call void %232(%..rawptr %234, %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$20e, i64 0, i32 0), i64 19}, %Context* noalias nonnull %__.context_ptr)
	%235 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%236 = getelementptr inbounds void (i32, i8*)*, void (i32, i8*)** @gl-21.VertexAttrib4Nubv, i64 0
	%237 = bitcast void (i32, i8*)** %236 to %..rawptr
	call void %235(%..rawptr %237, %..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$20f, i64 0, i32 0), i64 20}, %Context* noalias nonnull %__.context_ptr)
	%238 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%239 = getelementptr inbounds void (i32, i32*)*, void (i32, i32*)** @gl-21.VertexAttrib4Nuiv, i64 0
	%240 = bitcast void (i32, i32*)** %239 to %..rawptr
	call void %238(%..rawptr %240, %..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$210, i64 0, i32 0), i64 20}, %Context* noalias nonnull %__.context_ptr)
	%241 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%242 = getelementptr inbounds void (i32, i16*)*, void (i32, i16*)** @gl-21.VertexAttrib4Nusv, i64 0
	%243 = bitcast void (i32, i16*)** %242 to %..rawptr
	call void %241(%..rawptr %243, %..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$211, i64 0, i32 0), i64 20}, %Context* noalias nonnull %__.context_ptr)
	%244 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%245 = getelementptr inbounds void (i32, i8*)*, void (i32, i8*)** @gl-21.VertexAttrib4bv, i64 0
	%246 = bitcast void (i32, i8*)** %245 to %..rawptr
	call void %244(%..rawptr %246, %..string {i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__str$212, i64 0, i32 0), i64 18}, %Context* noalias nonnull %__.context_ptr)
	%247 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%248 = getelementptr inbounds void (i32, double, double, double, double)*, void (i32, double, double, double, double)** @gl-21.VertexAttrib4d, i64 0
	%249 = bitcast void (i32, double, double, double, double)** %248 to %..rawptr
	call void %247(%..rawptr %249, %..string {i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__str$213, i64 0, i32 0), i64 17}, %Context* noalias nonnull %__.context_ptr)
	%250 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%251 = getelementptr inbounds void (i32, double*)*, void (i32, double*)** @gl-21.VertexAttrib4dv, i64 0
	%252 = bitcast void (i32, double*)** %251 to %..rawptr
	call void %250(%..rawptr %252, %..string {i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__str$214, i64 0, i32 0), i64 18}, %Context* noalias nonnull %__.context_ptr)
	%253 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%254 = getelementptr inbounds void (i32, float, float, float, float)*, void (i32, float, float, float, float)** @gl-21.VertexAttrib4f, i64 0
	%255 = bitcast void (i32, float, float, float, float)** %254 to %..rawptr
	call void %253(%..rawptr %255, %..string {i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__str$215, i64 0, i32 0), i64 17}, %Context* noalias nonnull %__.context_ptr)
	%256 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%257 = getelementptr inbounds void (i32, float*)*, void (i32, float*)** @gl-21.VertexAttrib4fv, i64 0
	%258 = bitcast void (i32, float*)** %257 to %..rawptr
	call void %256(%..rawptr %258, %..string {i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__str$216, i64 0, i32 0), i64 18}, %Context* noalias nonnull %__.context_ptr)
	%259 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%260 = getelementptr inbounds void (i32, i32*)*, void (i32, i32*)** @gl-21.VertexAttrib4iv, i64 0
	%261 = bitcast void (i32, i32*)** %260 to %..rawptr
	call void %259(%..rawptr %261, %..string {i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__str$217, i64 0, i32 0), i64 18}, %Context* noalias nonnull %__.context_ptr)
	%262 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%263 = getelementptr inbounds void (i32, i16, i16, i16, i16)*, void (i32, i16, i16, i16, i16)** @gl-21.VertexAttrib4s, i64 0
	%264 = bitcast void (i32, i16, i16, i16, i16)** %263 to %..rawptr
	call void %262(%..rawptr %264, %..string {i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__str$218, i64 0, i32 0), i64 17}, %Context* noalias nonnull %__.context_ptr)
	%265 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%266 = getelementptr inbounds void (i32, i16*)*, void (i32, i16*)** @gl-21.VertexAttrib4sv, i64 0
	%267 = bitcast void (i32, i16*)** %266 to %..rawptr
	call void %265(%..rawptr %267, %..string {i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__str$219, i64 0, i32 0), i64 18}, %Context* noalias nonnull %__.context_ptr)
	%268 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%269 = getelementptr inbounds void (i32, i8*)*, void (i32, i8*)** @gl-21.VertexAttrib4ubv, i64 0
	%270 = bitcast void (i32, i8*)** %269 to %..rawptr
	call void %268(%..rawptr %270, %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$21a, i64 0, i32 0), i64 19}, %Context* noalias nonnull %__.context_ptr)
	%271 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%272 = getelementptr inbounds void (i32, i32*)*, void (i32, i32*)** @gl-21.VertexAttrib4uiv, i64 0
	%273 = bitcast void (i32, i32*)** %272 to %..rawptr
	call void %271(%..rawptr %273, %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$21b, i64 0, i32 0), i64 19}, %Context* noalias nonnull %__.context_ptr)
	%274 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%275 = getelementptr inbounds void (i32, i16*)*, void (i32, i16*)** @gl-21.VertexAttrib4usv, i64 0
	%276 = bitcast void (i32, i16*)** %275 to %..rawptr
	call void %274(%..rawptr %276, %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$21c, i64 0, i32 0), i64 19}, %Context* noalias nonnull %__.context_ptr)
	%277 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%278 = getelementptr inbounds void (i32, i32, i32, i8, i32, %..rawptr)*, void (i32, i32, i32, i8, i32, %..rawptr)** @gl-21.VertexAttribPointer, i64 0
	%279 = bitcast void (i32, i32, i32, i8, i32, %..rawptr)** %278 to %..rawptr
	call void %277(%..rawptr %279, %..string {i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__str$21d, i64 0, i32 0), i64 22}, %Context* noalias nonnull %__.context_ptr)
	ret void
}

define void @gl-21.load_2_1(void (%..rawptr, %..string, %Context*)* %set_proc_address, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca void (%..rawptr, %..string, %Context*)*, align 8
		store void (%..rawptr, %..string, %Context*)* %set_proc_address, void (%..rawptr, %..string, %Context*)** %0
	%1 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%2 = getelementptr inbounds void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)** @gl-21.UniformMatrix2x3fv, i64 0
	%3 = bitcast void (i32, i32, i8, float*)** %2 to %..rawptr
	call void %1(%..rawptr %3, %..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$21e, i64 0, i32 0), i64 21}, %Context* noalias nonnull %__.context_ptr)
	%4 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%5 = getelementptr inbounds void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)** @gl-21.UniformMatrix3x2fv, i64 0
	%6 = bitcast void (i32, i32, i8, float*)** %5 to %..rawptr
	call void %4(%..rawptr %6, %..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$21f, i64 0, i32 0), i64 21}, %Context* noalias nonnull %__.context_ptr)
	%7 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%8 = getelementptr inbounds void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)** @gl-21.UniformMatrix2x4fv, i64 0
	%9 = bitcast void (i32, i32, i8, float*)** %8 to %..rawptr
	call void %7(%..rawptr %9, %..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$220, i64 0, i32 0), i64 21}, %Context* noalias nonnull %__.context_ptr)
	%10 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%11 = getelementptr inbounds void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)** @gl-21.UniformMatrix4x2fv, i64 0
	%12 = bitcast void (i32, i32, i8, float*)** %11 to %..rawptr
	call void %10(%..rawptr %12, %..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$221, i64 0, i32 0), i64 21}, %Context* noalias nonnull %__.context_ptr)
	%13 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%14 = getelementptr inbounds void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)** @gl-21.UniformMatrix3x4fv, i64 0
	%15 = bitcast void (i32, i32, i8, float*)** %14 to %..rawptr
	call void %13(%..rawptr %15, %..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$222, i64 0, i32 0), i64 21}, %Context* noalias nonnull %__.context_ptr)
	%16 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%17 = getelementptr inbounds void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)** @gl-21.UniformMatrix4x3fv, i64 0
	%18 = bitcast void (i32, i32, i8, float*)** %17 to %..rawptr
	call void %16(%..rawptr %18, %..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$223, i64 0, i32 0), i64 21}, %Context* noalias nonnull %__.context_ptr)
	ret void
}

define void @gl-21.load_3_0(void (%..rawptr, %..string, %Context*)* %set_proc_address, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca void (%..rawptr, %..string, %Context*)*, align 8
		store void (%..rawptr, %..string, %Context*)* %set_proc_address, void (%..rawptr, %..string, %Context*)** %0
	%1 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%2 = getelementptr inbounds void (i32, i8, i8, i8, i8)*, void (i32, i8, i8, i8, i8)** @gl-21.ColorMaski, i64 0
	%3 = bitcast void (i32, i8, i8, i8, i8)** %2 to %..rawptr
	call void %1(%..rawptr %3, %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$224, i64 0, i32 0), i64 13}, %Context* noalias nonnull %__.context_ptr)
	%4 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%5 = getelementptr inbounds void (i32, i32, i8*)*, void (i32, i32, i8*)** @gl-21.GetBooleani_v, i64 0
	%6 = bitcast void (i32, i32, i8*)** %5 to %..rawptr
	call void %4(%..rawptr %6, %..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$225, i64 0, i32 0), i64 16}, %Context* noalias nonnull %__.context_ptr)
	%7 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%8 = getelementptr inbounds void (i32, i32, i32*)*, void (i32, i32, i32*)** @gl-21.GetIntegeri_v, i64 0
	%9 = bitcast void (i32, i32, i32*)** %8 to %..rawptr
	call void %7(%..rawptr %9, %..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$226, i64 0, i32 0), i64 16}, %Context* noalias nonnull %__.context_ptr)
	%10 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%11 = getelementptr inbounds void (i32, i32)*, void (i32, i32)** @gl-21.Enablei, i64 0
	%12 = bitcast void (i32, i32)** %11 to %..rawptr
	call void %10(%..rawptr %12, %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$227, i64 0, i32 0), i64 10}, %Context* noalias nonnull %__.context_ptr)
	%13 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%14 = getelementptr inbounds void (i32, i32)*, void (i32, i32)** @gl-21.Disablei, i64 0
	%15 = bitcast void (i32, i32)** %14 to %..rawptr
	call void %13(%..rawptr %15, %..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$228, i64 0, i32 0), i64 11}, %Context* noalias nonnull %__.context_ptr)
	%16 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%17 = getelementptr inbounds i8 (i32, i32)*, i8 (i32, i32)** @gl-21.IsEnabledi, i64 0
	%18 = bitcast i8 (i32, i32)** %17 to %..rawptr
	call void %16(%..rawptr %18, %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$229, i64 0, i32 0), i64 13}, %Context* noalias nonnull %__.context_ptr)
	%19 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%20 = getelementptr inbounds void (i32)*, void (i32)** @gl-21.BeginTransformFeedback, i64 0
	%21 = bitcast void (i32)** %20 to %..rawptr
	call void %19(%..rawptr %21, %..string {i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__str$22a, i64 0, i32 0), i64 25}, %Context* noalias nonnull %__.context_ptr)
	%22 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%23 = getelementptr inbounds void ()*, void ()** @gl-21.EndTransformFeedback, i64 0
	%24 = bitcast void ()** %23 to %..rawptr
	call void %22(%..rawptr %24, %..string {i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__str$22b, i64 0, i32 0), i64 23}, %Context* noalias nonnull %__.context_ptr)
	%25 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%26 = getelementptr inbounds void (i32, i32, i32, i64, i64)*, void (i32, i32, i32, i64, i64)** @gl-21.BindBufferRange, i64 0
	%27 = bitcast void (i32, i32, i32, i64, i64)** %26 to %..rawptr
	call void %25(%..rawptr %27, %..string {i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__str$22c, i64 0, i32 0), i64 18}, %Context* noalias nonnull %__.context_ptr)
	%28 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%29 = getelementptr inbounds void (i32, i32, i32)*, void (i32, i32, i32)** @gl-21.BindBufferBase, i64 0
	%30 = bitcast void (i32, i32, i32)** %29 to %..rawptr
	call void %28(%..rawptr %30, %..string {i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__str$22d, i64 0, i32 0), i64 17}, %Context* noalias nonnull %__.context_ptr)
	%31 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%32 = getelementptr inbounds void (i32, i32, i8*, i32)*, void (i32, i32, i8*, i32)** @gl-21.TransformFeedbackVaryings, i64 0
	%33 = bitcast void (i32, i32, i8*, i32)** %32 to %..rawptr
	call void %31(%..rawptr %33, %..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$22e, i64 0, i32 0), i64 28}, %Context* noalias nonnull %__.context_ptr)
	%34 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%35 = getelementptr inbounds void (i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32, i32*, i32*, i32*, i8*)** @gl-21.GetTransformFeedbackVarying, i64 0
	%36 = bitcast void (i32, i32, i32, i32*, i32*, i32*, i8*)** %35 to %..rawptr
	call void %34(%..rawptr %36, %..string {i8* getelementptr inbounds ([31 x i8], [31 x i8]* @__str$22f, i64 0, i32 0), i64 30}, %Context* noalias nonnull %__.context_ptr)
	%37 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%38 = getelementptr inbounds void (i32, i32)*, void (i32, i32)** @gl-21.ClampColor, i64 0
	%39 = bitcast void (i32, i32)** %38 to %..rawptr
	call void %37(%..rawptr %39, %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$230, i64 0, i32 0), i64 13}, %Context* noalias nonnull %__.context_ptr)
	%40 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%41 = getelementptr inbounds void (i32, i32)*, void (i32, i32)** @gl-21.BeginConditionalRender, i64 0
	%42 = bitcast void (i32, i32)** %41 to %..rawptr
	call void %40(%..rawptr %42, %..string {i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__str$231, i64 0, i32 0), i64 25}, %Context* noalias nonnull %__.context_ptr)
	%43 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%44 = getelementptr inbounds void ()*, void ()** @gl-21.EndConditionalRender, i64 0
	%45 = bitcast void ()** %44 to %..rawptr
	call void %43(%..rawptr %45, %..string {i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__str$232, i64 0, i32 0), i64 23}, %Context* noalias nonnull %__.context_ptr)
	%46 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%47 = getelementptr inbounds void (i32, i32, i32, i32, %..rawptr)*, void (i32, i32, i32, i32, %..rawptr)** @gl-21.VertexAttribIPointer, i64 0
	%48 = bitcast void (i32, i32, i32, i32, %..rawptr)** %47 to %..rawptr
	call void %46(%..rawptr %48, %..string {i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__str$233, i64 0, i32 0), i64 23}, %Context* noalias nonnull %__.context_ptr)
	%49 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%50 = getelementptr inbounds void (i32, i32, i32*)*, void (i32, i32, i32*)** @gl-21.GetVertexAttribIiv, i64 0
	%51 = bitcast void (i32, i32, i32*)** %50 to %..rawptr
	call void %49(%..rawptr %51, %..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$234, i64 0, i32 0), i64 21}, %Context* noalias nonnull %__.context_ptr)
	%52 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%53 = getelementptr inbounds void (i32, i32, i32*)*, void (i32, i32, i32*)** @gl-21.GetVertexAttribIuiv, i64 0
	%54 = bitcast void (i32, i32, i32*)** %53 to %..rawptr
	call void %52(%..rawptr %54, %..string {i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__str$235, i64 0, i32 0), i64 22}, %Context* noalias nonnull %__.context_ptr)
	%55 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%56 = getelementptr inbounds void (i32, i32)*, void (i32, i32)** @gl-21.VertexAttribI1i, i64 0
	%57 = bitcast void (i32, i32)** %56 to %..rawptr
	call void %55(%..rawptr %57, %..string {i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__str$236, i64 0, i32 0), i64 18}, %Context* noalias nonnull %__.context_ptr)
	%58 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%59 = getelementptr inbounds void (i32, i32, i32)*, void (i32, i32, i32)** @gl-21.VertexAttribI2i, i64 0
	%60 = bitcast void (i32, i32, i32)** %59 to %..rawptr
	call void %58(%..rawptr %60, %..string {i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__str$237, i64 0, i32 0), i64 18}, %Context* noalias nonnull %__.context_ptr)
	%61 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%62 = getelementptr inbounds void (i32, i32, i32, i32)*, void (i32, i32, i32, i32)** @gl-21.VertexAttribI3i, i64 0
	%63 = bitcast void (i32, i32, i32, i32)** %62 to %..rawptr
	call void %61(%..rawptr %63, %..string {i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__str$238, i64 0, i32 0), i64 18}, %Context* noalias nonnull %__.context_ptr)
	%64 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%65 = getelementptr inbounds void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)** @gl-21.VertexAttribI4i, i64 0
	%66 = bitcast void (i32, i32, i32, i32, i32)** %65 to %..rawptr
	call void %64(%..rawptr %66, %..string {i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__str$239, i64 0, i32 0), i64 18}, %Context* noalias nonnull %__.context_ptr)
	%67 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%68 = getelementptr inbounds void (i32, i32)*, void (i32, i32)** @gl-21.VertexAttribI1ui, i64 0
	%69 = bitcast void (i32, i32)** %68 to %..rawptr
	call void %67(%..rawptr %69, %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$23a, i64 0, i32 0), i64 19}, %Context* noalias nonnull %__.context_ptr)
	%70 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%71 = getelementptr inbounds void (i32, i32, i32)*, void (i32, i32, i32)** @gl-21.VertexAttribI2ui, i64 0
	%72 = bitcast void (i32, i32, i32)** %71 to %..rawptr
	call void %70(%..rawptr %72, %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$23b, i64 0, i32 0), i64 19}, %Context* noalias nonnull %__.context_ptr)
	%73 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%74 = getelementptr inbounds void (i32, i32, i32, i32)*, void (i32, i32, i32, i32)** @gl-21.VertexAttribI3ui, i64 0
	%75 = bitcast void (i32, i32, i32, i32)** %74 to %..rawptr
	call void %73(%..rawptr %75, %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$23c, i64 0, i32 0), i64 19}, %Context* noalias nonnull %__.context_ptr)
	%76 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%77 = getelementptr inbounds void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)** @gl-21.VertexAttribI4ui, i64 0
	%78 = bitcast void (i32, i32, i32, i32, i32)** %77 to %..rawptr
	call void %76(%..rawptr %78, %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$23d, i64 0, i32 0), i64 19}, %Context* noalias nonnull %__.context_ptr)
	%79 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%80 = getelementptr inbounds void (i32, i32*)*, void (i32, i32*)** @gl-21.VertexAttribI1iv, i64 0
	%81 = bitcast void (i32, i32*)** %80 to %..rawptr
	call void %79(%..rawptr %81, %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$23e, i64 0, i32 0), i64 19}, %Context* noalias nonnull %__.context_ptr)
	%82 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%83 = getelementptr inbounds void (i32, i32*)*, void (i32, i32*)** @gl-21.VertexAttribI2iv, i64 0
	%84 = bitcast void (i32, i32*)** %83 to %..rawptr
	call void %82(%..rawptr %84, %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$23f, i64 0, i32 0), i64 19}, %Context* noalias nonnull %__.context_ptr)
	%85 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%86 = getelementptr inbounds void (i32, i32*)*, void (i32, i32*)** @gl-21.VertexAttribI3iv, i64 0
	%87 = bitcast void (i32, i32*)** %86 to %..rawptr
	call void %85(%..rawptr %87, %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$240, i64 0, i32 0), i64 19}, %Context* noalias nonnull %__.context_ptr)
	%88 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%89 = getelementptr inbounds void (i32, i32*)*, void (i32, i32*)** @gl-21.VertexAttribI4iv, i64 0
	%90 = bitcast void (i32, i32*)** %89 to %..rawptr
	call void %88(%..rawptr %90, %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$241, i64 0, i32 0), i64 19}, %Context* noalias nonnull %__.context_ptr)
	%91 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%92 = getelementptr inbounds void (i32, i32*)*, void (i32, i32*)** @gl-21.VertexAttribI1uiv, i64 0
	%93 = bitcast void (i32, i32*)** %92 to %..rawptr
	call void %91(%..rawptr %93, %..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$242, i64 0, i32 0), i64 20}, %Context* noalias nonnull %__.context_ptr)
	%94 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%95 = getelementptr inbounds void (i32, i32*)*, void (i32, i32*)** @gl-21.VertexAttribI2uiv, i64 0
	%96 = bitcast void (i32, i32*)** %95 to %..rawptr
	call void %94(%..rawptr %96, %..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$243, i64 0, i32 0), i64 20}, %Context* noalias nonnull %__.context_ptr)
	%97 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%98 = getelementptr inbounds void (i32, i32*)*, void (i32, i32*)** @gl-21.VertexAttribI3uiv, i64 0
	%99 = bitcast void (i32, i32*)** %98 to %..rawptr
	call void %97(%..rawptr %99, %..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$244, i64 0, i32 0), i64 20}, %Context* noalias nonnull %__.context_ptr)
	%100 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%101 = getelementptr inbounds void (i32, i32*)*, void (i32, i32*)** @gl-21.VertexAttribI4uiv, i64 0
	%102 = bitcast void (i32, i32*)** %101 to %..rawptr
	call void %100(%..rawptr %102, %..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$245, i64 0, i32 0), i64 20}, %Context* noalias nonnull %__.context_ptr)
	%103 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%104 = getelementptr inbounds void (i32, i8*)*, void (i32, i8*)** @gl-21.VertexAttribI4bv, i64 0
	%105 = bitcast void (i32, i8*)** %104 to %..rawptr
	call void %103(%..rawptr %105, %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$246, i64 0, i32 0), i64 19}, %Context* noalias nonnull %__.context_ptr)
	%106 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%107 = getelementptr inbounds void (i32, i16*)*, void (i32, i16*)** @gl-21.VertexAttribI4sv, i64 0
	%108 = bitcast void (i32, i16*)** %107 to %..rawptr
	call void %106(%..rawptr %108, %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$247, i64 0, i32 0), i64 19}, %Context* noalias nonnull %__.context_ptr)
	%109 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%110 = getelementptr inbounds void (i32, i8*)*, void (i32, i8*)** @gl-21.VertexAttribI4ubv, i64 0
	%111 = bitcast void (i32, i8*)** %110 to %..rawptr
	call void %109(%..rawptr %111, %..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$248, i64 0, i32 0), i64 20}, %Context* noalias nonnull %__.context_ptr)
	%112 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%113 = getelementptr inbounds void (i32, i16*)*, void (i32, i16*)** @gl-21.VertexAttribI4usv, i64 0
	%114 = bitcast void (i32, i16*)** %113 to %..rawptr
	call void %112(%..rawptr %114, %..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$249, i64 0, i32 0), i64 20}, %Context* noalias nonnull %__.context_ptr)
	%115 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%116 = getelementptr inbounds void (i32, i32, i32*)*, void (i32, i32, i32*)** @gl-21.GetUniformuiv, i64 0
	%117 = bitcast void (i32, i32, i32*)** %116 to %..rawptr
	call void %115(%..rawptr %117, %..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$24a, i64 0, i32 0), i64 16}, %Context* noalias nonnull %__.context_ptr)
	%118 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%119 = getelementptr inbounds void (i32, i32, i8*)*, void (i32, i32, i8*)** @gl-21.BindFragDataLocation, i64 0
	%120 = bitcast void (i32, i32, i8*)** %119 to %..rawptr
	call void %118(%..rawptr %120, %..string {i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__str$24b, i64 0, i32 0), i64 23}, %Context* noalias nonnull %__.context_ptr)
	%121 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%122 = getelementptr inbounds i32 (i32, i8*)*, i32 (i32, i8*)** @gl-21.GetFragDataLocation, i64 0
	%123 = bitcast i32 (i32, i8*)** %122 to %..rawptr
	call void %121(%..rawptr %123, %..string {i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__str$24c, i64 0, i32 0), i64 22}, %Context* noalias nonnull %__.context_ptr)
	%124 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%125 = getelementptr inbounds void (i32, i32)*, void (i32, i32)** @gl-21.Uniform1ui, i64 0
	%126 = bitcast void (i32, i32)** %125 to %..rawptr
	call void %124(%..rawptr %126, %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$24d, i64 0, i32 0), i64 13}, %Context* noalias nonnull %__.context_ptr)
	%127 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%128 = getelementptr inbounds void (i32, i32, i32)*, void (i32, i32, i32)** @gl-21.Uniform2ui, i64 0
	%129 = bitcast void (i32, i32, i32)** %128 to %..rawptr
	call void %127(%..rawptr %129, %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$24e, i64 0, i32 0), i64 13}, %Context* noalias nonnull %__.context_ptr)
	%130 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%131 = getelementptr inbounds void (i32, i32, i32, i32)*, void (i32, i32, i32, i32)** @gl-21.Uniform3ui, i64 0
	%132 = bitcast void (i32, i32, i32, i32)** %131 to %..rawptr
	call void %130(%..rawptr %132, %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$24f, i64 0, i32 0), i64 13}, %Context* noalias nonnull %__.context_ptr)
	%133 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%134 = getelementptr inbounds void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)** @gl-21.Uniform4ui, i64 0
	%135 = bitcast void (i32, i32, i32, i32, i32)** %134 to %..rawptr
	call void %133(%..rawptr %135, %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$250, i64 0, i32 0), i64 13}, %Context* noalias nonnull %__.context_ptr)
	%136 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%137 = getelementptr inbounds void (i32, i32, i32*)*, void (i32, i32, i32*)** @gl-21.Uniform1uiv, i64 0
	%138 = bitcast void (i32, i32, i32*)** %137 to %..rawptr
	call void %136(%..rawptr %138, %..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$251, i64 0, i32 0), i64 14}, %Context* noalias nonnull %__.context_ptr)
	%139 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%140 = getelementptr inbounds void (i32, i32, i32*)*, void (i32, i32, i32*)** @gl-21.Uniform2uiv, i64 0
	%141 = bitcast void (i32, i32, i32*)** %140 to %..rawptr
	call void %139(%..rawptr %141, %..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$252, i64 0, i32 0), i64 14}, %Context* noalias nonnull %__.context_ptr)
	%142 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%143 = getelementptr inbounds void (i32, i32, i32*)*, void (i32, i32, i32*)** @gl-21.Uniform3uiv, i64 0
	%144 = bitcast void (i32, i32, i32*)** %143 to %..rawptr
	call void %142(%..rawptr %144, %..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$253, i64 0, i32 0), i64 14}, %Context* noalias nonnull %__.context_ptr)
	%145 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%146 = getelementptr inbounds void (i32, i32, i32*)*, void (i32, i32, i32*)** @gl-21.Uniform4uiv, i64 0
	%147 = bitcast void (i32, i32, i32*)** %146 to %..rawptr
	call void %145(%..rawptr %147, %..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$254, i64 0, i32 0), i64 14}, %Context* noalias nonnull %__.context_ptr)
	%148 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%149 = getelementptr inbounds void (i32, i32, i32*)*, void (i32, i32, i32*)** @gl-21.TexParameterIiv, i64 0
	%150 = bitcast void (i32, i32, i32*)** %149 to %..rawptr
	call void %148(%..rawptr %150, %..string {i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__str$255, i64 0, i32 0), i64 18}, %Context* noalias nonnull %__.context_ptr)
	%151 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%152 = getelementptr inbounds void (i32, i32, i32*)*, void (i32, i32, i32*)** @gl-21.TexParameterIuiv, i64 0
	%153 = bitcast void (i32, i32, i32*)** %152 to %..rawptr
	call void %151(%..rawptr %153, %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$256, i64 0, i32 0), i64 19}, %Context* noalias nonnull %__.context_ptr)
	%154 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%155 = getelementptr inbounds void (i32, i32, i32*)*, void (i32, i32, i32*)** @gl-21.GetTexParameterIiv, i64 0
	%156 = bitcast void (i32, i32, i32*)** %155 to %..rawptr
	call void %154(%..rawptr %156, %..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$257, i64 0, i32 0), i64 21}, %Context* noalias nonnull %__.context_ptr)
	%157 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%158 = getelementptr inbounds void (i32, i32, i32*)*, void (i32, i32, i32*)** @gl-21.GetTexParameterIuiv, i64 0
	%159 = bitcast void (i32, i32, i32*)** %158 to %..rawptr
	call void %157(%..rawptr %159, %..string {i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__str$258, i64 0, i32 0), i64 22}, %Context* noalias nonnull %__.context_ptr)
	%160 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%161 = getelementptr inbounds void (i32, i32, i32*)*, void (i32, i32, i32*)** @gl-21.ClearBufferiv, i64 0
	%162 = bitcast void (i32, i32, i32*)** %161 to %..rawptr
	call void %160(%..rawptr %162, %..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$259, i64 0, i32 0), i64 16}, %Context* noalias nonnull %__.context_ptr)
	%163 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%164 = getelementptr inbounds void (i32, i32, i32*)*, void (i32, i32, i32*)** @gl-21.ClearBufferuiv, i64 0
	%165 = bitcast void (i32, i32, i32*)** %164 to %..rawptr
	call void %163(%..rawptr %165, %..string {i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__str$25a, i64 0, i32 0), i64 17}, %Context* noalias nonnull %__.context_ptr)
	%166 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%167 = getelementptr inbounds void (i32, i32, float*)*, void (i32, i32, float*)** @gl-21.ClearBufferfv, i64 0
	%168 = bitcast void (i32, i32, float*)** %167 to %..rawptr
	call void %166(%..rawptr %168, %..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$25b, i64 0, i32 0), i64 16}, %Context* noalias nonnull %__.context_ptr)
	%169 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%170 = getelementptr inbounds %..rawptr (i32, i32, float, i32)*, %..rawptr (i32, i32, float, i32)** @gl-21.ClearBufferfi, i64 0
	%171 = bitcast %..rawptr (i32, i32, float, i32)** %170 to %..rawptr
	call void %169(%..rawptr %171, %..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$25c, i64 0, i32 0), i64 16}, %Context* noalias nonnull %__.context_ptr)
	%172 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%173 = getelementptr inbounds i8 (i32, i32)*, i8 (i32, i32)** @gl-21.GetStringi, i64 0
	%174 = bitcast i8 (i32, i32)** %173 to %..rawptr
	call void %172(%..rawptr %174, %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$25d, i64 0, i32 0), i64 13}, %Context* noalias nonnull %__.context_ptr)
	%175 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%176 = getelementptr inbounds i8 (i32)*, i8 (i32)** @gl-21.IsRenderbuffer, i64 0
	%177 = bitcast i8 (i32)** %176 to %..rawptr
	call void %175(%..rawptr %177, %..string {i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__str$25e, i64 0, i32 0), i64 17}, %Context* noalias nonnull %__.context_ptr)
	%178 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%179 = getelementptr inbounds void (i32, i32)*, void (i32, i32)** @gl-21.BindRenderbuffer, i64 0
	%180 = bitcast void (i32, i32)** %179 to %..rawptr
	call void %178(%..rawptr %180, %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$25f, i64 0, i32 0), i64 19}, %Context* noalias nonnull %__.context_ptr)
	%181 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%182 = getelementptr inbounds void (i32, i32*)*, void (i32, i32*)** @gl-21.DeleteRenderbuffers, i64 0
	%183 = bitcast void (i32, i32*)** %182 to %..rawptr
	call void %181(%..rawptr %183, %..string {i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__str$260, i64 0, i32 0), i64 22}, %Context* noalias nonnull %__.context_ptr)
	%184 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%185 = getelementptr inbounds void (i32, i32*)*, void (i32, i32*)** @gl-21.GenRenderbuffers, i64 0
	%186 = bitcast void (i32, i32*)** %185 to %..rawptr
	call void %184(%..rawptr %186, %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$261, i64 0, i32 0), i64 19}, %Context* noalias nonnull %__.context_ptr)
	%187 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%188 = getelementptr inbounds void (i32, i32, i32, i32)*, void (i32, i32, i32, i32)** @gl-21.RenderbufferStorage, i64 0
	%189 = bitcast void (i32, i32, i32, i32)** %188 to %..rawptr
	call void %187(%..rawptr %189, %..string {i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__str$262, i64 0, i32 0), i64 22}, %Context* noalias nonnull %__.context_ptr)
	%190 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%191 = getelementptr inbounds void (i32, i32, i32*)*, void (i32, i32, i32*)** @gl-21.GetRenderbufferParameteriv, i64 0
	%192 = bitcast void (i32, i32, i32*)** %191 to %..rawptr
	call void %190(%..rawptr %192, %..string {i8* getelementptr inbounds ([30 x i8], [30 x i8]* @__str$263, i64 0, i32 0), i64 29}, %Context* noalias nonnull %__.context_ptr)
	%193 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%194 = getelementptr inbounds i8 (i32)*, i8 (i32)** @gl-21.IsFramebuffer, i64 0
	%195 = bitcast i8 (i32)** %194 to %..rawptr
	call void %193(%..rawptr %195, %..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$264, i64 0, i32 0), i64 16}, %Context* noalias nonnull %__.context_ptr)
	%196 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%197 = getelementptr inbounds void (i32, i32)*, void (i32, i32)** @gl-21.BindFramebuffer, i64 0
	%198 = bitcast void (i32, i32)** %197 to %..rawptr
	call void %196(%..rawptr %198, %..string {i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__str$265, i64 0, i32 0), i64 18}, %Context* noalias nonnull %__.context_ptr)
	%199 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%200 = getelementptr inbounds void (i32, i32*)*, void (i32, i32*)** @gl-21.DeleteFramebuffers, i64 0
	%201 = bitcast void (i32, i32*)** %200 to %..rawptr
	call void %199(%..rawptr %201, %..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$266, i64 0, i32 0), i64 21}, %Context* noalias nonnull %__.context_ptr)
	%202 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%203 = getelementptr inbounds void (i32, i32*)*, void (i32, i32*)** @gl-21.GenFramebuffers, i64 0
	%204 = bitcast void (i32, i32*)** %203 to %..rawptr
	call void %202(%..rawptr %204, %..string {i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__str$267, i64 0, i32 0), i64 18}, %Context* noalias nonnull %__.context_ptr)
	%205 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%206 = getelementptr inbounds i32 (i32)*, i32 (i32)** @gl-21.CheckFramebufferStatus, i64 0
	%207 = bitcast i32 (i32)** %206 to %..rawptr
	call void %205(%..rawptr %207, %..string {i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__str$268, i64 0, i32 0), i64 25}, %Context* noalias nonnull %__.context_ptr)
	%208 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%209 = getelementptr inbounds void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)** @gl-21.FramebufferTexture1D, i64 0
	%210 = bitcast void (i32, i32, i32, i32, i32)** %209 to %..rawptr
	call void %208(%..rawptr %210, %..string {i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__str$269, i64 0, i32 0), i64 23}, %Context* noalias nonnull %__.context_ptr)
	%211 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%212 = getelementptr inbounds void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)** @gl-21.FramebufferTexture2D, i64 0
	%213 = bitcast void (i32, i32, i32, i32, i32)** %212 to %..rawptr
	call void %211(%..rawptr %213, %..string {i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__str$26a, i64 0, i32 0), i64 23}, %Context* noalias nonnull %__.context_ptr)
	%214 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%215 = getelementptr inbounds void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)** @gl-21.FramebufferTexture3D, i64 0
	%216 = bitcast void (i32, i32, i32, i32, i32, i32)** %215 to %..rawptr
	call void %214(%..rawptr %216, %..string {i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__str$26b, i64 0, i32 0), i64 23}, %Context* noalias nonnull %__.context_ptr)
	%217 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%218 = getelementptr inbounds void (i32, i32, i32, i32)*, void (i32, i32, i32, i32)** @gl-21.FramebufferRenderbuffer, i64 0
	%219 = bitcast void (i32, i32, i32, i32)** %218 to %..rawptr
	call void %217(%..rawptr %219, %..string {i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__str$26c, i64 0, i32 0), i64 26}, %Context* noalias nonnull %__.context_ptr)
	%220 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%221 = getelementptr inbounds void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)** @gl-21.GetFramebufferAttachmentParameteriv, i64 0
	%222 = bitcast void (i32, i32, i32, i32*)** %221 to %..rawptr
	call void %220(%..rawptr %222, %..string {i8* getelementptr inbounds ([39 x i8], [39 x i8]* @__str$26d, i64 0, i32 0), i64 38}, %Context* noalias nonnull %__.context_ptr)
	%223 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%224 = getelementptr inbounds void (i32)*, void (i32)** @gl-21.GenerateMipmap, i64 0
	%225 = bitcast void (i32)** %224 to %..rawptr
	call void %223(%..rawptr %225, %..string {i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__str$26e, i64 0, i32 0), i64 17}, %Context* noalias nonnull %__.context_ptr)
	%226 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%227 = getelementptr inbounds void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)** @gl-21.BlitFramebuffer, i64 0
	%228 = bitcast void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)** %227 to %..rawptr
	call void %226(%..rawptr %228, %..string {i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__str$26f, i64 0, i32 0), i64 18}, %Context* noalias nonnull %__.context_ptr)
	%229 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%230 = getelementptr inbounds void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)** @gl-21.RenderbufferStorageMultisample, i64 0
	%231 = bitcast void (i32, i32, i32, i32, i32)** %230 to %..rawptr
	call void %229(%..rawptr %231, %..string {i8* getelementptr inbounds ([34 x i8], [34 x i8]* @__str$270, i64 0, i32 0), i64 33}, %Context* noalias nonnull %__.context_ptr)
	%232 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%233 = getelementptr inbounds void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)** @gl-21.FramebufferTextureLayer, i64 0
	%234 = bitcast void (i32, i32, i32, i32, i32)** %233 to %..rawptr
	call void %232(%..rawptr %234, %..string {i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__str$271, i64 0, i32 0), i64 26}, %Context* noalias nonnull %__.context_ptr)
	%235 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%236 = getelementptr inbounds %..rawptr (i32, i64, i64, i32)*, %..rawptr (i32, i64, i64, i32)** @gl-21.MapBufferRange, i64 0
	%237 = bitcast %..rawptr (i32, i64, i64, i32)** %236 to %..rawptr
	call void %235(%..rawptr %237, %..string {i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__str$272, i64 0, i32 0), i64 17}, %Context* noalias nonnull %__.context_ptr)
	%238 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%239 = getelementptr inbounds void (i32, i64, i64)*, void (i32, i64, i64)** @gl-21.FlushMappedBufferRange, i64 0
	%240 = bitcast void (i32, i64, i64)** %239 to %..rawptr
	call void %238(%..rawptr %240, %..string {i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__str$273, i64 0, i32 0), i64 25}, %Context* noalias nonnull %__.context_ptr)
	%241 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%242 = getelementptr inbounds void (i32)*, void (i32)** @gl-21.BindVertexArray, i64 0
	%243 = bitcast void (i32)** %242 to %..rawptr
	call void %241(%..rawptr %243, %..string {i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__str$274, i64 0, i32 0), i64 18}, %Context* noalias nonnull %__.context_ptr)
	%244 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%245 = getelementptr inbounds void (i32, i32*)*, void (i32, i32*)** @gl-21.DeleteVertexArrays, i64 0
	%246 = bitcast void (i32, i32*)** %245 to %..rawptr
	call void %244(%..rawptr %246, %..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$275, i64 0, i32 0), i64 21}, %Context* noalias nonnull %__.context_ptr)
	%247 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%248 = getelementptr inbounds void (i32, i32*)*, void (i32, i32*)** @gl-21.GenVertexArrays, i64 0
	%249 = bitcast void (i32, i32*)** %248 to %..rawptr
	call void %247(%..rawptr %249, %..string {i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__str$276, i64 0, i32 0), i64 18}, %Context* noalias nonnull %__.context_ptr)
	%250 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%251 = getelementptr inbounds i8 (i32)*, i8 (i32)** @gl-21.IsVertexArray, i64 0
	%252 = bitcast i8 (i32)** %251 to %..rawptr
	call void %250(%..rawptr %252, %..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$277, i64 0, i32 0), i64 16}, %Context* noalias nonnull %__.context_ptr)
	ret void
}

define void @gl-21.load_3_1(void (%..rawptr, %..string, %Context*)* %set_proc_address, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca void (%..rawptr, %..string, %Context*)*, align 8
		store void (%..rawptr, %..string, %Context*)* %set_proc_address, void (%..rawptr, %..string, %Context*)** %0
	%1 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%2 = getelementptr inbounds void (i32, i32, i32, i32)*, void (i32, i32, i32, i32)** @gl-21.DrawArraysInstanced, i64 0
	%3 = bitcast void (i32, i32, i32, i32)** %2 to %..rawptr
	call void %1(%..rawptr %3, %..string {i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__str$278, i64 0, i32 0), i64 22}, %Context* noalias nonnull %__.context_ptr)
	%4 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%5 = getelementptr inbounds void (i32, i32, i32, %..rawptr, i32)*, void (i32, i32, i32, %..rawptr, i32)** @gl-21.DrawElementsInstanced, i64 0
	%6 = bitcast void (i32, i32, i32, %..rawptr, i32)** %5 to %..rawptr
	call void %4(%..rawptr %6, %..string {i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__str$279, i64 0, i32 0), i64 24}, %Context* noalias nonnull %__.context_ptr)
	%7 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%8 = getelementptr inbounds void (i32, i32, i32)*, void (i32, i32, i32)** @gl-21.TexBuffer, i64 0
	%9 = bitcast void (i32, i32, i32)** %8 to %..rawptr
	call void %7(%..rawptr %9, %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$27a, i64 0, i32 0), i64 12}, %Context* noalias nonnull %__.context_ptr)
	%10 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%11 = getelementptr inbounds void (i32)*, void (i32)** @gl-21.PrimitiveRestartIndex, i64 0
	%12 = bitcast void (i32)** %11 to %..rawptr
	call void %10(%..rawptr %12, %..string {i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__str$27b, i64 0, i32 0), i64 24}, %Context* noalias nonnull %__.context_ptr)
	%13 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%14 = getelementptr inbounds void (i32, i32, i64, i64, i64)*, void (i32, i32, i64, i64, i64)** @gl-21.CopyBufferSubData, i64 0
	%15 = bitcast void (i32, i32, i64, i64, i64)** %14 to %..rawptr
	call void %13(%..rawptr %15, %..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$27c, i64 0, i32 0), i64 20}, %Context* noalias nonnull %__.context_ptr)
	%16 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%17 = getelementptr inbounds void (i32, i32, i8*, i32*)*, void (i32, i32, i8*, i32*)** @gl-21.GetUniformIndices, i64 0
	%18 = bitcast void (i32, i32, i8*, i32*)** %17 to %..rawptr
	call void %16(%..rawptr %18, %..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$27d, i64 0, i32 0), i64 20}, %Context* noalias nonnull %__.context_ptr)
	%19 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%20 = getelementptr inbounds void (i32, i32, i32*, i32, i32*)*, void (i32, i32, i32*, i32, i32*)** @gl-21.GetActiveUniformsiv, i64 0
	%21 = bitcast void (i32, i32, i32*, i32, i32*)** %20 to %..rawptr
	call void %19(%..rawptr %21, %..string {i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__str$27e, i64 0, i32 0), i64 22}, %Context* noalias nonnull %__.context_ptr)
	%22 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%23 = getelementptr inbounds void (i32, i32, i32, i32*, i8*)*, void (i32, i32, i32, i32*, i8*)** @gl-21.GetActiveUniformName, i64 0
	%24 = bitcast void (i32, i32, i32, i32*, i8*)** %23 to %..rawptr
	call void %22(%..rawptr %24, %..string {i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__str$27f, i64 0, i32 0), i64 23}, %Context* noalias nonnull %__.context_ptr)
	%25 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%26 = getelementptr inbounds i32 (i32, i8*)*, i32 (i32, i8*)** @gl-21.GetUniformBlockIndex, i64 0
	%27 = bitcast i32 (i32, i8*)** %26 to %..rawptr
	call void %25(%..rawptr %27, %..string {i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__str$280, i64 0, i32 0), i64 23}, %Context* noalias nonnull %__.context_ptr)
	%28 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%29 = getelementptr inbounds void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)** @gl-21.GetActiveUniformBlockiv, i64 0
	%30 = bitcast void (i32, i32, i32, i32*)** %29 to %..rawptr
	call void %28(%..rawptr %30, %..string {i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__str$281, i64 0, i32 0), i64 26}, %Context* noalias nonnull %__.context_ptr)
	%31 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%32 = getelementptr inbounds void (i32, i32, i32, i32*, i8*)*, void (i32, i32, i32, i32*, i8*)** @gl-21.GetActiveUniformBlockName, i64 0
	%33 = bitcast void (i32, i32, i32, i32*, i8*)** %32 to %..rawptr
	call void %31(%..rawptr %33, %..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$282, i64 0, i32 0), i64 28}, %Context* noalias nonnull %__.context_ptr)
	%34 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%35 = getelementptr inbounds void (i32, i32, i32)*, void (i32, i32, i32)** @gl-21.UniformBlockBinding, i64 0
	%36 = bitcast void (i32, i32, i32)** %35 to %..rawptr
	call void %34(%..rawptr %36, %..string {i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__str$283, i64 0, i32 0), i64 22}, %Context* noalias nonnull %__.context_ptr)
	ret void
}

define void @gl-21.load_3_2(void (%..rawptr, %..string, %Context*)* %set_proc_address, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca void (%..rawptr, %..string, %Context*)*, align 8
		store void (%..rawptr, %..string, %Context*)* %set_proc_address, void (%..rawptr, %..string, %Context*)** %0
	%1 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%2 = getelementptr inbounds void (i32, i32, i32, %..rawptr, i32)*, void (i32, i32, i32, %..rawptr, i32)** @gl-21.DrawElementsBaseVertex, i64 0
	%3 = bitcast void (i32, i32, i32, %..rawptr, i32)** %2 to %..rawptr
	call void %1(%..rawptr %3, %..string {i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__str$284, i64 0, i32 0), i64 25}, %Context* noalias nonnull %__.context_ptr)
	%4 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%5 = getelementptr inbounds void (i32, i32, i32, i32, i32, %..rawptr, i32)*, void (i32, i32, i32, i32, i32, %..rawptr, i32)** @gl-21.DrawRangeElementsBaseVertex, i64 0
	%6 = bitcast void (i32, i32, i32, i32, i32, %..rawptr, i32)** %5 to %..rawptr
	call void %4(%..rawptr %6, %..string {i8* getelementptr inbounds ([31 x i8], [31 x i8]* @__str$285, i64 0, i32 0), i64 30}, %Context* noalias nonnull %__.context_ptr)
	%7 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%8 = getelementptr inbounds void (i32, i32, i32, %..rawptr, i32, i32)*, void (i32, i32, i32, %..rawptr, i32, i32)** @gl-21.DrawElementsInstancedBaseVertex, i64 0
	%9 = bitcast void (i32, i32, i32, %..rawptr, i32, i32)** %8 to %..rawptr
	call void %7(%..rawptr %9, %..string {i8* getelementptr inbounds ([35 x i8], [35 x i8]* @__str$286, i64 0, i32 0), i64 34}, %Context* noalias nonnull %__.context_ptr)
	%10 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%11 = getelementptr inbounds void (i32, i32*, i32, %..rawptr*, i32, i32*)*, void (i32, i32*, i32, %..rawptr*, i32, i32*)** @gl-21.MultiDrawElementsBaseVertex, i64 0
	%12 = bitcast void (i32, i32*, i32, %..rawptr*, i32, i32*)** %11 to %..rawptr
	call void %10(%..rawptr %12, %..string {i8* getelementptr inbounds ([31 x i8], [31 x i8]* @__str$287, i64 0, i32 0), i64 30}, %Context* noalias nonnull %__.context_ptr)
	%13 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%14 = getelementptr inbounds void (i32)*, void (i32)** @gl-21.ProvokingVertex, i64 0
	%15 = bitcast void (i32)** %14 to %..rawptr
	call void %13(%..rawptr %15, %..string {i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__str$288, i64 0, i32 0), i64 18}, %Context* noalias nonnull %__.context_ptr)
	%16 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%17 = getelementptr inbounds %..rawptr (i32, i32)*, %..rawptr (i32, i32)** @gl-21.FenceSync, i64 0
	%18 = bitcast %..rawptr (i32, i32)** %17 to %..rawptr
	call void %16(%..rawptr %18, %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$289, i64 0, i32 0), i64 12}, %Context* noalias nonnull %__.context_ptr)
	%19 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%20 = getelementptr inbounds i8 (%..rawptr)*, i8 (%..rawptr)** @gl-21.IsSync, i64 0
	%21 = bitcast i8 (%..rawptr)** %20 to %..rawptr
	call void %19(%..rawptr %21, %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$28a, i64 0, i32 0), i64 9}, %Context* noalias nonnull %__.context_ptr)
	%22 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%23 = getelementptr inbounds void (%..rawptr)*, void (%..rawptr)** @gl-21.DeleteSync, i64 0
	%24 = bitcast void (%..rawptr)** %23 to %..rawptr
	call void %22(%..rawptr %24, %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$28b, i64 0, i32 0), i64 13}, %Context* noalias nonnull %__.context_ptr)
	%25 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%26 = getelementptr inbounds i32 (%..rawptr, i32, i64)*, i32 (%..rawptr, i32, i64)** @gl-21.ClientWaitSync, i64 0
	%27 = bitcast i32 (%..rawptr, i32, i64)** %26 to %..rawptr
	call void %25(%..rawptr %27, %..string {i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__str$28c, i64 0, i32 0), i64 17}, %Context* noalias nonnull %__.context_ptr)
	%28 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%29 = getelementptr inbounds void (%..rawptr, i32, i64)*, void (%..rawptr, i32, i64)** @gl-21.WaitSync, i64 0
	%30 = bitcast void (%..rawptr, i32, i64)** %29 to %..rawptr
	call void %28(%..rawptr %30, %..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$28d, i64 0, i32 0), i64 11}, %Context* noalias nonnull %__.context_ptr)
	%31 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%32 = getelementptr inbounds void (i32, i64*)*, void (i32, i64*)** @gl-21.GetInteger64v, i64 0
	%33 = bitcast void (i32, i64*)** %32 to %..rawptr
	call void %31(%..rawptr %33, %..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$28e, i64 0, i32 0), i64 16}, %Context* noalias nonnull %__.context_ptr)
	%34 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%35 = getelementptr inbounds void (%..rawptr, i32, i32, i32*, i32*)*, void (%..rawptr, i32, i32, i32*, i32*)** @gl-21.GetSynciv, i64 0
	%36 = bitcast void (%..rawptr, i32, i32, i32*, i32*)** %35 to %..rawptr
	call void %34(%..rawptr %36, %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$28f, i64 0, i32 0), i64 12}, %Context* noalias nonnull %__.context_ptr)
	%37 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%38 = getelementptr inbounds void (i32, i32, i64*)*, void (i32, i32, i64*)** @gl-21.GetInteger64i_v, i64 0
	%39 = bitcast void (i32, i32, i64*)** %38 to %..rawptr
	call void %37(%..rawptr %39, %..string {i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__str$290, i64 0, i32 0), i64 18}, %Context* noalias nonnull %__.context_ptr)
	%40 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%41 = getelementptr inbounds void (i32, i32, i64*)*, void (i32, i32, i64*)** @gl-21.GetBufferParameteri64v, i64 0
	%42 = bitcast void (i32, i32, i64*)** %41 to %..rawptr
	call void %40(%..rawptr %42, %..string {i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__str$291, i64 0, i32 0), i64 25}, %Context* noalias nonnull %__.context_ptr)
	%43 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%44 = getelementptr inbounds void (i32, i32, i32, i32)*, void (i32, i32, i32, i32)** @gl-21.FramebufferTexture, i64 0
	%45 = bitcast void (i32, i32, i32, i32)** %44 to %..rawptr
	call void %43(%..rawptr %45, %..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$292, i64 0, i32 0), i64 21}, %Context* noalias nonnull %__.context_ptr)
	%46 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%47 = getelementptr inbounds void (i32, i32, i32, i32, i32, i8)*, void (i32, i32, i32, i32, i32, i8)** @gl-21.TexImage2DMultisample, i64 0
	%48 = bitcast void (i32, i32, i32, i32, i32, i8)** %47 to %..rawptr
	call void %46(%..rawptr %48, %..string {i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__str$293, i64 0, i32 0), i64 24}, %Context* noalias nonnull %__.context_ptr)
	%49 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%50 = getelementptr inbounds void (i32, i32, i32, i32, i32, i32, i8)*, void (i32, i32, i32, i32, i32, i32, i8)** @gl-21.TexImage3DMultisample, i64 0
	%51 = bitcast void (i32, i32, i32, i32, i32, i32, i8)** %50 to %..rawptr
	call void %49(%..rawptr %51, %..string {i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__str$294, i64 0, i32 0), i64 24}, %Context* noalias nonnull %__.context_ptr)
	%52 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%53 = getelementptr inbounds void (i32, i32, float*)*, void (i32, i32, float*)** @gl-21.GetMultisamplefv, i64 0
	%54 = bitcast void (i32, i32, float*)** %53 to %..rawptr
	call void %52(%..rawptr %54, %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$295, i64 0, i32 0), i64 19}, %Context* noalias nonnull %__.context_ptr)
	%55 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%56 = getelementptr inbounds void (i32, i32)*, void (i32, i32)** @gl-21.SampleMaski, i64 0
	%57 = bitcast void (i32, i32)** %56 to %..rawptr
	call void %55(%..rawptr %57, %..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$296, i64 0, i32 0), i64 14}, %Context* noalias nonnull %__.context_ptr)
	ret void
}

define void @gl-21.load_3_3(void (%..rawptr, %..string, %Context*)* %set_proc_address, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca void (%..rawptr, %..string, %Context*)*, align 8
		store void (%..rawptr, %..string, %Context*)* %set_proc_address, void (%..rawptr, %..string, %Context*)** %0
	%1 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%2 = getelementptr inbounds void (i32, i32, i32, i8*)*, void (i32, i32, i32, i8*)** @gl-21.BindFragDataLocationIndexed, i64 0
	%3 = bitcast void (i32, i32, i32, i8*)** %2 to %..rawptr
	call void %1(%..rawptr %3, %..string {i8* getelementptr inbounds ([31 x i8], [31 x i8]* @__str$297, i64 0, i32 0), i64 30}, %Context* noalias nonnull %__.context_ptr)
	%4 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%5 = getelementptr inbounds i32 (i32, i8*)*, i32 (i32, i8*)** @gl-21.GetFragDataIndex, i64 0
	%6 = bitcast i32 (i32, i8*)** %5 to %..rawptr
	call void %4(%..rawptr %6, %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$298, i64 0, i32 0), i64 19}, %Context* noalias nonnull %__.context_ptr)
	%7 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%8 = getelementptr inbounds void (i32, i32*)*, void (i32, i32*)** @gl-21.GenSamplers, i64 0
	%9 = bitcast void (i32, i32*)** %8 to %..rawptr
	call void %7(%..rawptr %9, %..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$299, i64 0, i32 0), i64 14}, %Context* noalias nonnull %__.context_ptr)
	%10 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%11 = getelementptr inbounds void (i32, i32*)*, void (i32, i32*)** @gl-21.DeleteSamplers, i64 0
	%12 = bitcast void (i32, i32*)** %11 to %..rawptr
	call void %10(%..rawptr %12, %..string {i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__str$29a, i64 0, i32 0), i64 17}, %Context* noalias nonnull %__.context_ptr)
	%13 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%14 = getelementptr inbounds i8 (i32)*, i8 (i32)** @gl-21.IsSampler, i64 0
	%15 = bitcast i8 (i32)** %14 to %..rawptr
	call void %13(%..rawptr %15, %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$29b, i64 0, i32 0), i64 12}, %Context* noalias nonnull %__.context_ptr)
	%16 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%17 = getelementptr inbounds void (i32, i32)*, void (i32, i32)** @gl-21.BindSampler, i64 0
	%18 = bitcast void (i32, i32)** %17 to %..rawptr
	call void %16(%..rawptr %18, %..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$29c, i64 0, i32 0), i64 14}, %Context* noalias nonnull %__.context_ptr)
	%19 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%20 = getelementptr inbounds void (i32, i32, i32)*, void (i32, i32, i32)** @gl-21.SamplerParameteri, i64 0
	%21 = bitcast void (i32, i32, i32)** %20 to %..rawptr
	call void %19(%..rawptr %21, %..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$29d, i64 0, i32 0), i64 20}, %Context* noalias nonnull %__.context_ptr)
	%22 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%23 = getelementptr inbounds void (i32, i32, i32*)*, void (i32, i32, i32*)** @gl-21.SamplerParameteriv, i64 0
	%24 = bitcast void (i32, i32, i32*)** %23 to %..rawptr
	call void %22(%..rawptr %24, %..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$29e, i64 0, i32 0), i64 21}, %Context* noalias nonnull %__.context_ptr)
	%25 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%26 = getelementptr inbounds void (i32, i32, float)*, void (i32, i32, float)** @gl-21.SamplerParameterf, i64 0
	%27 = bitcast void (i32, i32, float)** %26 to %..rawptr
	call void %25(%..rawptr %27, %..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$29f, i64 0, i32 0), i64 20}, %Context* noalias nonnull %__.context_ptr)
	%28 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%29 = getelementptr inbounds void (i32, i32, float*)*, void (i32, i32, float*)** @gl-21.SamplerParameterfv, i64 0
	%30 = bitcast void (i32, i32, float*)** %29 to %..rawptr
	call void %28(%..rawptr %30, %..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$2a0, i64 0, i32 0), i64 21}, %Context* noalias nonnull %__.context_ptr)
	%31 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%32 = getelementptr inbounds void (i32, i32, i32*)*, void (i32, i32, i32*)** @gl-21.SamplerParameterIiv, i64 0
	%33 = bitcast void (i32, i32, i32*)** %32 to %..rawptr
	call void %31(%..rawptr %33, %..string {i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__str$2a1, i64 0, i32 0), i64 22}, %Context* noalias nonnull %__.context_ptr)
	%34 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%35 = getelementptr inbounds void (i32, i32, i32*)*, void (i32, i32, i32*)** @gl-21.SamplerParameterIuiv, i64 0
	%36 = bitcast void (i32, i32, i32*)** %35 to %..rawptr
	call void %34(%..rawptr %36, %..string {i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__str$2a2, i64 0, i32 0), i64 23}, %Context* noalias nonnull %__.context_ptr)
	%37 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%38 = getelementptr inbounds void (i32, i32, i32*)*, void (i32, i32, i32*)** @gl-21.GetSamplerParameteriv, i64 0
	%39 = bitcast void (i32, i32, i32*)** %38 to %..rawptr
	call void %37(%..rawptr %39, %..string {i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__str$2a3, i64 0, i32 0), i64 24}, %Context* noalias nonnull %__.context_ptr)
	%40 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%41 = getelementptr inbounds void (i32, i32, i32*)*, void (i32, i32, i32*)** @gl-21.GetSamplerParameterIiv, i64 0
	%42 = bitcast void (i32, i32, i32*)** %41 to %..rawptr
	call void %40(%..rawptr %42, %..string {i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__str$2a4, i64 0, i32 0), i64 25}, %Context* noalias nonnull %__.context_ptr)
	%43 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%44 = getelementptr inbounds void (i32, i32, float*)*, void (i32, i32, float*)** @gl-21.GetSamplerParameterfv, i64 0
	%45 = bitcast void (i32, i32, float*)** %44 to %..rawptr
	call void %43(%..rawptr %45, %..string {i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__str$2a5, i64 0, i32 0), i64 24}, %Context* noalias nonnull %__.context_ptr)
	%46 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%47 = getelementptr inbounds void (i32, i32, i32*)*, void (i32, i32, i32*)** @gl-21.GetSamplerParameterIuiv, i64 0
	%48 = bitcast void (i32, i32, i32*)** %47 to %..rawptr
	call void %46(%..rawptr %48, %..string {i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__str$2a6, i64 0, i32 0), i64 26}, %Context* noalias nonnull %__.context_ptr)
	%49 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%50 = getelementptr inbounds void (i32, i32)*, void (i32, i32)** @gl-21.QueryCounter, i64 0
	%51 = bitcast void (i32, i32)** %50 to %..rawptr
	call void %49(%..rawptr %51, %..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$2a7, i64 0, i32 0), i64 15}, %Context* noalias nonnull %__.context_ptr)
	%52 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%53 = getelementptr inbounds void (i32, i32, i64*)*, void (i32, i32, i64*)** @gl-21.GetQueryObjecti64v, i64 0
	%54 = bitcast void (i32, i32, i64*)** %53 to %..rawptr
	call void %52(%..rawptr %54, %..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$2a8, i64 0, i32 0), i64 21}, %Context* noalias nonnull %__.context_ptr)
	%55 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%56 = getelementptr inbounds void (i32, i32, i64*)*, void (i32, i32, i64*)** @gl-21.GetQueryObjectui64v, i64 0
	%57 = bitcast void (i32, i32, i64*)** %56 to %..rawptr
	call void %55(%..rawptr %57, %..string {i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__str$2a9, i64 0, i32 0), i64 22}, %Context* noalias nonnull %__.context_ptr)
	%58 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%59 = getelementptr inbounds void (i32, i32)*, void (i32, i32)** @gl-21.VertexAttribDivisor, i64 0
	%60 = bitcast void (i32, i32)** %59 to %..rawptr
	call void %58(%..rawptr %60, %..string {i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__str$2aa, i64 0, i32 0), i64 22}, %Context* noalias nonnull %__.context_ptr)
	%61 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%62 = getelementptr inbounds void (i32, i32, i8, i32)*, void (i32, i32, i8, i32)** @gl-21.VertexAttribP1ui, i64 0
	%63 = bitcast void (i32, i32, i8, i32)** %62 to %..rawptr
	call void %61(%..rawptr %63, %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$2ab, i64 0, i32 0), i64 19}, %Context* noalias nonnull %__.context_ptr)
	%64 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%65 = getelementptr inbounds void (i32, i32, i8, i32*)*, void (i32, i32, i8, i32*)** @gl-21.VertexAttribP1uiv, i64 0
	%66 = bitcast void (i32, i32, i8, i32*)** %65 to %..rawptr
	call void %64(%..rawptr %66, %..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$2ac, i64 0, i32 0), i64 20}, %Context* noalias nonnull %__.context_ptr)
	%67 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%68 = getelementptr inbounds void (i32, i32, i8, i32)*, void (i32, i32, i8, i32)** @gl-21.VertexAttribP2ui, i64 0
	%69 = bitcast void (i32, i32, i8, i32)** %68 to %..rawptr
	call void %67(%..rawptr %69, %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$2ad, i64 0, i32 0), i64 19}, %Context* noalias nonnull %__.context_ptr)
	%70 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%71 = getelementptr inbounds void (i32, i32, i8, i32*)*, void (i32, i32, i8, i32*)** @gl-21.VertexAttribP2uiv, i64 0
	%72 = bitcast void (i32, i32, i8, i32*)** %71 to %..rawptr
	call void %70(%..rawptr %72, %..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$2ae, i64 0, i32 0), i64 20}, %Context* noalias nonnull %__.context_ptr)
	%73 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%74 = getelementptr inbounds void (i32, i32, i8, i32)*, void (i32, i32, i8, i32)** @gl-21.VertexAttribP3ui, i64 0
	%75 = bitcast void (i32, i32, i8, i32)** %74 to %..rawptr
	call void %73(%..rawptr %75, %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$2af, i64 0, i32 0), i64 19}, %Context* noalias nonnull %__.context_ptr)
	%76 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%77 = getelementptr inbounds void (i32, i32, i8, i32*)*, void (i32, i32, i8, i32*)** @gl-21.VertexAttribP3uiv, i64 0
	%78 = bitcast void (i32, i32, i8, i32*)** %77 to %..rawptr
	call void %76(%..rawptr %78, %..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$2b0, i64 0, i32 0), i64 20}, %Context* noalias nonnull %__.context_ptr)
	%79 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%80 = getelementptr inbounds void (i32, i32, i8, i32)*, void (i32, i32, i8, i32)** @gl-21.VertexAttribP4ui, i64 0
	%81 = bitcast void (i32, i32, i8, i32)** %80 to %..rawptr
	call void %79(%..rawptr %81, %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$2b1, i64 0, i32 0), i64 19}, %Context* noalias nonnull %__.context_ptr)
	%82 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%83 = getelementptr inbounds void (i32, i32, i8, i32*)*, void (i32, i32, i8, i32*)** @gl-21.VertexAttribP4uiv, i64 0
	%84 = bitcast void (i32, i32, i8, i32*)** %83 to %..rawptr
	call void %82(%..rawptr %84, %..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$2b2, i64 0, i32 0), i64 20}, %Context* noalias nonnull %__.context_ptr)
	%85 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%86 = getelementptr inbounds void (i32, i32)*, void (i32, i32)** @gl-21.VertexP2ui, i64 0
	%87 = bitcast void (i32, i32)** %86 to %..rawptr
	call void %85(%..rawptr %87, %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$2b3, i64 0, i32 0), i64 13}, %Context* noalias nonnull %__.context_ptr)
	%88 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%89 = getelementptr inbounds void (i32, i32*)*, void (i32, i32*)** @gl-21.VertexP2uiv, i64 0
	%90 = bitcast void (i32, i32*)** %89 to %..rawptr
	call void %88(%..rawptr %90, %..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$2b4, i64 0, i32 0), i64 14}, %Context* noalias nonnull %__.context_ptr)
	%91 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%92 = getelementptr inbounds void (i32, i32)*, void (i32, i32)** @gl-21.VertexP3ui, i64 0
	%93 = bitcast void (i32, i32)** %92 to %..rawptr
	call void %91(%..rawptr %93, %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$2b5, i64 0, i32 0), i64 13}, %Context* noalias nonnull %__.context_ptr)
	%94 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%95 = getelementptr inbounds void (i32, i32*)*, void (i32, i32*)** @gl-21.VertexP3uiv, i64 0
	%96 = bitcast void (i32, i32*)** %95 to %..rawptr
	call void %94(%..rawptr %96, %..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$2b6, i64 0, i32 0), i64 14}, %Context* noalias nonnull %__.context_ptr)
	%97 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%98 = getelementptr inbounds void (i32, i32)*, void (i32, i32)** @gl-21.VertexP4ui, i64 0
	%99 = bitcast void (i32, i32)** %98 to %..rawptr
	call void %97(%..rawptr %99, %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$2b7, i64 0, i32 0), i64 13}, %Context* noalias nonnull %__.context_ptr)
	%100 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%101 = getelementptr inbounds void (i32, i32*)*, void (i32, i32*)** @gl-21.VertexP4uiv, i64 0
	%102 = bitcast void (i32, i32*)** %101 to %..rawptr
	call void %100(%..rawptr %102, %..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$2b8, i64 0, i32 0), i64 14}, %Context* noalias nonnull %__.context_ptr)
	%103 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%104 = getelementptr inbounds void (i32, i32)*, void (i32, i32)** @gl-21.TexCoordP1ui, i64 0
	%105 = bitcast void (i32, i32)** %104 to %..rawptr
	call void %103(%..rawptr %105, %..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$2b9, i64 0, i32 0), i64 15}, %Context* noalias nonnull %__.context_ptr)
	%106 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%107 = getelementptr inbounds void (i32, i32*)*, void (i32, i32*)** @gl-21.TexCoordP1uiv, i64 0
	%108 = bitcast void (i32, i32*)** %107 to %..rawptr
	call void %106(%..rawptr %108, %..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$2ba, i64 0, i32 0), i64 16}, %Context* noalias nonnull %__.context_ptr)
	%109 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%110 = getelementptr inbounds void (i32, i32)*, void (i32, i32)** @gl-21.TexCoordP2ui, i64 0
	%111 = bitcast void (i32, i32)** %110 to %..rawptr
	call void %109(%..rawptr %111, %..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$2bb, i64 0, i32 0), i64 15}, %Context* noalias nonnull %__.context_ptr)
	%112 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%113 = getelementptr inbounds void (i32, i32*)*, void (i32, i32*)** @gl-21.TexCoordP2uiv, i64 0
	%114 = bitcast void (i32, i32*)** %113 to %..rawptr
	call void %112(%..rawptr %114, %..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$2bc, i64 0, i32 0), i64 16}, %Context* noalias nonnull %__.context_ptr)
	%115 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%116 = getelementptr inbounds void (i32, i32)*, void (i32, i32)** @gl-21.TexCoordP3ui, i64 0
	%117 = bitcast void (i32, i32)** %116 to %..rawptr
	call void %115(%..rawptr %117, %..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$2bd, i64 0, i32 0), i64 15}, %Context* noalias nonnull %__.context_ptr)
	%118 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%119 = getelementptr inbounds void (i32, i32*)*, void (i32, i32*)** @gl-21.TexCoordP3uiv, i64 0
	%120 = bitcast void (i32, i32*)** %119 to %..rawptr
	call void %118(%..rawptr %120, %..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$2be, i64 0, i32 0), i64 16}, %Context* noalias nonnull %__.context_ptr)
	%121 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%122 = getelementptr inbounds void (i32, i32)*, void (i32, i32)** @gl-21.TexCoordP4ui, i64 0
	%123 = bitcast void (i32, i32)** %122 to %..rawptr
	call void %121(%..rawptr %123, %..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$2bf, i64 0, i32 0), i64 15}, %Context* noalias nonnull %__.context_ptr)
	%124 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%125 = getelementptr inbounds void (i32, i32*)*, void (i32, i32*)** @gl-21.TexCoordP4uiv, i64 0
	%126 = bitcast void (i32, i32*)** %125 to %..rawptr
	call void %124(%..rawptr %126, %..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$2c0, i64 0, i32 0), i64 16}, %Context* noalias nonnull %__.context_ptr)
	%127 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%128 = getelementptr inbounds void (i32, i32, i32)*, void (i32, i32, i32)** @gl-21.MultiTexCoordP1ui, i64 0
	%129 = bitcast void (i32, i32, i32)** %128 to %..rawptr
	call void %127(%..rawptr %129, %..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$2c1, i64 0, i32 0), i64 20}, %Context* noalias nonnull %__.context_ptr)
	%130 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%131 = getelementptr inbounds void (i32, i32, i32*)*, void (i32, i32, i32*)** @gl-21.MultiTexCoordP1uiv, i64 0
	%132 = bitcast void (i32, i32, i32*)** %131 to %..rawptr
	call void %130(%..rawptr %132, %..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$2c2, i64 0, i32 0), i64 21}, %Context* noalias nonnull %__.context_ptr)
	%133 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%134 = getelementptr inbounds void (i32, i32, i32)*, void (i32, i32, i32)** @gl-21.MultiTexCoordP2ui, i64 0
	%135 = bitcast void (i32, i32, i32)** %134 to %..rawptr
	call void %133(%..rawptr %135, %..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$2c3, i64 0, i32 0), i64 20}, %Context* noalias nonnull %__.context_ptr)
	%136 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%137 = getelementptr inbounds void (i32, i32, i32*)*, void (i32, i32, i32*)** @gl-21.MultiTexCoordP2uiv, i64 0
	%138 = bitcast void (i32, i32, i32*)** %137 to %..rawptr
	call void %136(%..rawptr %138, %..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$2c4, i64 0, i32 0), i64 21}, %Context* noalias nonnull %__.context_ptr)
	%139 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%140 = getelementptr inbounds void (i32, i32, i32)*, void (i32, i32, i32)** @gl-21.MultiTexCoordP3ui, i64 0
	%141 = bitcast void (i32, i32, i32)** %140 to %..rawptr
	call void %139(%..rawptr %141, %..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$2c5, i64 0, i32 0), i64 20}, %Context* noalias nonnull %__.context_ptr)
	%142 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%143 = getelementptr inbounds void (i32, i32, i32*)*, void (i32, i32, i32*)** @gl-21.MultiTexCoordP3uiv, i64 0
	%144 = bitcast void (i32, i32, i32*)** %143 to %..rawptr
	call void %142(%..rawptr %144, %..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$2c6, i64 0, i32 0), i64 21}, %Context* noalias nonnull %__.context_ptr)
	%145 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%146 = getelementptr inbounds void (i32, i32, i32)*, void (i32, i32, i32)** @gl-21.MultiTexCoordP4ui, i64 0
	%147 = bitcast void (i32, i32, i32)** %146 to %..rawptr
	call void %145(%..rawptr %147, %..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$2c7, i64 0, i32 0), i64 20}, %Context* noalias nonnull %__.context_ptr)
	%148 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%149 = getelementptr inbounds void (i32, i32, i32*)*, void (i32, i32, i32*)** @gl-21.MultiTexCoordP4uiv, i64 0
	%150 = bitcast void (i32, i32, i32*)** %149 to %..rawptr
	call void %148(%..rawptr %150, %..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$2c8, i64 0, i32 0), i64 21}, %Context* noalias nonnull %__.context_ptr)
	%151 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%152 = getelementptr inbounds void (i32, i32)*, void (i32, i32)** @gl-21.NormalP3ui, i64 0
	%153 = bitcast void (i32, i32)** %152 to %..rawptr
	call void %151(%..rawptr %153, %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$2c9, i64 0, i32 0), i64 13}, %Context* noalias nonnull %__.context_ptr)
	%154 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%155 = getelementptr inbounds void (i32, i32*)*, void (i32, i32*)** @gl-21.NormalP3uiv, i64 0
	%156 = bitcast void (i32, i32*)** %155 to %..rawptr
	call void %154(%..rawptr %156, %..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$2ca, i64 0, i32 0), i64 14}, %Context* noalias nonnull %__.context_ptr)
	%157 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%158 = getelementptr inbounds void (i32, i32)*, void (i32, i32)** @gl-21.ColorP3ui, i64 0
	%159 = bitcast void (i32, i32)** %158 to %..rawptr
	call void %157(%..rawptr %159, %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$2cb, i64 0, i32 0), i64 12}, %Context* noalias nonnull %__.context_ptr)
	%160 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%161 = getelementptr inbounds void (i32, i32*)*, void (i32, i32*)** @gl-21.ColorP3uiv, i64 0
	%162 = bitcast void (i32, i32*)** %161 to %..rawptr
	call void %160(%..rawptr %162, %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$2cc, i64 0, i32 0), i64 13}, %Context* noalias nonnull %__.context_ptr)
	%163 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%164 = getelementptr inbounds void (i32, i32)*, void (i32, i32)** @gl-21.ColorP4ui, i64 0
	%165 = bitcast void (i32, i32)** %164 to %..rawptr
	call void %163(%..rawptr %165, %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$2cd, i64 0, i32 0), i64 12}, %Context* noalias nonnull %__.context_ptr)
	%166 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%167 = getelementptr inbounds void (i32, i32*)*, void (i32, i32*)** @gl-21.ColorP4uiv, i64 0
	%168 = bitcast void (i32, i32*)** %167 to %..rawptr
	call void %166(%..rawptr %168, %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$2ce, i64 0, i32 0), i64 13}, %Context* noalias nonnull %__.context_ptr)
	%169 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%170 = getelementptr inbounds void (i32, i32)*, void (i32, i32)** @gl-21.SecondaryColorP3ui, i64 0
	%171 = bitcast void (i32, i32)** %170 to %..rawptr
	call void %169(%..rawptr %171, %..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$2cf, i64 0, i32 0), i64 21}, %Context* noalias nonnull %__.context_ptr)
	%172 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%173 = getelementptr inbounds void (i32, i32*)*, void (i32, i32*)** @gl-21.SecondaryColorP3uiv, i64 0
	%174 = bitcast void (i32, i32*)** %173 to %..rawptr
	call void %172(%..rawptr %174, %..string {i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__str$2d0, i64 0, i32 0), i64 22}, %Context* noalias nonnull %__.context_ptr)
	ret void
}

define void @gl-21.load_4_0(void (%..rawptr, %..string, %Context*)* %set_proc_address, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca void (%..rawptr, %..string, %Context*)*, align 8
		store void (%..rawptr, %..string, %Context*)* %set_proc_address, void (%..rawptr, %..string, %Context*)** %0
	%1 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%2 = getelementptr inbounds void (float)*, void (float)** @gl-21.MinSampleShading, i64 0
	%3 = bitcast void (float)** %2 to %..rawptr
	call void %1(%..rawptr %3, %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$2d1, i64 0, i32 0), i64 19}, %Context* noalias nonnull %__.context_ptr)
	%4 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%5 = getelementptr inbounds void (i32, i32)*, void (i32, i32)** @gl-21.BlendEquationi, i64 0
	%6 = bitcast void (i32, i32)** %5 to %..rawptr
	call void %4(%..rawptr %6, %..string {i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__str$2d2, i64 0, i32 0), i64 17}, %Context* noalias nonnull %__.context_ptr)
	%7 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%8 = getelementptr inbounds void (i32, i32, i32)*, void (i32, i32, i32)** @gl-21.BlendEquationSeparatei, i64 0
	%9 = bitcast void (i32, i32, i32)** %8 to %..rawptr
	call void %7(%..rawptr %9, %..string {i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__str$2d3, i64 0, i32 0), i64 25}, %Context* noalias nonnull %__.context_ptr)
	%10 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%11 = getelementptr inbounds void (i32, i32, i32)*, void (i32, i32, i32)** @gl-21.BlendFunci, i64 0
	%12 = bitcast void (i32, i32, i32)** %11 to %..rawptr
	call void %10(%..rawptr %12, %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$2d4, i64 0, i32 0), i64 13}, %Context* noalias nonnull %__.context_ptr)
	%13 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%14 = getelementptr inbounds void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)** @gl-21.BlendFuncSeparatei, i64 0
	%15 = bitcast void (i32, i32, i32, i32, i32)** %14 to %..rawptr
	call void %13(%..rawptr %15, %..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$2d5, i64 0, i32 0), i64 21}, %Context* noalias nonnull %__.context_ptr)
	%16 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%17 = getelementptr inbounds void (i32, %..rawptr)*, void (i32, %..rawptr)** @gl-21.DrawArraysIndirect, i64 0
	%18 = bitcast void (i32, %..rawptr)** %17 to %..rawptr
	call void %16(%..rawptr %18, %..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$2d6, i64 0, i32 0), i64 21}, %Context* noalias nonnull %__.context_ptr)
	%19 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%20 = getelementptr inbounds void (i32, i32, %..rawptr)*, void (i32, i32, %..rawptr)** @gl-21.DrawElementsIndirect, i64 0
	%21 = bitcast void (i32, i32, %..rawptr)** %20 to %..rawptr
	call void %19(%..rawptr %21, %..string {i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__str$2d7, i64 0, i32 0), i64 23}, %Context* noalias nonnull %__.context_ptr)
	%22 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%23 = getelementptr inbounds void (i32, double)*, void (i32, double)** @gl-21.Uniform1d, i64 0
	%24 = bitcast void (i32, double)** %23 to %..rawptr
	call void %22(%..rawptr %24, %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$2d8, i64 0, i32 0), i64 12}, %Context* noalias nonnull %__.context_ptr)
	%25 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%26 = getelementptr inbounds void (i32, double, double)*, void (i32, double, double)** @gl-21.Uniform2d, i64 0
	%27 = bitcast void (i32, double, double)** %26 to %..rawptr
	call void %25(%..rawptr %27, %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$2d9, i64 0, i32 0), i64 12}, %Context* noalias nonnull %__.context_ptr)
	%28 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%29 = getelementptr inbounds void (i32, double, double, double)*, void (i32, double, double, double)** @gl-21.Uniform3d, i64 0
	%30 = bitcast void (i32, double, double, double)** %29 to %..rawptr
	call void %28(%..rawptr %30, %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$2da, i64 0, i32 0), i64 12}, %Context* noalias nonnull %__.context_ptr)
	%31 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%32 = getelementptr inbounds void (i32, double, double, double, double)*, void (i32, double, double, double, double)** @gl-21.Uniform4d, i64 0
	%33 = bitcast void (i32, double, double, double, double)** %32 to %..rawptr
	call void %31(%..rawptr %33, %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$2db, i64 0, i32 0), i64 12}, %Context* noalias nonnull %__.context_ptr)
	%34 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%35 = getelementptr inbounds void (i32, i32, double*)*, void (i32, i32, double*)** @gl-21.Uniform1dv, i64 0
	%36 = bitcast void (i32, i32, double*)** %35 to %..rawptr
	call void %34(%..rawptr %36, %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$2dc, i64 0, i32 0), i64 13}, %Context* noalias nonnull %__.context_ptr)
	%37 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%38 = getelementptr inbounds void (i32, i32, double*)*, void (i32, i32, double*)** @gl-21.Uniform2dv, i64 0
	%39 = bitcast void (i32, i32, double*)** %38 to %..rawptr
	call void %37(%..rawptr %39, %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$2dd, i64 0, i32 0), i64 13}, %Context* noalias nonnull %__.context_ptr)
	%40 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%41 = getelementptr inbounds void (i32, i32, double*)*, void (i32, i32, double*)** @gl-21.Uniform3dv, i64 0
	%42 = bitcast void (i32, i32, double*)** %41 to %..rawptr
	call void %40(%..rawptr %42, %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$2de, i64 0, i32 0), i64 13}, %Context* noalias nonnull %__.context_ptr)
	%43 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%44 = getelementptr inbounds void (i32, i32, double*)*, void (i32, i32, double*)** @gl-21.Uniform4dv, i64 0
	%45 = bitcast void (i32, i32, double*)** %44 to %..rawptr
	call void %43(%..rawptr %45, %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$2df, i64 0, i32 0), i64 13}, %Context* noalias nonnull %__.context_ptr)
	%46 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%47 = getelementptr inbounds void (i32, i32, i8, double*)*, void (i32, i32, i8, double*)** @gl-21.UniformMatrix2dv, i64 0
	%48 = bitcast void (i32, i32, i8, double*)** %47 to %..rawptr
	call void %46(%..rawptr %48, %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$2e0, i64 0, i32 0), i64 19}, %Context* noalias nonnull %__.context_ptr)
	%49 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%50 = getelementptr inbounds void (i32, i32, i8, double*)*, void (i32, i32, i8, double*)** @gl-21.UniformMatrix3dv, i64 0
	%51 = bitcast void (i32, i32, i8, double*)** %50 to %..rawptr
	call void %49(%..rawptr %51, %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$2e1, i64 0, i32 0), i64 19}, %Context* noalias nonnull %__.context_ptr)
	%52 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%53 = getelementptr inbounds void (i32, i32, i8, double*)*, void (i32, i32, i8, double*)** @gl-21.UniformMatrix4dv, i64 0
	%54 = bitcast void (i32, i32, i8, double*)** %53 to %..rawptr
	call void %52(%..rawptr %54, %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$2e2, i64 0, i32 0), i64 19}, %Context* noalias nonnull %__.context_ptr)
	%55 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%56 = getelementptr inbounds void (i32, i32, i8, double*)*, void (i32, i32, i8, double*)** @gl-21.UniformMatrix2x3dv, i64 0
	%57 = bitcast void (i32, i32, i8, double*)** %56 to %..rawptr
	call void %55(%..rawptr %57, %..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$2e3, i64 0, i32 0), i64 21}, %Context* noalias nonnull %__.context_ptr)
	%58 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%59 = getelementptr inbounds void (i32, i32, i8, double*)*, void (i32, i32, i8, double*)** @gl-21.UniformMatrix2x4dv, i64 0
	%60 = bitcast void (i32, i32, i8, double*)** %59 to %..rawptr
	call void %58(%..rawptr %60, %..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$2e4, i64 0, i32 0), i64 21}, %Context* noalias nonnull %__.context_ptr)
	%61 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%62 = getelementptr inbounds void (i32, i32, i8, double*)*, void (i32, i32, i8, double*)** @gl-21.UniformMatrix3x2dv, i64 0
	%63 = bitcast void (i32, i32, i8, double*)** %62 to %..rawptr
	call void %61(%..rawptr %63, %..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$2e5, i64 0, i32 0), i64 21}, %Context* noalias nonnull %__.context_ptr)
	%64 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%65 = getelementptr inbounds void (i32, i32, i8, double*)*, void (i32, i32, i8, double*)** @gl-21.UniformMatrix3x4dv, i64 0
	%66 = bitcast void (i32, i32, i8, double*)** %65 to %..rawptr
	call void %64(%..rawptr %66, %..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$2e6, i64 0, i32 0), i64 21}, %Context* noalias nonnull %__.context_ptr)
	%67 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%68 = getelementptr inbounds void (i32, i32, i8, double*)*, void (i32, i32, i8, double*)** @gl-21.UniformMatrix4x2dv, i64 0
	%69 = bitcast void (i32, i32, i8, double*)** %68 to %..rawptr
	call void %67(%..rawptr %69, %..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$2e7, i64 0, i32 0), i64 21}, %Context* noalias nonnull %__.context_ptr)
	%70 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%71 = getelementptr inbounds void (i32, i32, i8, double*)*, void (i32, i32, i8, double*)** @gl-21.UniformMatrix4x3dv, i64 0
	%72 = bitcast void (i32, i32, i8, double*)** %71 to %..rawptr
	call void %70(%..rawptr %72, %..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$2e8, i64 0, i32 0), i64 21}, %Context* noalias nonnull %__.context_ptr)
	%73 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%74 = getelementptr inbounds void (i32, i32, double*)*, void (i32, i32, double*)** @gl-21.GetUniformdv, i64 0
	%75 = bitcast void (i32, i32, double*)** %74 to %..rawptr
	call void %73(%..rawptr %75, %..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$2e9, i64 0, i32 0), i64 15}, %Context* noalias nonnull %__.context_ptr)
	%76 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%77 = getelementptr inbounds i32 (i32, i32, i8*)*, i32 (i32, i32, i8*)** @gl-21.GetSubroutineUniformLocation, i64 0
	%78 = bitcast i32 (i32, i32, i8*)** %77 to %..rawptr
	call void %76(%..rawptr %78, %..string {i8* getelementptr inbounds ([32 x i8], [32 x i8]* @__str$2ea, i64 0, i32 0), i64 31}, %Context* noalias nonnull %__.context_ptr)
	%79 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%80 = getelementptr inbounds i32 (i32, i32, i8*)*, i32 (i32, i32, i8*)** @gl-21.GetSubroutineIndex, i64 0
	%81 = bitcast i32 (i32, i32, i8*)** %80 to %..rawptr
	call void %79(%..rawptr %81, %..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$2eb, i64 0, i32 0), i64 21}, %Context* noalias nonnull %__.context_ptr)
	%82 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%83 = getelementptr inbounds void (i32, i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*)** @gl-21.GetActiveSubroutineUniformiv, i64 0
	%84 = bitcast void (i32, i32, i32, i32, i32*)** %83 to %..rawptr
	call void %82(%..rawptr %84, %..string {i8* getelementptr inbounds ([32 x i8], [32 x i8]* @__str$2ec, i64 0, i32 0), i64 31}, %Context* noalias nonnull %__.context_ptr)
	%85 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%86 = getelementptr inbounds void (i32, i32, i32, i32, i32*, i8*)*, void (i32, i32, i32, i32, i32*, i8*)** @gl-21.GetActiveSubroutineUniformName, i64 0
	%87 = bitcast void (i32, i32, i32, i32, i32*, i8*)** %86 to %..rawptr
	call void %85(%..rawptr %87, %..string {i8* getelementptr inbounds ([34 x i8], [34 x i8]* @__str$2ed, i64 0, i32 0), i64 33}, %Context* noalias nonnull %__.context_ptr)
	%88 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%89 = getelementptr inbounds void (i32, i32, i32, i32, i32*, i8*)*, void (i32, i32, i32, i32, i32*, i8*)** @gl-21.GetActiveSubroutineName, i64 0
	%90 = bitcast void (i32, i32, i32, i32, i32*, i8*)** %89 to %..rawptr
	call void %88(%..rawptr %90, %..string {i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__str$2ee, i64 0, i32 0), i64 26}, %Context* noalias nonnull %__.context_ptr)
	%91 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%92 = getelementptr inbounds void (i32, i32, i32*)*, void (i32, i32, i32*)** @gl-21.UniformSubroutinesuiv, i64 0
	%93 = bitcast void (i32, i32, i32*)** %92 to %..rawptr
	call void %91(%..rawptr %93, %..string {i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__str$2ef, i64 0, i32 0), i64 24}, %Context* noalias nonnull %__.context_ptr)
	%94 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%95 = getelementptr inbounds void (i32, i32, i32*)*, void (i32, i32, i32*)** @gl-21.GetUniformSubroutineuiv, i64 0
	%96 = bitcast void (i32, i32, i32*)** %95 to %..rawptr
	call void %94(%..rawptr %96, %..string {i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__str$2f0, i64 0, i32 0), i64 26}, %Context* noalias nonnull %__.context_ptr)
	%97 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%98 = getelementptr inbounds void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)** @gl-21.GetProgramStageiv, i64 0
	%99 = bitcast void (i32, i32, i32, i32*)** %98 to %..rawptr
	call void %97(%..rawptr %99, %..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$2f1, i64 0, i32 0), i64 20}, %Context* noalias nonnull %__.context_ptr)
	%100 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%101 = getelementptr inbounds void (i32, i32)*, void (i32, i32)** @gl-21.PatchParameteri, i64 0
	%102 = bitcast void (i32, i32)** %101 to %..rawptr
	call void %100(%..rawptr %102, %..string {i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__str$2f2, i64 0, i32 0), i64 18}, %Context* noalias nonnull %__.context_ptr)
	%103 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%104 = getelementptr inbounds void (i32, float*)*, void (i32, float*)** @gl-21.PatchParameterfv, i64 0
	%105 = bitcast void (i32, float*)** %104 to %..rawptr
	call void %103(%..rawptr %105, %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$2f3, i64 0, i32 0), i64 19}, %Context* noalias nonnull %__.context_ptr)
	%106 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%107 = getelementptr inbounds void (i32, i32)*, void (i32, i32)** @gl-21.BindTransformFeedback, i64 0
	%108 = bitcast void (i32, i32)** %107 to %..rawptr
	call void %106(%..rawptr %108, %..string {i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__str$2f4, i64 0, i32 0), i64 24}, %Context* noalias nonnull %__.context_ptr)
	%109 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%110 = getelementptr inbounds void (i32, i32*)*, void (i32, i32*)** @gl-21.DeleteTransformFeedbacks, i64 0
	%111 = bitcast void (i32, i32*)** %110 to %..rawptr
	call void %109(%..rawptr %111, %..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$2f5, i64 0, i32 0), i64 27}, %Context* noalias nonnull %__.context_ptr)
	%112 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%113 = getelementptr inbounds void (i32, i32*)*, void (i32, i32*)** @gl-21.GenTransformFeedbacks, i64 0
	%114 = bitcast void (i32, i32*)** %113 to %..rawptr
	call void %112(%..rawptr %114, %..string {i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__str$2f6, i64 0, i32 0), i64 24}, %Context* noalias nonnull %__.context_ptr)
	%115 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%116 = getelementptr inbounds i8 (i32)*, i8 (i32)** @gl-21.IsTransformFeedback, i64 0
	%117 = bitcast i8 (i32)** %116 to %..rawptr
	call void %115(%..rawptr %117, %..string {i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__str$2f7, i64 0, i32 0), i64 22}, %Context* noalias nonnull %__.context_ptr)
	%118 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%119 = getelementptr inbounds void ()*, void ()** @gl-21.PauseTransformFeedback, i64 0
	%120 = bitcast void ()** %119 to %..rawptr
	call void %118(%..rawptr %120, %..string {i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__str$2f8, i64 0, i32 0), i64 25}, %Context* noalias nonnull %__.context_ptr)
	%121 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%122 = getelementptr inbounds void ()*, void ()** @gl-21.ResumeTransformFeedback, i64 0
	%123 = bitcast void ()** %122 to %..rawptr
	call void %121(%..rawptr %123, %..string {i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__str$2f9, i64 0, i32 0), i64 26}, %Context* noalias nonnull %__.context_ptr)
	%124 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%125 = getelementptr inbounds void (i32, i32)*, void (i32, i32)** @gl-21.DrawTransformFeedback, i64 0
	%126 = bitcast void (i32, i32)** %125 to %..rawptr
	call void %124(%..rawptr %126, %..string {i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__str$2fa, i64 0, i32 0), i64 24}, %Context* noalias nonnull %__.context_ptr)
	%127 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%128 = getelementptr inbounds void (i32, i32, i32)*, void (i32, i32, i32)** @gl-21.DrawTransformFeedbackStream, i64 0
	%129 = bitcast void (i32, i32, i32)** %128 to %..rawptr
	call void %127(%..rawptr %129, %..string {i8* getelementptr inbounds ([31 x i8], [31 x i8]* @__str$2fb, i64 0, i32 0), i64 30}, %Context* noalias nonnull %__.context_ptr)
	%130 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%131 = getelementptr inbounds void (i32, i32, i32)*, void (i32, i32, i32)** @gl-21.BeginQueryIndexed, i64 0
	%132 = bitcast void (i32, i32, i32)** %131 to %..rawptr
	call void %130(%..rawptr %132, %..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$2fc, i64 0, i32 0), i64 20}, %Context* noalias nonnull %__.context_ptr)
	%133 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%134 = getelementptr inbounds void (i32, i32)*, void (i32, i32)** @gl-21.EndQueryIndexed, i64 0
	%135 = bitcast void (i32, i32)** %134 to %..rawptr
	call void %133(%..rawptr %135, %..string {i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__str$2fd, i64 0, i32 0), i64 18}, %Context* noalias nonnull %__.context_ptr)
	%136 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%137 = getelementptr inbounds void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)** @gl-21.GetQueryIndexediv, i64 0
	%138 = bitcast void (i32, i32, i32, i32*)** %137 to %..rawptr
	call void %136(%..rawptr %138, %..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$2fe, i64 0, i32 0), i64 20}, %Context* noalias nonnull %__.context_ptr)
	ret void
}

define void @gl-21.load_4_1(void (%..rawptr, %..string, %Context*)* %set_proc_address, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca void (%..rawptr, %..string, %Context*)*, align 8
		store void (%..rawptr, %..string, %Context*)* %set_proc_address, void (%..rawptr, %..string, %Context*)** %0
	%1 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%2 = getelementptr inbounds void ()*, void ()** @gl-21.ReleaseShaderCompiler, i64 0
	%3 = bitcast void ()** %2 to %..rawptr
	call void %1(%..rawptr %3, %..string {i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__str$2ff, i64 0, i32 0), i64 24}, %Context* noalias nonnull %__.context_ptr)
	%4 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%5 = getelementptr inbounds void (i32, i32*, i32, %..rawptr, i32)*, void (i32, i32*, i32, %..rawptr, i32)** @gl-21.ShaderBinary, i64 0
	%6 = bitcast void (i32, i32*, i32, %..rawptr, i32)** %5 to %..rawptr
	call void %4(%..rawptr %6, %..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$300, i64 0, i32 0), i64 15}, %Context* noalias nonnull %__.context_ptr)
	%7 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%8 = getelementptr inbounds void (i32, i32, i32*, i32*)*, void (i32, i32, i32*, i32*)** @gl-21.GetShaderPrecisionFormat, i64 0
	%9 = bitcast void (i32, i32, i32*, i32*)** %8 to %..rawptr
	call void %7(%..rawptr %9, %..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$301, i64 0, i32 0), i64 27}, %Context* noalias nonnull %__.context_ptr)
	%10 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%11 = getelementptr inbounds void (float, float)*, void (float, float)** @gl-21.DepthRangef, i64 0
	%12 = bitcast void (float, float)** %11 to %..rawptr
	call void %10(%..rawptr %12, %..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$302, i64 0, i32 0), i64 14}, %Context* noalias nonnull %__.context_ptr)
	%13 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%14 = getelementptr inbounds void (float)*, void (float)** @gl-21.ClearDepthf, i64 0
	%15 = bitcast void (float)** %14 to %..rawptr
	call void %13(%..rawptr %15, %..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$303, i64 0, i32 0), i64 14}, %Context* noalias nonnull %__.context_ptr)
	%16 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%17 = getelementptr inbounds void (i32, i32, i32*, i32*, %..rawptr)*, void (i32, i32, i32*, i32*, %..rawptr)** @gl-21.GetProgramBinary, i64 0
	%18 = bitcast void (i32, i32, i32*, i32*, %..rawptr)** %17 to %..rawptr
	call void %16(%..rawptr %18, %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$304, i64 0, i32 0), i64 19}, %Context* noalias nonnull %__.context_ptr)
	%19 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%20 = getelementptr inbounds void (i32, i32, %..rawptr, i32)*, void (i32, i32, %..rawptr, i32)** @gl-21.ProgramBinary, i64 0
	%21 = bitcast void (i32, i32, %..rawptr, i32)** %20 to %..rawptr
	call void %19(%..rawptr %21, %..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$305, i64 0, i32 0), i64 16}, %Context* noalias nonnull %__.context_ptr)
	%22 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%23 = getelementptr inbounds void (i32, i32, i32)*, void (i32, i32, i32)** @gl-21.ProgramParameteri, i64 0
	%24 = bitcast void (i32, i32, i32)** %23 to %..rawptr
	call void %22(%..rawptr %24, %..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$306, i64 0, i32 0), i64 20}, %Context* noalias nonnull %__.context_ptr)
	%25 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%26 = getelementptr inbounds void (i32, i32, i32)*, void (i32, i32, i32)** @gl-21.UseProgramStages, i64 0
	%27 = bitcast void (i32, i32, i32)** %26 to %..rawptr
	call void %25(%..rawptr %27, %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$307, i64 0, i32 0), i64 19}, %Context* noalias nonnull %__.context_ptr)
	%28 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%29 = getelementptr inbounds void (i32, i32)*, void (i32, i32)** @gl-21.ActiveShaderProgram, i64 0
	%30 = bitcast void (i32, i32)** %29 to %..rawptr
	call void %28(%..rawptr %30, %..string {i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__str$308, i64 0, i32 0), i64 22}, %Context* noalias nonnull %__.context_ptr)
	%31 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%32 = getelementptr inbounds i32 (i32, i32, i8*)*, i32 (i32, i32, i8*)** @gl-21.CreateShaderProgramv, i64 0
	%33 = bitcast i32 (i32, i32, i8*)** %32 to %..rawptr
	call void %31(%..rawptr %33, %..string {i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__str$309, i64 0, i32 0), i64 23}, %Context* noalias nonnull %__.context_ptr)
	%34 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%35 = getelementptr inbounds void (i32)*, void (i32)** @gl-21.BindProgramPipeline, i64 0
	%36 = bitcast void (i32)** %35 to %..rawptr
	call void %34(%..rawptr %36, %..string {i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__str$30a, i64 0, i32 0), i64 22}, %Context* noalias nonnull %__.context_ptr)
	%37 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%38 = getelementptr inbounds void (i32, i32*)*, void (i32, i32*)** @gl-21.DeleteProgramPipelines, i64 0
	%39 = bitcast void (i32, i32*)** %38 to %..rawptr
	call void %37(%..rawptr %39, %..string {i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__str$30b, i64 0, i32 0), i64 25}, %Context* noalias nonnull %__.context_ptr)
	%40 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%41 = getelementptr inbounds void (i32, i32*)*, void (i32, i32*)** @gl-21.GenProgramPipelines, i64 0
	%42 = bitcast void (i32, i32*)** %41 to %..rawptr
	call void %40(%..rawptr %42, %..string {i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__str$30c, i64 0, i32 0), i64 22}, %Context* noalias nonnull %__.context_ptr)
	%43 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%44 = getelementptr inbounds i8 (i32)*, i8 (i32)** @gl-21.IsProgramPipeline, i64 0
	%45 = bitcast i8 (i32)** %44 to %..rawptr
	call void %43(%..rawptr %45, %..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$30d, i64 0, i32 0), i64 20}, %Context* noalias nonnull %__.context_ptr)
	%46 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%47 = getelementptr inbounds void (i32, i32, i32*)*, void (i32, i32, i32*)** @gl-21.GetProgramPipelineiv, i64 0
	%48 = bitcast void (i32, i32, i32*)** %47 to %..rawptr
	call void %46(%..rawptr %48, %..string {i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__str$30e, i64 0, i32 0), i64 23}, %Context* noalias nonnull %__.context_ptr)
	%49 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%50 = getelementptr inbounds void (i32, i32, i32)*, void (i32, i32, i32)** @gl-21.ProgramUniform1i, i64 0
	%51 = bitcast void (i32, i32, i32)** %50 to %..rawptr
	call void %49(%..rawptr %51, %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$30f, i64 0, i32 0), i64 19}, %Context* noalias nonnull %__.context_ptr)
	%52 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%53 = getelementptr inbounds void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)** @gl-21.ProgramUniform1iv, i64 0
	%54 = bitcast void (i32, i32, i32, i32*)** %53 to %..rawptr
	call void %52(%..rawptr %54, %..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$310, i64 0, i32 0), i64 20}, %Context* noalias nonnull %__.context_ptr)
	%55 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%56 = getelementptr inbounds void (i32, i32, float)*, void (i32, i32, float)** @gl-21.ProgramUniform1f, i64 0
	%57 = bitcast void (i32, i32, float)** %56 to %..rawptr
	call void %55(%..rawptr %57, %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$311, i64 0, i32 0), i64 19}, %Context* noalias nonnull %__.context_ptr)
	%58 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%59 = getelementptr inbounds void (i32, i32, i32, float*)*, void (i32, i32, i32, float*)** @gl-21.ProgramUniform1fv, i64 0
	%60 = bitcast void (i32, i32, i32, float*)** %59 to %..rawptr
	call void %58(%..rawptr %60, %..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$312, i64 0, i32 0), i64 20}, %Context* noalias nonnull %__.context_ptr)
	%61 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%62 = getelementptr inbounds void (i32, i32, double)*, void (i32, i32, double)** @gl-21.ProgramUniform1d, i64 0
	%63 = bitcast void (i32, i32, double)** %62 to %..rawptr
	call void %61(%..rawptr %63, %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$313, i64 0, i32 0), i64 19}, %Context* noalias nonnull %__.context_ptr)
	%64 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%65 = getelementptr inbounds void (i32, i32, i32, double*)*, void (i32, i32, i32, double*)** @gl-21.ProgramUniform1dv, i64 0
	%66 = bitcast void (i32, i32, i32, double*)** %65 to %..rawptr
	call void %64(%..rawptr %66, %..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$314, i64 0, i32 0), i64 20}, %Context* noalias nonnull %__.context_ptr)
	%67 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%68 = getelementptr inbounds void (i32, i32, i32)*, void (i32, i32, i32)** @gl-21.ProgramUniform1ui, i64 0
	%69 = bitcast void (i32, i32, i32)** %68 to %..rawptr
	call void %67(%..rawptr %69, %..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$315, i64 0, i32 0), i64 20}, %Context* noalias nonnull %__.context_ptr)
	%70 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%71 = getelementptr inbounds void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)** @gl-21.ProgramUniform1uiv, i64 0
	%72 = bitcast void (i32, i32, i32, i32*)** %71 to %..rawptr
	call void %70(%..rawptr %72, %..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$316, i64 0, i32 0), i64 21}, %Context* noalias nonnull %__.context_ptr)
	%73 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%74 = getelementptr inbounds void (i32, i32, i32, i32)*, void (i32, i32, i32, i32)** @gl-21.ProgramUniform2i, i64 0
	%75 = bitcast void (i32, i32, i32, i32)** %74 to %..rawptr
	call void %73(%..rawptr %75, %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$317, i64 0, i32 0), i64 19}, %Context* noalias nonnull %__.context_ptr)
	%76 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%77 = getelementptr inbounds void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)** @gl-21.ProgramUniform2iv, i64 0
	%78 = bitcast void (i32, i32, i32, i32*)** %77 to %..rawptr
	call void %76(%..rawptr %78, %..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$318, i64 0, i32 0), i64 20}, %Context* noalias nonnull %__.context_ptr)
	%79 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%80 = getelementptr inbounds void (i32, i32, float, float)*, void (i32, i32, float, float)** @gl-21.ProgramUniform2f, i64 0
	%81 = bitcast void (i32, i32, float, float)** %80 to %..rawptr
	call void %79(%..rawptr %81, %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$319, i64 0, i32 0), i64 19}, %Context* noalias nonnull %__.context_ptr)
	%82 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%83 = getelementptr inbounds void (i32, i32, i32, float*)*, void (i32, i32, i32, float*)** @gl-21.ProgramUniform2fv, i64 0
	%84 = bitcast void (i32, i32, i32, float*)** %83 to %..rawptr
	call void %82(%..rawptr %84, %..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$31a, i64 0, i32 0), i64 20}, %Context* noalias nonnull %__.context_ptr)
	%85 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%86 = getelementptr inbounds void (i32, i32, double, double)*, void (i32, i32, double, double)** @gl-21.ProgramUniform2d, i64 0
	%87 = bitcast void (i32, i32, double, double)** %86 to %..rawptr
	call void %85(%..rawptr %87, %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$31b, i64 0, i32 0), i64 19}, %Context* noalias nonnull %__.context_ptr)
	%88 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%89 = getelementptr inbounds void (i32, i32, i32, double*)*, void (i32, i32, i32, double*)** @gl-21.ProgramUniform2dv, i64 0
	%90 = bitcast void (i32, i32, i32, double*)** %89 to %..rawptr
	call void %88(%..rawptr %90, %..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$31c, i64 0, i32 0), i64 20}, %Context* noalias nonnull %__.context_ptr)
	%91 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%92 = getelementptr inbounds void (i32, i32, i32, i32)*, void (i32, i32, i32, i32)** @gl-21.ProgramUniform2ui, i64 0
	%93 = bitcast void (i32, i32, i32, i32)** %92 to %..rawptr
	call void %91(%..rawptr %93, %..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$31d, i64 0, i32 0), i64 20}, %Context* noalias nonnull %__.context_ptr)
	%94 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%95 = getelementptr inbounds void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)** @gl-21.ProgramUniform2uiv, i64 0
	%96 = bitcast void (i32, i32, i32, i32*)** %95 to %..rawptr
	call void %94(%..rawptr %96, %..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$31e, i64 0, i32 0), i64 21}, %Context* noalias nonnull %__.context_ptr)
	%97 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%98 = getelementptr inbounds void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)** @gl-21.ProgramUniform3i, i64 0
	%99 = bitcast void (i32, i32, i32, i32, i32)** %98 to %..rawptr
	call void %97(%..rawptr %99, %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$31f, i64 0, i32 0), i64 19}, %Context* noalias nonnull %__.context_ptr)
	%100 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%101 = getelementptr inbounds void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)** @gl-21.ProgramUniform3iv, i64 0
	%102 = bitcast void (i32, i32, i32, i32*)** %101 to %..rawptr
	call void %100(%..rawptr %102, %..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$320, i64 0, i32 0), i64 20}, %Context* noalias nonnull %__.context_ptr)
	%103 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%104 = getelementptr inbounds void (i32, i32, float, float, float)*, void (i32, i32, float, float, float)** @gl-21.ProgramUniform3f, i64 0
	%105 = bitcast void (i32, i32, float, float, float)** %104 to %..rawptr
	call void %103(%..rawptr %105, %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$321, i64 0, i32 0), i64 19}, %Context* noalias nonnull %__.context_ptr)
	%106 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%107 = getelementptr inbounds void (i32, i32, i32, float*)*, void (i32, i32, i32, float*)** @gl-21.ProgramUniform3fv, i64 0
	%108 = bitcast void (i32, i32, i32, float*)** %107 to %..rawptr
	call void %106(%..rawptr %108, %..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$322, i64 0, i32 0), i64 20}, %Context* noalias nonnull %__.context_ptr)
	%109 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%110 = getelementptr inbounds void (i32, i32, double, double, double)*, void (i32, i32, double, double, double)** @gl-21.ProgramUniform3d, i64 0
	%111 = bitcast void (i32, i32, double, double, double)** %110 to %..rawptr
	call void %109(%..rawptr %111, %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$323, i64 0, i32 0), i64 19}, %Context* noalias nonnull %__.context_ptr)
	%112 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%113 = getelementptr inbounds void (i32, i32, i32, double*)*, void (i32, i32, i32, double*)** @gl-21.ProgramUniform3dv, i64 0
	%114 = bitcast void (i32, i32, i32, double*)** %113 to %..rawptr
	call void %112(%..rawptr %114, %..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$324, i64 0, i32 0), i64 20}, %Context* noalias nonnull %__.context_ptr)
	%115 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%116 = getelementptr inbounds void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)** @gl-21.ProgramUniform3ui, i64 0
	%117 = bitcast void (i32, i32, i32, i32, i32)** %116 to %..rawptr
	call void %115(%..rawptr %117, %..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$325, i64 0, i32 0), i64 20}, %Context* noalias nonnull %__.context_ptr)
	%118 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%119 = getelementptr inbounds void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)** @gl-21.ProgramUniform3uiv, i64 0
	%120 = bitcast void (i32, i32, i32, i32*)** %119 to %..rawptr
	call void %118(%..rawptr %120, %..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$326, i64 0, i32 0), i64 21}, %Context* noalias nonnull %__.context_ptr)
	%121 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%122 = getelementptr inbounds void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)** @gl-21.ProgramUniform4i, i64 0
	%123 = bitcast void (i32, i32, i32, i32, i32, i32)** %122 to %..rawptr
	call void %121(%..rawptr %123, %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$327, i64 0, i32 0), i64 19}, %Context* noalias nonnull %__.context_ptr)
	%124 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%125 = getelementptr inbounds void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)** @gl-21.ProgramUniform4iv, i64 0
	%126 = bitcast void (i32, i32, i32, i32*)** %125 to %..rawptr
	call void %124(%..rawptr %126, %..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$328, i64 0, i32 0), i64 20}, %Context* noalias nonnull %__.context_ptr)
	%127 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%128 = getelementptr inbounds void (i32, i32, float, float, float, float)*, void (i32, i32, float, float, float, float)** @gl-21.ProgramUniform4f, i64 0
	%129 = bitcast void (i32, i32, float, float, float, float)** %128 to %..rawptr
	call void %127(%..rawptr %129, %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$329, i64 0, i32 0), i64 19}, %Context* noalias nonnull %__.context_ptr)
	%130 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%131 = getelementptr inbounds void (i32, i32, i32, float*)*, void (i32, i32, i32, float*)** @gl-21.ProgramUniform4fv, i64 0
	%132 = bitcast void (i32, i32, i32, float*)** %131 to %..rawptr
	call void %130(%..rawptr %132, %..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$32a, i64 0, i32 0), i64 20}, %Context* noalias nonnull %__.context_ptr)
	%133 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%134 = getelementptr inbounds void (i32, i32, double, double, double, double)*, void (i32, i32, double, double, double, double)** @gl-21.ProgramUniform4d, i64 0
	%135 = bitcast void (i32, i32, double, double, double, double)** %134 to %..rawptr
	call void %133(%..rawptr %135, %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$32b, i64 0, i32 0), i64 19}, %Context* noalias nonnull %__.context_ptr)
	%136 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%137 = getelementptr inbounds void (i32, i32, i32, double*)*, void (i32, i32, i32, double*)** @gl-21.ProgramUniform4dv, i64 0
	%138 = bitcast void (i32, i32, i32, double*)** %137 to %..rawptr
	call void %136(%..rawptr %138, %..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$32c, i64 0, i32 0), i64 20}, %Context* noalias nonnull %__.context_ptr)
	%139 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%140 = getelementptr inbounds void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)** @gl-21.ProgramUniform4ui, i64 0
	%141 = bitcast void (i32, i32, i32, i32, i32, i32)** %140 to %..rawptr
	call void %139(%..rawptr %141, %..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$32d, i64 0, i32 0), i64 20}, %Context* noalias nonnull %__.context_ptr)
	%142 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%143 = getelementptr inbounds void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)** @gl-21.ProgramUniform4uiv, i64 0
	%144 = bitcast void (i32, i32, i32, i32*)** %143 to %..rawptr
	call void %142(%..rawptr %144, %..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$32e, i64 0, i32 0), i64 21}, %Context* noalias nonnull %__.context_ptr)
	%145 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%146 = getelementptr inbounds void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)** @gl-21.ProgramUniformMatrix2fv, i64 0
	%147 = bitcast void (i32, i32, i32, i8, float*)** %146 to %..rawptr
	call void %145(%..rawptr %147, %..string {i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__str$32f, i64 0, i32 0), i64 26}, %Context* noalias nonnull %__.context_ptr)
	%148 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%149 = getelementptr inbounds void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)** @gl-21.ProgramUniformMatrix3fv, i64 0
	%150 = bitcast void (i32, i32, i32, i8, float*)** %149 to %..rawptr
	call void %148(%..rawptr %150, %..string {i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__str$330, i64 0, i32 0), i64 26}, %Context* noalias nonnull %__.context_ptr)
	%151 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%152 = getelementptr inbounds void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)** @gl-21.ProgramUniformMatrix4fv, i64 0
	%153 = bitcast void (i32, i32, i32, i8, float*)** %152 to %..rawptr
	call void %151(%..rawptr %153, %..string {i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__str$331, i64 0, i32 0), i64 26}, %Context* noalias nonnull %__.context_ptr)
	%154 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%155 = getelementptr inbounds void (i32, i32, i32, i8, double*)*, void (i32, i32, i32, i8, double*)** @gl-21.ProgramUniformMatrix2dv, i64 0
	%156 = bitcast void (i32, i32, i32, i8, double*)** %155 to %..rawptr
	call void %154(%..rawptr %156, %..string {i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__str$332, i64 0, i32 0), i64 26}, %Context* noalias nonnull %__.context_ptr)
	%157 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%158 = getelementptr inbounds void (i32, i32, i32, i8, double*)*, void (i32, i32, i32, i8, double*)** @gl-21.ProgramUniformMatrix3dv, i64 0
	%159 = bitcast void (i32, i32, i32, i8, double*)** %158 to %..rawptr
	call void %157(%..rawptr %159, %..string {i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__str$333, i64 0, i32 0), i64 26}, %Context* noalias nonnull %__.context_ptr)
	%160 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%161 = getelementptr inbounds void (i32, i32, i32, i8, double*)*, void (i32, i32, i32, i8, double*)** @gl-21.ProgramUniformMatrix4dv, i64 0
	%162 = bitcast void (i32, i32, i32, i8, double*)** %161 to %..rawptr
	call void %160(%..rawptr %162, %..string {i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__str$334, i64 0, i32 0), i64 26}, %Context* noalias nonnull %__.context_ptr)
	%163 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%164 = getelementptr inbounds void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)** @gl-21.ProgramUniformMatrix2x3fv, i64 0
	%165 = bitcast void (i32, i32, i32, i8, float*)** %164 to %..rawptr
	call void %163(%..rawptr %165, %..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$335, i64 0, i32 0), i64 28}, %Context* noalias nonnull %__.context_ptr)
	%166 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%167 = getelementptr inbounds void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)** @gl-21.ProgramUniformMatrix3x2fv, i64 0
	%168 = bitcast void (i32, i32, i32, i8, float*)** %167 to %..rawptr
	call void %166(%..rawptr %168, %..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$336, i64 0, i32 0), i64 28}, %Context* noalias nonnull %__.context_ptr)
	%169 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%170 = getelementptr inbounds void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)** @gl-21.ProgramUniformMatrix2x4fv, i64 0
	%171 = bitcast void (i32, i32, i32, i8, float*)** %170 to %..rawptr
	call void %169(%..rawptr %171, %..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$337, i64 0, i32 0), i64 28}, %Context* noalias nonnull %__.context_ptr)
	%172 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%173 = getelementptr inbounds void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)** @gl-21.ProgramUniformMatrix4x2fv, i64 0
	%174 = bitcast void (i32, i32, i32, i8, float*)** %173 to %..rawptr
	call void %172(%..rawptr %174, %..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$338, i64 0, i32 0), i64 28}, %Context* noalias nonnull %__.context_ptr)
	%175 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%176 = getelementptr inbounds void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)** @gl-21.ProgramUniformMatrix3x4fv, i64 0
	%177 = bitcast void (i32, i32, i32, i8, float*)** %176 to %..rawptr
	call void %175(%..rawptr %177, %..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$339, i64 0, i32 0), i64 28}, %Context* noalias nonnull %__.context_ptr)
	%178 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%179 = getelementptr inbounds void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)** @gl-21.ProgramUniformMatrix4x3fv, i64 0
	%180 = bitcast void (i32, i32, i32, i8, float*)** %179 to %..rawptr
	call void %178(%..rawptr %180, %..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$33a, i64 0, i32 0), i64 28}, %Context* noalias nonnull %__.context_ptr)
	%181 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%182 = getelementptr inbounds void (i32, i32, i32, i8, double*)*, void (i32, i32, i32, i8, double*)** @gl-21.ProgramUniformMatrix2x3dv, i64 0
	%183 = bitcast void (i32, i32, i32, i8, double*)** %182 to %..rawptr
	call void %181(%..rawptr %183, %..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$33b, i64 0, i32 0), i64 28}, %Context* noalias nonnull %__.context_ptr)
	%184 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%185 = getelementptr inbounds void (i32, i32, i32, i8, double*)*, void (i32, i32, i32, i8, double*)** @gl-21.ProgramUniformMatrix3x2dv, i64 0
	%186 = bitcast void (i32, i32, i32, i8, double*)** %185 to %..rawptr
	call void %184(%..rawptr %186, %..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$33c, i64 0, i32 0), i64 28}, %Context* noalias nonnull %__.context_ptr)
	%187 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%188 = getelementptr inbounds void (i32, i32, i32, i8, double*)*, void (i32, i32, i32, i8, double*)** @gl-21.ProgramUniformMatrix2x4dv, i64 0
	%189 = bitcast void (i32, i32, i32, i8, double*)** %188 to %..rawptr
	call void %187(%..rawptr %189, %..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$33d, i64 0, i32 0), i64 28}, %Context* noalias nonnull %__.context_ptr)
	%190 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%191 = getelementptr inbounds void (i32, i32, i32, i8, double*)*, void (i32, i32, i32, i8, double*)** @gl-21.ProgramUniformMatrix4x2dv, i64 0
	%192 = bitcast void (i32, i32, i32, i8, double*)** %191 to %..rawptr
	call void %190(%..rawptr %192, %..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$33e, i64 0, i32 0), i64 28}, %Context* noalias nonnull %__.context_ptr)
	%193 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%194 = getelementptr inbounds void (i32, i32, i32, i8, double*)*, void (i32, i32, i32, i8, double*)** @gl-21.ProgramUniformMatrix3x4dv, i64 0
	%195 = bitcast void (i32, i32, i32, i8, double*)** %194 to %..rawptr
	call void %193(%..rawptr %195, %..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$33f, i64 0, i32 0), i64 28}, %Context* noalias nonnull %__.context_ptr)
	%196 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%197 = getelementptr inbounds void (i32, i32, i32, i8, double*)*, void (i32, i32, i32, i8, double*)** @gl-21.ProgramUniformMatrix4x3dv, i64 0
	%198 = bitcast void (i32, i32, i32, i8, double*)** %197 to %..rawptr
	call void %196(%..rawptr %198, %..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$340, i64 0, i32 0), i64 28}, %Context* noalias nonnull %__.context_ptr)
	%199 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%200 = getelementptr inbounds void (i32)*, void (i32)** @gl-21.ValidateProgramPipeline, i64 0
	%201 = bitcast void (i32)** %200 to %..rawptr
	call void %199(%..rawptr %201, %..string {i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__str$341, i64 0, i32 0), i64 26}, %Context* noalias nonnull %__.context_ptr)
	%202 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%203 = getelementptr inbounds void (i32, i32, i32*, i8*)*, void (i32, i32, i32*, i8*)** @gl-21.GetProgramPipelineInfoLog, i64 0
	%204 = bitcast void (i32, i32, i32*, i8*)** %203 to %..rawptr
	call void %202(%..rawptr %204, %..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$342, i64 0, i32 0), i64 28}, %Context* noalias nonnull %__.context_ptr)
	%205 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%206 = getelementptr inbounds void (i32, double)*, void (i32, double)** @gl-21.VertexAttribL1d, i64 0
	%207 = bitcast void (i32, double)** %206 to %..rawptr
	call void %205(%..rawptr %207, %..string {i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__str$343, i64 0, i32 0), i64 18}, %Context* noalias nonnull %__.context_ptr)
	%208 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%209 = getelementptr inbounds void (i32, double, double)*, void (i32, double, double)** @gl-21.VertexAttribL2d, i64 0
	%210 = bitcast void (i32, double, double)** %209 to %..rawptr
	call void %208(%..rawptr %210, %..string {i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__str$344, i64 0, i32 0), i64 18}, %Context* noalias nonnull %__.context_ptr)
	%211 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%212 = getelementptr inbounds void (i32, double, double, double)*, void (i32, double, double, double)** @gl-21.VertexAttribL3d, i64 0
	%213 = bitcast void (i32, double, double, double)** %212 to %..rawptr
	call void %211(%..rawptr %213, %..string {i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__str$345, i64 0, i32 0), i64 18}, %Context* noalias nonnull %__.context_ptr)
	%214 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%215 = getelementptr inbounds void (i32, double, double, double, double)*, void (i32, double, double, double, double)** @gl-21.VertexAttribL4d, i64 0
	%216 = bitcast void (i32, double, double, double, double)** %215 to %..rawptr
	call void %214(%..rawptr %216, %..string {i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__str$346, i64 0, i32 0), i64 18}, %Context* noalias nonnull %__.context_ptr)
	%217 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%218 = getelementptr inbounds void (i32, double*)*, void (i32, double*)** @gl-21.VertexAttribL1dv, i64 0
	%219 = bitcast void (i32, double*)** %218 to %..rawptr
	call void %217(%..rawptr %219, %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$347, i64 0, i32 0), i64 19}, %Context* noalias nonnull %__.context_ptr)
	%220 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%221 = getelementptr inbounds void (i32, double*)*, void (i32, double*)** @gl-21.VertexAttribL2dv, i64 0
	%222 = bitcast void (i32, double*)** %221 to %..rawptr
	call void %220(%..rawptr %222, %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$348, i64 0, i32 0), i64 19}, %Context* noalias nonnull %__.context_ptr)
	%223 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%224 = getelementptr inbounds void (i32, double*)*, void (i32, double*)** @gl-21.VertexAttribL3dv, i64 0
	%225 = bitcast void (i32, double*)** %224 to %..rawptr
	call void %223(%..rawptr %225, %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$349, i64 0, i32 0), i64 19}, %Context* noalias nonnull %__.context_ptr)
	%226 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%227 = getelementptr inbounds void (i32, double*)*, void (i32, double*)** @gl-21.VertexAttribL4dv, i64 0
	%228 = bitcast void (i32, double*)** %227 to %..rawptr
	call void %226(%..rawptr %228, %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$34a, i64 0, i32 0), i64 19}, %Context* noalias nonnull %__.context_ptr)
	%229 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%230 = getelementptr inbounds void (i32, i32, i32, i32, %..rawptr)*, void (i32, i32, i32, i32, %..rawptr)** @gl-21.VertexAttribLPointer, i64 0
	%231 = bitcast void (i32, i32, i32, i32, %..rawptr)** %230 to %..rawptr
	call void %229(%..rawptr %231, %..string {i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__str$34b, i64 0, i32 0), i64 23}, %Context* noalias nonnull %__.context_ptr)
	%232 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%233 = getelementptr inbounds void (i32, i32, double*)*, void (i32, i32, double*)** @gl-21.GetVertexAttribLdv, i64 0
	%234 = bitcast void (i32, i32, double*)** %233 to %..rawptr
	call void %232(%..rawptr %234, %..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$34c, i64 0, i32 0), i64 21}, %Context* noalias nonnull %__.context_ptr)
	%235 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%236 = getelementptr inbounds void (i32, i32, float*)*, void (i32, i32, float*)** @gl-21.ViewportArrayv, i64 0
	%237 = bitcast void (i32, i32, float*)** %236 to %..rawptr
	call void %235(%..rawptr %237, %..string {i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__str$34d, i64 0, i32 0), i64 17}, %Context* noalias nonnull %__.context_ptr)
	%238 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%239 = getelementptr inbounds void (i32, float, float, float, float)*, void (i32, float, float, float, float)** @gl-21.ViewportIndexedf, i64 0
	%240 = bitcast void (i32, float, float, float, float)** %239 to %..rawptr
	call void %238(%..rawptr %240, %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$34e, i64 0, i32 0), i64 19}, %Context* noalias nonnull %__.context_ptr)
	%241 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%242 = getelementptr inbounds void (i32, float*)*, void (i32, float*)** @gl-21.ViewportIndexedfv, i64 0
	%243 = bitcast void (i32, float*)** %242 to %..rawptr
	call void %241(%..rawptr %243, %..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$34f, i64 0, i32 0), i64 20}, %Context* noalias nonnull %__.context_ptr)
	%244 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%245 = getelementptr inbounds void (i32, i32, i32*)*, void (i32, i32, i32*)** @gl-21.ScissorArrayv, i64 0
	%246 = bitcast void (i32, i32, i32*)** %245 to %..rawptr
	call void %244(%..rawptr %246, %..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$350, i64 0, i32 0), i64 16}, %Context* noalias nonnull %__.context_ptr)
	%247 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%248 = getelementptr inbounds void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)** @gl-21.ScissorIndexed, i64 0
	%249 = bitcast void (i32, i32, i32, i32, i32)** %248 to %..rawptr
	call void %247(%..rawptr %249, %..string {i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__str$351, i64 0, i32 0), i64 17}, %Context* noalias nonnull %__.context_ptr)
	%250 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%251 = getelementptr inbounds void (i32, i32*)*, void (i32, i32*)** @gl-21.ScissorIndexedv, i64 0
	%252 = bitcast void (i32, i32*)** %251 to %..rawptr
	call void %250(%..rawptr %252, %..string {i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__str$352, i64 0, i32 0), i64 18}, %Context* noalias nonnull %__.context_ptr)
	%253 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%254 = getelementptr inbounds void (i32, i32, double*)*, void (i32, i32, double*)** @gl-21.DepthRangeArrayv, i64 0
	%255 = bitcast void (i32, i32, double*)** %254 to %..rawptr
	call void %253(%..rawptr %255, %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$353, i64 0, i32 0), i64 19}, %Context* noalias nonnull %__.context_ptr)
	%256 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%257 = getelementptr inbounds void (i32, double, double)*, void (i32, double, double)** @gl-21.DepthRangeIndexed, i64 0
	%258 = bitcast void (i32, double, double)** %257 to %..rawptr
	call void %256(%..rawptr %258, %..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$354, i64 0, i32 0), i64 20}, %Context* noalias nonnull %__.context_ptr)
	%259 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%260 = getelementptr inbounds void (i32, i32, float*)*, void (i32, i32, float*)** @gl-21.GetFloati_v, i64 0
	%261 = bitcast void (i32, i32, float*)** %260 to %..rawptr
	call void %259(%..rawptr %261, %..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$355, i64 0, i32 0), i64 14}, %Context* noalias nonnull %__.context_ptr)
	%262 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%263 = getelementptr inbounds void (i32, i32, double*)*, void (i32, i32, double*)** @gl-21.GetDoublei_v, i64 0
	%264 = bitcast void (i32, i32, double*)** %263 to %..rawptr
	call void %262(%..rawptr %264, %..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$356, i64 0, i32 0), i64 15}, %Context* noalias nonnull %__.context_ptr)
	ret void
}

define void @gl-21.load_4_2(void (%..rawptr, %..string, %Context*)* %set_proc_address, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca void (%..rawptr, %..string, %Context*)*, align 8
		store void (%..rawptr, %..string, %Context*)* %set_proc_address, void (%..rawptr, %..string, %Context*)** %0
	%1 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%2 = getelementptr inbounds void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)** @gl-21.DrawArraysInstancedBaseInstance, i64 0
	%3 = bitcast void (i32, i32, i32, i32, i32)** %2 to %..rawptr
	call void %1(%..rawptr %3, %..string {i8* getelementptr inbounds ([35 x i8], [35 x i8]* @__str$357, i64 0, i32 0), i64 34}, %Context* noalias nonnull %__.context_ptr)
	%4 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%5 = getelementptr inbounds void (i32, i32, i32, %..rawptr, i32, i32)*, void (i32, i32, i32, %..rawptr, i32, i32)** @gl-21.DrawElementsInstancedBaseInstance, i64 0
	%6 = bitcast void (i32, i32, i32, %..rawptr, i32, i32)** %5 to %..rawptr
	call void %4(%..rawptr %6, %..string {i8* getelementptr inbounds ([37 x i8], [37 x i8]* @__str$358, i64 0, i32 0), i64 36}, %Context* noalias nonnull %__.context_ptr)
	%7 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%8 = getelementptr inbounds void (i32, i32, i32, %..rawptr, i32, i32, i32)*, void (i32, i32, i32, %..rawptr, i32, i32, i32)** @gl-21.DrawElementsInstancedBaseVertexBaseInstance, i64 0
	%9 = bitcast void (i32, i32, i32, %..rawptr, i32, i32, i32)** %8 to %..rawptr
	call void %7(%..rawptr %9, %..string {i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__str$359, i64 0, i32 0), i64 46}, %Context* noalias nonnull %__.context_ptr)
	%10 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%11 = getelementptr inbounds void (i32, i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*)** @gl-21.GetInternalformativ, i64 0
	%12 = bitcast void (i32, i32, i32, i32, i32*)** %11 to %..rawptr
	call void %10(%..rawptr %12, %..string {i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__str$35a, i64 0, i32 0), i64 22}, %Context* noalias nonnull %__.context_ptr)
	%13 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%14 = getelementptr inbounds void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)** @gl-21.GetActiveAtomicCounterBufferiv, i64 0
	%15 = bitcast void (i32, i32, i32, i32*)** %14 to %..rawptr
	call void %13(%..rawptr %15, %..string {i8* getelementptr inbounds ([34 x i8], [34 x i8]* @__str$35b, i64 0, i32 0), i64 33}, %Context* noalias nonnull %__.context_ptr)
	%16 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%17 = getelementptr inbounds void (i32, i32, i32, i8, i32, i32, i32)*, void (i32, i32, i32, i8, i32, i32, i32)** @gl-21.BindImageTexture, i64 0
	%18 = bitcast void (i32, i32, i32, i8, i32, i32, i32)** %17 to %..rawptr
	call void %16(%..rawptr %18, %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$35c, i64 0, i32 0), i64 19}, %Context* noalias nonnull %__.context_ptr)
	%19 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%20 = getelementptr inbounds void (i32)*, void (i32)** @gl-21.MemoryBarrier, i64 0
	%21 = bitcast void (i32)** %20 to %..rawptr
	call void %19(%..rawptr %21, %..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$35d, i64 0, i32 0), i64 16}, %Context* noalias nonnull %__.context_ptr)
	%22 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%23 = getelementptr inbounds void (i32, i32, i32, i32)*, void (i32, i32, i32, i32)** @gl-21.TexStorage1D, i64 0
	%24 = bitcast void (i32, i32, i32, i32)** %23 to %..rawptr
	call void %22(%..rawptr %24, %..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$35e, i64 0, i32 0), i64 15}, %Context* noalias nonnull %__.context_ptr)
	%25 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%26 = getelementptr inbounds void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)** @gl-21.TexStorage2D, i64 0
	%27 = bitcast void (i32, i32, i32, i32, i32)** %26 to %..rawptr
	call void %25(%..rawptr %27, %..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$35f, i64 0, i32 0), i64 15}, %Context* noalias nonnull %__.context_ptr)
	%28 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%29 = getelementptr inbounds void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)** @gl-21.TexStorage3D, i64 0
	%30 = bitcast void (i32, i32, i32, i32, i32, i32)** %29 to %..rawptr
	call void %28(%..rawptr %30, %..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$360, i64 0, i32 0), i64 15}, %Context* noalias nonnull %__.context_ptr)
	%31 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%32 = getelementptr inbounds void (i32, i32, i32)*, void (i32, i32, i32)** @gl-21.DrawTransformFeedbackInstanced, i64 0
	%33 = bitcast void (i32, i32, i32)** %32 to %..rawptr
	call void %31(%..rawptr %33, %..string {i8* getelementptr inbounds ([34 x i8], [34 x i8]* @__str$361, i64 0, i32 0), i64 33}, %Context* noalias nonnull %__.context_ptr)
	%34 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%35 = getelementptr inbounds void (i32, i32, i32, i32)*, void (i32, i32, i32, i32)** @gl-21.DrawTransformFeedbackStreamInstanced, i64 0
	%36 = bitcast void (i32, i32, i32, i32)** %35 to %..rawptr
	call void %34(%..rawptr %36, %..string {i8* getelementptr inbounds ([40 x i8], [40 x i8]* @__str$362, i64 0, i32 0), i64 39}, %Context* noalias nonnull %__.context_ptr)
	ret void
}

define void @gl-21.load_4_3(void (%..rawptr, %..string, %Context*)* %set_proc_address, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca void (%..rawptr, %..string, %Context*)*, align 8
		store void (%..rawptr, %..string, %Context*)* %set_proc_address, void (%..rawptr, %..string, %Context*)** %0
	%1 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%2 = getelementptr inbounds void (i32, i32, i32, i32, %..rawptr)*, void (i32, i32, i32, i32, %..rawptr)** @gl-21.ClearBufferData, i64 0
	%3 = bitcast void (i32, i32, i32, i32, %..rawptr)** %2 to %..rawptr
	call void %1(%..rawptr %3, %..string {i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__str$363, i64 0, i32 0), i64 18}, %Context* noalias nonnull %__.context_ptr)
	%4 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%5 = getelementptr inbounds void (i32, i32, i64, i64, i32, i32, %..rawptr)*, void (i32, i32, i64, i64, i32, i32, %..rawptr)** @gl-21.ClearBufferSubData, i64 0
	%6 = bitcast void (i32, i32, i64, i64, i32, i32, %..rawptr)** %5 to %..rawptr
	call void %4(%..rawptr %6, %..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$364, i64 0, i32 0), i64 21}, %Context* noalias nonnull %__.context_ptr)
	%7 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%8 = getelementptr inbounds void (i32, i32, i32)*, void (i32, i32, i32)** @gl-21.DispatchCompute, i64 0
	%9 = bitcast void (i32, i32, i32)** %8 to %..rawptr
	call void %7(%..rawptr %9, %..string {i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__str$365, i64 0, i32 0), i64 18}, %Context* noalias nonnull %__.context_ptr)
	%10 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%11 = getelementptr inbounds void (i64)*, void (i64)** @gl-21.DispatchComputeIndirect, i64 0
	%12 = bitcast void (i64)** %11 to %..rawptr
	call void %10(%..rawptr %12, %..string {i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__str$366, i64 0, i32 0), i64 26}, %Context* noalias nonnull %__.context_ptr)
	%13 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%14 = getelementptr inbounds void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)** @gl-21.CopyImageSubData, i64 0
	%15 = bitcast void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)** %14 to %..rawptr
	call void %13(%..rawptr %15, %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$367, i64 0, i32 0), i64 19}, %Context* noalias nonnull %__.context_ptr)
	%16 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%17 = getelementptr inbounds void (i32, i32, i32)*, void (i32, i32, i32)** @gl-21.FramebufferParameteri, i64 0
	%18 = bitcast void (i32, i32, i32)** %17 to %..rawptr
	call void %16(%..rawptr %18, %..string {i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__str$368, i64 0, i32 0), i64 24}, %Context* noalias nonnull %__.context_ptr)
	%19 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%20 = getelementptr inbounds void (i32, i32, i32*)*, void (i32, i32, i32*)** @gl-21.GetFramebufferParameteriv, i64 0
	%21 = bitcast void (i32, i32, i32*)** %20 to %..rawptr
	call void %19(%..rawptr %21, %..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$369, i64 0, i32 0), i64 28}, %Context* noalias nonnull %__.context_ptr)
	%22 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%23 = getelementptr inbounds void (i32, i32, i32, i32, i64*)*, void (i32, i32, i32, i32, i64*)** @gl-21.GetInternalformati64v, i64 0
	%24 = bitcast void (i32, i32, i32, i32, i64*)** %23 to %..rawptr
	call void %22(%..rawptr %24, %..string {i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__str$36a, i64 0, i32 0), i64 24}, %Context* noalias nonnull %__.context_ptr)
	%25 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%26 = getelementptr inbounds void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32)** @gl-21.InvalidateTexSubImage, i64 0
	%27 = bitcast void (i32, i32, i32, i32, i32, i32, i32, i32)** %26 to %..rawptr
	call void %25(%..rawptr %27, %..string {i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__str$36b, i64 0, i32 0), i64 24}, %Context* noalias nonnull %__.context_ptr)
	%28 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%29 = getelementptr inbounds void (i32, i32)*, void (i32, i32)** @gl-21.InvalidateTexImage, i64 0
	%30 = bitcast void (i32, i32)** %29 to %..rawptr
	call void %28(%..rawptr %30, %..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$36c, i64 0, i32 0), i64 21}, %Context* noalias nonnull %__.context_ptr)
	%31 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%32 = getelementptr inbounds void (i32, i64, i64)*, void (i32, i64, i64)** @gl-21.InvalidateBufferSubData, i64 0
	%33 = bitcast void (i32, i64, i64)** %32 to %..rawptr
	call void %31(%..rawptr %33, %..string {i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__str$36d, i64 0, i32 0), i64 26}, %Context* noalias nonnull %__.context_ptr)
	%34 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%35 = getelementptr inbounds void (i32)*, void (i32)** @gl-21.InvalidateBufferData, i64 0
	%36 = bitcast void (i32)** %35 to %..rawptr
	call void %34(%..rawptr %36, %..string {i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__str$36e, i64 0, i32 0), i64 23}, %Context* noalias nonnull %__.context_ptr)
	%37 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%38 = getelementptr inbounds void (i32, i32, i32*)*, void (i32, i32, i32*)** @gl-21.InvalidateFramebuffer, i64 0
	%39 = bitcast void (i32, i32, i32*)** %38 to %..rawptr
	call void %37(%..rawptr %39, %..string {i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__str$36f, i64 0, i32 0), i64 24}, %Context* noalias nonnull %__.context_ptr)
	%40 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%41 = getelementptr inbounds void (i32, i32, i32*, i32, i32, i32, i32)*, void (i32, i32, i32*, i32, i32, i32, i32)** @gl-21.InvalidateSubFramebuffer, i64 0
	%42 = bitcast void (i32, i32, i32*, i32, i32, i32, i32)** %41 to %..rawptr
	call void %40(%..rawptr %42, %..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$370, i64 0, i32 0), i64 27}, %Context* noalias nonnull %__.context_ptr)
	%43 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%44 = getelementptr inbounds void (i32, %..rawptr, i32, i32)*, void (i32, %..rawptr, i32, i32)** @gl-21.MultiDrawArraysIndirect, i64 0
	%45 = bitcast void (i32, %..rawptr, i32, i32)** %44 to %..rawptr
	call void %43(%..rawptr %45, %..string {i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__str$371, i64 0, i32 0), i64 26}, %Context* noalias nonnull %__.context_ptr)
	%46 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%47 = getelementptr inbounds void (i32, i32, %..rawptr, i32, i32)*, void (i32, i32, %..rawptr, i32, i32)** @gl-21.MultiDrawElementsIndirect, i64 0
	%48 = bitcast void (i32, i32, %..rawptr, i32, i32)** %47 to %..rawptr
	call void %46(%..rawptr %48, %..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$372, i64 0, i32 0), i64 28}, %Context* noalias nonnull %__.context_ptr)
	%49 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%50 = getelementptr inbounds void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)** @gl-21.GetProgramInterfaceiv, i64 0
	%51 = bitcast void (i32, i32, i32, i32*)** %50 to %..rawptr
	call void %49(%..rawptr %51, %..string {i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__str$373, i64 0, i32 0), i64 24}, %Context* noalias nonnull %__.context_ptr)
	%52 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%53 = getelementptr inbounds i32 (i32, i32, i8*)*, i32 (i32, i32, i8*)** @gl-21.GetProgramResourceIndex, i64 0
	%54 = bitcast i32 (i32, i32, i8*)** %53 to %..rawptr
	call void %52(%..rawptr %54, %..string {i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__str$374, i64 0, i32 0), i64 26}, %Context* noalias nonnull %__.context_ptr)
	%55 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%56 = getelementptr inbounds void (i32, i32, i32, i32, i32*, i8*)*, void (i32, i32, i32, i32, i32*, i8*)** @gl-21.GetProgramResourceName, i64 0
	%57 = bitcast void (i32, i32, i32, i32, i32*, i8*)** %56 to %..rawptr
	call void %55(%..rawptr %57, %..string {i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__str$375, i64 0, i32 0), i64 25}, %Context* noalias nonnull %__.context_ptr)
	%58 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%59 = getelementptr inbounds void (i32, i32, i32, i32, i32*, i32, i32*, i32*)*, void (i32, i32, i32, i32, i32*, i32, i32*, i32*)** @gl-21.GetProgramResourceiv, i64 0
	%60 = bitcast void (i32, i32, i32, i32, i32*, i32, i32*, i32*)** %59 to %..rawptr
	call void %58(%..rawptr %60, %..string {i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__str$376, i64 0, i32 0), i64 23}, %Context* noalias nonnull %__.context_ptr)
	%61 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%62 = getelementptr inbounds i32 (i32, i32, i8*)*, i32 (i32, i32, i8*)** @gl-21.GetProgramResourceLocation, i64 0
	%63 = bitcast i32 (i32, i32, i8*)** %62 to %..rawptr
	call void %61(%..rawptr %63, %..string {i8* getelementptr inbounds ([30 x i8], [30 x i8]* @__str$377, i64 0, i32 0), i64 29}, %Context* noalias nonnull %__.context_ptr)
	%64 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%65 = getelementptr inbounds i32 (i32, i32, i8*)*, i32 (i32, i32, i8*)** @gl-21.GetProgramResourceLocationIndex, i64 0
	%66 = bitcast i32 (i32, i32, i8*)** %65 to %..rawptr
	call void %64(%..rawptr %66, %..string {i8* getelementptr inbounds ([35 x i8], [35 x i8]* @__str$378, i64 0, i32 0), i64 34}, %Context* noalias nonnull %__.context_ptr)
	%67 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%68 = getelementptr inbounds void (i32, i32, i32)*, void (i32, i32, i32)** @gl-21.ShaderStorageBlockBinding, i64 0
	%69 = bitcast void (i32, i32, i32)** %68 to %..rawptr
	call void %67(%..rawptr %69, %..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$379, i64 0, i32 0), i64 28}, %Context* noalias nonnull %__.context_ptr)
	%70 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%71 = getelementptr inbounds void (i32, i32, i32, i64, i64)*, void (i32, i32, i32, i64, i64)** @gl-21.TexBufferRange, i64 0
	%72 = bitcast void (i32, i32, i32, i64, i64)** %71 to %..rawptr
	call void %70(%..rawptr %72, %..string {i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__str$37a, i64 0, i32 0), i64 17}, %Context* noalias nonnull %__.context_ptr)
	%73 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%74 = getelementptr inbounds void (i32, i32, i32, i32, i32, i8)*, void (i32, i32, i32, i32, i32, i8)** @gl-21.TexStorage2DMultisample, i64 0
	%75 = bitcast void (i32, i32, i32, i32, i32, i8)** %74 to %..rawptr
	call void %73(%..rawptr %75, %..string {i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__str$37b, i64 0, i32 0), i64 26}, %Context* noalias nonnull %__.context_ptr)
	%76 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%77 = getelementptr inbounds void (i32, i32, i32, i32, i32, i32, i8)*, void (i32, i32, i32, i32, i32, i32, i8)** @gl-21.TexStorage3DMultisample, i64 0
	%78 = bitcast void (i32, i32, i32, i32, i32, i32, i8)** %77 to %..rawptr
	call void %76(%..rawptr %78, %..string {i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__str$37c, i64 0, i32 0), i64 26}, %Context* noalias nonnull %__.context_ptr)
	%79 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%80 = getelementptr inbounds void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32)** @gl-21.TextureView, i64 0
	%81 = bitcast void (i32, i32, i32, i32, i32, i32, i32, i32)** %80 to %..rawptr
	call void %79(%..rawptr %81, %..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$37d, i64 0, i32 0), i64 14}, %Context* noalias nonnull %__.context_ptr)
	%82 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%83 = getelementptr inbounds void (i32, i32, i64, i32)*, void (i32, i32, i64, i32)** @gl-21.BindVertexBuffer, i64 0
	%84 = bitcast void (i32, i32, i64, i32)** %83 to %..rawptr
	call void %82(%..rawptr %84, %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$37e, i64 0, i32 0), i64 19}, %Context* noalias nonnull %__.context_ptr)
	%85 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%86 = getelementptr inbounds void (i32, i32, i32, i8, i32)*, void (i32, i32, i32, i8, i32)** @gl-21.VertexAttribFormat, i64 0
	%87 = bitcast void (i32, i32, i32, i8, i32)** %86 to %..rawptr
	call void %85(%..rawptr %87, %..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$37f, i64 0, i32 0), i64 21}, %Context* noalias nonnull %__.context_ptr)
	%88 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%89 = getelementptr inbounds void (i32, i32, i32, i32)*, void (i32, i32, i32, i32)** @gl-21.VertexAttribIFormat, i64 0
	%90 = bitcast void (i32, i32, i32, i32)** %89 to %..rawptr
	call void %88(%..rawptr %90, %..string {i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__str$380, i64 0, i32 0), i64 22}, %Context* noalias nonnull %__.context_ptr)
	%91 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%92 = getelementptr inbounds void (i32, i32, i32, i32)*, void (i32, i32, i32, i32)** @gl-21.VertexAttribLFormat, i64 0
	%93 = bitcast void (i32, i32, i32, i32)** %92 to %..rawptr
	call void %91(%..rawptr %93, %..string {i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__str$381, i64 0, i32 0), i64 22}, %Context* noalias nonnull %__.context_ptr)
	%94 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%95 = getelementptr inbounds void (i32, i32)*, void (i32, i32)** @gl-21.VertexAttribBinding, i64 0
	%96 = bitcast void (i32, i32)** %95 to %..rawptr
	call void %94(%..rawptr %96, %..string {i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__str$382, i64 0, i32 0), i64 22}, %Context* noalias nonnull %__.context_ptr)
	%97 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%98 = getelementptr inbounds void (i32, i32)*, void (i32, i32)** @gl-21.VertexBindingDivisor, i64 0
	%99 = bitcast void (i32, i32)** %98 to %..rawptr
	call void %97(%..rawptr %99, %..string {i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__str$383, i64 0, i32 0), i64 23}, %Context* noalias nonnull %__.context_ptr)
	%100 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%101 = getelementptr inbounds void (i32, i32, i32, i32, i32*, i8)*, void (i32, i32, i32, i32, i32*, i8)** @gl-21.DebugMessageControl, i64 0
	%102 = bitcast void (i32, i32, i32, i32, i32*, i8)** %101 to %..rawptr
	call void %100(%..rawptr %102, %..string {i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__str$384, i64 0, i32 0), i64 22}, %Context* noalias nonnull %__.context_ptr)
	%103 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%104 = getelementptr inbounds void (i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i8*)** @gl-21.DebugMessageInsert, i64 0
	%105 = bitcast void (i32, i32, i32, i32, i32, i8*)** %104 to %..rawptr
	call void %103(%..rawptr %105, %..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$385, i64 0, i32 0), i64 21}, %Context* noalias nonnull %__.context_ptr)
	%106 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%107 = getelementptr inbounds void (void (i32, i32, i32, i32, i32, i8*, %..rawptr)*, %..rawptr)*, void (void (i32, i32, i32, i32, i32, i8*, %..rawptr)*, %..rawptr)** @gl-21.DebugMessageCallback, i64 0
	%108 = bitcast void (void (i32, i32, i32, i32, i32, i8*, %..rawptr)*, %..rawptr)** %107 to %..rawptr
	call void %106(%..rawptr %108, %..string {i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__str$386, i64 0, i32 0), i64 23}, %Context* noalias nonnull %__.context_ptr)
	%109 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%110 = getelementptr inbounds i32 (i32, i32, i32*, i32*, i32*, i32*, i32*, i8*)*, i32 (i32, i32, i32*, i32*, i32*, i32*, i32*, i8*)** @gl-21.GetDebugMessageLog, i64 0
	%111 = bitcast i32 (i32, i32, i32*, i32*, i32*, i32*, i32*, i8*)** %110 to %..rawptr
	call void %109(%..rawptr %111, %..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$387, i64 0, i32 0), i64 21}, %Context* noalias nonnull %__.context_ptr)
	%112 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%113 = getelementptr inbounds void (i32, i32, i32, i8*)*, void (i32, i32, i32, i8*)** @gl-21.PushDebugGroup, i64 0
	%114 = bitcast void (i32, i32, i32, i8*)** %113 to %..rawptr
	call void %112(%..rawptr %114, %..string {i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__str$388, i64 0, i32 0), i64 17}, %Context* noalias nonnull %__.context_ptr)
	%115 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%116 = getelementptr inbounds void ()*, void ()** @gl-21.PopDebugGroup, i64 0
	%117 = bitcast void ()** %116 to %..rawptr
	call void %115(%..rawptr %117, %..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$389, i64 0, i32 0), i64 16}, %Context* noalias nonnull %__.context_ptr)
	%118 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%119 = getelementptr inbounds void (i32, i32, i32, i8*)*, void (i32, i32, i32, i8*)** @gl-21.ObjectLabel, i64 0
	%120 = bitcast void (i32, i32, i32, i8*)** %119 to %..rawptr
	call void %118(%..rawptr %120, %..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$38a, i64 0, i32 0), i64 14}, %Context* noalias nonnull %__.context_ptr)
	%121 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%122 = getelementptr inbounds void (i32, i32, i32, i32*, i8*)*, void (i32, i32, i32, i32*, i8*)** @gl-21.GetObjectLabel, i64 0
	%123 = bitcast void (i32, i32, i32, i32*, i8*)** %122 to %..rawptr
	call void %121(%..rawptr %123, %..string {i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__str$38b, i64 0, i32 0), i64 17}, %Context* noalias nonnull %__.context_ptr)
	%124 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%125 = getelementptr inbounds void (%..rawptr, i32, i8*)*, void (%..rawptr, i32, i8*)** @gl-21.ObjectPtrLabel, i64 0
	%126 = bitcast void (%..rawptr, i32, i8*)** %125 to %..rawptr
	call void %124(%..rawptr %126, %..string {i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__str$38c, i64 0, i32 0), i64 17}, %Context* noalias nonnull %__.context_ptr)
	%127 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%128 = getelementptr inbounds void (%..rawptr, i32, i32*, i8*)*, void (%..rawptr, i32, i32*, i8*)** @gl-21.GetObjectPtrLabel, i64 0
	%129 = bitcast void (%..rawptr, i32, i32*, i8*)** %128 to %..rawptr
	call void %127(%..rawptr %129, %..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$38d, i64 0, i32 0), i64 20}, %Context* noalias nonnull %__.context_ptr)
	ret void
}

define void @gl-21.load_4_4(void (%..rawptr, %..string, %Context*)* %set_proc_address, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca void (%..rawptr, %..string, %Context*)*, align 8
		store void (%..rawptr, %..string, %Context*)* %set_proc_address, void (%..rawptr, %..string, %Context*)** %0
	%1 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%2 = getelementptr inbounds void (i32, i64, %..rawptr, i32)*, void (i32, i64, %..rawptr, i32)** @gl-21.BufferStorage, i64 0
	%3 = bitcast void (i32, i64, %..rawptr, i32)** %2 to %..rawptr
	call void %1(%..rawptr %3, %..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$38e, i64 0, i32 0), i64 16}, %Context* noalias nonnull %__.context_ptr)
	%4 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%5 = getelementptr inbounds void (i32, i32, i32, i32, %..rawptr)*, void (i32, i32, i32, i32, %..rawptr)** @gl-21.ClearTexImage, i64 0
	%6 = bitcast void (i32, i32, i32, i32, %..rawptr)** %5 to %..rawptr
	call void %4(%..rawptr %6, %..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$38f, i64 0, i32 0), i64 16}, %Context* noalias nonnull %__.context_ptr)
	%7 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%8 = getelementptr inbounds void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %..rawptr)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %..rawptr)** @gl-21.ClearTexSubImage, i64 0
	%9 = bitcast void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %..rawptr)** %8 to %..rawptr
	call void %7(%..rawptr %9, %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$390, i64 0, i32 0), i64 19}, %Context* noalias nonnull %__.context_ptr)
	%10 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%11 = getelementptr inbounds void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)** @gl-21.BindBuffersBase, i64 0
	%12 = bitcast void (i32, i32, i32, i32*)** %11 to %..rawptr
	call void %10(%..rawptr %12, %..string {i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__str$391, i64 0, i32 0), i64 18}, %Context* noalias nonnull %__.context_ptr)
	%13 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%14 = getelementptr inbounds void (i32, i32, i32, i32*, i64*, i64*)*, void (i32, i32, i32, i32*, i64*, i64*)** @gl-21.BindBuffersRange, i64 0
	%15 = bitcast void (i32, i32, i32, i32*, i64*, i64*)** %14 to %..rawptr
	call void %13(%..rawptr %15, %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$392, i64 0, i32 0), i64 19}, %Context* noalias nonnull %__.context_ptr)
	%16 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%17 = getelementptr inbounds void (i32, i32, i32*)*, void (i32, i32, i32*)** @gl-21.BindTextures, i64 0
	%18 = bitcast void (i32, i32, i32*)** %17 to %..rawptr
	call void %16(%..rawptr %18, %..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$393, i64 0, i32 0), i64 15}, %Context* noalias nonnull %__.context_ptr)
	%19 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%20 = getelementptr inbounds void (i32, i32, i32*)*, void (i32, i32, i32*)** @gl-21.BindSamplers, i64 0
	%21 = bitcast void (i32, i32, i32*)** %20 to %..rawptr
	call void %19(%..rawptr %21, %..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$394, i64 0, i32 0), i64 15}, %Context* noalias nonnull %__.context_ptr)
	%22 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%23 = getelementptr inbounds void (i32, i32, i32*)*, void (i32, i32, i32*)** @gl-21.BindImageTextures, i64 0
	%24 = bitcast void (i32, i32, i32*)** %23 to %..rawptr
	call void %22(%..rawptr %24, %..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$395, i64 0, i32 0), i64 20}, %Context* noalias nonnull %__.context_ptr)
	%25 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%26 = getelementptr inbounds void (i32, i32, i32*, i64*, i32*)*, void (i32, i32, i32*, i64*, i32*)** @gl-21.BindVertexBuffers, i64 0
	%27 = bitcast void (i32, i32, i32*, i64*, i32*)** %26 to %..rawptr
	call void %25(%..rawptr %27, %..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$396, i64 0, i32 0), i64 20}, %Context* noalias nonnull %__.context_ptr)
	ret void
}

define void @gl-21.load_4_5(void (%..rawptr, %..string, %Context*)* %set_proc_address, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca void (%..rawptr, %..string, %Context*)*, align 8
		store void (%..rawptr, %..string, %Context*)* %set_proc_address, void (%..rawptr, %..string, %Context*)** %0
	%1 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%2 = getelementptr inbounds void (i32, i32)*, void (i32, i32)** @gl-21.ClipControl, i64 0
	%3 = bitcast void (i32, i32)** %2 to %..rawptr
	call void %1(%..rawptr %3, %..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$397, i64 0, i32 0), i64 14}, %Context* noalias nonnull %__.context_ptr)
	%4 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%5 = getelementptr inbounds void (i32, i32*)*, void (i32, i32*)** @gl-21.CreateTransformFeedbacks, i64 0
	%6 = bitcast void (i32, i32*)** %5 to %..rawptr
	call void %4(%..rawptr %6, %..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$398, i64 0, i32 0), i64 27}, %Context* noalias nonnull %__.context_ptr)
	%7 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%8 = getelementptr inbounds void (i32, i32, i32)*, void (i32, i32, i32)** @gl-21.TransformFeedbackBufferBase, i64 0
	%9 = bitcast void (i32, i32, i32)** %8 to %..rawptr
	call void %7(%..rawptr %9, %..string {i8* getelementptr inbounds ([31 x i8], [31 x i8]* @__str$399, i64 0, i32 0), i64 30}, %Context* noalias nonnull %__.context_ptr)
	%10 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%11 = getelementptr inbounds void (i32, i32, i32, i64, i64)*, void (i32, i32, i32, i64, i64)** @gl-21.TransformFeedbackBufferRange, i64 0
	%12 = bitcast void (i32, i32, i32, i64, i64)** %11 to %..rawptr
	call void %10(%..rawptr %12, %..string {i8* getelementptr inbounds ([32 x i8], [32 x i8]* @__str$39a, i64 0, i32 0), i64 31}, %Context* noalias nonnull %__.context_ptr)
	%13 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%14 = getelementptr inbounds void (i32, i32, i32*)*, void (i32, i32, i32*)** @gl-21.GetTransformFeedbackiv, i64 0
	%15 = bitcast void (i32, i32, i32*)** %14 to %..rawptr
	call void %13(%..rawptr %15, %..string {i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__str$39b, i64 0, i32 0), i64 25}, %Context* noalias nonnull %__.context_ptr)
	%16 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%17 = getelementptr inbounds void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)** @gl-21.GetTransformFeedbacki_v, i64 0
	%18 = bitcast void (i32, i32, i32, i32*)** %17 to %..rawptr
	call void %16(%..rawptr %18, %..string {i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__str$39c, i64 0, i32 0), i64 26}, %Context* noalias nonnull %__.context_ptr)
	%19 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%20 = getelementptr inbounds void (i32, i32, i32, i64*)*, void (i32, i32, i32, i64*)** @gl-21.GetTransformFeedbacki64_v, i64 0
	%21 = bitcast void (i32, i32, i32, i64*)** %20 to %..rawptr
	call void %19(%..rawptr %21, %..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$39d, i64 0, i32 0), i64 28}, %Context* noalias nonnull %__.context_ptr)
	%22 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%23 = getelementptr inbounds void (i32, i32*)*, void (i32, i32*)** @gl-21.CreateBuffers, i64 0
	%24 = bitcast void (i32, i32*)** %23 to %..rawptr
	call void %22(%..rawptr %24, %..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$39e, i64 0, i32 0), i64 16}, %Context* noalias nonnull %__.context_ptr)
	%25 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%26 = getelementptr inbounds void (i32, i64, %..rawptr, i32)*, void (i32, i64, %..rawptr, i32)** @gl-21.NamedBufferStorage, i64 0
	%27 = bitcast void (i32, i64, %..rawptr, i32)** %26 to %..rawptr
	call void %25(%..rawptr %27, %..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$39f, i64 0, i32 0), i64 21}, %Context* noalias nonnull %__.context_ptr)
	%28 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%29 = getelementptr inbounds void (i32, i64, %..rawptr, i32)*, void (i32, i64, %..rawptr, i32)** @gl-21.NamedBufferData, i64 0
	%30 = bitcast void (i32, i64, %..rawptr, i32)** %29 to %..rawptr
	call void %28(%..rawptr %30, %..string {i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__str$3a0, i64 0, i32 0), i64 18}, %Context* noalias nonnull %__.context_ptr)
	%31 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%32 = getelementptr inbounds void (i32, i64, i64, %..rawptr)*, void (i32, i64, i64, %..rawptr)** @gl-21.NamedBufferSubData, i64 0
	%33 = bitcast void (i32, i64, i64, %..rawptr)** %32 to %..rawptr
	call void %31(%..rawptr %33, %..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$3a1, i64 0, i32 0), i64 21}, %Context* noalias nonnull %__.context_ptr)
	%34 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%35 = getelementptr inbounds void (i32, i32, i64, i64, i64)*, void (i32, i32, i64, i64, i64)** @gl-21.CopyNamedBufferSubData, i64 0
	%36 = bitcast void (i32, i32, i64, i64, i64)** %35 to %..rawptr
	call void %34(%..rawptr %36, %..string {i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__str$3a2, i64 0, i32 0), i64 25}, %Context* noalias nonnull %__.context_ptr)
	%37 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%38 = getelementptr inbounds void (i32, i32, i32, i32, %..rawptr)*, void (i32, i32, i32, i32, %..rawptr)** @gl-21.ClearNamedBufferData, i64 0
	%39 = bitcast void (i32, i32, i32, i32, %..rawptr)** %38 to %..rawptr
	call void %37(%..rawptr %39, %..string {i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__str$3a3, i64 0, i32 0), i64 23}, %Context* noalias nonnull %__.context_ptr)
	%40 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%41 = getelementptr inbounds void (i32, i32, i64, i64, i32, i32, %..rawptr)*, void (i32, i32, i64, i64, i32, i32, %..rawptr)** @gl-21.ClearNamedBufferSubData, i64 0
	%42 = bitcast void (i32, i32, i64, i64, i32, i32, %..rawptr)** %41 to %..rawptr
	call void %40(%..rawptr %42, %..string {i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__str$3a4, i64 0, i32 0), i64 26}, %Context* noalias nonnull %__.context_ptr)
	%43 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%44 = getelementptr inbounds %..rawptr (i32, i32)*, %..rawptr (i32, i32)** @gl-21.MapNamedBuffer, i64 0
	%45 = bitcast %..rawptr (i32, i32)** %44 to %..rawptr
	call void %43(%..rawptr %45, %..string {i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__str$3a5, i64 0, i32 0), i64 17}, %Context* noalias nonnull %__.context_ptr)
	%46 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%47 = getelementptr inbounds %..rawptr (i32, i64, i64, i32)*, %..rawptr (i32, i64, i64, i32)** @gl-21.MapNamedBufferRange, i64 0
	%48 = bitcast %..rawptr (i32, i64, i64, i32)** %47 to %..rawptr
	call void %46(%..rawptr %48, %..string {i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__str$3a6, i64 0, i32 0), i64 22}, %Context* noalias nonnull %__.context_ptr)
	%49 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%50 = getelementptr inbounds i8 (i32)*, i8 (i32)** @gl-21.UnmapNamedBuffer, i64 0
	%51 = bitcast i8 (i32)** %50 to %..rawptr
	call void %49(%..rawptr %51, %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$3a7, i64 0, i32 0), i64 19}, %Context* noalias nonnull %__.context_ptr)
	%52 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%53 = getelementptr inbounds void (i32, i64, i64)*, void (i32, i64, i64)** @gl-21.FlushMappedNamedBufferRange, i64 0
	%54 = bitcast void (i32, i64, i64)** %53 to %..rawptr
	call void %52(%..rawptr %54, %..string {i8* getelementptr inbounds ([31 x i8], [31 x i8]* @__str$3a8, i64 0, i32 0), i64 30}, %Context* noalias nonnull %__.context_ptr)
	%55 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%56 = getelementptr inbounds void (i32, i32, i32*)*, void (i32, i32, i32*)** @gl-21.GetNamedBufferParameteriv, i64 0
	%57 = bitcast void (i32, i32, i32*)** %56 to %..rawptr
	call void %55(%..rawptr %57, %..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$3a9, i64 0, i32 0), i64 28}, %Context* noalias nonnull %__.context_ptr)
	%58 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%59 = getelementptr inbounds void (i32, i32, i64*)*, void (i32, i32, i64*)** @gl-21.GetNamedBufferParameteri64v, i64 0
	%60 = bitcast void (i32, i32, i64*)** %59 to %..rawptr
	call void %58(%..rawptr %60, %..string {i8* getelementptr inbounds ([31 x i8], [31 x i8]* @__str$3aa, i64 0, i32 0), i64 30}, %Context* noalias nonnull %__.context_ptr)
	%61 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%62 = getelementptr inbounds void (i32, i32, %..rawptr*)*, void (i32, i32, %..rawptr*)** @gl-21.GetNamedBufferPointerv, i64 0
	%63 = bitcast void (i32, i32, %..rawptr*)** %62 to %..rawptr
	call void %61(%..rawptr %63, %..string {i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__str$3ab, i64 0, i32 0), i64 25}, %Context* noalias nonnull %__.context_ptr)
	%64 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%65 = getelementptr inbounds void (i32, i64, i64, %..rawptr)*, void (i32, i64, i64, %..rawptr)** @gl-21.GetNamedBufferSubData, i64 0
	%66 = bitcast void (i32, i64, i64, %..rawptr)** %65 to %..rawptr
	call void %64(%..rawptr %66, %..string {i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__str$3ac, i64 0, i32 0), i64 24}, %Context* noalias nonnull %__.context_ptr)
	%67 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%68 = getelementptr inbounds void (i32, i32*)*, void (i32, i32*)** @gl-21.CreateFramebuffers, i64 0
	%69 = bitcast void (i32, i32*)** %68 to %..rawptr
	call void %67(%..rawptr %69, %..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$3ad, i64 0, i32 0), i64 21}, %Context* noalias nonnull %__.context_ptr)
	%70 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%71 = getelementptr inbounds void (i32, i32, i32, i32)*, void (i32, i32, i32, i32)** @gl-21.NamedFramebufferRenderbuffer, i64 0
	%72 = bitcast void (i32, i32, i32, i32)** %71 to %..rawptr
	call void %70(%..rawptr %72, %..string {i8* getelementptr inbounds ([32 x i8], [32 x i8]* @__str$3ae, i64 0, i32 0), i64 31}, %Context* noalias nonnull %__.context_ptr)
	%73 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%74 = getelementptr inbounds void (i32, i32, i32)*, void (i32, i32, i32)** @gl-21.NamedFramebufferParameteri, i64 0
	%75 = bitcast void (i32, i32, i32)** %74 to %..rawptr
	call void %73(%..rawptr %75, %..string {i8* getelementptr inbounds ([30 x i8], [30 x i8]* @__str$3af, i64 0, i32 0), i64 29}, %Context* noalias nonnull %__.context_ptr)
	%76 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%77 = getelementptr inbounds void (i32, i32, i32, i32)*, void (i32, i32, i32, i32)** @gl-21.NamedFramebufferTexture, i64 0
	%78 = bitcast void (i32, i32, i32, i32)** %77 to %..rawptr
	call void %76(%..rawptr %78, %..string {i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__str$3b0, i64 0, i32 0), i64 26}, %Context* noalias nonnull %__.context_ptr)
	%79 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%80 = getelementptr inbounds void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)** @gl-21.NamedFramebufferTextureLayer, i64 0
	%81 = bitcast void (i32, i32, i32, i32, i32)** %80 to %..rawptr
	call void %79(%..rawptr %81, %..string {i8* getelementptr inbounds ([32 x i8], [32 x i8]* @__str$3b1, i64 0, i32 0), i64 31}, %Context* noalias nonnull %__.context_ptr)
	%82 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%83 = getelementptr inbounds void (i32, i32)*, void (i32, i32)** @gl-21.NamedFramebufferDrawBuffer, i64 0
	%84 = bitcast void (i32, i32)** %83 to %..rawptr
	call void %82(%..rawptr %84, %..string {i8* getelementptr inbounds ([30 x i8], [30 x i8]* @__str$3b2, i64 0, i32 0), i64 29}, %Context* noalias nonnull %__.context_ptr)
	%85 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%86 = getelementptr inbounds void (i32, i32, i32*)*, void (i32, i32, i32*)** @gl-21.NamedFramebufferDrawBuffers, i64 0
	%87 = bitcast void (i32, i32, i32*)** %86 to %..rawptr
	call void %85(%..rawptr %87, %..string {i8* getelementptr inbounds ([31 x i8], [31 x i8]* @__str$3b3, i64 0, i32 0), i64 30}, %Context* noalias nonnull %__.context_ptr)
	%88 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%89 = getelementptr inbounds void (i32, i32)*, void (i32, i32)** @gl-21.NamedFramebufferReadBuffer, i64 0
	%90 = bitcast void (i32, i32)** %89 to %..rawptr
	call void %88(%..rawptr %90, %..string {i8* getelementptr inbounds ([30 x i8], [30 x i8]* @__str$3b4, i64 0, i32 0), i64 29}, %Context* noalias nonnull %__.context_ptr)
	%91 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%92 = getelementptr inbounds void (i32, i32, i32*)*, void (i32, i32, i32*)** @gl-21.InvalidateNamedFramebufferData, i64 0
	%93 = bitcast void (i32, i32, i32*)** %92 to %..rawptr
	call void %91(%..rawptr %93, %..string {i8* getelementptr inbounds ([34 x i8], [34 x i8]* @__str$3b5, i64 0, i32 0), i64 33}, %Context* noalias nonnull %__.context_ptr)
	%94 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%95 = getelementptr inbounds void (i32, i32, i32*, i32, i32, i32, i32)*, void (i32, i32, i32*, i32, i32, i32, i32)** @gl-21.InvalidateNamedFramebufferSubData, i64 0
	%96 = bitcast void (i32, i32, i32*, i32, i32, i32, i32)** %95 to %..rawptr
	call void %94(%..rawptr %96, %..string {i8* getelementptr inbounds ([37 x i8], [37 x i8]* @__str$3b6, i64 0, i32 0), i64 36}, %Context* noalias nonnull %__.context_ptr)
	%97 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%98 = getelementptr inbounds void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)** @gl-21.ClearNamedFramebufferiv, i64 0
	%99 = bitcast void (i32, i32, i32, i32*)** %98 to %..rawptr
	call void %97(%..rawptr %99, %..string {i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__str$3b7, i64 0, i32 0), i64 26}, %Context* noalias nonnull %__.context_ptr)
	%100 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%101 = getelementptr inbounds void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)** @gl-21.ClearNamedFramebufferuiv, i64 0
	%102 = bitcast void (i32, i32, i32, i32*)** %101 to %..rawptr
	call void %100(%..rawptr %102, %..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$3b8, i64 0, i32 0), i64 27}, %Context* noalias nonnull %__.context_ptr)
	%103 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%104 = getelementptr inbounds void (i32, i32, i32, float*)*, void (i32, i32, i32, float*)** @gl-21.ClearNamedFramebufferfv, i64 0
	%105 = bitcast void (i32, i32, i32, float*)** %104 to %..rawptr
	call void %103(%..rawptr %105, %..string {i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__str$3b9, i64 0, i32 0), i64 26}, %Context* noalias nonnull %__.context_ptr)
	%106 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%107 = getelementptr inbounds void (i32, i32, i32, float, i32)*, void (i32, i32, i32, float, i32)** @gl-21.ClearNamedFramebufferfi, i64 0
	%108 = bitcast void (i32, i32, i32, float, i32)** %107 to %..rawptr
	call void %106(%..rawptr %108, %..string {i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__str$3ba, i64 0, i32 0), i64 26}, %Context* noalias nonnull %__.context_ptr)
	%109 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%110 = getelementptr inbounds void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)** @gl-21.BlitNamedFramebuffer, i64 0
	%111 = bitcast void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)** %110 to %..rawptr
	call void %109(%..rawptr %111, %..string {i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__str$3bb, i64 0, i32 0), i64 23}, %Context* noalias nonnull %__.context_ptr)
	%112 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%113 = getelementptr inbounds i32 (i32, i32)*, i32 (i32, i32)** @gl-21.CheckNamedFramebufferStatus, i64 0
	%114 = bitcast i32 (i32, i32)** %113 to %..rawptr
	call void %112(%..rawptr %114, %..string {i8* getelementptr inbounds ([31 x i8], [31 x i8]* @__str$3bc, i64 0, i32 0), i64 30}, %Context* noalias nonnull %__.context_ptr)
	%115 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%116 = getelementptr inbounds void (i32, i32, i32*)*, void (i32, i32, i32*)** @gl-21.GetNamedFramebufferParameteriv, i64 0
	%117 = bitcast void (i32, i32, i32*)** %116 to %..rawptr
	call void %115(%..rawptr %117, %..string {i8* getelementptr inbounds ([34 x i8], [34 x i8]* @__str$3bd, i64 0, i32 0), i64 33}, %Context* noalias nonnull %__.context_ptr)
	%118 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%119 = getelementptr inbounds void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)** @gl-21.GetNamedFramebufferAttachmentParameteriv, i64 0
	%120 = bitcast void (i32, i32, i32, i32*)** %119 to %..rawptr
	call void %118(%..rawptr %120, %..string {i8* getelementptr inbounds ([44 x i8], [44 x i8]* @__str$3be, i64 0, i32 0), i64 43}, %Context* noalias nonnull %__.context_ptr)
	%121 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%122 = getelementptr inbounds void (i32, i32*)*, void (i32, i32*)** @gl-21.CreateRenderbuffers, i64 0
	%123 = bitcast void (i32, i32*)** %122 to %..rawptr
	call void %121(%..rawptr %123, %..string {i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__str$3bf, i64 0, i32 0), i64 22}, %Context* noalias nonnull %__.context_ptr)
	%124 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%125 = getelementptr inbounds void (i32, i32, i32, i32)*, void (i32, i32, i32, i32)** @gl-21.NamedRenderbufferStorage, i64 0
	%126 = bitcast void (i32, i32, i32, i32)** %125 to %..rawptr
	call void %124(%..rawptr %126, %..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$3c0, i64 0, i32 0), i64 27}, %Context* noalias nonnull %__.context_ptr)
	%127 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%128 = getelementptr inbounds void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)** @gl-21.NamedRenderbufferStorageMultisample, i64 0
	%129 = bitcast void (i32, i32, i32, i32, i32)** %128 to %..rawptr
	call void %127(%..rawptr %129, %..string {i8* getelementptr inbounds ([39 x i8], [39 x i8]* @__str$3c1, i64 0, i32 0), i64 38}, %Context* noalias nonnull %__.context_ptr)
	%130 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%131 = getelementptr inbounds void (i32, i32, i32*)*, void (i32, i32, i32*)** @gl-21.GetNamedRenderbufferParameteriv, i64 0
	%132 = bitcast void (i32, i32, i32*)** %131 to %..rawptr
	call void %130(%..rawptr %132, %..string {i8* getelementptr inbounds ([35 x i8], [35 x i8]* @__str$3c2, i64 0, i32 0), i64 34}, %Context* noalias nonnull %__.context_ptr)
	%133 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%134 = getelementptr inbounds void (i32, i32, i32*)*, void (i32, i32, i32*)** @gl-21.CreateTextures, i64 0
	%135 = bitcast void (i32, i32, i32*)** %134 to %..rawptr
	call void %133(%..rawptr %135, %..string {i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__str$3c3, i64 0, i32 0), i64 17}, %Context* noalias nonnull %__.context_ptr)
	%136 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%137 = getelementptr inbounds void (i32, i32, i32)*, void (i32, i32, i32)** @gl-21.TextureBuffer, i64 0
	%138 = bitcast void (i32, i32, i32)** %137 to %..rawptr
	call void %136(%..rawptr %138, %..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$3c4, i64 0, i32 0), i64 16}, %Context* noalias nonnull %__.context_ptr)
	%139 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%140 = getelementptr inbounds void (i32, i32, i32, i64, i64)*, void (i32, i32, i32, i64, i64)** @gl-21.TextureBufferRange, i64 0
	%141 = bitcast void (i32, i32, i32, i64, i64)** %140 to %..rawptr
	call void %139(%..rawptr %141, %..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$3c5, i64 0, i32 0), i64 21}, %Context* noalias nonnull %__.context_ptr)
	%142 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%143 = getelementptr inbounds void (i32, i32, i32, i32)*, void (i32, i32, i32, i32)** @gl-21.TextureStorage1D, i64 0
	%144 = bitcast void (i32, i32, i32, i32)** %143 to %..rawptr
	call void %142(%..rawptr %144, %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$3c6, i64 0, i32 0), i64 19}, %Context* noalias nonnull %__.context_ptr)
	%145 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%146 = getelementptr inbounds void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)** @gl-21.TextureStorage2D, i64 0
	%147 = bitcast void (i32, i32, i32, i32, i32)** %146 to %..rawptr
	call void %145(%..rawptr %147, %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$3c7, i64 0, i32 0), i64 19}, %Context* noalias nonnull %__.context_ptr)
	%148 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%149 = getelementptr inbounds void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)** @gl-21.TextureStorage3D, i64 0
	%150 = bitcast void (i32, i32, i32, i32, i32, i32)** %149 to %..rawptr
	call void %148(%..rawptr %150, %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$3c8, i64 0, i32 0), i64 19}, %Context* noalias nonnull %__.context_ptr)
	%151 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%152 = getelementptr inbounds void (i32, i32, i32, i32, i32, i8)*, void (i32, i32, i32, i32, i32, i8)** @gl-21.TextureStorage2DMultisample, i64 0
	%153 = bitcast void (i32, i32, i32, i32, i32, i8)** %152 to %..rawptr
	call void %151(%..rawptr %153, %..string {i8* getelementptr inbounds ([31 x i8], [31 x i8]* @__str$3c9, i64 0, i32 0), i64 30}, %Context* noalias nonnull %__.context_ptr)
	%154 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%155 = getelementptr inbounds void (i32, i32, i32, i32, i32, i32, i8)*, void (i32, i32, i32, i32, i32, i32, i8)** @gl-21.TextureStorage3DMultisample, i64 0
	%156 = bitcast void (i32, i32, i32, i32, i32, i32, i8)** %155 to %..rawptr
	call void %154(%..rawptr %156, %..string {i8* getelementptr inbounds ([31 x i8], [31 x i8]* @__str$3ca, i64 0, i32 0), i64 30}, %Context* noalias nonnull %__.context_ptr)
	%157 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%158 = getelementptr inbounds void (i32, i32, i32, i32, i32, i32, %..rawptr)*, void (i32, i32, i32, i32, i32, i32, %..rawptr)** @gl-21.TextureSubImage1D, i64 0
	%159 = bitcast void (i32, i32, i32, i32, i32, i32, %..rawptr)** %158 to %..rawptr
	call void %157(%..rawptr %159, %..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$3cb, i64 0, i32 0), i64 20}, %Context* noalias nonnull %__.context_ptr)
	%160 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%161 = getelementptr inbounds void (i32, i32, i32, i32, i32, i32, i32, i32, %..rawptr)*, void (i32, i32, i32, i32, i32, i32, i32, i32, %..rawptr)** @gl-21.TextureSubImage2D, i64 0
	%162 = bitcast void (i32, i32, i32, i32, i32, i32, i32, i32, %..rawptr)** %161 to %..rawptr
	call void %160(%..rawptr %162, %..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$3cc, i64 0, i32 0), i64 20}, %Context* noalias nonnull %__.context_ptr)
	%163 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%164 = getelementptr inbounds void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %..rawptr)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %..rawptr)** @gl-21.TextureSubImage3D, i64 0
	%165 = bitcast void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %..rawptr)** %164 to %..rawptr
	call void %163(%..rawptr %165, %..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$3cd, i64 0, i32 0), i64 20}, %Context* noalias nonnull %__.context_ptr)
	%166 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%167 = getelementptr inbounds void (i32, i32, i32, i32, i32, i32, %..rawptr)*, void (i32, i32, i32, i32, i32, i32, %..rawptr)** @gl-21.CompressedTextureSubImage1D, i64 0
	%168 = bitcast void (i32, i32, i32, i32, i32, i32, %..rawptr)** %167 to %..rawptr
	call void %166(%..rawptr %168, %..string {i8* getelementptr inbounds ([31 x i8], [31 x i8]* @__str$3ce, i64 0, i32 0), i64 30}, %Context* noalias nonnull %__.context_ptr)
	%169 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%170 = getelementptr inbounds void (i32, i32, i32, i32, i32, i32, i32, i32, %..rawptr)*, void (i32, i32, i32, i32, i32, i32, i32, i32, %..rawptr)** @gl-21.CompressedTextureSubImage2D, i64 0
	%171 = bitcast void (i32, i32, i32, i32, i32, i32, i32, i32, %..rawptr)** %170 to %..rawptr
	call void %169(%..rawptr %171, %..string {i8* getelementptr inbounds ([31 x i8], [31 x i8]* @__str$3cf, i64 0, i32 0), i64 30}, %Context* noalias nonnull %__.context_ptr)
	%172 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%173 = getelementptr inbounds void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %..rawptr)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %..rawptr)** @gl-21.CompressedTextureSubImage3D, i64 0
	%174 = bitcast void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %..rawptr)** %173 to %..rawptr
	call void %172(%..rawptr %174, %..string {i8* getelementptr inbounds ([31 x i8], [31 x i8]* @__str$3d0, i64 0, i32 0), i64 30}, %Context* noalias nonnull %__.context_ptr)
	%175 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%176 = getelementptr inbounds void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)** @gl-21.CopyTextureSubImage1D, i64 0
	%177 = bitcast void (i32, i32, i32, i32, i32, i32)** %176 to %..rawptr
	call void %175(%..rawptr %177, %..string {i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__str$3d1, i64 0, i32 0), i64 24}, %Context* noalias nonnull %__.context_ptr)
	%178 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%179 = getelementptr inbounds void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32)** @gl-21.CopyTextureSubImage2D, i64 0
	%180 = bitcast void (i32, i32, i32, i32, i32, i32, i32, i32)** %179 to %..rawptr
	call void %178(%..rawptr %180, %..string {i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__str$3d2, i64 0, i32 0), i64 24}, %Context* noalias nonnull %__.context_ptr)
	%181 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%182 = getelementptr inbounds void (i32, i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32)** @gl-21.CopyTextureSubImage3D, i64 0
	%183 = bitcast void (i32, i32, i32, i32, i32, i32, i32, i32, i32)** %182 to %..rawptr
	call void %181(%..rawptr %183, %..string {i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__str$3d3, i64 0, i32 0), i64 24}, %Context* noalias nonnull %__.context_ptr)
	%184 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%185 = getelementptr inbounds void (i32, i32, float)*, void (i32, i32, float)** @gl-21.TextureParameterf, i64 0
	%186 = bitcast void (i32, i32, float)** %185 to %..rawptr
	call void %184(%..rawptr %186, %..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$3d4, i64 0, i32 0), i64 20}, %Context* noalias nonnull %__.context_ptr)
	%187 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%188 = getelementptr inbounds void (i32, i32, float*)*, void (i32, i32, float*)** @gl-21.TextureParameterfv, i64 0
	%189 = bitcast void (i32, i32, float*)** %188 to %..rawptr
	call void %187(%..rawptr %189, %..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$3d5, i64 0, i32 0), i64 21}, %Context* noalias nonnull %__.context_ptr)
	%190 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%191 = getelementptr inbounds void (i32, i32, i32)*, void (i32, i32, i32)** @gl-21.TextureParameteri, i64 0
	%192 = bitcast void (i32, i32, i32)** %191 to %..rawptr
	call void %190(%..rawptr %192, %..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$3d6, i64 0, i32 0), i64 20}, %Context* noalias nonnull %__.context_ptr)
	%193 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%194 = getelementptr inbounds void (i32, i32, i32*)*, void (i32, i32, i32*)** @gl-21.TextureParameterIiv, i64 0
	%195 = bitcast void (i32, i32, i32*)** %194 to %..rawptr
	call void %193(%..rawptr %195, %..string {i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__str$3d7, i64 0, i32 0), i64 22}, %Context* noalias nonnull %__.context_ptr)
	%196 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%197 = getelementptr inbounds void (i32, i32, i32*)*, void (i32, i32, i32*)** @gl-21.TextureParameterIuiv, i64 0
	%198 = bitcast void (i32, i32, i32*)** %197 to %..rawptr
	call void %196(%..rawptr %198, %..string {i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__str$3d8, i64 0, i32 0), i64 23}, %Context* noalias nonnull %__.context_ptr)
	%199 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%200 = getelementptr inbounds void (i32, i32, i32*)*, void (i32, i32, i32*)** @gl-21.TextureParameteriv, i64 0
	%201 = bitcast void (i32, i32, i32*)** %200 to %..rawptr
	call void %199(%..rawptr %201, %..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$3d9, i64 0, i32 0), i64 21}, %Context* noalias nonnull %__.context_ptr)
	%202 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%203 = getelementptr inbounds void (i32)*, void (i32)** @gl-21.GenerateTextureMipmap, i64 0
	%204 = bitcast void (i32)** %203 to %..rawptr
	call void %202(%..rawptr %204, %..string {i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__str$3da, i64 0, i32 0), i64 24}, %Context* noalias nonnull %__.context_ptr)
	%205 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%206 = getelementptr inbounds void (i32, i32)*, void (i32, i32)** @gl-21.BindTextureUnit, i64 0
	%207 = bitcast void (i32, i32)** %206 to %..rawptr
	call void %205(%..rawptr %207, %..string {i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__str$3db, i64 0, i32 0), i64 18}, %Context* noalias nonnull %__.context_ptr)
	%208 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%209 = getelementptr inbounds void (i32, i32, i32, i32, i32, %..rawptr)*, void (i32, i32, i32, i32, i32, %..rawptr)** @gl-21.GetTextureImage, i64 0
	%210 = bitcast void (i32, i32, i32, i32, i32, %..rawptr)** %209 to %..rawptr
	call void %208(%..rawptr %210, %..string {i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__str$3dc, i64 0, i32 0), i64 18}, %Context* noalias nonnull %__.context_ptr)
	%211 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%212 = getelementptr inbounds void (i32, i32, i32, %..rawptr)*, void (i32, i32, i32, %..rawptr)** @gl-21.GetCompressedTextureImage, i64 0
	%213 = bitcast void (i32, i32, i32, %..rawptr)** %212 to %..rawptr
	call void %211(%..rawptr %213, %..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$3dd, i64 0, i32 0), i64 28}, %Context* noalias nonnull %__.context_ptr)
	%214 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%215 = getelementptr inbounds void (i32, i32, i32, float*)*, void (i32, i32, i32, float*)** @gl-21.GetTextureLevelParameterfv, i64 0
	%216 = bitcast void (i32, i32, i32, float*)** %215 to %..rawptr
	call void %214(%..rawptr %216, %..string {i8* getelementptr inbounds ([30 x i8], [30 x i8]* @__str$3de, i64 0, i32 0), i64 29}, %Context* noalias nonnull %__.context_ptr)
	%217 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%218 = getelementptr inbounds void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)** @gl-21.GetTextureLevelParameteriv, i64 0
	%219 = bitcast void (i32, i32, i32, i32*)** %218 to %..rawptr
	call void %217(%..rawptr %219, %..string {i8* getelementptr inbounds ([30 x i8], [30 x i8]* @__str$3df, i64 0, i32 0), i64 29}, %Context* noalias nonnull %__.context_ptr)
	%220 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%221 = getelementptr inbounds void (i32, i32, float*)*, void (i32, i32, float*)** @gl-21.GetTextureParameterfv, i64 0
	%222 = bitcast void (i32, i32, float*)** %221 to %..rawptr
	call void %220(%..rawptr %222, %..string {i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__str$3e0, i64 0, i32 0), i64 24}, %Context* noalias nonnull %__.context_ptr)
	%223 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%224 = getelementptr inbounds void (i32, i32, i32*)*, void (i32, i32, i32*)** @gl-21.GetTextureParameterIiv, i64 0
	%225 = bitcast void (i32, i32, i32*)** %224 to %..rawptr
	call void %223(%..rawptr %225, %..string {i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__str$3e1, i64 0, i32 0), i64 25}, %Context* noalias nonnull %__.context_ptr)
	%226 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%227 = getelementptr inbounds void (i32, i32, i32*)*, void (i32, i32, i32*)** @gl-21.GetTextureParameterIuiv, i64 0
	%228 = bitcast void (i32, i32, i32*)** %227 to %..rawptr
	call void %226(%..rawptr %228, %..string {i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__str$3e2, i64 0, i32 0), i64 26}, %Context* noalias nonnull %__.context_ptr)
	%229 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%230 = getelementptr inbounds void (i32, i32, i32*)*, void (i32, i32, i32*)** @gl-21.GetTextureParameteriv, i64 0
	%231 = bitcast void (i32, i32, i32*)** %230 to %..rawptr
	call void %229(%..rawptr %231, %..string {i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__str$3e3, i64 0, i32 0), i64 24}, %Context* noalias nonnull %__.context_ptr)
	%232 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%233 = getelementptr inbounds void (i32, i32*)*, void (i32, i32*)** @gl-21.CreateVertexArrays, i64 0
	%234 = bitcast void (i32, i32*)** %233 to %..rawptr
	call void %232(%..rawptr %234, %..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$3e4, i64 0, i32 0), i64 21}, %Context* noalias nonnull %__.context_ptr)
	%235 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%236 = getelementptr inbounds void (i32, i32)*, void (i32, i32)** @gl-21.DisableVertexArrayAttrib, i64 0
	%237 = bitcast void (i32, i32)** %236 to %..rawptr
	call void %235(%..rawptr %237, %..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$3e5, i64 0, i32 0), i64 27}, %Context* noalias nonnull %__.context_ptr)
	%238 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%239 = getelementptr inbounds void (i32, i32)*, void (i32, i32)** @gl-21.EnableVertexArrayAttrib, i64 0
	%240 = bitcast void (i32, i32)** %239 to %..rawptr
	call void %238(%..rawptr %240, %..string {i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__str$3e6, i64 0, i32 0), i64 26}, %Context* noalias nonnull %__.context_ptr)
	%241 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%242 = getelementptr inbounds void (i32, i32)*, void (i32, i32)** @gl-21.VertexArrayElementBuffer, i64 0
	%243 = bitcast void (i32, i32)** %242 to %..rawptr
	call void %241(%..rawptr %243, %..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$3e7, i64 0, i32 0), i64 27}, %Context* noalias nonnull %__.context_ptr)
	%244 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%245 = getelementptr inbounds void (i32, i32, i32, i64, i32)*, void (i32, i32, i32, i64, i32)** @gl-21.VertexArrayVertexBuffer, i64 0
	%246 = bitcast void (i32, i32, i32, i64, i32)** %245 to %..rawptr
	call void %244(%..rawptr %246, %..string {i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__str$3e8, i64 0, i32 0), i64 26}, %Context* noalias nonnull %__.context_ptr)
	%247 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%248 = getelementptr inbounds void (i32, i32, i32, i32*, i64*, i32*)*, void (i32, i32, i32, i32*, i64*, i32*)** @gl-21.VertexArrayVertexBuffers, i64 0
	%249 = bitcast void (i32, i32, i32, i32*, i64*, i32*)** %248 to %..rawptr
	call void %247(%..rawptr %249, %..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$3e9, i64 0, i32 0), i64 27}, %Context* noalias nonnull %__.context_ptr)
	%250 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%251 = getelementptr inbounds void (i32, i32, i32)*, void (i32, i32, i32)** @gl-21.VertexArrayAttribBinding, i64 0
	%252 = bitcast void (i32, i32, i32)** %251 to %..rawptr
	call void %250(%..rawptr %252, %..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$3ea, i64 0, i32 0), i64 27}, %Context* noalias nonnull %__.context_ptr)
	%253 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%254 = getelementptr inbounds void (i32, i32, i32, i32, i8, i32)*, void (i32, i32, i32, i32, i8, i32)** @gl-21.VertexArrayAttribFormat, i64 0
	%255 = bitcast void (i32, i32, i32, i32, i8, i32)** %254 to %..rawptr
	call void %253(%..rawptr %255, %..string {i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__str$3eb, i64 0, i32 0), i64 26}, %Context* noalias nonnull %__.context_ptr)
	%256 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%257 = getelementptr inbounds void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)** @gl-21.VertexArrayAttribIFormat, i64 0
	%258 = bitcast void (i32, i32, i32, i32, i32)** %257 to %..rawptr
	call void %256(%..rawptr %258, %..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$3ec, i64 0, i32 0), i64 27}, %Context* noalias nonnull %__.context_ptr)
	%259 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%260 = getelementptr inbounds void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)** @gl-21.VertexArrayAttribLFormat, i64 0
	%261 = bitcast void (i32, i32, i32, i32, i32)** %260 to %..rawptr
	call void %259(%..rawptr %261, %..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$3ed, i64 0, i32 0), i64 27}, %Context* noalias nonnull %__.context_ptr)
	%262 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%263 = getelementptr inbounds void (i32, i32, i32)*, void (i32, i32, i32)** @gl-21.VertexArrayBindingDivisor, i64 0
	%264 = bitcast void (i32, i32, i32)** %263 to %..rawptr
	call void %262(%..rawptr %264, %..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$3ee, i64 0, i32 0), i64 28}, %Context* noalias nonnull %__.context_ptr)
	%265 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%266 = getelementptr inbounds void (i32, i32, i32*)*, void (i32, i32, i32*)** @gl-21.GetVertexArrayiv, i64 0
	%267 = bitcast void (i32, i32, i32*)** %266 to %..rawptr
	call void %265(%..rawptr %267, %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$3ef, i64 0, i32 0), i64 19}, %Context* noalias nonnull %__.context_ptr)
	%268 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%269 = getelementptr inbounds void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)** @gl-21.GetVertexArrayIndexediv, i64 0
	%270 = bitcast void (i32, i32, i32, i32*)** %269 to %..rawptr
	call void %268(%..rawptr %270, %..string {i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__str$3f0, i64 0, i32 0), i64 26}, %Context* noalias nonnull %__.context_ptr)
	%271 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%272 = getelementptr inbounds void (i32, i32, i32, i64*)*, void (i32, i32, i32, i64*)** @gl-21.GetVertexArrayIndexed64iv, i64 0
	%273 = bitcast void (i32, i32, i32, i64*)** %272 to %..rawptr
	call void %271(%..rawptr %273, %..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$3f1, i64 0, i32 0), i64 28}, %Context* noalias nonnull %__.context_ptr)
	%274 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%275 = getelementptr inbounds void (i32, i32*)*, void (i32, i32*)** @gl-21.CreateSamplers, i64 0
	%276 = bitcast void (i32, i32*)** %275 to %..rawptr
	call void %274(%..rawptr %276, %..string {i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__str$3f2, i64 0, i32 0), i64 17}, %Context* noalias nonnull %__.context_ptr)
	%277 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%278 = getelementptr inbounds void (i32, i32*)*, void (i32, i32*)** @gl-21.CreateProgramPipelines, i64 0
	%279 = bitcast void (i32, i32*)** %278 to %..rawptr
	call void %277(%..rawptr %279, %..string {i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__str$3f3, i64 0, i32 0), i64 25}, %Context* noalias nonnull %__.context_ptr)
	%280 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%281 = getelementptr inbounds void (i32, i32, i32*)*, void (i32, i32, i32*)** @gl-21.CreateQueries, i64 0
	%282 = bitcast void (i32, i32, i32*)** %281 to %..rawptr
	call void %280(%..rawptr %282, %..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$3f4, i64 0, i32 0), i64 16}, %Context* noalias nonnull %__.context_ptr)
	%283 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%284 = getelementptr inbounds void (i32, i32, i32, i64)*, void (i32, i32, i32, i64)** @gl-21.GetQueryBufferObjecti64v, i64 0
	%285 = bitcast void (i32, i32, i32, i64)** %284 to %..rawptr
	call void %283(%..rawptr %285, %..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$3f5, i64 0, i32 0), i64 27}, %Context* noalias nonnull %__.context_ptr)
	%286 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%287 = getelementptr inbounds void (i32, i32, i32, i64)*, void (i32, i32, i32, i64)** @gl-21.GetQueryBufferObjectiv, i64 0
	%288 = bitcast void (i32, i32, i32, i64)** %287 to %..rawptr
	call void %286(%..rawptr %288, %..string {i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__str$3f6, i64 0, i32 0), i64 25}, %Context* noalias nonnull %__.context_ptr)
	%289 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%290 = getelementptr inbounds void (i32, i32, i32, i64)*, void (i32, i32, i32, i64)** @gl-21.GetQueryBufferObjectui64v, i64 0
	%291 = bitcast void (i32, i32, i32, i64)** %290 to %..rawptr
	call void %289(%..rawptr %291, %..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$3f7, i64 0, i32 0), i64 28}, %Context* noalias nonnull %__.context_ptr)
	%292 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%293 = getelementptr inbounds void (i32, i32, i32, i64)*, void (i32, i32, i32, i64)** @gl-21.GetQueryBufferObjectuiv, i64 0
	%294 = bitcast void (i32, i32, i32, i64)** %293 to %..rawptr
	call void %292(%..rawptr %294, %..string {i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__str$3f8, i64 0, i32 0), i64 26}, %Context* noalias nonnull %__.context_ptr)
	%295 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%296 = getelementptr inbounds void (i32)*, void (i32)** @gl-21.MemoryBarrierByRegion, i64 0
	%297 = bitcast void (i32)** %296 to %..rawptr
	call void %295(%..rawptr %297, %..string {i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__str$3f9, i64 0, i32 0), i64 24}, %Context* noalias nonnull %__.context_ptr)
	%298 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%299 = getelementptr inbounds void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %..rawptr)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %..rawptr)** @gl-21.GetTextureSubImage, i64 0
	%300 = bitcast void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %..rawptr)** %299 to %..rawptr
	call void %298(%..rawptr %300, %..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$3fa, i64 0, i32 0), i64 21}, %Context* noalias nonnull %__.context_ptr)
	%301 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%302 = getelementptr inbounds void (i32, i32, i32, i32, i32, i32, i32, i32, i32, %..rawptr)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, %..rawptr)** @gl-21.GetCompressedTextureSubImage, i64 0
	%303 = bitcast void (i32, i32, i32, i32, i32, i32, i32, i32, i32, %..rawptr)** %302 to %..rawptr
	call void %301(%..rawptr %303, %..string {i8* getelementptr inbounds ([32 x i8], [32 x i8]* @__str$3fb, i64 0, i32 0), i64 31}, %Context* noalias nonnull %__.context_ptr)
	%304 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%305 = getelementptr inbounds i32 ()*, i32 ()** @gl-21.GetGraphicsResetStatus, i64 0
	%306 = bitcast i32 ()** %305 to %..rawptr
	call void %304(%..rawptr %306, %..string {i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__str$3fc, i64 0, i32 0), i64 25}, %Context* noalias nonnull %__.context_ptr)
	%307 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%308 = getelementptr inbounds void (i32, i32, i32, %..rawptr)*, void (i32, i32, i32, %..rawptr)** @gl-21.GetnCompressedTexImage, i64 0
	%309 = bitcast void (i32, i32, i32, %..rawptr)** %308 to %..rawptr
	call void %307(%..rawptr %309, %..string {i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__str$3fd, i64 0, i32 0), i64 25}, %Context* noalias nonnull %__.context_ptr)
	%310 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%311 = getelementptr inbounds void (i32, i32, i32, i32, i32, %..rawptr)*, void (i32, i32, i32, i32, i32, %..rawptr)** @gl-21.GetnTexImage, i64 0
	%312 = bitcast void (i32, i32, i32, i32, i32, %..rawptr)** %311 to %..rawptr
	call void %310(%..rawptr %312, %..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$3fe, i64 0, i32 0), i64 15}, %Context* noalias nonnull %__.context_ptr)
	%313 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%314 = getelementptr inbounds void (i32, i32, i32, double*)*, void (i32, i32, i32, double*)** @gl-21.GetnUniformdv, i64 0
	%315 = bitcast void (i32, i32, i32, double*)** %314 to %..rawptr
	call void %313(%..rawptr %315, %..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$3ff, i64 0, i32 0), i64 16}, %Context* noalias nonnull %__.context_ptr)
	%316 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%317 = getelementptr inbounds void (i32, i32, i32, float*)*, void (i32, i32, i32, float*)** @gl-21.GetnUniformfv, i64 0
	%318 = bitcast void (i32, i32, i32, float*)** %317 to %..rawptr
	call void %316(%..rawptr %318, %..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$400, i64 0, i32 0), i64 16}, %Context* noalias nonnull %__.context_ptr)
	%319 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%320 = getelementptr inbounds void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)** @gl-21.GetnUniformiv, i64 0
	%321 = bitcast void (i32, i32, i32, i32*)** %320 to %..rawptr
	call void %319(%..rawptr %321, %..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$401, i64 0, i32 0), i64 16}, %Context* noalias nonnull %__.context_ptr)
	%322 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%323 = getelementptr inbounds void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)** @gl-21.GetnUniformuiv, i64 0
	%324 = bitcast void (i32, i32, i32, i32*)** %323 to %..rawptr
	call void %322(%..rawptr %324, %..string {i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__str$402, i64 0, i32 0), i64 17}, %Context* noalias nonnull %__.context_ptr)
	%325 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%326 = getelementptr inbounds void (i32, i32, i32, i32, i32, i32, i32, %..rawptr)*, void (i32, i32, i32, i32, i32, i32, i32, %..rawptr)** @gl-21.ReadnPixels, i64 0
	%327 = bitcast void (i32, i32, i32, i32, i32, i32, i32, %..rawptr)** %326 to %..rawptr
	call void %325(%..rawptr %327, %..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$403, i64 0, i32 0), i64 14}, %Context* noalias nonnull %__.context_ptr)
	%328 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%329 = getelementptr inbounds void (i32, i32, i32, double*)*, void (i32, i32, i32, double*)** @gl-21.GetnMapdv, i64 0
	%330 = bitcast void (i32, i32, i32, double*)** %329 to %..rawptr
	call void %328(%..rawptr %330, %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$404, i64 0, i32 0), i64 12}, %Context* noalias nonnull %__.context_ptr)
	%331 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%332 = getelementptr inbounds void (i32, i32, i32, float*)*, void (i32, i32, i32, float*)** @gl-21.GetnMapfv, i64 0
	%333 = bitcast void (i32, i32, i32, float*)** %332 to %..rawptr
	call void %331(%..rawptr %333, %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$405, i64 0, i32 0), i64 12}, %Context* noalias nonnull %__.context_ptr)
	%334 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%335 = getelementptr inbounds void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)** @gl-21.GetnMapiv, i64 0
	%336 = bitcast void (i32, i32, i32, i32*)** %335 to %..rawptr
	call void %334(%..rawptr %336, %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$406, i64 0, i32 0), i64 12}, %Context* noalias nonnull %__.context_ptr)
	%337 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%338 = getelementptr inbounds void (i32, i32, float*)*, void (i32, i32, float*)** @gl-21.GetnPixelMapfv, i64 0
	%339 = bitcast void (i32, i32, float*)** %338 to %..rawptr
	call void %337(%..rawptr %339, %..string {i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__str$407, i64 0, i32 0), i64 17}, %Context* noalias nonnull %__.context_ptr)
	%340 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%341 = getelementptr inbounds void (i32, i32, i32*)*, void (i32, i32, i32*)** @gl-21.GetnPixelMapuiv, i64 0
	%342 = bitcast void (i32, i32, i32*)** %341 to %..rawptr
	call void %340(%..rawptr %342, %..string {i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__str$408, i64 0, i32 0), i64 18}, %Context* noalias nonnull %__.context_ptr)
	%343 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%344 = getelementptr inbounds void (i32, i32, i16*)*, void (i32, i32, i16*)** @gl-21.GetnPixelMapusv, i64 0
	%345 = bitcast void (i32, i32, i16*)** %344 to %..rawptr
	call void %343(%..rawptr %345, %..string {i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__str$409, i64 0, i32 0), i64 18}, %Context* noalias nonnull %__.context_ptr)
	%346 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%347 = getelementptr inbounds void (i32, i8*)*, void (i32, i8*)** @gl-21.GetnPolygonStipple, i64 0
	%348 = bitcast void (i32, i8*)** %347 to %..rawptr
	call void %346(%..rawptr %348, %..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$40a, i64 0, i32 0), i64 21}, %Context* noalias nonnull %__.context_ptr)
	%349 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%350 = getelementptr inbounds void (i32, i32, i32, i32, %..rawptr)*, void (i32, i32, i32, i32, %..rawptr)** @gl-21.GetnColorTable, i64 0
	%351 = bitcast void (i32, i32, i32, i32, %..rawptr)** %350 to %..rawptr
	call void %349(%..rawptr %351, %..string {i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__str$40b, i64 0, i32 0), i64 17}, %Context* noalias nonnull %__.context_ptr)
	%352 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%353 = getelementptr inbounds void (i32, i32, i32, i32, %..rawptr)*, void (i32, i32, i32, i32, %..rawptr)** @gl-21.GetnConvolutionFilter, i64 0
	%354 = bitcast void (i32, i32, i32, i32, %..rawptr)** %353 to %..rawptr
	call void %352(%..rawptr %354, %..string {i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__str$40c, i64 0, i32 0), i64 24}, %Context* noalias nonnull %__.context_ptr)
	%355 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%356 = getelementptr inbounds void (i32, i32, i32, i32, %..rawptr, i32, %..rawptr, %..rawptr)*, void (i32, i32, i32, i32, %..rawptr, i32, %..rawptr, %..rawptr)** @gl-21.GetnSeparableFilter, i64 0
	%357 = bitcast void (i32, i32, i32, i32, %..rawptr, i32, %..rawptr, %..rawptr)** %356 to %..rawptr
	call void %355(%..rawptr %357, %..string {i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__str$40d, i64 0, i32 0), i64 22}, %Context* noalias nonnull %__.context_ptr)
	%358 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%359 = getelementptr inbounds void (i32, i8, i32, i32, i32, %..rawptr)*, void (i32, i8, i32, i32, i32, %..rawptr)** @gl-21.GetnHistogram, i64 0
	%360 = bitcast void (i32, i8, i32, i32, i32, %..rawptr)** %359 to %..rawptr
	call void %358(%..rawptr %360, %..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$40e, i64 0, i32 0), i64 16}, %Context* noalias nonnull %__.context_ptr)
	%361 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%362 = getelementptr inbounds void (i32, i8, i32, i32, i32, %..rawptr)*, void (i32, i8, i32, i32, i32, %..rawptr)** @gl-21.GetnMinmax, i64 0
	%363 = bitcast void (i32, i8, i32, i32, i32, %..rawptr)** %362 to %..rawptr
	call void %361(%..rawptr %363, %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$40f, i64 0, i32 0), i64 13}, %Context* noalias nonnull %__.context_ptr)
	%364 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%365 = getelementptr inbounds void ()*, void ()** @gl-21.TextureBarrier, i64 0
	%366 = bitcast void ()** %365 to %..rawptr
	call void %364(%..rawptr %366, %..string {i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__str$410, i64 0, i32 0), i64 17}, %Context* noalias nonnull %__.context_ptr)
	ret void
}

define void @gl-21.load_4_6(void (%..rawptr, %..string, %Context*)* %set_proc_address, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca void (%..rawptr, %..string, %Context*)*, align 8
		store void (%..rawptr, %..string, %Context*)* %set_proc_address, void (%..rawptr, %..string, %Context*)** %0
	%1 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%2 = getelementptr inbounds void (i32, i8*, i32, i32*, i32*)*, void (i32, i8*, i32, i32*, i32*)** @gl-21.SpecializeShader, i64 0
	%3 = bitcast void (i32, i8*, i32, i32*, i32*)** %2 to %..rawptr
	call void %1(%..rawptr %3, %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$411, i64 0, i32 0), i64 19}, %Context* noalias nonnull %__.context_ptr)
	%4 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%5 = getelementptr inbounds void (i32, %..rawptr, i64, i32, i32)*, void (i32, %..rawptr, i64, i32, i32)** @gl-21.MultiDrawArraysIndirectCount, i64 0
	%6 = bitcast void (i32, %..rawptr, i64, i32, i32)** %5 to %..rawptr
	call void %4(%..rawptr %6, %..string {i8* getelementptr inbounds ([32 x i8], [32 x i8]* @__str$412, i64 0, i32 0), i64 31}, %Context* noalias nonnull %__.context_ptr)
	%7 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%8 = getelementptr inbounds void (i32, i32, %..rawptr, i64, i32, i32)*, void (i32, i32, %..rawptr, i64, i32, i32)** @gl-21.MultiDrawElementsIndirectCount, i64 0
	%9 = bitcast void (i32, i32, %..rawptr, i64, i32, i32)** %8 to %..rawptr
	call void %7(%..rawptr %9, %..string {i8* getelementptr inbounds ([34 x i8], [34 x i8]* @__str$413, i64 0, i32 0), i64 33}, %Context* noalias nonnull %__.context_ptr)
	%10 = load void (%..rawptr, %..string, %Context*)*, void (%..rawptr, %..string, %Context*)** %0, align 8
	%11 = getelementptr inbounds void (float, float, float)*, void (float, float, float)** @gl-21.PolygonOffsetClamp, i64 0
	%12 = bitcast void (float, float, float)** %11 to %..rawptr
	call void %10(%..rawptr %12, %..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$414, i64 0, i32 0), i64 21}, %Context* noalias nonnull %__.context_ptr)
	ret void
}

define i64 @gl-21.load_shaders(%..string %vertex_shader_filename, %..string %fragment_shader_filename, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca %..string, align 8
	%1 = alloca %..string, align 8
	%2 = alloca i32, align 4
	%3 = alloca i1, align 1
	%4 = alloca i64, align 8
	%5 = alloca i32, align 4
	%6 = alloca i1, align 1
	%7 = alloca i64, align 8
	%8 = alloca {i32, i1}, align 4
	%9 = alloca i32, align 4
	%10 = alloca i1, align 1
	%11 = alloca {i32*, i64}, align 8
	%12 = alloca {i32*, i64}, align 16
	%13 = alloca i64, align 8
	%14 = alloca {i32, i1}, align 4
	%15 = alloca {i32, i1}, align 4
		store %..string %vertex_shader_filename, %..string* %0
		store %..string %fragment_shader_filename, %..string* %1
	; vertex_shader_id
		; ok1
		%16 = load %..string, %..string* %0, align 8
	%17 = call i64 @gl-21.load_shaders.compile_shader_from_file-1(%..string %16, i32 35633, %Context* noalias nonnull %__.context_ptr)
	store i64 zeroinitializer, i64* %4
	store i64 %17, i64* %4
	%18 = bitcast i64* %4 to {i32, i1}*
	%19 = load {i32, i1}, {i32, i1}* %18, align 4
	%20 = extractvalue {i32, i1} %19, 0
	%21 = extractvalue {i32, i1} %19, 1
	store i32 %20, i32* %2
	store i1 %21, i1* %3
	; DeferStmt
	; fragment_shader_id
		; ok2
		%22 = load %..string, %..string* %1, align 8
	%23 = call i64 @gl-21.load_shaders.compile_shader_from_file-1(%..string %22, i32 35632, %Context* noalias nonnull %__.context_ptr)
	store i64 zeroinitializer, i64* %7
	store i64 %23, i64* %7
	%24 = bitcast i64* %7 to {i32, i1}*
	%25 = load {i32, i1}, {i32, i1}* %24, align 4
	%26 = extractvalue {i32, i1} %25, 0
	%27 = extractvalue {i32, i1} %25, 1
	store i32 %26, i32* %5
	store i1 %27, i1* %6
	; DeferStmt
	; IfStmt
	%28 = load i1, i1* %3, align 1
	br i1 %28, label %cmp.or-1, label %if.then-2

cmp.or-1:
	%29 = load i1, i1* %6, align 1
	br i1 %29, label %if.done-3, label %if.then-2

if.then-2:
	; ReturnStmt
	store {i32, i1} zeroinitializer, {i32, i1}* %8
	%30 = getelementptr inbounds {i32, i1}, {i32, i1}* %8, i64 0, i32 0
	store i32 0, i32* %30
	%31 = getelementptr inbounds {i32, i1}, {i32, i1}* %8, i64 0, i32 1
	store i1 false, i1* %31
	%32 = load {i32, i1}, {i32, i1}* %8, align 4
	; defer
	%33 = load void (i32)*, void (i32)** @gl-21.DeleteShader, align 8
	%34 = load i32, i32* %5, align 4
	call ccc void %33(i32 %34)
	; defer
	%35 = load void (i32)*, void (i32)** @gl-21.DeleteShader, align 8
	%36 = load i32, i32* %2, align 4
	call ccc void %35(i32 %36)
	%37 = bitcast {i32, i1}* %8 to i64*
	%38 = load i64, i64* %37, align 8
	ret i64 %38

if.done-3:
	; program_id
		; ok
		; CompoundLit
	store {i32*, i64} zeroinitializer, {i32*, i64}* %11
	%39 = getelementptr inbounds [2 x i32], [2 x i32]* @__csba$0, i64 0, i32 0
	%40 = load i32, i32* %2, align 4
	%41 = getelementptr inbounds i32, i32* %39, i64 0
	store i32 %40, i32* %41
	%42 = load i32, i32* %5, align 4
	%43 = getelementptr inbounds i32, i32* %39, i64 1
	store i32 %42, i32* %43
	%44 = getelementptr inbounds {i32*, i64}, {i32*, i64}* %11, i64 0, i32 0
	store i32* %39, i32** %44
	%45 = getelementptr inbounds {i32*, i64}, {i32*, i64}* %11, i64 0, i32 1
	store i64 2, i64* %45
	%46 = load {i32*, i64}, {i32*, i64}* %11, align 8
	store {i32*, i64} zeroinitializer, {i32*, i64}* %12
	store {i32*, i64} %46, {i32*, i64}* %12
	%47 = call i64 @gl-21.load_shaders.create_and_link_program-2({i32*, i64}* %12, %Context* noalias nonnull %__.context_ptr)
	store i64 zeroinitializer, i64* %13
	store i64 %47, i64* %13
	%48 = bitcast i64* %13 to {i32, i1}*
	%49 = load {i32, i1}, {i32, i1}* %48, align 4
	%50 = extractvalue {i32, i1} %49, 0
	%51 = extractvalue {i32, i1} %49, 1
	store i32 %50, i32* %9
	store i1 %51, i1* %10
	; IfStmt
	%52 = load i1, i1* %10, align 1
	br i1 %52, label %if.done-5, label %if.then-4

if.then-4:
	; ReturnStmt
	store {i32, i1} zeroinitializer, {i32, i1}* %14
	%53 = getelementptr inbounds {i32, i1}, {i32, i1}* %14, i64 0, i32 0
	store i32 0, i32* %53
	%54 = getelementptr inbounds {i32, i1}, {i32, i1}* %14, i64 0, i32 1
	store i1 false, i1* %54
	%55 = load {i32, i1}, {i32, i1}* %14, align 4
	; defer
	%56 = load void (i32)*, void (i32)** @gl-21.DeleteShader, align 8
	%57 = load i32, i32* %5, align 4
	call ccc void %56(i32 %57)
	; defer
	%58 = load void (i32)*, void (i32)** @gl-21.DeleteShader, align 8
	%59 = load i32, i32* %2, align 4
	call ccc void %58(i32 %59)
	%60 = bitcast {i32, i1}* %14 to i64*
	%61 = load i64, i64* %60, align 8
	ret i64 %61

if.done-5:
	; ReturnStmt
	%62 = load i32, i32* %9, align 4
	store {i32, i1} zeroinitializer, {i32, i1}* %15
	%63 = getelementptr inbounds {i32, i1}, {i32, i1}* %15, i64 0, i32 0
	store i32 %62, i32* %63
	%64 = getelementptr inbounds {i32, i1}, {i32, i1}* %15, i64 0, i32 1
	store i1 true, i1* %64
	%65 = load {i32, i1}, {i32, i1}* %15, align 4
	; defer
	%66 = load void (i32)*, void (i32)** @gl-21.DeleteShader, align 8
	%67 = load i32, i32* %5, align 4
	call ccc void %66(i32 %67)
	; defer
	%68 = load void (i32)*, void (i32)** @gl-21.DeleteShader, align 8
	%69 = load i32, i32* %2, align 4
	call ccc void %68(i32 %69)
	%70 = bitcast {i32, i1}* %15 to i64*
	%71 = load i64, i64* %70, align 8
	ret i64 %71
}

define i1 @gl-21.load_shaders.check_error-0(i32 %id, i32 %type_, i32 %status, void (i32, i32, i32*)* %iv_func, void (i32, i32, i32*, i8*)* %log_func, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca i32, align 4
	%1 = alloca i32, align 4
	%2 = alloca i32, align 4
	%3 = alloca void (i32, i32, i32*)*, align 8
	%4 = alloca void (i32, i32, i32*, i8*)*, align 8
	%5 = alloca i32, align 4
	%6 = alloca i32, align 4
	%7 = alloca {i8*, i64}, align 8
	%8 = alloca %Source_Code_Location, align 16
	%9 = alloca {i8*, i64}, align 8
	%10 = alloca {i8*, i64}, align 8
	%11 = alloca %..string, align 8
	%12 = alloca %..any, align 8
	%13 = alloca %..any, align 8
	%14 = alloca {%..any*, i64}, align 8
	%15 = alloca [2 x %..any], align 8
	%16 = alloca {%..any*, i64}, align 16
	%17 = alloca {i8*, i64}, align 16
	%18 = alloca %Source_Code_Location, align 16
	%19 = alloca {i8*, i64}, align 16
	%20 = alloca %Source_Code_Location, align 16
		store i32 %id, i32* %0
		store i32 %type_, i32* %1
		store i32 %status, i32* %2
		store void (i32, i32, i32*)* %iv_func, void (i32, i32, i32*)** %3
		store void (i32, i32, i32*, i8*)* %log_func, void (i32, i32, i32*, i8*)** %4
	; result
	store i32 zeroinitializer, i32* %5
		; info_log_length
	store i32 zeroinitializer, i32* %6
		%21 = load void (i32, i32, i32*)*, void (i32, i32, i32*)** %3, align 8
	%22 = load i32, i32* %0, align 4
	%23 = load i32, i32* %2, align 4
	%24 = getelementptr inbounds i32, i32* %5, i64 0
	call ccc void %21(i32 %22, i32 %23, i32* %24)
	%25 = load void (i32, i32, i32*)*, void (i32, i32, i32*)** %3, align 8
	%26 = load i32, i32* %0, align 4
	%27 = getelementptr inbounds i32, i32* %6, i64 0
	call ccc void %25(i32 %26, i32 35716, i32* %27)
	; IfStmt
	%28 = load i32, i32* %5, align 4
	%29 = icmp eq i32 %28, 0
	br i1 %29, label %if.then-1, label %if.done-2

if.then-1:
	; error_message
		; make
	%30 = load i32, i32* %6, align 4
	%31 = sext i32 %30 to i64
	call void @__slice_expr_error(%..string {i8* getelementptr inbounds ([38 x i8], [38 x i8]* @__str$415, i64 0, i32 0), i64 37}, i64 1595, i64 41, i64 0, i64 %31)
	%32 = call %Source_Code_Location @make_source_code_location(%..string {i8* getelementptr inbounds ([38 x i8], [38 x i8]* @__str$416, i64 0, i32 0), i64 37}, i64 1595, i64 35, %..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$417, i64 0, i32 0), i64 11})
	store %Source_Code_Location zeroinitializer, %Source_Code_Location* %8
	store %Source_Code_Location %32, %Source_Code_Location* %8
	%33 = call %..rawptr @alloc(i64 %31, i64 1, %Source_Code_Location* %8, %Context* noalias nonnull %__.context_ptr)
	%34 = bitcast %..rawptr %33 to i8*
	store {i8*, i64} zeroinitializer, {i8*, i64}* %9
	%35 = getelementptr inbounds {i8*, i64}, {i8*, i64}* %9, i64 0, i32 0
	store i8* %34, i8** %35
	%36 = getelementptr inbounds {i8*, i64}, {i8*, i64}* %9, i64 0, i32 1
	store i64 %31, i64* %36
	%37 = load {i8*, i64}, {i8*, i64}* %9, align 8
	store {i8*, i64} %37, {i8*, i64}* %7
	; DeferStmt
	%38 = load void (i32, i32, i32*, i8*)*, void (i32, i32, i32*, i8*)** %4, align 8
	%39 = load i32, i32* %0, align 4
	%40 = load i32, i32* %6, align 4
	; IndexExpr
	%41 = load {i8*, i64}, {i8*, i64}* %7, align 8
	%42 = extractvalue {i8*, i64} %41, 0
	%43 = extractvalue {i8*, i64} %41, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([38 x i8], [38 x i8]* @__str$418, i64 0, i32 0), i64 37}, i64 1598, i64 68, i64 0, i64 %43)
	%44 = getelementptr inbounds i8, i8* %42, i64 0
	%45 = getelementptr inbounds i8, i8* %44, i64 0
	call ccc void %38(i32 %39, i32 %40, i32* zeroinitializer, i8* %45)
	; SelectorExpr
	%46 = load i32, i32* %1, align 4
	; SliceExpr
	%47 = load {i8*, i64}, {i8*, i64}* %7, align 8
	%48 = extractvalue {i8*, i64} %47, 1
	%49 = sub i64 %48, 1
	%50 = load {i8*, i64}, {i8*, i64}* %7, align 8
	call void @__slice_expr_error(%..string {i8* getelementptr inbounds ([38 x i8], [38 x i8]* @__str$419, i64 0, i32 0), i64 37}, i64 1599, i64 75, i64 0, i64 %49)
	%51 = extractvalue {i8*, i64} %50, 0
	%52 = getelementptr inbounds i8, i8* %51, i64 0
	%53 = sub i64 %49, 0
	store {i8*, i64} zeroinitializer, {i8*, i64}* %10
	%54 = getelementptr inbounds {i8*, i64}, {i8*, i64}* %10, i64 0, i32 0
	store i8* %52, i8** %54
	%55 = getelementptr inbounds {i8*, i64}, {i8*, i64}* %10, i64 0, i32 1
	store i64 %53, i64* %55
	%56 = load {i8*, i64}, {i8*, i64}* %10, align 8
	%57 = extractvalue {i8*, i64} %56, 0
	%58 = extractvalue {i8*, i64} %56, 1
	store %..string zeroinitializer, %..string* %11
	%59 = getelementptr inbounds %..string, %..string* %11, i64 0, i32 0
	store i8* %57, i8** %59
	%60 = getelementptr inbounds %..string, %..string* %11, i64 0, i32 1
	store i64 %58, i64* %60
	%61 = load %..string, %..string* %11, align 8
	store %..any zeroinitializer, %..any* %12
	%62 = bitcast i32* %1 to %..rawptr
	%63 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 83
	%64 = getelementptr inbounds %..any, %..any* %12, i64 0, i32 0
	store %..rawptr %62, %..rawptr* %64
	%65 = getelementptr inbounds %..any, %..any* %12, i64 0, i32 1
	store %Type_Info* %63, %Type_Info** %65
	%66 = load %..any, %..any* %12, align 8
	store %..any zeroinitializer, %..any* %13
	%67 = bitcast %..string* %11 to %..rawptr
	%68 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%69 = getelementptr inbounds %..any, %..any* %13, i64 0, i32 0
	store %..rawptr %67, %..rawptr* %69
	%70 = getelementptr inbounds %..any, %..any* %13, i64 0, i32 1
	store %Type_Info* %68, %Type_Info** %70
	%71 = load %..any, %..any* %13, align 8
	; variadic call argument generation
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %14
	store [2 x %..any] zeroinitializer, [2 x %..any]* %15
	%72 = getelementptr inbounds [2 x %..any], [2 x %..any]* %15, i64 0, i32 0
	store %..any %66, %..any* %72
	%73 = getelementptr inbounds [2 x %..any], [2 x %..any]* %15, i64 0, i32 1
	store %..any %71, %..any* %73
	%74 = getelementptr inbounds [2 x %..any], [2 x %..any]* %15, i64 0, i32 0
	%75 = getelementptr inbounds {%..any*, i64}, {%..any*, i64}* %14, i64 0, i32 0
	store %..any* %74, %..any** %75
	%76 = getelementptr inbounds {%..any*, i64}, {%..any*, i64}* %14, i64 0, i32 1
	store i64 2, i64* %76
	%77 = load {%..any*, i64}, {%..any*, i64}* %14, align 8
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %16
	store {%..any*, i64} %77, {%..any*, i64}* %16
	%78 = call i64 @fmt-4.printf_err(%..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$41a, i64 0, i32 0), i64 15}, {%..any*, i64}* %16, %Context* noalias nonnull %__.context_ptr)
	; ReturnStmt
	; defer
	%79 = load {i8*, i64}, {i8*, i64}* %7, align 8
	%80 = call %Source_Code_Location @make_source_code_location(%..string {i8* getelementptr inbounds ([38 x i8], [38 x i8]* @__str$41b, i64 0, i32 0), i64 37}, i64 1596, i64 19, %..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$41c, i64 0, i32 0), i64 11})
	store {i8*, i64} zeroinitializer, {i8*, i64}* %17
	store {i8*, i64} %79, {i8*, i64}* %17
	store %Source_Code_Location zeroinitializer, %Source_Code_Location* %18
	store %Source_Code_Location %80, %Source_Code_Location* %18
	call void @_preload-0.free-12719({i8*, i64}* %17, %Source_Code_Location* %18, %Context* noalias nonnull %__.context_ptr)
	ret i1 true

if.done-2:
	; ReturnStmt
	ret i1 false
}

define i64 @gl-21.load_shaders.compile_shader_from_file-1(%..string %shader_filename, i32 %shader_type, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca %..string, align 8
	%1 = alloca i32, align 4
	%2 = alloca {i8*, i64}, align 8
	%3 = alloca i1, align 1
	%4 = alloca %..any, align 8
	%5 = alloca {%..any*, i64}, align 8
	%6 = alloca [1 x %..any], align 8
	%7 = alloca {%..any*, i64}, align 16
	%8 = alloca {i32, i1}, align 4
	%9 = alloca i32, align 4
	%10 = alloca i32, align 4
	%11 = alloca {i32, i1}, align 4
	%12 = alloca {i8*, i64}, align 16
	%13 = alloca %Source_Code_Location, align 16
	%14 = alloca {i32, i1}, align 4
	%15 = alloca {i8*, i64}, align 16
	%16 = alloca %Source_Code_Location, align 16
		store %..string %shader_filename, %..string* %0
		store i32 %shader_type, i32* %1
	; shader_code
		; ok
		; SelectorExpr
	%17 = load %..string, %..string* %0, align 8
	%18 = call {{i8*, i64}, i1} @os-3.read_entire_file(%..string %17, %Context* noalias nonnull %__.context_ptr)
	%19 = extractvalue {{i8*, i64}, i1} %18, 0
	%20 = extractvalue {{i8*, i64}, i1} %18, 1
	store {i8*, i64} %19, {i8*, i64}* %2
	store i1 %20, i1* %3
	; IfStmt
	%21 = load i1, i1* %3, align 1
	br i1 %21, label %if.done-2, label %if.then-1

if.then-1:
	; SelectorExpr
	%22 = load %..string, %..string* %0, align 8
	store %..any zeroinitializer, %..any* %4
	%23 = bitcast %..string* %0 to %..rawptr
	%24 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%25 = getelementptr inbounds %..any, %..any* %4, i64 0, i32 0
	store %..rawptr %23, %..rawptr* %25
	%26 = getelementptr inbounds %..any, %..any* %4, i64 0, i32 1
	store %Type_Info* %24, %Type_Info** %26
	%27 = load %..any, %..any* %4, align 8
	; variadic call argument generation
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %5
	store [1 x %..any] zeroinitializer, [1 x %..any]* %6
	%28 = getelementptr inbounds [1 x %..any], [1 x %..any]* %6, i64 0, i32 0
	store %..any %27, %..any* %28
	%29 = getelementptr inbounds [1 x %..any], [1 x %..any]* %6, i64 0, i32 0
	%30 = getelementptr inbounds {%..any*, i64}, {%..any*, i64}* %5, i64 0, i32 0
	store %..any* %29, %..any** %30
	%31 = getelementptr inbounds {%..any*, i64}, {%..any*, i64}* %5, i64 0, i32 1
	store i64 1, i64* %31
	%32 = load {%..any*, i64}, {%..any*, i64}* %5, align 8
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %7
	store {%..any*, i64} %32, {%..any*, i64}* %7
	%33 = call i64 @fmt-4.printf_err(%..string {i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__str$41d, i64 0, i32 0), i64 25}, {%..any*, i64}* %7, %Context* noalias nonnull %__.context_ptr)
	; ReturnStmt
	store {i32, i1} zeroinitializer, {i32, i1}* %8
	%34 = getelementptr inbounds {i32, i1}, {i32, i1}* %8, i64 0, i32 0
	store i32 0, i32* %34
	%35 = getelementptr inbounds {i32, i1}, {i32, i1}* %8, i64 0, i32 1
	store i1 false, i1* %35
	%36 = load {i32, i1}, {i32, i1}* %8, align 4
	%37 = bitcast {i32, i1}* %8 to i64*
	%38 = load i64, i64* %37, align 8
	ret i64 %38

if.done-2:
	; DeferStmt
	; shader_id
		%39 = load i32 (i32)*, i32 (i32)** @gl-21.CreateShader, align 8
	%40 = load i32, i32* %1, align 4
	%41 = bitcast i32 %40 to i32
	%42 = call ccc i32 %39(i32 %41)
	store i32 %42, i32* %9
	; length
		%43 = load {i8*, i64}, {i8*, i64}* %2, align 8
	%44 = extractvalue {i8*, i64} %43, 1
	%45 = trunc i64 %44 to i32
	store i32 %45, i32* %10
	%46 = load void (i32, i32, i8**, i32*)*, void (i32, i32, i8**, i32*)** @gl-21.ShaderSource, align 8
	%47 = load i32, i32* %9, align 4
	%48 = getelementptr inbounds {i8*, i64}, {i8*, i64}* %2, i64 0
	%49 = bitcast {i8*, i64}* %48 to i8**
	%50 = getelementptr inbounds i32, i32* %10, i64 0
	call ccc void %46(i32 %47, i32 1, i8** %49, i32* %50)
	%51 = load void (i32)*, void (i32)** @gl-21.CompileShader, align 8
	%52 = load i32, i32* %9, align 4
	call ccc void %51(i32 %52)
	; IfStmt
	%53 = load i32, i32* %9, align 4
	%54 = load i32, i32* %1, align 4
	%55 = load void (i32, i32, i32*)*, void (i32, i32, i32*)** @gl-21.GetShaderiv, align 8
	%56 = load void (i32, i32, i32*, i8*)*, void (i32, i32, i32*, i8*)** @gl-21.GetShaderInfoLog, align 8
	%57 = call i1 @gl-21.load_shaders.check_error-0(i32 %53, i32 %54, i32 35713, void (i32, i32, i32*)* %55, void (i32, i32, i32*, i8*)* %56, %Context* noalias nonnull %__.context_ptr)
	br i1 %57, label %if.then-3, label %if.done-4

if.then-3:
	; ReturnStmt
	store {i32, i1} zeroinitializer, {i32, i1}* %11
	%58 = getelementptr inbounds {i32, i1}, {i32, i1}* %11, i64 0, i32 0
	store i32 0, i32* %58
	%59 = getelementptr inbounds {i32, i1}, {i32, i1}* %11, i64 0, i32 1
	store i1 false, i1* %59
	%60 = load {i32, i1}, {i32, i1}* %11, align 4
	; defer
	%61 = load {i8*, i64}, {i8*, i64}* %2, align 8
	%62 = call %Source_Code_Location @make_source_code_location(%..string {i8* getelementptr inbounds ([38 x i8], [38 x i8]* @__str$41e, i64 0, i32 0), i64 37}, i64 1614, i64 15, %..string {i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__str$41f, i64 0, i32 0), i64 24})
	store {i8*, i64} zeroinitializer, {i8*, i64}* %12
	store {i8*, i64} %61, {i8*, i64}* %12
	store %Source_Code_Location zeroinitializer, %Source_Code_Location* %13
	store %Source_Code_Location %62, %Source_Code_Location* %13
	call void @_preload-0.free-12719({i8*, i64}* %12, %Source_Code_Location* %13, %Context* noalias nonnull %__.context_ptr)
	%63 = bitcast {i32, i1}* %11 to i64*
	%64 = load i64, i64* %63, align 8
	ret i64 %64

if.done-4:
	; ReturnStmt
	%65 = load i32, i32* %9, align 4
	store {i32, i1} zeroinitializer, {i32, i1}* %14
	%66 = getelementptr inbounds {i32, i1}, {i32, i1}* %14, i64 0, i32 0
	store i32 %65, i32* %66
	%67 = getelementptr inbounds {i32, i1}, {i32, i1}* %14, i64 0, i32 1
	store i1 true, i1* %67
	%68 = load {i32, i1}, {i32, i1}* %14, align 4
	; defer
	%69 = load {i8*, i64}, {i8*, i64}* %2, align 8
	%70 = call %Source_Code_Location @make_source_code_location(%..string {i8* getelementptr inbounds ([38 x i8], [38 x i8]* @__str$420, i64 0, i32 0), i64 37}, i64 1614, i64 15, %..string {i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__str$421, i64 0, i32 0), i64 24})
	store {i8*, i64} zeroinitializer, {i8*, i64}* %15
	store {i8*, i64} %69, {i8*, i64}* %15
	store %Source_Code_Location zeroinitializer, %Source_Code_Location* %16
	store %Source_Code_Location %70, %Source_Code_Location* %16
	call void @_preload-0.free-12719({i8*, i64}* %15, %Source_Code_Location* %16, %Context* noalias nonnull %__.context_ptr)
	%71 = bitcast {i32, i1}* %14 to i64*
	%72 = load i64, i64* %71, align 8
	ret i64 %72
}

define i64 @gl-21.load_shaders.create_and_link_program-2({i32*, i64}* %shader_ids, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca i32, align 4
	%1 = alloca i32, align 4
	%2 = alloca i64, align 8
	%3 = alloca i64, align 8
	%4 = alloca {i32, i1}, align 4
	%5 = alloca {i32, i1}, align 4
	%6 = load {i32*, i64}, {i32*, i64}* %shader_ids, align 8
	; program_id
		%7 = load i32 ()*, i32 ()** @gl-21.CreateProgram, align 8
	%8 = call ccc i32 %7()
	store i32 %8, i32* %0
	; RangeStmt
	; id
	store i32 zeroinitializer, i32* %1
		%9 = load {i32*, i64}, {i32*, i64}* %shader_ids, align 8
	store i64 zeroinitializer, i64* %2
	%10 = extractvalue {i32*, i64} %9, 1
	store i64 %10, i64* %2
	store i64 zeroinitializer, i64* %3
	store i64 -1, i64* %3
	br label %for.index.loop-1

for.index.loop-1:
	%11 = load i64, i64* %3, align 8
	%12 = add i64 %11, 1
	store i64 %12, i64* %3
	%13 = load i64, i64* %2, align 8
	%14 = icmp slt i64 %12, %13
	br i1 %14, label %for.index.body-2, label %for.index.done-3

for.index.body-2:
	%15 = load i64, i64* %3, align 8
	%16 = extractvalue {i32*, i64} %9, 0
	%17 = getelementptr inbounds i32, i32* %16, i64 %15
	%18 = load i32, i32* %17, align 4
	store i32 %18, i32* %1
	%19 = load void (i32, i32)*, void (i32, i32)** @gl-21.AttachShader, align 8
	%20 = load i32, i32* %0, align 4
	%21 = load i32, i32* %1, align 4
	call ccc void %19(i32 %20, i32 %21)
	br label %for.index.loop-1

for.index.done-3:
	%22 = load void (i32)*, void (i32)** @gl-21.LinkProgram, align 8
	%23 = load i32, i32* %0, align 4
	call ccc void %22(i32 %23)
	; IfStmt
	%24 = load i32, i32* %0, align 4
	%25 = load void (i32, i32, i32*)*, void (i32, i32, i32*)** @gl-21.GetProgramiv, align 8
	%26 = load void (i32, i32, i32*, i8*)*, void (i32, i32, i32*, i8*)** @gl-21.GetProgramInfoLog, align 8
	%27 = call i1 @gl-21.load_shaders.check_error-0(i32 %24, i32 0, i32 35714, void (i32, i32, i32*)* %25, void (i32, i32, i32*, i8*)* %26, %Context* noalias nonnull %__.context_ptr)
	br i1 %27, label %if.then-4, label %if.done-5

if.then-4:
	; ReturnStmt
	store {i32, i1} zeroinitializer, {i32, i1}* %4
	%28 = getelementptr inbounds {i32, i1}, {i32, i1}* %4, i64 0, i32 0
	store i32 0, i32* %28
	%29 = getelementptr inbounds {i32, i1}, {i32, i1}* %4, i64 0, i32 1
	store i1 false, i1* %29
	%30 = load {i32, i1}, {i32, i1}* %4, align 4
	%31 = bitcast {i32, i1}* %4 to i64*
	%32 = load i64, i64* %31, align 8
	ret i64 %32

if.done-5:
	; ReturnStmt
	%33 = load i32, i32* %0, align 4
	store {i32, i1} zeroinitializer, {i32, i1}* %5
	%34 = getelementptr inbounds {i32, i1}, {i32, i1}* %5, i64 0, i32 0
	store i32 %33, i32* %34
	%35 = getelementptr inbounds {i32, i1}, {i32, i1}* %5, i64 0, i32 1
	store i1 true, i1* %35
	%36 = load {i32, i1}, {i32, i1}* %5, align 4
	%37 = bitcast {i32, i1}* %5 to i64*
	%38 = load i64, i64* %37, align 8
	ret i64 %38
}

define void @decimal-24.trim(%decimal-24.Decimal* %a, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca %decimal-24.Decimal*, align 8
		store %decimal-24.Decimal* %a, %decimal-24.Decimal** %0
	; ForStmt
	br label %for.loop-1

for.loop-1:
	; SelectorExpr
	%1 = load %decimal-24.Decimal*, %decimal-24.Decimal** %0, align 8
	%2 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %1, i64 0
	%3 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %2, i64 0, i32 0
	%4 = load i64, i64* %3, align 8
	%5 = icmp sgt i64 %4, 0
	br i1 %5, label %cmp.and-2, label %for.done-4

cmp.and-2:
	; IndexExpr
	; SelectorExpr
	%6 = load %decimal-24.Decimal*, %decimal-24.Decimal** %0, align 8
	%7 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %6, i64 0
	%8 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %7, i64 0, i32 2
	; SelectorExpr
	%9 = load %decimal-24.Decimal*, %decimal-24.Decimal** %0, align 8
	%10 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %9, i64 0
	%11 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %10, i64 0, i32 0
	%12 = load i64, i64* %11, align 8
	%13 = sub i64 %12, 1
	%14 = trunc i64 %13 to i32
	%15 = getelementptr inbounds [384 x i8], [384 x i8]* %8, i64 0, i32 %14
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([33 x i8], [33 x i8]* @__str$422, i64 0, i32 0), i64 32}, i64 49, i64 32, i64 %13, i64 384)
	%16 = load i8, i8* %15, align 1
	%17 = icmp eq i8 %16, 48
	br i1 %17, label %for.body-3, label %for.done-4

for.body-3:
	; AssignStmt
	; SelectorExpr
	%18 = load %decimal-24.Decimal*, %decimal-24.Decimal** %0, align 8
	%19 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %18, i64 0
	%20 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %19, i64 0, i32 0
	%21 = load i64, i64* %20, align 8
	%22 = sub i64 %21, 1
	store i64 %22, i64* %20
	br label %for.loop-1

for.done-4:
	; IfStmt
	; SelectorExpr
	%23 = load %decimal-24.Decimal*, %decimal-24.Decimal** %0, align 8
	%24 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %23, i64 0
	%25 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %24, i64 0, i32 0
	%26 = load i64, i64* %25, align 8
	%27 = icmp eq i64 %26, 0
	br i1 %27, label %if.then-5, label %if.done-6

if.then-5:
	; AssignStmt
	; SelectorExpr
	%28 = load %decimal-24.Decimal*, %decimal-24.Decimal** %0, align 8
	%29 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %28, i64 0
	%30 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %29, i64 0, i32 1
	store i64 0, i64* %30
	br label %if.done-6

if.done-6:
	ret void
}

define void @decimal-24.assign(%decimal-24.Decimal* %a, i64 %i, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca %decimal-24.Decimal*, align 8
	%1 = alloca i64, align 8
	%2 = alloca [64 x i8], align 1
	%3 = alloca i64, align 8
	%4 = alloca i64, align 8
		store %decimal-24.Decimal* %a, %decimal-24.Decimal** %0
		store i64 %i, i64* %1
	; buf
	store [64 x i8] zeroinitializer, [64 x i8]* %2
		; n
		store i64 0, i64* %3
	; ForStmt
	br label %for.loop-1

for.loop-1:
	%5 = load i64, i64* %1, align 8
	%6 = icmp ugt i64 %5, 0
	br i1 %6, label %for.body-2, label %for.done-3

for.body-2:
	; j
		%7 = load i64, i64* %1, align 8
	%8 = udiv i64 %7, 10
	store i64 %8, i64* %4
	; AssignStmt
	%9 = load i64, i64* %4, align 8
	%10 = mul i64 10, %9
	%11 = load i64, i64* %1, align 8
	%12 = sub i64 %11, %10
	store i64 %12, i64* %1
	; AssignStmt
	; IndexExpr
	%13 = load i64, i64* %3, align 8
	%14 = trunc i64 %13 to i32
	%15 = getelementptr inbounds [64 x i8], [64 x i8]* %2, i64 0, i32 %14
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([33 x i8], [33 x i8]* @__str$423, i64 0, i32 0), i64 32}, i64 64, i64 7, i64 %13, i64 64)
	%16 = load i64, i64* %1, align 8
	%17 = add i64 48, %16
	%18 = trunc i64 %17 to i8
	store i8 %18, i8* %15
	; AssignStmt
	%19 = load i64, i64* %3, align 8
	%20 = add i64 %19, 1
	store i64 %20, i64* %3
	; AssignStmt
	%21 = load i64, i64* %4, align 8
	store i64 %21, i64* %1
	br label %for.loop-1

for.done-3:
	; AssignStmt
	; SelectorExpr
	%22 = load %decimal-24.Decimal*, %decimal-24.Decimal** %0, align 8
	%23 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %22, i64 0
	%24 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %23, i64 0, i32 0
	store i64 0, i64* %24
	; ForStmt
	; AssignStmt
	%25 = load i64, i64* %3, align 8
	%26 = sub i64 %25, 1
	store i64 %26, i64* %3
	br label %for.loop-4

for.loop-4:
	%27 = load i64, i64* %3, align 8
	%28 = icmp sge i64 %27, 0
	br i1 %28, label %for.body-5, label %for.done-6

for.body-5:
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%29 = load %decimal-24.Decimal*, %decimal-24.Decimal** %0, align 8
	%30 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %29, i64 0
	%31 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %30, i64 0, i32 2
	; SelectorExpr
	%32 = load %decimal-24.Decimal*, %decimal-24.Decimal** %0, align 8
	%33 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %32, i64 0
	%34 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %33, i64 0, i32 0
	%35 = load i64, i64* %34, align 8
	%36 = trunc i64 %35 to i32
	%37 = getelementptr inbounds [384 x i8], [384 x i8]* %31, i64 0, i32 %36
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([33 x i8], [33 x i8]* @__str$424, i64 0, i32 0), i64 32}, i64 71, i64 14, i64 %35, i64 384)
	; IndexExpr
	%38 = load i64, i64* %3, align 8
	%39 = trunc i64 %38 to i32
	%40 = getelementptr inbounds [64 x i8], [64 x i8]* %2, i64 0, i32 %39
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([33 x i8], [33 x i8]* @__str$425, i64 0, i32 0), i64 32}, i64 71, i64 27, i64 %38, i64 64)
	%41 = load i8, i8* %40, align 1
	store i8 %41, i8* %37
	; AssignStmt
	; SelectorExpr
	%42 = load %decimal-24.Decimal*, %decimal-24.Decimal** %0, align 8
	%43 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %42, i64 0
	%44 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %43, i64 0, i32 0
	%45 = load i64, i64* %44, align 8
	%46 = add i64 %45, 1
	store i64 %46, i64* %44
	; AssignStmt
	%47 = load i64, i64* %3, align 8
	%48 = sub i64 %47, 1
	store i64 %48, i64* %3
	br label %for.loop-4

for.done-6:
	; AssignStmt
	; SelectorExpr
	%49 = load %decimal-24.Decimal*, %decimal-24.Decimal** %0, align 8
	%50 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %49, i64 0
	%51 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %50, i64 0, i32 1
	; SelectorExpr
	%52 = load %decimal-24.Decimal*, %decimal-24.Decimal** %0, align 8
	%53 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %52, i64 0
	%54 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %53, i64 0, i32 0
	%55 = load i64, i64* %54, align 8
	store i64 %55, i64* %51
	%56 = load %decimal-24.Decimal*, %decimal-24.Decimal** %0, align 8
	call void @decimal-24.trim(%decimal-24.Decimal* %56, %Context* noalias nonnull %__.context_ptr)
	ret void
}

define void @decimal-24.shift_right(%decimal-24.Decimal* %a, i64 %k, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca %decimal-24.Decimal*, align 8
	%1 = alloca i64, align 8
	%2 = alloca i64, align 8
	%3 = alloca i64, align 8
	%4 = alloca i64, align 8
	%5 = alloca i64, align 8
	%6 = alloca i64, align 8
	%7 = alloca i64, align 8
	%8 = alloca i64, align 8
	%9 = alloca i64, align 8
		store %decimal-24.Decimal* %a, %decimal-24.Decimal** %0
		store i64 %k, i64* %1
	; r
		store i64 0, i64* %2
	; w
		store i64 0, i64* %3
	; n
	store i64 zeroinitializer, i64* %4
		; ForStmt
	br label %for.loop-1

for.loop-1:
	%10 = load i64, i64* %4, align 8
	%11 = load i64, i64* %1, align 8
	%12 = lshr i64 %10, %11
	%13 = icmp eq i64 %12, 0
	br i1 %13, label %for.body-2, label %for.done-10

for.body-2:
	; IfStmt
	%14 = load i64, i64* %2, align 8
	; SelectorExpr
	%15 = load %decimal-24.Decimal*, %decimal-24.Decimal** %0, align 8
	%16 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %15, i64 0
	%17 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %16, i64 0, i32 0
	%18 = load i64, i64* %17, align 8
	%19 = icmp sge i64 %14, %18
	br i1 %19, label %if.then-3, label %if.done-9

if.then-3:
	; IfStmt
	%20 = load i64, i64* %4, align 8
	%21 = icmp eq i64 %20, 0
	br i1 %21, label %if.then-4, label %if.done-5

if.then-4:
	; AssignStmt
	; SelectorExpr
	%22 = load %decimal-24.Decimal*, %decimal-24.Decimal** %0, align 8
	%23 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %22, i64 0
	%24 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %23, i64 0, i32 0
	store i64 0, i64* %24
	; ReturnStmt
	ret void

if.done-5:
	; ForStmt
	br label %for.loop-6

for.loop-6:
	%25 = load i64, i64* %4, align 8
	%26 = load i64, i64* %1, align 8
	%27 = lshr i64 %25, %26
	%28 = icmp eq i64 %27, 0
	br i1 %28, label %for.body-7, label %for.done-8

for.body-7:
	; AssignStmt
	%29 = load i64, i64* %4, align 8
	%30 = mul i64 %29, 10
	store i64 %30, i64* %4
	; AssignStmt
	%31 = load i64, i64* %2, align 8
	%32 = add i64 %31, 1
	store i64 %32, i64* %2
	br label %for.loop-6

for.done-8:
	; break
	br label %for.done-10

if.done-9:
	; c
		; IndexExpr
	; SelectorExpr
	%33 = load %decimal-24.Decimal*, %decimal-24.Decimal** %0, align 8
	%34 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %33, i64 0
	%35 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %34, i64 0, i32 2
	%36 = load i64, i64* %2, align 8
	%37 = trunc i64 %36 to i32
	%38 = getelementptr inbounds [384 x i8], [384 x i8]* %35, i64 0, i32 %37
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([33 x i8], [33 x i8]* @__str$426, i64 0, i32 0), i64 32}, i64 98, i64 22, i64 %36, i64 384)
	%39 = load i8, i8* %38, align 1
	%40 = zext i8 %39 to i64
	store i64 %40, i64* %5
	; AssignStmt
	%41 = load i64, i64* %4, align 8
	%42 = mul i64 %41, 10
	%43 = load i64, i64* %5, align 8
	%44 = add i64 %42, %43
	%45 = sub i64 %44, 48
	store i64 %45, i64* %4
	; AssignStmt
	%46 = load i64, i64* %2, align 8
	%47 = add i64 %46, 1
	store i64 %47, i64* %2
	br label %for.loop-1

for.done-10:
	; AssignStmt
	; SelectorExpr
	%48 = load %decimal-24.Decimal*, %decimal-24.Decimal** %0, align 8
	%49 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %48, i64 0
	%50 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %49, i64 0, i32 1
	%51 = load i64, i64* %2, align 8
	%52 = sub i64 %51, 1
	%53 = load i64, i64* %50, align 8
	%54 = sub i64 %53, %52
	store i64 %54, i64* %50
	; mask
		%55 = load i64, i64* %1, align 8
	%56 = shl i64 1, %55
	%57 = bitcast i64 %56 to i64
	%58 = sub i64 %57, 1
	%59 = bitcast i64 %58 to i64
	store i64 %59, i64* %6
	; ForStmt
	br label %for.loop-11

for.loop-11:
	%60 = load i64, i64* %2, align 8
	; SelectorExpr
	%61 = load %decimal-24.Decimal*, %decimal-24.Decimal** %0, align 8
	%62 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %61, i64 0
	%63 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %62, i64 0, i32 0
	%64 = load i64, i64* %63, align 8
	%65 = icmp slt i64 %60, %64
	br i1 %65, label %for.body-12, label %for.done-13

for.body-12:
	; c
		; IndexExpr
	; SelectorExpr
	%66 = load %decimal-24.Decimal*, %decimal-24.Decimal** %0, align 8
	%67 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %66, i64 0
	%68 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %67, i64 0, i32 2
	%69 = load i64, i64* %2, align 8
	%70 = trunc i64 %69 to i32
	%71 = getelementptr inbounds [384 x i8], [384 x i8]* %68, i64 0, i32 %70
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([33 x i8], [33 x i8]* @__str$427, i64 0, i32 0), i64 32}, i64 106, i64 22, i64 %69, i64 384)
	%72 = load i8, i8* %71, align 1
	%73 = zext i8 %72 to i64
	store i64 %73, i64* %7
	; dig
		%74 = load i64, i64* %4, align 8
	%75 = load i64, i64* %1, align 8
	%76 = lshr i64 %74, %75
	store i64 %76, i64* %8
	; AssignStmt
	%77 = load i64, i64* %6, align 8
	%78 = load i64, i64* %4, align 8
	%79 = and i64 %78, %77
	store i64 %79, i64* %4
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%80 = load %decimal-24.Decimal*, %decimal-24.Decimal** %0, align 8
	%81 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %80, i64 0
	%82 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %81, i64 0, i32 2
	%83 = load i64, i64* %3, align 8
	%84 = trunc i64 %83 to i32
	%85 = getelementptr inbounds [384 x i8], [384 x i8]* %82, i64 0, i32 %84
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([33 x i8], [33 x i8]* @__str$428, i64 0, i32 0), i64 32}, i64 109, i64 12, i64 %83, i64 384)
	%86 = load i64, i64* %8, align 8
	%87 = add i64 48, %86
	%88 = trunc i64 %87 to i8
	store i8 %88, i8* %85
	; AssignStmt
	%89 = load i64, i64* %3, align 8
	%90 = add i64 %89, 1
	store i64 %90, i64* %3
	; AssignStmt
	%91 = load i64, i64* %4, align 8
	%92 = mul i64 %91, 10
	%93 = load i64, i64* %7, align 8
	%94 = add i64 %92, %93
	%95 = sub i64 %94, 48
	store i64 %95, i64* %4
	; AssignStmt
	%96 = load i64, i64* %2, align 8
	%97 = add i64 %96, 1
	store i64 %97, i64* %2
	br label %for.loop-11

for.done-13:
	; ForStmt
	br label %for.loop-14

for.loop-14:
	%98 = load i64, i64* %4, align 8
	%99 = icmp ugt i64 %98, 0
	br i1 %99, label %for.body-15, label %for.done-21

for.body-15:
	; dig
		%100 = load i64, i64* %4, align 8
	%101 = load i64, i64* %1, align 8
	%102 = lshr i64 %100, %101
	store i64 %102, i64* %9
	; AssignStmt
	%103 = load i64, i64* %6, align 8
	%104 = load i64, i64* %4, align 8
	%105 = and i64 %104, %103
	store i64 %105, i64* %4
	; IfStmt
	%106 = load i64, i64* %3, align 8
	%107 = icmp slt i64 %106, 384
	br i1 %107, label %if.then-16, label %if.else-17

if.then-16:
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%108 = load %decimal-24.Decimal*, %decimal-24.Decimal** %0, align 8
	%109 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %108, i64 0
	%110 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %109, i64 0, i32 2
	%111 = load i64, i64* %3, align 8
	%112 = trunc i64 %111 to i32
	%113 = getelementptr inbounds [384 x i8], [384 x i8]* %110, i64 0, i32 %112
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([33 x i8], [33 x i8]* @__str$429, i64 0, i32 0), i64 32}, i64 118, i64 13, i64 %111, i64 384)
	%114 = load i64, i64* %9, align 8
	%115 = add i64 48, %114
	%116 = trunc i64 %115 to i8
	store i8 %116, i8* %113
	; AssignStmt
	%117 = load i64, i64* %3, align 8
	%118 = add i64 %117, 1
	store i64 %118, i64* %3
	br label %if.done-20

if.else-17:
	; IfStmt
	%119 = load i64, i64* %9, align 8
	%120 = icmp ugt i64 %119, 0
	br i1 %120, label %if.then-18, label %if.done-19

if.then-18:
	; AssignStmt
	; SelectorExpr
	%121 = load %decimal-24.Decimal*, %decimal-24.Decimal** %0, align 8
	%122 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %121, i64 0
	%123 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %122, i64 0, i32 4
	store i1 true, i1* %123
	br label %if.done-19

if.done-19:
	br label %if.done-20

if.done-20:
	; AssignStmt
	%124 = load i64, i64* %4, align 8
	%125 = mul i64 %124, 10
	store i64 %125, i64* %4
	br label %for.loop-14

for.done-21:
	; AssignStmt
	; SelectorExpr
	%126 = load %decimal-24.Decimal*, %decimal-24.Decimal** %0, align 8
	%127 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %126, i64 0
	%128 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %127, i64 0, i32 0
	%129 = load i64, i64* %3, align 8
	store i64 %129, i64* %128
	%130 = load %decimal-24.Decimal*, %decimal-24.Decimal** %0, align 8
	call void @decimal-24.trim(%decimal-24.Decimal* %130, %Context* noalias nonnull %__.context_ptr)
	ret void
}

define void @decimal-24.shift_left(%decimal-24.Decimal* %a, i64 %k, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca %decimal-24.Decimal*, align 8
	%1 = alloca i64, align 8
	%2 = alloca i64, align 8
	%3 = alloca i64, align 8
	%4 = alloca i64, align 8
	%5 = alloca i64, align 8
	%6 = alloca i64, align 8
	%7 = alloca i64, align 8
	%8 = alloca i64, align 8
	%9 = alloca i64, align 8
		store %decimal-24.Decimal* %a, %decimal-24.Decimal** %0
		store i64 %k, i64* %1
	; delta
		%10 = load i64, i64* %1, align 8
	%11 = udiv i64 %10, 4
	%12 = bitcast i64 %11 to i64
	store i64 %12, i64* %2
	; r
		; SelectorExpr
	%13 = load %decimal-24.Decimal*, %decimal-24.Decimal** %0, align 8
	%14 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %13, i64 0
	%15 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %14, i64 0, i32 0
	%16 = load i64, i64* %15, align 8
	store i64 %16, i64* %3
	; w
		; SelectorExpr
	%17 = load %decimal-24.Decimal*, %decimal-24.Decimal** %0, align 8
	%18 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %17, i64 0
	%19 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %18, i64 0, i32 0
	%20 = load i64, i64* %19, align 8
	%21 = load i64, i64* %2, align 8
	%22 = add i64 %20, %21
	store i64 %22, i64* %4
	; n
	store i64 zeroinitializer, i64* %5
		; ForStmt
	; AssignStmt
	%23 = load i64, i64* %3, align 8
	%24 = sub i64 %23, 1
	store i64 %24, i64* %3
	br label %for.loop-1

for.loop-1:
	%25 = load i64, i64* %3, align 8
	%26 = icmp sge i64 %25, 0
	br i1 %26, label %for.body-2, label %for.done-8

for.body-2:
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%27 = load %decimal-24.Decimal*, %decimal-24.Decimal** %0, align 8
	%28 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %27, i64 0
	%29 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %28, i64 0, i32 2
	%30 = load i64, i64* %3, align 8
	%31 = trunc i64 %30 to i32
	%32 = getelementptr inbounds [384 x i8], [384 x i8]* %29, i64 0, i32 %31
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([33 x i8], [33 x i8]* @__str$42a, i64 0, i32 0), i64 32}, i64 139, i64 23, i64 %30, i64 384)
	%33 = load i8, i8* %32, align 1
	%34 = zext i8 %33 to i64
	%35 = sub i64 %34, 48
	%36 = load i64, i64* %1, align 8
	%37 = shl i64 %35, %36
	%38 = load i64, i64* %5, align 8
	%39 = add i64 %38, %37
	store i64 %39, i64* %5
	; quo
		%40 = load i64, i64* %5, align 8
	%41 = udiv i64 %40, 10
	store i64 %41, i64* %6
	; rem
		%42 = load i64, i64* %5, align 8
	%43 = load i64, i64* %6, align 8
	%44 = mul i64 10, %43
	%45 = sub i64 %42, %44
	store i64 %45, i64* %7
	; AssignStmt
	%46 = load i64, i64* %4, align 8
	%47 = sub i64 %46, 1
	store i64 %47, i64* %4
	; IfStmt
	%48 = load i64, i64* %4, align 8
	%49 = icmp slt i64 %48, 384
	br i1 %49, label %if.then-3, label %if.else-4

if.then-3:
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%50 = load %decimal-24.Decimal*, %decimal-24.Decimal** %0, align 8
	%51 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %50, i64 0
	%52 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %51, i64 0, i32 2
	%53 = load i64, i64* %4, align 8
	%54 = trunc i64 %53 to i32
	%55 = getelementptr inbounds [384 x i8], [384 x i8]* %52, i64 0, i32 %54
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([33 x i8], [33 x i8]* @__str$42b, i64 0, i32 0), i64 32}, i64 144, i64 13, i64 %53, i64 384)
	%56 = load i64, i64* %7, align 8
	%57 = add i64 48, %56
	%58 = trunc i64 %57 to i8
	store i8 %58, i8* %55
	br label %if.done-7

if.else-4:
	; IfStmt
	%59 = load i64, i64* %7, align 8
	%60 = icmp ne i64 %59, 0
	br i1 %60, label %if.then-5, label %if.done-6

if.then-5:
	; AssignStmt
	; SelectorExpr
	%61 = load %decimal-24.Decimal*, %decimal-24.Decimal** %0, align 8
	%62 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %61, i64 0
	%63 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %62, i64 0, i32 4
	store i1 true, i1* %63
	br label %if.done-6

if.done-6:
	br label %if.done-7

if.done-7:
	; AssignStmt
	%64 = load i64, i64* %6, align 8
	store i64 %64, i64* %5
	; AssignStmt
	%65 = load i64, i64* %3, align 8
	%66 = sub i64 %65, 1
	store i64 %66, i64* %3
	br label %for.loop-1

for.done-8:
	; ForStmt
	br label %for.loop-9

for.loop-9:
	%67 = load i64, i64* %5, align 8
	%68 = icmp ugt i64 %67, 0
	br i1 %68, label %for.body-10, label %for.done-17

for.body-10:
	; quo
		%69 = load i64, i64* %5, align 8
	%70 = udiv i64 %69, 10
	store i64 %70, i64* %8
	; rem
		%71 = load i64, i64* %5, align 8
	%72 = load i64, i64* %8, align 8
	%73 = mul i64 10, %72
	%74 = sub i64 %71, %73
	store i64 %74, i64* %9
	; AssignStmt
	%75 = load i64, i64* %4, align 8
	%76 = sub i64 %75, 1
	store i64 %76, i64* %4
	; IfStmt
	%77 = load i64, i64* %4, align 8
	%78 = icmp sle i64 0, %77
	br i1 %78, label %cmp.and-11, label %if.else-13

cmp.and-11:
	%79 = load i64, i64* %4, align 8
	%80 = icmp slt i64 %79, 384
	br i1 %80, label %if.then-12, label %if.else-13

if.then-12:
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%81 = load %decimal-24.Decimal*, %decimal-24.Decimal** %0, align 8
	%82 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %81, i64 0
	%83 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %82, i64 0, i32 2
	%84 = load i64, i64* %4, align 8
	%85 = trunc i64 %84 to i32
	%86 = getelementptr inbounds [384 x i8], [384 x i8]* %83, i64 0, i32 %85
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([33 x i8], [33 x i8]* @__str$42c, i64 0, i32 0), i64 32}, i64 156, i64 13, i64 %84, i64 384)
	%87 = load i64, i64* %9, align 8
	%88 = add i64 48, %87
	%89 = trunc i64 %88 to i8
	store i8 %89, i8* %86
	br label %if.done-16

if.else-13:
	; IfStmt
	%90 = load i64, i64* %9, align 8
	%91 = icmp ne i64 %90, 0
	br i1 %91, label %if.then-14, label %if.done-15

if.then-14:
	; AssignStmt
	; SelectorExpr
	%92 = load %decimal-24.Decimal*, %decimal-24.Decimal** %0, align 8
	%93 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %92, i64 0
	%94 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %93, i64 0, i32 4
	store i1 true, i1* %94
	br label %if.done-15

if.done-15:
	br label %if.done-16

if.done-16:
	; AssignStmt
	%95 = load i64, i64* %8, align 8
	store i64 %95, i64* %5
	br label %for.loop-9

for.done-17:
	; AssignStmt
	; SelectorExpr
	%96 = load %decimal-24.Decimal*, %decimal-24.Decimal** %0, align 8
	%97 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %96, i64 0
	%98 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %97, i64 0, i32 0
	%99 = load i64, i64* %2, align 8
	%100 = load i64, i64* %98, align 8
	%101 = add i64 %100, %99
	store i64 %101, i64* %98
	; AssignStmt
	; SelectorExpr
	%102 = load %decimal-24.Decimal*, %decimal-24.Decimal** %0, align 8
	%103 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %102, i64 0
	%104 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %103, i64 0, i32 0
	; min
	; SelectorExpr
	%105 = load %decimal-24.Decimal*, %decimal-24.Decimal** %0, align 8
	%106 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %105, i64 0
	%107 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %106, i64 0, i32 0
	%108 = load i64, i64* %107, align 8
	%109 = icmp slt i64 %108, 384
	%110 = select i1 %109, i64 %108, i64 384
	store i64 %110, i64* %104
	; AssignStmt
	; SelectorExpr
	%111 = load %decimal-24.Decimal*, %decimal-24.Decimal** %0, align 8
	%112 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %111, i64 0
	%113 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %112, i64 0, i32 1
	%114 = load i64, i64* %2, align 8
	%115 = load i64, i64* %113, align 8
	%116 = add i64 %115, %114
	store i64 %116, i64* %113
	%117 = load %decimal-24.Decimal*, %decimal-24.Decimal** %0, align 8
	call void @decimal-24.trim(%decimal-24.Decimal* %117, %Context* noalias nonnull %__.context_ptr)
	ret void
}

define void @decimal-24.shift(%decimal-24.Decimal* %a, i64 %k, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca %decimal-24.Decimal*, align 8
	%1 = alloca i64, align 8
		store %decimal-24.Decimal* %a, %decimal-24.Decimal** %0
		store i64 %k, i64* %1
	; SwitchStmt
	; SelectorExpr
	%2 = load %decimal-24.Decimal*, %decimal-24.Decimal** %0, align 8
	%3 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %2, i64 0
	%4 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %3, i64 0, i32 0
	%5 = load i64, i64* %4, align 8
	%6 = icmp eq i64 %5, 0
	%7 = icmp eq i1 true, %6
	br i1 %7, label %switch.case.body-2, label %switch.case.next-1

switch.case.next-1:
	%8 = load i64, i64* %1, align 8
	%9 = icmp sgt i64 %8, 0
	%10 = icmp eq i1 true, %9
	br i1 %10, label %switch.fall.body-4, label %switch.case.next-3

switch.case.body-2:
	br label %switch.done-13

switch.case.next-3:
	%11 = load i64, i64* %1, align 8
	%12 = icmp slt i64 %11, 0
	%13 = icmp eq i1 true, %12
	br i1 %13, label %switch.fall.body-9, label %switch.case.next-8

switch.fall.body-4:
	; ForStmt
	br label %for.loop-5

for.loop-5:
	%14 = load i64, i64* %1, align 8
	%15 = icmp sgt i64 %14, 60
	br i1 %15, label %for.body-6, label %for.done-7

for.body-6:
	%16 = load %decimal-24.Decimal*, %decimal-24.Decimal** %0, align 8
	call void @decimal-24.shift_left(%decimal-24.Decimal* %16, i64 60, %Context* noalias nonnull %__.context_ptr)
	; AssignStmt
	%17 = load i64, i64* %1, align 8
	%18 = sub i64 %17, 60
	store i64 %18, i64* %1
	br label %for.loop-5

for.done-7:
	%19 = load %decimal-24.Decimal*, %decimal-24.Decimal** %0, align 8
	%20 = load i64, i64* %1, align 8
	%21 = bitcast i64 %20 to i64
	call void @decimal-24.shift_left(%decimal-24.Decimal* %19, i64 %21, %Context* noalias nonnull %__.context_ptr)
	br label %switch.done-13

switch.case.next-8:
	br label %switch.done-13

switch.fall.body-9:
	; ForStmt
	br label %for.loop-10

for.loop-10:
	%22 = load i64, i64* %1, align 8
	%23 = icmp slt i64 %22, -60
	br i1 %23, label %for.body-11, label %for.done-12

for.body-11:
	%24 = load %decimal-24.Decimal*, %decimal-24.Decimal** %0, align 8
	call void @decimal-24.shift_right(%decimal-24.Decimal* %24, i64 60, %Context* noalias nonnull %__.context_ptr)
	; AssignStmt
	%25 = load i64, i64* %1, align 8
	%26 = add i64 %25, 60
	store i64 %26, i64* %1
	br label %for.loop-10

for.done-12:
	%27 = load %decimal-24.Decimal*, %decimal-24.Decimal** %0, align 8
	%28 = load i64, i64* %1, align 8
	%29 = sub i64 0, %28
	%30 = bitcast i64 %29 to i64
	call void @decimal-24.shift_right(%decimal-24.Decimal* %27, i64 %30, %Context* noalias nonnull %__.context_ptr)
	br label %switch.done-13

switch.done-13:
	ret void
}

define i1 @decimal-24.can_round_up(%decimal-24.Decimal* %a, i64 %nd, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca %decimal-24.Decimal*, align 8
	%1 = alloca i64, align 8
		store %decimal-24.Decimal* %a, %decimal-24.Decimal** %0
		store i64 %nd, i64* %1
	; IfStmt
	%2 = load i64, i64* %1, align 8
	%3 = icmp slt i64 %2, 0
	br i1 %3, label %if.then-2, label %cmp.or-1

cmp.or-1:
	%4 = load i64, i64* %1, align 8
	; SelectorExpr
	%5 = load %decimal-24.Decimal*, %decimal-24.Decimal** %0, align 8
	%6 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %5, i64 0
	%7 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %6, i64 0, i32 0
	%8 = load i64, i64* %7, align 8
	%9 = icmp sge i64 %4, %8
	br i1 %9, label %if.then-2, label %if.done-3

if.then-2:
	; ReturnStmt
	ret i1 false

if.done-3:
	; IfStmt
	; IndexExpr
	; SelectorExpr
	%10 = load %decimal-24.Decimal*, %decimal-24.Decimal** %0, align 8
	%11 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %10, i64 0
	%12 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %11, i64 0, i32 2
	%13 = load i64, i64* %1, align 8
	%14 = trunc i64 %13 to i32
	%15 = getelementptr inbounds [384 x i8], [384 x i8]* %12, i64 0, i32 %14
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([33 x i8], [33 x i8]* @__str$42d, i64 0, i32 0), i64 32}, i64 195, i64 14, i64 %13, i64 384)
	%16 = load i8, i8* %15, align 1
	%17 = icmp eq i8 %16, 53
	br i1 %17, label %cmp.and-4, label %if.done-10

cmp.and-4:
	%18 = load i64, i64* %1, align 8
	%19 = add i64 %18, 1
	; SelectorExpr
	%20 = load %decimal-24.Decimal*, %decimal-24.Decimal** %0, align 8
	%21 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %20, i64 0
	%22 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %21, i64 0, i32 0
	%23 = load i64, i64* %22, align 8
	%24 = icmp eq i64 %19, %23
	br i1 %24, label %if.then-5, label %if.done-10

if.then-5:
	; IfStmt
	; SelectorExpr
	%25 = load %decimal-24.Decimal*, %decimal-24.Decimal** %0, align 8
	%26 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %25, i64 0
	%27 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %26, i64 0, i32 4
	%28 = load i1, i1* %27, align 1
	br i1 %28, label %if.then-6, label %if.done-7

if.then-6:
	; ReturnStmt
	ret i1 true

if.done-7:
	; ReturnStmt
	%29 = load i64, i64* %1, align 8
	%30 = icmp sgt i64 %29, 0
	%31 = load i64, i64* %1, align 8
	%32 = icmp sgt i64 %31, 0
	br i1 %32, label %logical.cmp.rhs-8, label %logical.cmp.done-9

logical.cmp.rhs-8:
	; IndexExpr
	; SelectorExpr
	%33 = load %decimal-24.Decimal*, %decimal-24.Decimal** %0, align 8
	%34 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %33, i64 0
	%35 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %34, i64 0, i32 2
	%36 = load i64, i64* %1, align 8
	%37 = sub i64 %36, 1
	%38 = trunc i64 %37 to i32
	%39 = getelementptr inbounds [384 x i8], [384 x i8]* %35, i64 0, i32 %38
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([33 x i8], [33 x i8]* @__str$42e, i64 0, i32 0), i64 32}, i64 197, i64 30, i64 %37, i64 384)
	%40 = load i8, i8* %39, align 1
	%41 = sub i8 %40, 48
	%42 = urem i8 %41, 2
	%43 = icmp ne i8 %42, 0
	br label %logical.cmp.done-9

logical.cmp.done-9:
	%44 = phi i1 [ false, %if.done-7 ], [ %43, %logical.cmp.rhs-8 ]
	ret i1 %44

if.done-10:
	; ReturnStmt
	; IndexExpr
	; SelectorExpr
	%45 = load %decimal-24.Decimal*, %decimal-24.Decimal** %0, align 8
	%46 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %45, i64 0
	%47 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %46, i64 0, i32 2
	%48 = load i64, i64* %1, align 8
	%49 = trunc i64 %48 to i32
	%50 = getelementptr inbounds [384 x i8], [384 x i8]* %47, i64 0, i32 %49
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([33 x i8], [33 x i8]* @__str$42f, i64 0, i32 0), i64 32}, i64 200, i64 18, i64 %48, i64 384)
	%51 = load i8, i8* %50, align 1
	%52 = icmp uge i8 %51, 53
	ret i1 %52
}

define void @decimal-24.round(%decimal-24.Decimal* %a, i64 %nd, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca %decimal-24.Decimal*, align 8
	%1 = alloca i64, align 8
		store %decimal-24.Decimal* %a, %decimal-24.Decimal** %0
		store i64 %nd, i64* %1
	; IfStmt
	%2 = load i64, i64* %1, align 8
	%3 = icmp slt i64 %2, 0
	br i1 %3, label %if.then-2, label %cmp.or-1

cmp.or-1:
	%4 = load i64, i64* %1, align 8
	; SelectorExpr
	%5 = load %decimal-24.Decimal*, %decimal-24.Decimal** %0, align 8
	%6 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %5, i64 0
	%7 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %6, i64 0, i32 0
	%8 = load i64, i64* %7, align 8
	%9 = icmp sge i64 %4, %8
	br i1 %9, label %if.then-2, label %if.done-3

if.then-2:
	; ReturnStmt
	ret void

if.done-3:
	; IfStmt
	%10 = load %decimal-24.Decimal*, %decimal-24.Decimal** %0, align 8
	%11 = load i64, i64* %1, align 8
	%12 = call i1 @decimal-24.can_round_up(%decimal-24.Decimal* %10, i64 %11, %Context* noalias nonnull %__.context_ptr)
	br i1 %12, label %if.then-4, label %if.else-5

if.then-4:
	%13 = load %decimal-24.Decimal*, %decimal-24.Decimal** %0, align 8
	%14 = load i64, i64* %1, align 8
	call void @decimal-24.round_up(%decimal-24.Decimal* %13, i64 %14, %Context* noalias nonnull %__.context_ptr)
	br label %if.done-6

if.else-5:
	%15 = load %decimal-24.Decimal*, %decimal-24.Decimal** %0, align 8
	%16 = load i64, i64* %1, align 8
	call void @decimal-24.round_down(%decimal-24.Decimal* %15, i64 %16, %Context* noalias nonnull %__.context_ptr)
	br label %if.done-6

if.done-6:
	ret void
}

define void @decimal-24.round_up(%decimal-24.Decimal* %a, i64 %nd, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca %decimal-24.Decimal*, align 8
	%1 = alloca i64, align 8
	%2 = alloca i64, align 8
	%3 = alloca i8, align 1
		store %decimal-24.Decimal* %a, %decimal-24.Decimal** %0
		store i64 %nd, i64* %1
	; IfStmt
	%4 = load i64, i64* %1, align 8
	%5 = icmp slt i64 %4, 0
	br i1 %5, label %if.then-2, label %cmp.or-1

cmp.or-1:
	%6 = load i64, i64* %1, align 8
	; SelectorExpr
	%7 = load %decimal-24.Decimal*, %decimal-24.Decimal** %0, align 8
	%8 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %7, i64 0
	%9 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %8, i64 0, i32 0
	%10 = load i64, i64* %9, align 8
	%11 = icmp sge i64 %6, %10
	br i1 %11, label %if.then-2, label %if.done-3

if.then-2:
	; ReturnStmt
	ret void

if.done-3:
	; ForStmt
	; i
		%12 = load i64, i64* %1, align 8
	%13 = sub i64 %12, 1
	store i64 %13, i64* %2
	br label %for.loop-4

for.loop-4:
	%14 = load i64, i64* %2, align 8
	%15 = icmp sge i64 %14, 0
	br i1 %15, label %for.body-5, label %for.done-8

for.body-5:
	; IfStmt
	; c
		; IndexExpr
	; SelectorExpr
	%16 = load %decimal-24.Decimal*, %decimal-24.Decimal** %0, align 8
	%17 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %16, i64 0
	%18 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %17, i64 0, i32 2
	%19 = load i64, i64* %2, align 8
	%20 = trunc i64 %19 to i32
	%21 = getelementptr inbounds [384 x i8], [384 x i8]* %18, i64 0, i32 %20
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([33 x i8], [33 x i8]* @__str$430, i64 0, i32 0), i64 32}, i64 216, i64 20, i64 %19, i64 384)
	%22 = load i8, i8* %21, align 1
	store i8 %22, i8* %3
	%23 = load i8, i8* %3, align 1
	%24 = icmp ult i8 %23, 57
	br i1 %24, label %if.then-6, label %if.done-7

if.then-6:
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%25 = load %decimal-24.Decimal*, %decimal-24.Decimal** %0, align 8
	%26 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %25, i64 0
	%27 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %26, i64 0, i32 2
	%28 = load i64, i64* %2, align 8
	%29 = trunc i64 %28 to i32
	%30 = getelementptr inbounds [384 x i8], [384 x i8]* %27, i64 0, i32 %29
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([33 x i8], [33 x i8]* @__str$431, i64 0, i32 0), i64 32}, i64 217, i64 13, i64 %28, i64 384)
	%31 = load i8, i8* %30, align 1
	%32 = add i8 %31, 1
	store i8 %32, i8* %30
	; AssignStmt
	; SelectorExpr
	%33 = load %decimal-24.Decimal*, %decimal-24.Decimal** %0, align 8
	%34 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %33, i64 0
	%35 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %34, i64 0, i32 0
	%36 = load i64, i64* %2, align 8
	%37 = add i64 %36, 1
	store i64 %37, i64* %35
	; ReturnStmt
	ret void

if.done-7:
	; AssignStmt
	%38 = load i64, i64* %2, align 8
	%39 = sub i64 %38, 1
	store i64 %39, i64* %2
	br label %for.loop-4

for.done-8:
	; AssignStmt
	; IndexExpr
	; SelectorExpr
	%40 = load %decimal-24.Decimal*, %decimal-24.Decimal** %0, align 8
	%41 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %40, i64 0
	%42 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %41, i64 0, i32 2
	%43 = getelementptr inbounds [384 x i8], [384 x i8]* %42, i64 0, i32 0
	store i8 49, i8* %43
	; AssignStmt
	; SelectorExpr
	%44 = load %decimal-24.Decimal*, %decimal-24.Decimal** %0, align 8
	%45 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %44, i64 0
	%46 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %45, i64 0, i32 0
	store i64 1, i64* %46
	; AssignStmt
	; SelectorExpr
	%47 = load %decimal-24.Decimal*, %decimal-24.Decimal** %0, align 8
	%48 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %47, i64 0
	%49 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %48, i64 0, i32 1
	%50 = load i64, i64* %49, align 8
	%51 = add i64 %50, 1
	store i64 %51, i64* %49
	ret void
}

define void @decimal-24.round_down(%decimal-24.Decimal* %a, i64 %nd, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca %decimal-24.Decimal*, align 8
	%1 = alloca i64, align 8
		store %decimal-24.Decimal* %a, %decimal-24.Decimal** %0
		store i64 %nd, i64* %1
	; IfStmt
	%2 = load i64, i64* %1, align 8
	%3 = icmp slt i64 %2, 0
	br i1 %3, label %if.then-2, label %cmp.or-1

cmp.or-1:
	%4 = load i64, i64* %1, align 8
	; SelectorExpr
	%5 = load %decimal-24.Decimal*, %decimal-24.Decimal** %0, align 8
	%6 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %5, i64 0
	%7 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %6, i64 0, i32 0
	%8 = load i64, i64* %7, align 8
	%9 = icmp sge i64 %4, %8
	br i1 %9, label %if.then-2, label %if.done-3

if.then-2:
	; ReturnStmt
	ret void

if.done-3:
	; AssignStmt
	; SelectorExpr
	%10 = load %decimal-24.Decimal*, %decimal-24.Decimal** %0, align 8
	%11 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %10, i64 0
	%12 = getelementptr inbounds %decimal-24.Decimal, %decimal-24.Decimal* %11, i64 0, i32 0
	%13 = load i64, i64* %1, align 8
	store i64 %13, i64* %12
	%14 = load %decimal-24.Decimal*, %decimal-24.Decimal** %0, align 8
	call void @decimal-24.trim(%decimal-24.Decimal* %14, %Context* noalias nonnull %__.context_ptr)
	ret void
}

define i64 @_preload-0.append-12671({%engine-10.Sprite*, i64, i64, %Allocator}* %array, {%engine-10.Sprite*, i64}* %args, %Source_Code_Location* %loc, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca {%engine-10.Sprite*, i64, i64, %Allocator}*, align 8
	%1 = alloca i64, align 8
	%2 = alloca i64, align 8
	%3 = alloca %Source_Code_Location, align 16
	%4 = alloca %raw-6.Dynamic_Array*, align 8
	%5 = alloca %engine-10.Sprite*, align 8
	%6 = alloca {%..any*, i64}, align 8
	%7 = alloca {%..any*, i64}, align 16
	%8 = alloca %Source_Code_Location, align 16
		store {%engine-10.Sprite*, i64, i64, %Allocator}* %array, {%engine-10.Sprite*, i64, i64, %Allocator}** %0
	%9 = load {%engine-10.Sprite*, i64}, {%engine-10.Sprite*, i64}* %args, align 8
	%10 = load %Source_Code_Location, %Source_Code_Location* %loc, align 8
	; IfStmt
	%11 = load {%engine-10.Sprite*, i64, i64, %Allocator}*, {%engine-10.Sprite*, i64, i64, %Allocator}** %0, align 8
	%12 = icmp eq {%engine-10.Sprite*, i64, i64, %Allocator}* %11, zeroinitializer
	br i1 %12, label %if.then-1, label %if.done-2

if.then-1:
	; ReturnStmt
	ret i64 0

if.done-2:
	; arg_len
		%13 = load {%engine-10.Sprite*, i64}, {%engine-10.Sprite*, i64}* %args, align 8
	%14 = extractvalue {%engine-10.Sprite*, i64} %13, 1
	store i64 %14, i64* %1
	; IfStmt
	%15 = load i64, i64* %1, align 8
	%16 = icmp sle i64 %15, 0
	br i1 %16, label %if.then-3, label %if.done-4

if.then-3:
	; ReturnStmt
	%17 = load {%engine-10.Sprite*, i64, i64, %Allocator}*, {%engine-10.Sprite*, i64, i64, %Allocator}** %0, align 8
	%18 = load {%engine-10.Sprite*, i64, i64, %Allocator}, {%engine-10.Sprite*, i64, i64, %Allocator}* %17, align 8
	%19 = extractvalue {%engine-10.Sprite*, i64, i64, %Allocator} %18, 1
	ret i64 %19

if.done-4:
	; IfStmt
	%20 = load {%engine-10.Sprite*, i64, i64, %Allocator}*, {%engine-10.Sprite*, i64, i64, %Allocator}** %0, align 8
	%21 = load {%engine-10.Sprite*, i64, i64, %Allocator}, {%engine-10.Sprite*, i64, i64, %Allocator}* %20, align 8
	%22 = extractvalue {%engine-10.Sprite*, i64, i64, %Allocator} %21, 2
	%23 = load {%engine-10.Sprite*, i64, i64, %Allocator}*, {%engine-10.Sprite*, i64, i64, %Allocator}** %0, align 8
	%24 = load {%engine-10.Sprite*, i64, i64, %Allocator}, {%engine-10.Sprite*, i64, i64, %Allocator}* %23, align 8
	%25 = extractvalue {%engine-10.Sprite*, i64, i64, %Allocator} %24, 1
	%26 = load i64, i64* %1, align 8
	%27 = add i64 %25, %26
	%28 = icmp sle i64 %22, %27
	br i1 %28, label %if.then-5, label %if.done-6

if.then-5:
	; cap
		%29 = load {%engine-10.Sprite*, i64, i64, %Allocator}*, {%engine-10.Sprite*, i64, i64, %Allocator}** %0, align 8
	%30 = load {%engine-10.Sprite*, i64, i64, %Allocator}, {%engine-10.Sprite*, i64, i64, %Allocator}* %29, align 8
	%31 = extractvalue {%engine-10.Sprite*, i64, i64, %Allocator} %30, 2
	%32 = mul i64 2, %31
	; max
	%33 = load i64, i64* %1, align 8
	%34 = icmp sgt i64 8, %33
	%35 = select i1 %34, i64 8, i64 %33
	%36 = add i64 %32, %35
	store i64 %36, i64* %2
	; AssignStmt
	%37 = load {%engine-10.Sprite*, i64, i64, %Allocator}*, {%engine-10.Sprite*, i64, i64, %Allocator}** %0, align 8
	%38 = load i64, i64* %2, align 8
	%39 = load %Source_Code_Location, %Source_Code_Location* %loc, align 8
	store %Source_Code_Location zeroinitializer, %Source_Code_Location* %3
	store %Source_Code_Location %39, %Source_Code_Location* %3
	%40 = call i1 @_preload-0.reserve-14052({%engine-10.Sprite*, i64, i64, %Allocator}* %37, i64 %38, %Source_Code_Location* %3, %Context* noalias nonnull %__.context_ptr)
	br label %if.done-6

if.done-6:
	; AssignStmt
	; min
	%41 = load {%engine-10.Sprite*, i64, i64, %Allocator}*, {%engine-10.Sprite*, i64, i64, %Allocator}** %0, align 8
	%42 = load {%engine-10.Sprite*, i64, i64, %Allocator}, {%engine-10.Sprite*, i64, i64, %Allocator}* %41, align 8
	%43 = extractvalue {%engine-10.Sprite*, i64, i64, %Allocator} %42, 2
	%44 = load {%engine-10.Sprite*, i64, i64, %Allocator}*, {%engine-10.Sprite*, i64, i64, %Allocator}** %0, align 8
	%45 = load {%engine-10.Sprite*, i64, i64, %Allocator}, {%engine-10.Sprite*, i64, i64, %Allocator}* %44, align 8
	%46 = extractvalue {%engine-10.Sprite*, i64, i64, %Allocator} %45, 1
	%47 = sub i64 %43, %46
	%48 = load i64, i64* %1, align 8
	%49 = icmp slt i64 %47, %48
	%50 = select i1 %49, i64 %47, i64 %48
	store i64 %50, i64* %1
	; IfStmt
	%51 = load i64, i64* %1, align 8
	%52 = icmp sgt i64 %51, 0
	br i1 %52, label %if.then-7, label %if.done-8

if.then-7:
	; a
		%53 = load {%engine-10.Sprite*, i64, i64, %Allocator}*, {%engine-10.Sprite*, i64, i64, %Allocator}** %0, align 8
	%54 = bitcast {%engine-10.Sprite*, i64, i64, %Allocator}* %53 to %raw-6.Dynamic_Array*
	store %raw-6.Dynamic_Array* %54, %raw-6.Dynamic_Array** %4
	; data
		; SelectorExpr
	%55 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %4, align 8
	%56 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %55, i64 0
	%57 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %56, i64 0, i32 0
	%58 = load %..rawptr, %..rawptr* %57, align 8
	%59 = bitcast %..rawptr %58 to %engine-10.Sprite*
	store %engine-10.Sprite* %59, %engine-10.Sprite** %5
	%60 = load %engine-10.Sprite*, %engine-10.Sprite** %5, align 8
	%61 = icmp ne %engine-10.Sprite* %60, zeroinitializer
	; variadic call argument generation
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %6
	%62 = load {%..any*, i64}, {%..any*, i64}* %6, align 8
	%63 = call %Source_Code_Location @make_source_code_location(%..string {i8* getelementptr inbounds ([34 x i8], [34 x i8]* @__str$432, i64 0, i32 0), i64 33}, i64 345, i64 3, %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$433, i64 0, i32 0), i64 6})
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %7
	store {%..any*, i64} %62, {%..any*, i64}* %7
	store %Source_Code_Location zeroinitializer, %Source_Code_Location* %8
	store %Source_Code_Location %63, %Source_Code_Location* %8
	%64 = call i1 @assert(i1 %61, %..string zeroinitializer, {%..any*, i64}* %7, %Source_Code_Location* %8)
	%65 = load %engine-10.Sprite*, %engine-10.Sprite** %5, align 8
	; SelectorExpr
	%66 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %4, align 8
	%67 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %66, i64 0
	%68 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %67, i64 0, i32 1
	%69 = load i64, i64* %68, align 8
	%70 = getelementptr inbounds %engine-10.Sprite, %engine-10.Sprite* %65, i64 %69
	; IndexExpr
	%71 = load {%engine-10.Sprite*, i64}, {%engine-10.Sprite*, i64}* %args, align 8
	%72 = extractvalue {%engine-10.Sprite*, i64} %71, 0
	%73 = extractvalue {%engine-10.Sprite*, i64} %71, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([34 x i8], [34 x i8]* @__str$434, i64 0, i32 0), i64 33}, i64 346, i64 34, i64 0, i64 %73)
	%74 = getelementptr inbounds %engine-10.Sprite, %engine-10.Sprite* %72, i64 0
	%75 = getelementptr inbounds %engine-10.Sprite, %engine-10.Sprite* %74, i64 0
	%76 = load i64, i64* %1, align 8
	%77 = mul i64 12, %76
	%78 = bitcast %engine-10.Sprite* %70 to %..rawptr
	%79 = bitcast %engine-10.Sprite* %75 to %..rawptr
	%80 = call %..rawptr @__mem_copy(%..rawptr %78, %..rawptr %79, i64 %77)
	; AssignStmt
	; SelectorExpr
	%81 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %4, align 8
	%82 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %81, i64 0
	%83 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %82, i64 0, i32 1
	%84 = load i64, i64* %1, align 8
	%85 = load i64, i64* %83, align 8
	%86 = add i64 %85, %84
	store i64 %86, i64* %83
	br label %if.done-8

if.done-8:
	; ReturnStmt
	%87 = load {%engine-10.Sprite*, i64, i64, %Allocator}*, {%engine-10.Sprite*, i64, i64, %Allocator}** %0, align 8
	%88 = load {%engine-10.Sprite*, i64, i64, %Allocator}, {%engine-10.Sprite*, i64, i64, %Allocator}* %87, align 8
	%89 = extractvalue {%engine-10.Sprite*, i64, i64, %Allocator} %88, 1
	ret i64 %89
}

define i64 @_preload-0.append-12681({%main-0.Entity*, i64, i64, %Allocator}* %array, {%main-0.Entity*, i64}* %args, %Source_Code_Location* %loc, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca {%main-0.Entity*, i64, i64, %Allocator}*, align 8
	%1 = alloca i64, align 8
	%2 = alloca i64, align 8
	%3 = alloca %Source_Code_Location, align 16
	%4 = alloca %raw-6.Dynamic_Array*, align 8
	%5 = alloca %main-0.Entity*, align 8
	%6 = alloca {%..any*, i64}, align 8
	%7 = alloca {%..any*, i64}, align 16
	%8 = alloca %Source_Code_Location, align 16
		store {%main-0.Entity*, i64, i64, %Allocator}* %array, {%main-0.Entity*, i64, i64, %Allocator}** %0
	%9 = load {%main-0.Entity*, i64}, {%main-0.Entity*, i64}* %args, align 8
	%10 = load %Source_Code_Location, %Source_Code_Location* %loc, align 8
	; IfStmt
	%11 = load {%main-0.Entity*, i64, i64, %Allocator}*, {%main-0.Entity*, i64, i64, %Allocator}** %0, align 8
	%12 = icmp eq {%main-0.Entity*, i64, i64, %Allocator}* %11, zeroinitializer
	br i1 %12, label %if.then-1, label %if.done-2

if.then-1:
	; ReturnStmt
	ret i64 0

if.done-2:
	; arg_len
		%13 = load {%main-0.Entity*, i64}, {%main-0.Entity*, i64}* %args, align 8
	%14 = extractvalue {%main-0.Entity*, i64} %13, 1
	store i64 %14, i64* %1
	; IfStmt
	%15 = load i64, i64* %1, align 8
	%16 = icmp sle i64 %15, 0
	br i1 %16, label %if.then-3, label %if.done-4

if.then-3:
	; ReturnStmt
	%17 = load {%main-0.Entity*, i64, i64, %Allocator}*, {%main-0.Entity*, i64, i64, %Allocator}** %0, align 8
	%18 = load {%main-0.Entity*, i64, i64, %Allocator}, {%main-0.Entity*, i64, i64, %Allocator}* %17, align 8
	%19 = extractvalue {%main-0.Entity*, i64, i64, %Allocator} %18, 1
	ret i64 %19

if.done-4:
	; IfStmt
	%20 = load {%main-0.Entity*, i64, i64, %Allocator}*, {%main-0.Entity*, i64, i64, %Allocator}** %0, align 8
	%21 = load {%main-0.Entity*, i64, i64, %Allocator}, {%main-0.Entity*, i64, i64, %Allocator}* %20, align 8
	%22 = extractvalue {%main-0.Entity*, i64, i64, %Allocator} %21, 2
	%23 = load {%main-0.Entity*, i64, i64, %Allocator}*, {%main-0.Entity*, i64, i64, %Allocator}** %0, align 8
	%24 = load {%main-0.Entity*, i64, i64, %Allocator}, {%main-0.Entity*, i64, i64, %Allocator}* %23, align 8
	%25 = extractvalue {%main-0.Entity*, i64, i64, %Allocator} %24, 1
	%26 = load i64, i64* %1, align 8
	%27 = add i64 %25, %26
	%28 = icmp sle i64 %22, %27
	br i1 %28, label %if.then-5, label %if.done-6

if.then-5:
	; cap
		%29 = load {%main-0.Entity*, i64, i64, %Allocator}*, {%main-0.Entity*, i64, i64, %Allocator}** %0, align 8
	%30 = load {%main-0.Entity*, i64, i64, %Allocator}, {%main-0.Entity*, i64, i64, %Allocator}* %29, align 8
	%31 = extractvalue {%main-0.Entity*, i64, i64, %Allocator} %30, 2
	%32 = mul i64 2, %31
	; max
	%33 = load i64, i64* %1, align 8
	%34 = icmp sgt i64 8, %33
	%35 = select i1 %34, i64 8, i64 %33
	%36 = add i64 %32, %35
	store i64 %36, i64* %2
	; AssignStmt
	%37 = load {%main-0.Entity*, i64, i64, %Allocator}*, {%main-0.Entity*, i64, i64, %Allocator}** %0, align 8
	%38 = load i64, i64* %2, align 8
	%39 = load %Source_Code_Location, %Source_Code_Location* %loc, align 8
	store %Source_Code_Location zeroinitializer, %Source_Code_Location* %3
	store %Source_Code_Location %39, %Source_Code_Location* %3
	%40 = call i1 @_preload-0.reserve-14078({%main-0.Entity*, i64, i64, %Allocator}* %37, i64 %38, %Source_Code_Location* %3, %Context* noalias nonnull %__.context_ptr)
	br label %if.done-6

if.done-6:
	; AssignStmt
	; min
	%41 = load {%main-0.Entity*, i64, i64, %Allocator}*, {%main-0.Entity*, i64, i64, %Allocator}** %0, align 8
	%42 = load {%main-0.Entity*, i64, i64, %Allocator}, {%main-0.Entity*, i64, i64, %Allocator}* %41, align 8
	%43 = extractvalue {%main-0.Entity*, i64, i64, %Allocator} %42, 2
	%44 = load {%main-0.Entity*, i64, i64, %Allocator}*, {%main-0.Entity*, i64, i64, %Allocator}** %0, align 8
	%45 = load {%main-0.Entity*, i64, i64, %Allocator}, {%main-0.Entity*, i64, i64, %Allocator}* %44, align 8
	%46 = extractvalue {%main-0.Entity*, i64, i64, %Allocator} %45, 1
	%47 = sub i64 %43, %46
	%48 = load i64, i64* %1, align 8
	%49 = icmp slt i64 %47, %48
	%50 = select i1 %49, i64 %47, i64 %48
	store i64 %50, i64* %1
	; IfStmt
	%51 = load i64, i64* %1, align 8
	%52 = icmp sgt i64 %51, 0
	br i1 %52, label %if.then-7, label %if.done-8

if.then-7:
	; a
		%53 = load {%main-0.Entity*, i64, i64, %Allocator}*, {%main-0.Entity*, i64, i64, %Allocator}** %0, align 8
	%54 = bitcast {%main-0.Entity*, i64, i64, %Allocator}* %53 to %raw-6.Dynamic_Array*
	store %raw-6.Dynamic_Array* %54, %raw-6.Dynamic_Array** %4
	; data
		; SelectorExpr
	%55 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %4, align 8
	%56 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %55, i64 0
	%57 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %56, i64 0, i32 0
	%58 = load %..rawptr, %..rawptr* %57, align 8
	%59 = bitcast %..rawptr %58 to %main-0.Entity*
	store %main-0.Entity* %59, %main-0.Entity** %5
	%60 = load %main-0.Entity*, %main-0.Entity** %5, align 8
	%61 = icmp ne %main-0.Entity* %60, zeroinitializer
	; variadic call argument generation
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %6
	%62 = load {%..any*, i64}, {%..any*, i64}* %6, align 8
	%63 = call %Source_Code_Location @make_source_code_location(%..string {i8* getelementptr inbounds ([34 x i8], [34 x i8]* @__str$435, i64 0, i32 0), i64 33}, i64 345, i64 3, %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$436, i64 0, i32 0), i64 6})
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %7
	store {%..any*, i64} %62, {%..any*, i64}* %7
	store %Source_Code_Location zeroinitializer, %Source_Code_Location* %8
	store %Source_Code_Location %63, %Source_Code_Location* %8
	%64 = call i1 @assert(i1 %61, %..string zeroinitializer, {%..any*, i64}* %7, %Source_Code_Location* %8)
	%65 = load %main-0.Entity*, %main-0.Entity** %5, align 8
	; SelectorExpr
	%66 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %4, align 8
	%67 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %66, i64 0
	%68 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %67, i64 0, i32 1
	%69 = load i64, i64* %68, align 8
	%70 = getelementptr inbounds %main-0.Entity, %main-0.Entity* %65, i64 %69
	; IndexExpr
	%71 = load {%main-0.Entity*, i64}, {%main-0.Entity*, i64}* %args, align 8
	%72 = extractvalue {%main-0.Entity*, i64} %71, 0
	%73 = extractvalue {%main-0.Entity*, i64} %71, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([34 x i8], [34 x i8]* @__str$437, i64 0, i32 0), i64 33}, i64 346, i64 34, i64 0, i64 %73)
	%74 = getelementptr inbounds %main-0.Entity, %main-0.Entity* %72, i64 0
	%75 = getelementptr inbounds %main-0.Entity, %main-0.Entity* %74, i64 0
	%76 = load i64, i64* %1, align 8
	%77 = mul i64 32, %76
	%78 = bitcast %main-0.Entity* %70 to %..rawptr
	%79 = bitcast %main-0.Entity* %75 to %..rawptr
	%80 = call %..rawptr @__mem_copy(%..rawptr %78, %..rawptr %79, i64 %77)
	; AssignStmt
	; SelectorExpr
	%81 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %4, align 8
	%82 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %81, i64 0
	%83 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %82, i64 0, i32 1
	%84 = load i64, i64* %1, align 8
	%85 = load i64, i64* %83, align 8
	%86 = add i64 %85, %84
	store i64 %86, i64* %83
	br label %if.done-8

if.done-8:
	; ReturnStmt
	%87 = load {%main-0.Entity*, i64, i64, %Allocator}*, {%main-0.Entity*, i64, i64, %Allocator}** %0, align 8
	%88 = load {%main-0.Entity*, i64, i64, %Allocator}, {%main-0.Entity*, i64, i64, %Allocator}* %87, align 8
	%89 = extractvalue {%main-0.Entity*, i64, i64, %Allocator} %88, 1
	ret i64 %89
}

define void @_preload-0.free-12719({i8*, i64}* %slice, %Source_Code_Location* %loc, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca %raw-6.Slice*, align 8
	%1 = alloca %Source_Code_Location, align 16
	%2 = load {i8*, i64}, {i8*, i64}* %slice, align 8
	%3 = load %Source_Code_Location, %Source_Code_Location* %loc, align 8
	; SelectorExpr
	%4 = getelementptr inbounds {i8*, i64}, {i8*, i64}* %slice, i64 0
	%5 = bitcast {i8*, i64}* %4 to %raw-6.Slice*
	store %raw-6.Slice* zeroinitializer, %raw-6.Slice** %0
	store %raw-6.Slice* %5, %raw-6.Slice** %0
	%6 = load %raw-6.Slice*, %raw-6.Slice** %0, align 8
	%7 = getelementptr inbounds %raw-6.Slice, %raw-6.Slice* %6, i64 0
	%8 = getelementptr inbounds %raw-6.Slice, %raw-6.Slice* %7, i64 0, i32 0
	%9 = load %..rawptr, %..rawptr* %8, align 8
	%10 = load %Source_Code_Location, %Source_Code_Location* %loc, align 8
	store %Source_Code_Location zeroinitializer, %Source_Code_Location* %1
	store %Source_Code_Location %10, %Source_Code_Location* %1
	call void @free_ptr(%..rawptr %9, %Source_Code_Location* %1, %Context* noalias nonnull %__.context_ptr)
	ret void
}

define {i8*, i64} @mem-16.slice_ptr-12743(i8* %ptr, i64 %len) #0 {
decls-0:
	%0 = alloca i8*, align 8
	%1 = alloca i64, align 8
	%2 = alloca {%..any*, i64}, align 8
	%3 = alloca {%..any*, i64}, align 16
	%4 = alloca %Source_Code_Location, align 16
	%5 = alloca %raw-6.Slice, align 8
	%6 = alloca %raw-6.Slice, align 8
		store i8* %ptr, i8** %0
		store i64 %len, i64* %1
	%7 = load i64, i64* %1, align 8
	%8 = icmp sge i64 %7, 0
	; variadic call argument generation
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %2
	%9 = load {%..any*, i64}, {%..any*, i64}* %2, align 8
	%10 = call %Source_Code_Location @make_source_code_location(%..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$438, i64 0, i32 0), i64 28}, i64 27, i64 2, %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$439, i64 0, i32 0), i64 9})
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %3
	store {%..any*, i64} %9, {%..any*, i64}* %3
	store %Source_Code_Location zeroinitializer, %Source_Code_Location* %4
	store %Source_Code_Location %10, %Source_Code_Location* %4
	%11 = call i1 @assert(i1 %8, %..string zeroinitializer, {%..any*, i64}* %3, %Source_Code_Location* %4)
	; slice
		; CompoundLit
	store %raw-6.Slice zeroinitializer, %raw-6.Slice* %6
	store %raw-6.Slice {%..rawptr zeroinitializer, i64 zeroinitializer}, %raw-6.Slice* %6
	%12 = load i8*, i8** %0, align 8
	%13 = bitcast i8* %12 to %..rawptr
	%14 = getelementptr inbounds %raw-6.Slice, %raw-6.Slice* %6, i64 0, i32 0
	store %..rawptr %13, %..rawptr* %14
	%15 = load i64, i64* %1, align 8
	%16 = getelementptr inbounds %raw-6.Slice, %raw-6.Slice* %6, i64 0, i32 1
	store i64 %15, i64* %16
	%17 = load %raw-6.Slice, %raw-6.Slice* %6, align 8
	store %raw-6.Slice %17, %raw-6.Slice* %5
	; ReturnStmt
	%18 = load %raw-6.Slice, %raw-6.Slice* %5, align 8
	%19 = bitcast %raw-6.Slice* %5 to {i8*, i64}*
	%20 = load {i8*, i64}, {i8*, i64}* %19, align 8
	ret {i8*, i64} %20
}

define i64 @_preload-0.append_string-12757({i8*, i64, i64, %Allocator}* %array, {%..string*, i64}* %args, %Source_Code_Location* %loc, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca {i8*, i64, i64, %Allocator}*, align 8
	%1 = alloca %..string, align 8
	%2 = alloca i64, align 8
	%3 = alloca i64, align 8
	%4 = alloca i8*, align 8
	%5 = alloca {i8*, i64}, align 8
	%6 = alloca {i8*, i64}, align 16
	%7 = alloca %Source_Code_Location, align 16
		store {i8*, i64, i64, %Allocator}* %array, {i8*, i64, i64, %Allocator}** %0
	%8 = load {%..string*, i64}, {%..string*, i64}* %args, align 8
	%9 = load %Source_Code_Location, %Source_Code_Location* %loc, align 8
	; RangeStmt
	; arg
	store %..string zeroinitializer, %..string* %1
		%10 = load {%..string*, i64}, {%..string*, i64}* %args, align 8
	store i64 zeroinitializer, i64* %2
	%11 = extractvalue {%..string*, i64} %10, 1
	store i64 %11, i64* %2
	store i64 zeroinitializer, i64* %3
	store i64 -1, i64* %3
	br label %for.index.loop-1

for.index.loop-1:
	%12 = load i64, i64* %3, align 8
	%13 = add i64 %12, 1
	store i64 %13, i64* %3
	%14 = load i64, i64* %2, align 8
	%15 = icmp slt i64 %13, %14
	br i1 %15, label %for.index.body-2, label %for.index.done-3

for.index.body-2:
	%16 = load i64, i64* %3, align 8
	%17 = extractvalue {%..string*, i64} %10, 0
	%18 = getelementptr inbounds %..string, %..string* %17, i64 %16
	%19 = load %..string, %..string* %18, align 8
	store %..string %19, %..string* %1
	%20 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	%21 = load %..string, %..string* %1, align 8
	%22 = extractvalue %..string %21, 0
	store i8* zeroinitializer, i8** %4
	store i8* %22, i8** %4
	%23 = extractvalue %..string %21, 1
	%24 = sub i64 %23, 0
	%25 = load i8*, i8** %4, align 8
	%26 = getelementptr inbounds i8, i8* %25, i64 0
	store {i8*, i64} zeroinitializer, {i8*, i64}* %5
	%27 = getelementptr inbounds {i8*, i64}, {i8*, i64}* %5, i64 0, i32 0
	store i8* %26, i8** %27
	%28 = getelementptr inbounds {i8*, i64}, {i8*, i64}* %5, i64 0, i32 1
	store i64 %24, i64* %28
	%29 = load {i8*, i64}, {i8*, i64}* %5, align 8
	%30 = load %Source_Code_Location, %Source_Code_Location* %loc, align 8
	store {i8*, i64} zeroinitializer, {i8*, i64}* %6
	store {i8*, i64} %29, {i8*, i64}* %6
	store %Source_Code_Location zeroinitializer, %Source_Code_Location* %7
	store %Source_Code_Location %30, %Source_Code_Location* %7
	%31 = call i64 @_preload-0.append-12765({i8*, i64, i64, %Allocator}* %20, {i8*, i64}* %6, %Source_Code_Location* %7, %Context* noalias nonnull %__.context_ptr)
	br label %for.index.loop-1

for.index.done-3:
	; ReturnStmt
	%32 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	%33 = load {i8*, i64, i64, %Allocator}, {i8*, i64, i64, %Allocator}* %32, align 8
	%34 = extractvalue {i8*, i64, i64, %Allocator} %33, 1
	ret i64 %34
}

define i64 @_preload-0.append-12765({i8*, i64, i64, %Allocator}* %array, {i8*, i64}* %args, %Source_Code_Location* %loc, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca {i8*, i64, i64, %Allocator}*, align 8
	%1 = alloca i64, align 8
	%2 = alloca i64, align 8
	%3 = alloca %Source_Code_Location, align 16
	%4 = alloca %raw-6.Dynamic_Array*, align 8
	%5 = alloca i8*, align 8
	%6 = alloca {%..any*, i64}, align 8
	%7 = alloca {%..any*, i64}, align 16
	%8 = alloca %Source_Code_Location, align 16
		store {i8*, i64, i64, %Allocator}* %array, {i8*, i64, i64, %Allocator}** %0
	%9 = load {i8*, i64}, {i8*, i64}* %args, align 8
	%10 = load %Source_Code_Location, %Source_Code_Location* %loc, align 8
	; IfStmt
	%11 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	%12 = icmp eq {i8*, i64, i64, %Allocator}* %11, zeroinitializer
	br i1 %12, label %if.then-1, label %if.done-2

if.then-1:
	; ReturnStmt
	ret i64 0

if.done-2:
	; arg_len
		%13 = load {i8*, i64}, {i8*, i64}* %args, align 8
	%14 = extractvalue {i8*, i64} %13, 1
	store i64 %14, i64* %1
	; IfStmt
	%15 = load i64, i64* %1, align 8
	%16 = icmp sle i64 %15, 0
	br i1 %16, label %if.then-3, label %if.done-4

if.then-3:
	; ReturnStmt
	%17 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	%18 = load {i8*, i64, i64, %Allocator}, {i8*, i64, i64, %Allocator}* %17, align 8
	%19 = extractvalue {i8*, i64, i64, %Allocator} %18, 1
	ret i64 %19

if.done-4:
	; IfStmt
	%20 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	%21 = load {i8*, i64, i64, %Allocator}, {i8*, i64, i64, %Allocator}* %20, align 8
	%22 = extractvalue {i8*, i64, i64, %Allocator} %21, 2
	%23 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	%24 = load {i8*, i64, i64, %Allocator}, {i8*, i64, i64, %Allocator}* %23, align 8
	%25 = extractvalue {i8*, i64, i64, %Allocator} %24, 1
	%26 = load i64, i64* %1, align 8
	%27 = add i64 %25, %26
	%28 = icmp sle i64 %22, %27
	br i1 %28, label %if.then-5, label %if.done-6

if.then-5:
	; cap
		%29 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	%30 = load {i8*, i64, i64, %Allocator}, {i8*, i64, i64, %Allocator}* %29, align 8
	%31 = extractvalue {i8*, i64, i64, %Allocator} %30, 2
	%32 = mul i64 2, %31
	; max
	%33 = load i64, i64* %1, align 8
	%34 = icmp sgt i64 8, %33
	%35 = select i1 %34, i64 8, i64 %33
	%36 = add i64 %32, %35
	store i64 %36, i64* %2
	; AssignStmt
	%37 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	%38 = load i64, i64* %2, align 8
	%39 = load %Source_Code_Location, %Source_Code_Location* %loc, align 8
	store %Source_Code_Location zeroinitializer, %Source_Code_Location* %3
	store %Source_Code_Location %39, %Source_Code_Location* %3
	%40 = call i1 @_preload-0.reserve-14113({i8*, i64, i64, %Allocator}* %37, i64 %38, %Source_Code_Location* %3, %Context* noalias nonnull %__.context_ptr)
	br label %if.done-6

if.done-6:
	; AssignStmt
	; min
	%41 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	%42 = load {i8*, i64, i64, %Allocator}, {i8*, i64, i64, %Allocator}* %41, align 8
	%43 = extractvalue {i8*, i64, i64, %Allocator} %42, 2
	%44 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	%45 = load {i8*, i64, i64, %Allocator}, {i8*, i64, i64, %Allocator}* %44, align 8
	%46 = extractvalue {i8*, i64, i64, %Allocator} %45, 1
	%47 = sub i64 %43, %46
	%48 = load i64, i64* %1, align 8
	%49 = icmp slt i64 %47, %48
	%50 = select i1 %49, i64 %47, i64 %48
	store i64 %50, i64* %1
	; IfStmt
	%51 = load i64, i64* %1, align 8
	%52 = icmp sgt i64 %51, 0
	br i1 %52, label %if.then-7, label %if.done-8

if.then-7:
	; a
		%53 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	%54 = bitcast {i8*, i64, i64, %Allocator}* %53 to %raw-6.Dynamic_Array*
	store %raw-6.Dynamic_Array* %54, %raw-6.Dynamic_Array** %4
	; data
		; SelectorExpr
	%55 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %4, align 8
	%56 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %55, i64 0
	%57 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %56, i64 0, i32 0
	%58 = load %..rawptr, %..rawptr* %57, align 8
	%59 = bitcast %..rawptr %58 to i8*
	store i8* %59, i8** %5
	%60 = load i8*, i8** %5, align 8
	%61 = icmp ne i8* %60, zeroinitializer
	; variadic call argument generation
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %6
	%62 = load {%..any*, i64}, {%..any*, i64}* %6, align 8
	%63 = call %Source_Code_Location @make_source_code_location(%..string {i8* getelementptr inbounds ([34 x i8], [34 x i8]* @__str$43a, i64 0, i32 0), i64 33}, i64 345, i64 3, %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$43b, i64 0, i32 0), i64 6})
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %7
	store {%..any*, i64} %62, {%..any*, i64}* %7
	store %Source_Code_Location zeroinitializer, %Source_Code_Location* %8
	store %Source_Code_Location %63, %Source_Code_Location* %8
	%64 = call i1 @assert(i1 %61, %..string zeroinitializer, {%..any*, i64}* %7, %Source_Code_Location* %8)
	%65 = load i8*, i8** %5, align 8
	; SelectorExpr
	%66 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %4, align 8
	%67 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %66, i64 0
	%68 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %67, i64 0, i32 1
	%69 = load i64, i64* %68, align 8
	%70 = getelementptr inbounds i8, i8* %65, i64 %69
	; IndexExpr
	%71 = load {i8*, i64}, {i8*, i64}* %args, align 8
	%72 = extractvalue {i8*, i64} %71, 0
	%73 = extractvalue {i8*, i64} %71, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([34 x i8], [34 x i8]* @__str$43c, i64 0, i32 0), i64 33}, i64 346, i64 34, i64 0, i64 %73)
	%74 = getelementptr inbounds i8, i8* %72, i64 0
	%75 = getelementptr inbounds i8, i8* %74, i64 0
	%76 = load i64, i64* %1, align 8
	%77 = mul i64 1, %76
	%78 = bitcast i8* %70 to %..rawptr
	%79 = bitcast i8* %75 to %..rawptr
	%80 = call %..rawptr @__mem_copy(%..rawptr %78, %..rawptr %79, i64 %77)
	; AssignStmt
	; SelectorExpr
	%81 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %4, align 8
	%82 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %81, i64 0
	%83 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %82, i64 0, i32 1
	%84 = load i64, i64* %1, align 8
	%85 = load i64, i64* %83, align 8
	%86 = add i64 %85, %84
	store i64 %86, i64* %83
	br label %if.done-8

if.done-8:
	; ReturnStmt
	%87 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	%88 = load {i8*, i64, i64, %Allocator}, {i8*, i64, i64, %Allocator}* %87, align 8
	%89 = extractvalue {i8*, i64, i64, %Allocator} %88, 1
	ret i64 %89
}

define void @_preload-0.clear-13324({%engine-10.Sprite_Data*, i64, i64, %Allocator}* %array) alwaysinline #1 {
decls-0:
	%0 = alloca {%engine-10.Sprite_Data*, i64, i64, %Allocator}*, align 8
	%1 = alloca %raw-6.Dynamic_Array*, align 8
		store {%engine-10.Sprite_Data*, i64, i64, %Allocator}* %array, {%engine-10.Sprite_Data*, i64, i64, %Allocator}** %0
	; IfStmt
	%2 = load {%engine-10.Sprite_Data*, i64, i64, %Allocator}*, {%engine-10.Sprite_Data*, i64, i64, %Allocator}** %0, align 8
	%3 = icmp ne {%engine-10.Sprite_Data*, i64, i64, %Allocator}* %2, zeroinitializer
	br i1 %3, label %if.then-1, label %if.done-2

if.then-1:
	; AssignStmt
	; SelectorExpr
	%4 = load {%engine-10.Sprite_Data*, i64, i64, %Allocator}*, {%engine-10.Sprite_Data*, i64, i64, %Allocator}** %0, align 8
	%5 = bitcast {%engine-10.Sprite_Data*, i64, i64, %Allocator}* %4 to %raw-6.Dynamic_Array*
	store %raw-6.Dynamic_Array* zeroinitializer, %raw-6.Dynamic_Array** %1
	store %raw-6.Dynamic_Array* %5, %raw-6.Dynamic_Array** %1
	%6 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %1, align 8
	%7 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %6, i64 0
	%8 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %7, i64 0, i32 1
	store i64 0, i64* %8
	br label %if.done-2

if.done-2:
	ret void
}

define i64 @_preload-0.append-13336({%engine-10.Sprite_Data*, i64, i64, %Allocator}* %array, {%engine-10.Sprite_Data*, i64}* %args, %Source_Code_Location* %loc, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca {%engine-10.Sprite_Data*, i64, i64, %Allocator}*, align 8
	%1 = alloca i64, align 8
	%2 = alloca i64, align 8
	%3 = alloca %Source_Code_Location, align 16
	%4 = alloca %raw-6.Dynamic_Array*, align 8
	%5 = alloca %engine-10.Sprite_Data*, align 8
	%6 = alloca {%..any*, i64}, align 8
	%7 = alloca {%..any*, i64}, align 16
	%8 = alloca %Source_Code_Location, align 16
		store {%engine-10.Sprite_Data*, i64, i64, %Allocator}* %array, {%engine-10.Sprite_Data*, i64, i64, %Allocator}** %0
	%9 = load {%engine-10.Sprite_Data*, i64}, {%engine-10.Sprite_Data*, i64}* %args, align 8
	%10 = load %Source_Code_Location, %Source_Code_Location* %loc, align 8
	; IfStmt
	%11 = load {%engine-10.Sprite_Data*, i64, i64, %Allocator}*, {%engine-10.Sprite_Data*, i64, i64, %Allocator}** %0, align 8
	%12 = icmp eq {%engine-10.Sprite_Data*, i64, i64, %Allocator}* %11, zeroinitializer
	br i1 %12, label %if.then-1, label %if.done-2

if.then-1:
	; ReturnStmt
	ret i64 0

if.done-2:
	; arg_len
		%13 = load {%engine-10.Sprite_Data*, i64}, {%engine-10.Sprite_Data*, i64}* %args, align 8
	%14 = extractvalue {%engine-10.Sprite_Data*, i64} %13, 1
	store i64 %14, i64* %1
	; IfStmt
	%15 = load i64, i64* %1, align 8
	%16 = icmp sle i64 %15, 0
	br i1 %16, label %if.then-3, label %if.done-4

if.then-3:
	; ReturnStmt
	%17 = load {%engine-10.Sprite_Data*, i64, i64, %Allocator}*, {%engine-10.Sprite_Data*, i64, i64, %Allocator}** %0, align 8
	%18 = load {%engine-10.Sprite_Data*, i64, i64, %Allocator}, {%engine-10.Sprite_Data*, i64, i64, %Allocator}* %17, align 8
	%19 = extractvalue {%engine-10.Sprite_Data*, i64, i64, %Allocator} %18, 1
	ret i64 %19

if.done-4:
	; IfStmt
	%20 = load {%engine-10.Sprite_Data*, i64, i64, %Allocator}*, {%engine-10.Sprite_Data*, i64, i64, %Allocator}** %0, align 8
	%21 = load {%engine-10.Sprite_Data*, i64, i64, %Allocator}, {%engine-10.Sprite_Data*, i64, i64, %Allocator}* %20, align 8
	%22 = extractvalue {%engine-10.Sprite_Data*, i64, i64, %Allocator} %21, 2
	%23 = load {%engine-10.Sprite_Data*, i64, i64, %Allocator}*, {%engine-10.Sprite_Data*, i64, i64, %Allocator}** %0, align 8
	%24 = load {%engine-10.Sprite_Data*, i64, i64, %Allocator}, {%engine-10.Sprite_Data*, i64, i64, %Allocator}* %23, align 8
	%25 = extractvalue {%engine-10.Sprite_Data*, i64, i64, %Allocator} %24, 1
	%26 = load i64, i64* %1, align 8
	%27 = add i64 %25, %26
	%28 = icmp sle i64 %22, %27
	br i1 %28, label %if.then-5, label %if.done-6

if.then-5:
	; cap
		%29 = load {%engine-10.Sprite_Data*, i64, i64, %Allocator}*, {%engine-10.Sprite_Data*, i64, i64, %Allocator}** %0, align 8
	%30 = load {%engine-10.Sprite_Data*, i64, i64, %Allocator}, {%engine-10.Sprite_Data*, i64, i64, %Allocator}* %29, align 8
	%31 = extractvalue {%engine-10.Sprite_Data*, i64, i64, %Allocator} %30, 2
	%32 = mul i64 2, %31
	; max
	%33 = load i64, i64* %1, align 8
	%34 = icmp sgt i64 8, %33
	%35 = select i1 %34, i64 8, i64 %33
	%36 = add i64 %32, %35
	store i64 %36, i64* %2
	; AssignStmt
	%37 = load {%engine-10.Sprite_Data*, i64, i64, %Allocator}*, {%engine-10.Sprite_Data*, i64, i64, %Allocator}** %0, align 8
	%38 = load i64, i64* %2, align 8
	%39 = load %Source_Code_Location, %Source_Code_Location* %loc, align 8
	store %Source_Code_Location zeroinitializer, %Source_Code_Location* %3
	store %Source_Code_Location %39, %Source_Code_Location* %3
	%40 = call i1 @_preload-0.reserve-14352({%engine-10.Sprite_Data*, i64, i64, %Allocator}* %37, i64 %38, %Source_Code_Location* %3, %Context* noalias nonnull %__.context_ptr)
	br label %if.done-6

if.done-6:
	; AssignStmt
	; min
	%41 = load {%engine-10.Sprite_Data*, i64, i64, %Allocator}*, {%engine-10.Sprite_Data*, i64, i64, %Allocator}** %0, align 8
	%42 = load {%engine-10.Sprite_Data*, i64, i64, %Allocator}, {%engine-10.Sprite_Data*, i64, i64, %Allocator}* %41, align 8
	%43 = extractvalue {%engine-10.Sprite_Data*, i64, i64, %Allocator} %42, 2
	%44 = load {%engine-10.Sprite_Data*, i64, i64, %Allocator}*, {%engine-10.Sprite_Data*, i64, i64, %Allocator}** %0, align 8
	%45 = load {%engine-10.Sprite_Data*, i64, i64, %Allocator}, {%engine-10.Sprite_Data*, i64, i64, %Allocator}* %44, align 8
	%46 = extractvalue {%engine-10.Sprite_Data*, i64, i64, %Allocator} %45, 1
	%47 = sub i64 %43, %46
	%48 = load i64, i64* %1, align 8
	%49 = icmp slt i64 %47, %48
	%50 = select i1 %49, i64 %47, i64 %48
	store i64 %50, i64* %1
	; IfStmt
	%51 = load i64, i64* %1, align 8
	%52 = icmp sgt i64 %51, 0
	br i1 %52, label %if.then-7, label %if.done-8

if.then-7:
	; a
		%53 = load {%engine-10.Sprite_Data*, i64, i64, %Allocator}*, {%engine-10.Sprite_Data*, i64, i64, %Allocator}** %0, align 8
	%54 = bitcast {%engine-10.Sprite_Data*, i64, i64, %Allocator}* %53 to %raw-6.Dynamic_Array*
	store %raw-6.Dynamic_Array* %54, %raw-6.Dynamic_Array** %4
	; data
		; SelectorExpr
	%55 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %4, align 8
	%56 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %55, i64 0
	%57 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %56, i64 0, i32 0
	%58 = load %..rawptr, %..rawptr* %57, align 8
	%59 = bitcast %..rawptr %58 to %engine-10.Sprite_Data*
	store %engine-10.Sprite_Data* %59, %engine-10.Sprite_Data** %5
	%60 = load %engine-10.Sprite_Data*, %engine-10.Sprite_Data** %5, align 8
	%61 = icmp ne %engine-10.Sprite_Data* %60, zeroinitializer
	; variadic call argument generation
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %6
	%62 = load {%..any*, i64}, {%..any*, i64}* %6, align 8
	%63 = call %Source_Code_Location @make_source_code_location(%..string {i8* getelementptr inbounds ([34 x i8], [34 x i8]* @__str$43d, i64 0, i32 0), i64 33}, i64 345, i64 3, %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$43e, i64 0, i32 0), i64 6})
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %7
	store {%..any*, i64} %62, {%..any*, i64}* %7
	store %Source_Code_Location zeroinitializer, %Source_Code_Location* %8
	store %Source_Code_Location %63, %Source_Code_Location* %8
	%64 = call i1 @assert(i1 %61, %..string zeroinitializer, {%..any*, i64}* %7, %Source_Code_Location* %8)
	%65 = load %engine-10.Sprite_Data*, %engine-10.Sprite_Data** %5, align 8
	; SelectorExpr
	%66 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %4, align 8
	%67 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %66, i64 0
	%68 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %67, i64 0, i32 1
	%69 = load i64, i64* %68, align 8
	%70 = getelementptr inbounds %engine-10.Sprite_Data, %engine-10.Sprite_Data* %65, i64 %69
	; IndexExpr
	%71 = load {%engine-10.Sprite_Data*, i64}, {%engine-10.Sprite_Data*, i64}* %args, align 8
	%72 = extractvalue {%engine-10.Sprite_Data*, i64} %71, 0
	%73 = extractvalue {%engine-10.Sprite_Data*, i64} %71, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([34 x i8], [34 x i8]* @__str$43f, i64 0, i32 0), i64 33}, i64 346, i64 34, i64 0, i64 %73)
	%74 = getelementptr inbounds %engine-10.Sprite_Data, %engine-10.Sprite_Data* %72, i64 0
	%75 = getelementptr inbounds %engine-10.Sprite_Data, %engine-10.Sprite_Data* %74, i64 0
	%76 = load i64, i64* %1, align 8
	%77 = mul i64 32, %76
	%78 = bitcast %engine-10.Sprite_Data* %70 to %..rawptr
	%79 = bitcast %engine-10.Sprite_Data* %75 to %..rawptr
	%80 = call %..rawptr @__mem_copy(%..rawptr %78, %..rawptr %79, i64 %77)
	; AssignStmt
	; SelectorExpr
	%81 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %4, align 8
	%82 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %81, i64 0
	%83 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %82, i64 0, i32 1
	%84 = load i64, i64* %1, align 8
	%85 = load i64, i64* %83, align 8
	%86 = add i64 %85, %84
	store i64 %86, i64* %83
	br label %if.done-8

if.done-8:
	; ReturnStmt
	%87 = load {%engine-10.Sprite_Data*, i64, i64, %Allocator}*, {%engine-10.Sprite_Data*, i64, i64, %Allocator}** %0, align 8
	%88 = load {%engine-10.Sprite_Data*, i64, i64, %Allocator}, {%engine-10.Sprite_Data*, i64, i64, %Allocator}* %87, align 8
	%89 = extractvalue {%engine-10.Sprite_Data*, i64, i64, %Allocator} %88, 1
	ret i64 %89
}

define i64 @_preload-0.copy-13377({i8*, i64}* %dst, {i8*, i64}* %src) #0 {
decls-0:
	%0 = alloca i64, align 8
	%1 = load {i8*, i64}, {i8*, i64}* %dst, align 8
	%2 = load {i8*, i64}, {i8*, i64}* %src, align 8
	; n
		; max
	; min
	%3 = load {i8*, i64}, {i8*, i64}* %dst, align 8
	%4 = extractvalue {i8*, i64} %3, 1
	%5 = load {i8*, i64}, {i8*, i64}* %src, align 8
	%6 = extractvalue {i8*, i64} %5, 1
	%7 = icmp slt i64 %4, %6
	%8 = select i1 %7, i64 %4, i64 %6
	%9 = icmp sgt i64 0, %8
	%10 = select i1 %9, i64 0, i64 %8
	store i64 %10, i64* %0
	; IfStmt
	%11 = load i64, i64* %0, align 8
	%12 = icmp sgt i64 %11, 0
	br i1 %12, label %if.then-1, label %if.done-2

if.then-1:
	; IndexExpr
	%13 = load {i8*, i64}, {i8*, i64}* %dst, align 8
	%14 = extractvalue {i8*, i64} %13, 0
	%15 = extractvalue {i8*, i64} %13, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([34 x i8], [34 x i8]* @__str$440, i64 0, i32 0), i64 33}, i64 325, i64 30, i64 0, i64 %15)
	%16 = getelementptr inbounds i8, i8* %14, i64 0
	%17 = getelementptr inbounds i8, i8* %16, i64 0
	; IndexExpr
	%18 = load {i8*, i64}, {i8*, i64}* %src, align 8
	%19 = extractvalue {i8*, i64} %18, 0
	%20 = extractvalue {i8*, i64} %18, 1
	call void @__bounds_check_error(%..string {i8* getelementptr inbounds ([34 x i8], [34 x i8]* @__str$441, i64 0, i32 0), i64 33}, i64 325, i64 39, i64 0, i64 %20)
	%21 = getelementptr inbounds i8, i8* %19, i64 0
	%22 = getelementptr inbounds i8, i8* %21, i64 0
	%23 = load i64, i64* %0, align 8
	%24 = mul i64 %23, 1
	%25 = bitcast i8* %17 to %..rawptr
	%26 = bitcast i8* %22 to %..rawptr
	%27 = call %..rawptr @__mem_copy(%..rawptr %25, %..rawptr %26, i64 %24)
	br label %if.done-2

if.done-2:
	; ReturnStmt
	%28 = load i64, i64* %0, align 8
	ret i64 %28
}

define i1 @_preload-0.reserve-14052({%engine-10.Sprite*, i64, i64, %Allocator}* %array, i64 %capacity, %Source_Code_Location* %loc, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca {%engine-10.Sprite*, i64, i64, %Allocator}*, align 8
	%1 = alloca i64, align 8
	%2 = alloca %raw-6.Dynamic_Array*, align 8
	%3 = alloca {%..any*, i64}, align 8
	%4 = alloca {%..any*, i64}, align 16
	%5 = alloca %Source_Code_Location, align 16
	%6 = alloca i64, align 8
	%7 = alloca i64, align 8
	%8 = alloca %Allocator, align 8
	%9 = alloca %..rawptr, align 8
	%10 = alloca %Source_Code_Location, align 16
		store {%engine-10.Sprite*, i64, i64, %Allocator}* %array, {%engine-10.Sprite*, i64, i64, %Allocator}** %0
		store i64 %capacity, i64* %1
	%11 = load %Source_Code_Location, %Source_Code_Location* %loc, align 8
	; IfStmt
	%12 = load {%engine-10.Sprite*, i64, i64, %Allocator}*, {%engine-10.Sprite*, i64, i64, %Allocator}** %0, align 8
	%13 = icmp eq {%engine-10.Sprite*, i64, i64, %Allocator}* %12, zeroinitializer
	br i1 %13, label %if.then-1, label %if.done-2

if.then-1:
	; ReturnStmt
	ret i1 false

if.done-2:
	; a
		%14 = load {%engine-10.Sprite*, i64, i64, %Allocator}*, {%engine-10.Sprite*, i64, i64, %Allocator}** %0, align 8
	%15 = bitcast {%engine-10.Sprite*, i64, i64, %Allocator}* %14 to %raw-6.Dynamic_Array*
	store %raw-6.Dynamic_Array* %15, %raw-6.Dynamic_Array** %2
	; IfStmt
	%16 = load i64, i64* %1, align 8
	; SelectorExpr
	%17 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %2, align 8
	%18 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %17, i64 0
	%19 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %18, i64 0, i32 2
	%20 = load i64, i64* %19, align 8
	%21 = icmp sle i64 %16, %20
	br i1 %21, label %if.then-3, label %if.done-4

if.then-3:
	; ReturnStmt
	ret i1 true

if.done-4:
	; IfStmt
	; SelectorExpr
	; SelectorExpr
	%22 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %2, align 8
	%23 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %22, i64 0
	%24 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %23, i64 0, i32 3
	%25 = getelementptr inbounds %Allocator, %Allocator* %24, i64 0, i32 0
	%26 = load %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64, %Source_Code_Location*, %Context*)*, %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64, %Source_Code_Location*, %Context*)** %25, align 8
	%27 = icmp eq %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64, %Source_Code_Location*, %Context*)* %26, zeroinitializer
	br i1 %27, label %if.then-5, label %if.done-6

if.then-5:
	; AssignStmt
	; SelectorExpr
	%28 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %2, align 8
	%29 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %28, i64 0
	%30 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %29, i64 0, i32 3
	; SelectorExpr
	%31 = getelementptr inbounds %Context, %Context* %__.context_ptr, i64 0, i32 0
	%32 = load %Allocator, %Allocator* %31, align 8
	store %Allocator %32, %Allocator* %30
	br label %if.done-6

if.done-6:
	; SelectorExpr
	; SelectorExpr
	%33 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %2, align 8
	%34 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %33, i64 0
	%35 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %34, i64 0, i32 3
	%36 = getelementptr inbounds %Allocator, %Allocator* %35, i64 0, i32 0
	%37 = load %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64, %Source_Code_Location*, %Context*)*, %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64, %Source_Code_Location*, %Context*)** %36, align 8
	%38 = icmp ne %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64, %Source_Code_Location*, %Context*)* %37, zeroinitializer
	; variadic call argument generation
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %3
	%39 = load {%..any*, i64}, {%..any*, i64}* %3, align 8
	%40 = call %Source_Code_Location @make_source_code_location(%..string {i8* getelementptr inbounds ([34 x i8], [34 x i8]* @__str$442, i64 0, i32 0), i64 33}, i64 388, i64 2, %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$443, i64 0, i32 0), i64 7})
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %4
	store {%..any*, i64} %39, {%..any*, i64}* %4
	store %Source_Code_Location zeroinitializer, %Source_Code_Location* %5
	store %Source_Code_Location %40, %Source_Code_Location* %5
	%41 = call i1 @assert(i1 %38, %..string zeroinitializer, {%..any*, i64}* %4, %Source_Code_Location* %5)
	; old_size
		; SelectorExpr
	%42 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %2, align 8
	%43 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %42, i64 0
	%44 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %43, i64 0, i32 2
	%45 = load i64, i64* %44, align 8
	%46 = mul i64 %45, 12
	store i64 %46, i64* %6
	; new_size
		%47 = load i64, i64* %1, align 8
	%48 = mul i64 %47, 12
	store i64 %48, i64* %7
	; allocator
		; SelectorExpr
	%49 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %2, align 8
	%50 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %49, i64 0
	%51 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %50, i64 0, i32 3
	%52 = load %Allocator, %Allocator* %51, align 8
	store %Allocator %52, %Allocator* %8
	; new_data
		; SelectorExpr
	%53 = getelementptr inbounds %Allocator, %Allocator* %8, i64 0, i32 0
	%54 = load %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64, %Source_Code_Location*, %Context*)*, %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64, %Source_Code_Location*, %Context*)** %53, align 8
	; SelectorExpr
	%55 = getelementptr inbounds %Allocator, %Allocator* %8, i64 0, i32 1
	%56 = load %..rawptr, %..rawptr* %55, align 8
	%57 = load i64, i64* %7, align 8
	; SelectorExpr
	%58 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %2, align 8
	%59 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %58, i64 0
	%60 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %59, i64 0, i32 0
	%61 = load %..rawptr, %..rawptr* %60, align 8
	%62 = load i64, i64* %6, align 8
	%63 = load %Source_Code_Location, %Source_Code_Location* %loc, align 8
	store %Source_Code_Location zeroinitializer, %Source_Code_Location* %10
	store %Source_Code_Location %63, %Source_Code_Location* %10
	%64 = call %..rawptr %54(%..rawptr %56, i8 3, i64 %57, i64 4, %..rawptr %61, i64 %62, i64 0, %Source_Code_Location* %10, %Context* noalias nonnull %__.context_ptr)
	store %..rawptr %64, %..rawptr* %9
	; IfStmt
	%65 = load %..rawptr, %..rawptr* %9, align 8
	%66 = icmp eq %..rawptr %65, zeroinitializer
	br i1 %66, label %if.then-7, label %if.done-8

if.then-7:
	; ReturnStmt
	ret i1 false

if.done-8:
	; AssignStmt
	; SelectorExpr
	%67 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %2, align 8
	%68 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %67, i64 0
	%69 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %68, i64 0, i32 0
	%70 = load %..rawptr, %..rawptr* %9, align 8
	store %..rawptr %70, %..rawptr* %69
	; AssignStmt
	; SelectorExpr
	%71 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %2, align 8
	%72 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %71, i64 0
	%73 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %72, i64 0, i32 2
	%74 = load i64, i64* %1, align 8
	store i64 %74, i64* %73
	; ReturnStmt
	ret i1 true
}

define i1 @_preload-0.reserve-14078({%main-0.Entity*, i64, i64, %Allocator}* %array, i64 %capacity, %Source_Code_Location* %loc, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca {%main-0.Entity*, i64, i64, %Allocator}*, align 8
	%1 = alloca i64, align 8
	%2 = alloca %raw-6.Dynamic_Array*, align 8
	%3 = alloca {%..any*, i64}, align 8
	%4 = alloca {%..any*, i64}, align 16
	%5 = alloca %Source_Code_Location, align 16
	%6 = alloca i64, align 8
	%7 = alloca i64, align 8
	%8 = alloca %Allocator, align 8
	%9 = alloca %..rawptr, align 8
	%10 = alloca %Source_Code_Location, align 16
		store {%main-0.Entity*, i64, i64, %Allocator}* %array, {%main-0.Entity*, i64, i64, %Allocator}** %0
		store i64 %capacity, i64* %1
	%11 = load %Source_Code_Location, %Source_Code_Location* %loc, align 8
	; IfStmt
	%12 = load {%main-0.Entity*, i64, i64, %Allocator}*, {%main-0.Entity*, i64, i64, %Allocator}** %0, align 8
	%13 = icmp eq {%main-0.Entity*, i64, i64, %Allocator}* %12, zeroinitializer
	br i1 %13, label %if.then-1, label %if.done-2

if.then-1:
	; ReturnStmt
	ret i1 false

if.done-2:
	; a
		%14 = load {%main-0.Entity*, i64, i64, %Allocator}*, {%main-0.Entity*, i64, i64, %Allocator}** %0, align 8
	%15 = bitcast {%main-0.Entity*, i64, i64, %Allocator}* %14 to %raw-6.Dynamic_Array*
	store %raw-6.Dynamic_Array* %15, %raw-6.Dynamic_Array** %2
	; IfStmt
	%16 = load i64, i64* %1, align 8
	; SelectorExpr
	%17 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %2, align 8
	%18 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %17, i64 0
	%19 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %18, i64 0, i32 2
	%20 = load i64, i64* %19, align 8
	%21 = icmp sle i64 %16, %20
	br i1 %21, label %if.then-3, label %if.done-4

if.then-3:
	; ReturnStmt
	ret i1 true

if.done-4:
	; IfStmt
	; SelectorExpr
	; SelectorExpr
	%22 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %2, align 8
	%23 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %22, i64 0
	%24 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %23, i64 0, i32 3
	%25 = getelementptr inbounds %Allocator, %Allocator* %24, i64 0, i32 0
	%26 = load %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64, %Source_Code_Location*, %Context*)*, %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64, %Source_Code_Location*, %Context*)** %25, align 8
	%27 = icmp eq %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64, %Source_Code_Location*, %Context*)* %26, zeroinitializer
	br i1 %27, label %if.then-5, label %if.done-6

if.then-5:
	; AssignStmt
	; SelectorExpr
	%28 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %2, align 8
	%29 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %28, i64 0
	%30 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %29, i64 0, i32 3
	; SelectorExpr
	%31 = getelementptr inbounds %Context, %Context* %__.context_ptr, i64 0, i32 0
	%32 = load %Allocator, %Allocator* %31, align 8
	store %Allocator %32, %Allocator* %30
	br label %if.done-6

if.done-6:
	; SelectorExpr
	; SelectorExpr
	%33 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %2, align 8
	%34 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %33, i64 0
	%35 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %34, i64 0, i32 3
	%36 = getelementptr inbounds %Allocator, %Allocator* %35, i64 0, i32 0
	%37 = load %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64, %Source_Code_Location*, %Context*)*, %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64, %Source_Code_Location*, %Context*)** %36, align 8
	%38 = icmp ne %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64, %Source_Code_Location*, %Context*)* %37, zeroinitializer
	; variadic call argument generation
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %3
	%39 = load {%..any*, i64}, {%..any*, i64}* %3, align 8
	%40 = call %Source_Code_Location @make_source_code_location(%..string {i8* getelementptr inbounds ([34 x i8], [34 x i8]* @__str$444, i64 0, i32 0), i64 33}, i64 388, i64 2, %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$445, i64 0, i32 0), i64 7})
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %4
	store {%..any*, i64} %39, {%..any*, i64}* %4
	store %Source_Code_Location zeroinitializer, %Source_Code_Location* %5
	store %Source_Code_Location %40, %Source_Code_Location* %5
	%41 = call i1 @assert(i1 %38, %..string zeroinitializer, {%..any*, i64}* %4, %Source_Code_Location* %5)
	; old_size
		; SelectorExpr
	%42 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %2, align 8
	%43 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %42, i64 0
	%44 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %43, i64 0, i32 2
	%45 = load i64, i64* %44, align 8
	%46 = mul i64 %45, 32
	store i64 %46, i64* %6
	; new_size
		%47 = load i64, i64* %1, align 8
	%48 = mul i64 %47, 32
	store i64 %48, i64* %7
	; allocator
		; SelectorExpr
	%49 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %2, align 8
	%50 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %49, i64 0
	%51 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %50, i64 0, i32 3
	%52 = load %Allocator, %Allocator* %51, align 8
	store %Allocator %52, %Allocator* %8
	; new_data
		; SelectorExpr
	%53 = getelementptr inbounds %Allocator, %Allocator* %8, i64 0, i32 0
	%54 = load %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64, %Source_Code_Location*, %Context*)*, %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64, %Source_Code_Location*, %Context*)** %53, align 8
	; SelectorExpr
	%55 = getelementptr inbounds %Allocator, %Allocator* %8, i64 0, i32 1
	%56 = load %..rawptr, %..rawptr* %55, align 8
	%57 = load i64, i64* %7, align 8
	; SelectorExpr
	%58 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %2, align 8
	%59 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %58, i64 0
	%60 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %59, i64 0, i32 0
	%61 = load %..rawptr, %..rawptr* %60, align 8
	%62 = load i64, i64* %6, align 8
	%63 = load %Source_Code_Location, %Source_Code_Location* %loc, align 8
	store %Source_Code_Location zeroinitializer, %Source_Code_Location* %10
	store %Source_Code_Location %63, %Source_Code_Location* %10
	%64 = call %..rawptr %54(%..rawptr %56, i8 3, i64 %57, i64 8, %..rawptr %61, i64 %62, i64 0, %Source_Code_Location* %10, %Context* noalias nonnull %__.context_ptr)
	store %..rawptr %64, %..rawptr* %9
	; IfStmt
	%65 = load %..rawptr, %..rawptr* %9, align 8
	%66 = icmp eq %..rawptr %65, zeroinitializer
	br i1 %66, label %if.then-7, label %if.done-8

if.then-7:
	; ReturnStmt
	ret i1 false

if.done-8:
	; AssignStmt
	; SelectorExpr
	%67 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %2, align 8
	%68 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %67, i64 0
	%69 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %68, i64 0, i32 0
	%70 = load %..rawptr, %..rawptr* %9, align 8
	store %..rawptr %70, %..rawptr* %69
	; AssignStmt
	; SelectorExpr
	%71 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %2, align 8
	%72 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %71, i64 0
	%73 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %72, i64 0, i32 2
	%74 = load i64, i64* %1, align 8
	store i64 %74, i64* %73
	; ReturnStmt
	ret i1 true
}

define i1 @_preload-0.reserve-14113({i8*, i64, i64, %Allocator}* %array, i64 %capacity, %Source_Code_Location* %loc, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca {i8*, i64, i64, %Allocator}*, align 8
	%1 = alloca i64, align 8
	%2 = alloca %raw-6.Dynamic_Array*, align 8
	%3 = alloca {%..any*, i64}, align 8
	%4 = alloca {%..any*, i64}, align 16
	%5 = alloca %Source_Code_Location, align 16
	%6 = alloca i64, align 8
	%7 = alloca i64, align 8
	%8 = alloca %Allocator, align 8
	%9 = alloca %..rawptr, align 8
	%10 = alloca %Source_Code_Location, align 16
		store {i8*, i64, i64, %Allocator}* %array, {i8*, i64, i64, %Allocator}** %0
		store i64 %capacity, i64* %1
	%11 = load %Source_Code_Location, %Source_Code_Location* %loc, align 8
	; IfStmt
	%12 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	%13 = icmp eq {i8*, i64, i64, %Allocator}* %12, zeroinitializer
	br i1 %13, label %if.then-1, label %if.done-2

if.then-1:
	; ReturnStmt
	ret i1 false

if.done-2:
	; a
		%14 = load {i8*, i64, i64, %Allocator}*, {i8*, i64, i64, %Allocator}** %0, align 8
	%15 = bitcast {i8*, i64, i64, %Allocator}* %14 to %raw-6.Dynamic_Array*
	store %raw-6.Dynamic_Array* %15, %raw-6.Dynamic_Array** %2
	; IfStmt
	%16 = load i64, i64* %1, align 8
	; SelectorExpr
	%17 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %2, align 8
	%18 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %17, i64 0
	%19 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %18, i64 0, i32 2
	%20 = load i64, i64* %19, align 8
	%21 = icmp sle i64 %16, %20
	br i1 %21, label %if.then-3, label %if.done-4

if.then-3:
	; ReturnStmt
	ret i1 true

if.done-4:
	; IfStmt
	; SelectorExpr
	; SelectorExpr
	%22 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %2, align 8
	%23 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %22, i64 0
	%24 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %23, i64 0, i32 3
	%25 = getelementptr inbounds %Allocator, %Allocator* %24, i64 0, i32 0
	%26 = load %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64, %Source_Code_Location*, %Context*)*, %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64, %Source_Code_Location*, %Context*)** %25, align 8
	%27 = icmp eq %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64, %Source_Code_Location*, %Context*)* %26, zeroinitializer
	br i1 %27, label %if.then-5, label %if.done-6

if.then-5:
	; AssignStmt
	; SelectorExpr
	%28 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %2, align 8
	%29 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %28, i64 0
	%30 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %29, i64 0, i32 3
	; SelectorExpr
	%31 = getelementptr inbounds %Context, %Context* %__.context_ptr, i64 0, i32 0
	%32 = load %Allocator, %Allocator* %31, align 8
	store %Allocator %32, %Allocator* %30
	br label %if.done-6

if.done-6:
	; SelectorExpr
	; SelectorExpr
	%33 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %2, align 8
	%34 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %33, i64 0
	%35 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %34, i64 0, i32 3
	%36 = getelementptr inbounds %Allocator, %Allocator* %35, i64 0, i32 0
	%37 = load %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64, %Source_Code_Location*, %Context*)*, %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64, %Source_Code_Location*, %Context*)** %36, align 8
	%38 = icmp ne %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64, %Source_Code_Location*, %Context*)* %37, zeroinitializer
	; variadic call argument generation
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %3
	%39 = load {%..any*, i64}, {%..any*, i64}* %3, align 8
	%40 = call %Source_Code_Location @make_source_code_location(%..string {i8* getelementptr inbounds ([34 x i8], [34 x i8]* @__str$446, i64 0, i32 0), i64 33}, i64 388, i64 2, %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$447, i64 0, i32 0), i64 7})
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %4
	store {%..any*, i64} %39, {%..any*, i64}* %4
	store %Source_Code_Location zeroinitializer, %Source_Code_Location* %5
	store %Source_Code_Location %40, %Source_Code_Location* %5
	%41 = call i1 @assert(i1 %38, %..string zeroinitializer, {%..any*, i64}* %4, %Source_Code_Location* %5)
	; old_size
		; SelectorExpr
	%42 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %2, align 8
	%43 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %42, i64 0
	%44 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %43, i64 0, i32 2
	%45 = load i64, i64* %44, align 8
	%46 = mul i64 %45, 1
	store i64 %46, i64* %6
	; new_size
		%47 = load i64, i64* %1, align 8
	%48 = mul i64 %47, 1
	store i64 %48, i64* %7
	; allocator
		; SelectorExpr
	%49 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %2, align 8
	%50 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %49, i64 0
	%51 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %50, i64 0, i32 3
	%52 = load %Allocator, %Allocator* %51, align 8
	store %Allocator %52, %Allocator* %8
	; new_data
		; SelectorExpr
	%53 = getelementptr inbounds %Allocator, %Allocator* %8, i64 0, i32 0
	%54 = load %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64, %Source_Code_Location*, %Context*)*, %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64, %Source_Code_Location*, %Context*)** %53, align 8
	; SelectorExpr
	%55 = getelementptr inbounds %Allocator, %Allocator* %8, i64 0, i32 1
	%56 = load %..rawptr, %..rawptr* %55, align 8
	%57 = load i64, i64* %7, align 8
	; SelectorExpr
	%58 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %2, align 8
	%59 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %58, i64 0
	%60 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %59, i64 0, i32 0
	%61 = load %..rawptr, %..rawptr* %60, align 8
	%62 = load i64, i64* %6, align 8
	%63 = load %Source_Code_Location, %Source_Code_Location* %loc, align 8
	store %Source_Code_Location zeroinitializer, %Source_Code_Location* %10
	store %Source_Code_Location %63, %Source_Code_Location* %10
	%64 = call %..rawptr %54(%..rawptr %56, i8 3, i64 %57, i64 1, %..rawptr %61, i64 %62, i64 0, %Source_Code_Location* %10, %Context* noalias nonnull %__.context_ptr)
	store %..rawptr %64, %..rawptr* %9
	; IfStmt
	%65 = load %..rawptr, %..rawptr* %9, align 8
	%66 = icmp eq %..rawptr %65, zeroinitializer
	br i1 %66, label %if.then-7, label %if.done-8

if.then-7:
	; ReturnStmt
	ret i1 false

if.done-8:
	; AssignStmt
	; SelectorExpr
	%67 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %2, align 8
	%68 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %67, i64 0
	%69 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %68, i64 0, i32 0
	%70 = load %..rawptr, %..rawptr* %9, align 8
	store %..rawptr %70, %..rawptr* %69
	; AssignStmt
	; SelectorExpr
	%71 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %2, align 8
	%72 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %71, i64 0
	%73 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %72, i64 0, i32 2
	%74 = load i64, i64* %1, align 8
	store i64 %74, i64* %73
	; ReturnStmt
	ret i1 true
}

define i1 @_preload-0.reserve-14352({%engine-10.Sprite_Data*, i64, i64, %Allocator}* %array, i64 %capacity, %Source_Code_Location* %loc, %Context* noalias nonnull %__.context_ptr) #0 {
decls-0:
	%0 = alloca {%engine-10.Sprite_Data*, i64, i64, %Allocator}*, align 8
	%1 = alloca i64, align 8
	%2 = alloca %raw-6.Dynamic_Array*, align 8
	%3 = alloca {%..any*, i64}, align 8
	%4 = alloca {%..any*, i64}, align 16
	%5 = alloca %Source_Code_Location, align 16
	%6 = alloca i64, align 8
	%7 = alloca i64, align 8
	%8 = alloca %Allocator, align 8
	%9 = alloca %..rawptr, align 8
	%10 = alloca %Source_Code_Location, align 16
		store {%engine-10.Sprite_Data*, i64, i64, %Allocator}* %array, {%engine-10.Sprite_Data*, i64, i64, %Allocator}** %0
		store i64 %capacity, i64* %1
	%11 = load %Source_Code_Location, %Source_Code_Location* %loc, align 8
	; IfStmt
	%12 = load {%engine-10.Sprite_Data*, i64, i64, %Allocator}*, {%engine-10.Sprite_Data*, i64, i64, %Allocator}** %0, align 8
	%13 = icmp eq {%engine-10.Sprite_Data*, i64, i64, %Allocator}* %12, zeroinitializer
	br i1 %13, label %if.then-1, label %if.done-2

if.then-1:
	; ReturnStmt
	ret i1 false

if.done-2:
	; a
		%14 = load {%engine-10.Sprite_Data*, i64, i64, %Allocator}*, {%engine-10.Sprite_Data*, i64, i64, %Allocator}** %0, align 8
	%15 = bitcast {%engine-10.Sprite_Data*, i64, i64, %Allocator}* %14 to %raw-6.Dynamic_Array*
	store %raw-6.Dynamic_Array* %15, %raw-6.Dynamic_Array** %2
	; IfStmt
	%16 = load i64, i64* %1, align 8
	; SelectorExpr
	%17 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %2, align 8
	%18 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %17, i64 0
	%19 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %18, i64 0, i32 2
	%20 = load i64, i64* %19, align 8
	%21 = icmp sle i64 %16, %20
	br i1 %21, label %if.then-3, label %if.done-4

if.then-3:
	; ReturnStmt
	ret i1 true

if.done-4:
	; IfStmt
	; SelectorExpr
	; SelectorExpr
	%22 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %2, align 8
	%23 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %22, i64 0
	%24 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %23, i64 0, i32 3
	%25 = getelementptr inbounds %Allocator, %Allocator* %24, i64 0, i32 0
	%26 = load %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64, %Source_Code_Location*, %Context*)*, %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64, %Source_Code_Location*, %Context*)** %25, align 8
	%27 = icmp eq %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64, %Source_Code_Location*, %Context*)* %26, zeroinitializer
	br i1 %27, label %if.then-5, label %if.done-6

if.then-5:
	; AssignStmt
	; SelectorExpr
	%28 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %2, align 8
	%29 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %28, i64 0
	%30 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %29, i64 0, i32 3
	; SelectorExpr
	%31 = getelementptr inbounds %Context, %Context* %__.context_ptr, i64 0, i32 0
	%32 = load %Allocator, %Allocator* %31, align 8
	store %Allocator %32, %Allocator* %30
	br label %if.done-6

if.done-6:
	; SelectorExpr
	; SelectorExpr
	%33 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %2, align 8
	%34 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %33, i64 0
	%35 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %34, i64 0, i32 3
	%36 = getelementptr inbounds %Allocator, %Allocator* %35, i64 0, i32 0
	%37 = load %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64, %Source_Code_Location*, %Context*)*, %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64, %Source_Code_Location*, %Context*)** %36, align 8
	%38 = icmp ne %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64, %Source_Code_Location*, %Context*)* %37, zeroinitializer
	; variadic call argument generation
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %3
	%39 = load {%..any*, i64}, {%..any*, i64}* %3, align 8
	%40 = call %Source_Code_Location @make_source_code_location(%..string {i8* getelementptr inbounds ([34 x i8], [34 x i8]* @__str$448, i64 0, i32 0), i64 33}, i64 388, i64 2, %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$449, i64 0, i32 0), i64 7})
	store {%..any*, i64} zeroinitializer, {%..any*, i64}* %4
	store {%..any*, i64} %39, {%..any*, i64}* %4
	store %Source_Code_Location zeroinitializer, %Source_Code_Location* %5
	store %Source_Code_Location %40, %Source_Code_Location* %5
	%41 = call i1 @assert(i1 %38, %..string zeroinitializer, {%..any*, i64}* %4, %Source_Code_Location* %5)
	; old_size
		; SelectorExpr
	%42 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %2, align 8
	%43 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %42, i64 0
	%44 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %43, i64 0, i32 2
	%45 = load i64, i64* %44, align 8
	%46 = mul i64 %45, 32
	store i64 %46, i64* %6
	; new_size
		%47 = load i64, i64* %1, align 8
	%48 = mul i64 %47, 32
	store i64 %48, i64* %7
	; allocator
		; SelectorExpr
	%49 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %2, align 8
	%50 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %49, i64 0
	%51 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %50, i64 0, i32 3
	%52 = load %Allocator, %Allocator* %51, align 8
	store %Allocator %52, %Allocator* %8
	; new_data
		; SelectorExpr
	%53 = getelementptr inbounds %Allocator, %Allocator* %8, i64 0, i32 0
	%54 = load %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64, %Source_Code_Location*, %Context*)*, %..rawptr (%..rawptr, i8, i64, i64, %..rawptr, i64, i64, %Source_Code_Location*, %Context*)** %53, align 8
	; SelectorExpr
	%55 = getelementptr inbounds %Allocator, %Allocator* %8, i64 0, i32 1
	%56 = load %..rawptr, %..rawptr* %55, align 8
	%57 = load i64, i64* %7, align 8
	; SelectorExpr
	%58 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %2, align 8
	%59 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %58, i64 0
	%60 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %59, i64 0, i32 0
	%61 = load %..rawptr, %..rawptr* %60, align 8
	%62 = load i64, i64* %6, align 8
	%63 = load %Source_Code_Location, %Source_Code_Location* %loc, align 8
	store %Source_Code_Location zeroinitializer, %Source_Code_Location* %10
	store %Source_Code_Location %63, %Source_Code_Location* %10
	%64 = call %..rawptr %54(%..rawptr %56, i8 3, i64 %57, i64 8, %..rawptr %61, i64 %62, i64 0, %Source_Code_Location* %10, %Context* noalias nonnull %__.context_ptr)
	store %..rawptr %64, %..rawptr* %9
	; IfStmt
	%65 = load %..rawptr, %..rawptr* %9, align 8
	%66 = icmp eq %..rawptr %65, zeroinitializer
	br i1 %66, label %if.then-7, label %if.done-8

if.then-7:
	; ReturnStmt
	ret i1 false

if.done-8:
	; AssignStmt
	; SelectorExpr
	%67 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %2, align 8
	%68 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %67, i64 0
	%69 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %68, i64 0, i32 0
	%70 = load %..rawptr, %..rawptr* %9, align 8
	store %..rawptr %70, %..rawptr* %69
	; AssignStmt
	; SelectorExpr
	%71 = load %raw-6.Dynamic_Array*, %raw-6.Dynamic_Array** %2, align 8
	%72 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %71, i64 0
	%73 = getelementptr inbounds %raw-6.Dynamic_Array, %raw-6.Dynamic_Array* %72, i64 0, i32 2
	%74 = load i64, i64* %1, align 8
	store i64 %74, i64* %73
	; ReturnStmt
	ret i1 true
}

define ccc i32 @main(i32 %argc, i8** %argv) noinline #2 {
decls-0:
	%0 = alloca i32, align 4
	%1 = alloca i8**, align 8
	store i32 %argc, i32* %0
	store i8** %argv, i8*** %1
	%2 = load i32, i32* %0, align 4
	%3 = load i8**, i8*** %1, align 8
	store i32 %2, i32* @__argc__
	store i8** %3, i8*** @__argv__
	call void @__$startup_runtime()
	call void @main-0.main()
	ret i32 0
}

define void @__$startup_runtime() noinline #2 {
decls-0:
	%0 = alloca %Type_Info_Enum_Value, align 8
	%1 = alloca %Type_Info_Enum_Value, align 8
	%2 = alloca %Type_Info_Enum_Value, align 8
	%3 = alloca %Type_Info_Enum_Value, align 8
	%4 = alloca %Type_Info_Enum_Value, align 8
	%5 = alloca %Type_Info_Enum_Value, align 8
	%6 = alloca %Type_Info_Enum_Value, align 8
	%7 = alloca %Type_Info_Enum_Value, align 8
	%8 = alloca %Type_Info_Enum_Value, align 8
	%9 = alloca %Type_Info_Enum_Value, align 8
	%10 = alloca %Type_Info_Enum_Value, align 8
	%11 = alloca %Type_Info_Enum_Value, align 8
	%12 = alloca %Type_Info_Enum_Value, align 8
	%13 = alloca %Type_Info_Enum_Value, align 8
	%14 = alloca %Type_Info_Enum_Value, align 8
	%15 = alloca %Type_Info_Enum_Value, align 8
	%16 = alloca %Type_Info_Enum_Value, align 8
	%17 = alloca %Type_Info_Enum_Value, align 8
	%18 = alloca %Type_Info_Enum_Value, align 8
	%19 = alloca %Type_Info_Enum_Value, align 8
	%20 = alloca %Type_Info_Enum_Value, align 8
	%21 = alloca %Type_Info_Enum_Value, align 8
	%22 = alloca %Type_Info_Enum_Value, align 8
	%23 = alloca %Type_Info_Enum_Value, align 8
	%24 = alloca %Type_Info_Enum_Value, align 8
	%25 = alloca %Type_Info_Enum_Value, align 8
	%26 = alloca %Type_Info_Enum_Value, align 8
	%27 = alloca %Type_Info_Enum_Value, align 8
	%28 = alloca %Type_Info_Enum_Value, align 8
	%29 = alloca %Type_Info_Enum_Value, align 8
	%30 = alloca %Type_Info_Enum_Value, align 8
	%31 = alloca %Type_Info_Enum_Value, align 8
	%32 = alloca %Type_Info_Enum_Value, align 8
	%33 = alloca %Type_Info_Enum_Value, align 8
	%34 = alloca %Type_Info_Enum_Value, align 8
	%35 = alloca %Type_Info_Enum_Value, align 8
	%36 = alloca %Type_Info_Enum_Value, align 8
	%37 = alloca %Type_Info_Enum_Value, align 8
	%38 = alloca %Type_Info_Enum_Value, align 8
	%39 = alloca %Type_Info_Enum_Value, align 8
	%40 = alloca %Type_Info_Enum_Value, align 8
	%41 = alloca %Type_Info_Enum_Value, align 8
	%42 = alloca %Type_Info_Enum_Value, align 8
	%43 = alloca %Type_Info_Enum_Value, align 8
	%44 = alloca %Type_Info_Enum_Value, align 8
	%45 = alloca %Type_Info_Enum_Value, align 8
	%46 = alloca %Type_Info_Enum_Value, align 8
	%47 = alloca %Type_Info_Enum_Value, align 8
	%48 = alloca %Type_Info_Enum_Value, align 8
	%49 = alloca %Type_Info_Enum_Value, align 8
	%50 = alloca %Type_Info_Enum_Value, align 8
	%51 = alloca %Type_Info_Enum_Value, align 8
	%52 = alloca %Type_Info_Enum_Value, align 8
	%53 = alloca %Type_Info_Enum_Value, align 8
	%54 = alloca %Type_Info_Enum_Value, align 8
	%55 = alloca %Type_Info_Enum_Value, align 8
	%56 = alloca %Type_Info_Enum_Value, align 8
	%57 = alloca %Type_Info_Enum_Value, align 8
	%58 = alloca %Type_Info_Enum_Value, align 8
	%59 = alloca %Type_Info_Enum_Value, align 8
	%60 = alloca %Type_Info_Enum_Value, align 8
	%61 = alloca %Type_Info_Enum_Value, align 8
	%62 = alloca %Type_Info_Enum_Value, align 8
	%63 = alloca %Type_Info_Enum_Value, align 8
	%64 = alloca %Type_Info_Enum_Value, align 8
	%65 = alloca %Type_Info_Enum_Value, align 8
	%66 = alloca %Type_Info_Enum_Value, align 8
	%67 = alloca %Type_Info_Enum_Value, align 8
	%68 = alloca %Type_Info_Enum_Value, align 8
	%69 = alloca %Type_Info_Enum_Value, align 8
	%70 = alloca %Type_Info_Enum_Value, align 8
	%71 = alloca %Type_Info_Enum_Value, align 8
	%72 = alloca %Type_Info_Enum_Value, align 8
	%73 = alloca %Type_Info_Enum_Value, align 8
	%74 = alloca %Type_Info_Enum_Value, align 8
	%75 = alloca %Type_Info_Enum_Value, align 8
	%76 = alloca %Type_Info_Enum_Value, align 8
	%77 = alloca %Type_Info_Enum_Value, align 8
	%78 = alloca %Type_Info_Enum_Value, align 8
	%79 = alloca %Type_Info_Enum_Value, align 8
	%80 = alloca %Type_Info_Enum_Value, align 8
	%81 = alloca %Type_Info_Enum_Value, align 8
	%82 = alloca %Type_Info_Enum_Value, align 8
	%83 = alloca %Type_Info_Enum_Value, align 8
	%84 = alloca %Type_Info_Enum_Value, align 8
	%85 = alloca %Type_Info_Enum_Value, align 8
	%86 = alloca %Type_Info_Enum_Value, align 8
	%87 = alloca %Type_Info_Enum_Value, align 8
	%88 = alloca %Type_Info_Enum_Value, align 8
	%89 = alloca %Type_Info_Enum_Value, align 8
	%90 = alloca %Type_Info_Enum_Value, align 8
	%91 = alloca %Type_Info_Enum_Value, align 8
	%92 = alloca %Type_Info_Enum_Value, align 8
	%93 = alloca %Type_Info_Enum_Value, align 8
	%94 = alloca %Type_Info_Enum_Value, align 8
	%95 = alloca %Type_Info_Enum_Value, align 8
	%96 = alloca %Type_Info_Enum_Value, align 8
	%97 = alloca %Type_Info_Enum_Value, align 8
	%98 = alloca %Type_Info_Enum_Value, align 8
	%99 = alloca %Type_Info_Enum_Value, align 8
	%100 = alloca %Type_Info_Enum_Value, align 8
	%101 = alloca %Type_Info_Enum_Value, align 8
	%102 = alloca %Type_Info_Enum_Value, align 8
	%103 = alloca %Type_Info_Enum_Value, align 8
	%104 = alloca %Type_Info_Enum_Value, align 8
	%105 = alloca %Type_Info_Enum_Value, align 8
	%106 = alloca %Type_Info_Enum_Value, align 8
	%107 = alloca %Type_Info_Enum_Value, align 8
	%108 = alloca %Type_Info_Enum_Value, align 8
	%109 = alloca %Type_Info_Enum_Value, align 8
	%110 = alloca %Type_Info_Enum_Value, align 8
	%111 = alloca %Type_Info_Enum_Value, align 8
	%112 = alloca %Type_Info_Enum_Value, align 8
	%113 = alloca %Type_Info_Enum_Value, align 8
	%114 = alloca %Type_Info_Enum_Value, align 8
	%115 = alloca %Type_Info_Enum_Value, align 8
	%116 = alloca %Type_Info_Enum_Value, align 8
	%117 = alloca %Type_Info_Enum_Value, align 8
	%118 = alloca %Type_Info_Enum_Value, align 8
	%119 = alloca %Type_Info_Enum_Value, align 8
	%120 = alloca %Type_Info_Enum_Value, align 8
	%121 = alloca %Type_Info_Enum_Value, align 8
	%122 = alloca %Type_Info_Enum_Value, align 8
	%123 = alloca %Type_Info_Enum_Value, align 8
	%124 = alloca %Type_Info_Enum_Value, align 8
	%125 = alloca %Type_Info_Enum_Value, align 8
	%126 = alloca %Type_Info_Enum_Value, align 8
	%127 = alloca %Type_Info_Enum_Value, align 8
	%128 = alloca %Type_Info_Enum_Value, align 8
	%129 = alloca %Type_Info_Enum_Value, align 8
	%130 = alloca %Type_Info_Enum_Value, align 8
	%131 = alloca %Type_Info_Enum_Value, align 8
	%132 = alloca %Type_Info_Enum_Value, align 8
	%133 = alloca %Type_Info_Enum_Value, align 8
	%134 = alloca %Type_Info_Enum_Value, align 8
	%135 = alloca %Type_Info_Enum_Value, align 8
	%136 = alloca %Type_Info_Enum_Value, align 8
	%137 = alloca %Type_Info_Enum_Value, align 8
	%138 = alloca %Type_Info_Enum_Value, align 8
	%139 = alloca %Type_Info_Enum_Value, align 8
	%140 = alloca %Type_Info_Enum_Value, align 8
	%141 = alloca %Type_Info_Enum_Value, align 8
	%142 = alloca %Type_Info_Enum_Value, align 8
	%143 = alloca %Type_Info_Enum_Value, align 8
	%144 = alloca %Type_Info_Enum_Value, align 8
	%145 = alloca %Type_Info_Enum_Value, align 8
	%146 = alloca %Type_Info_Enum_Value, align 8
	%147 = alloca %Type_Info_Enum_Value, align 8
	%148 = alloca %Type_Info_Enum_Value, align 8
	%149 = alloca %Type_Info_Enum_Value, align 8
	%150 = alloca %Type_Info_Enum_Value, align 8
	%151 = alloca %Type_Info_Enum_Value, align 8
	%152 = alloca %Type_Info_Enum_Value, align 8
	%153 = alloca %Type_Info_Enum_Value, align 8
	%154 = alloca %Type_Info_Enum_Value, align 8
	%155 = alloca %Type_Info_Enum_Value, align 8
	%156 = alloca %Type_Info_Enum_Value, align 8
	%157 = alloca %Type_Info_Enum_Value, align 8
	%158 = alloca %Type_Info_Enum_Value, align 8
	%159 = alloca %Type_Info_Enum_Value, align 8
	%160 = alloca %Type_Info_Enum_Value, align 8
	%161 = alloca %Type_Info_Enum_Value, align 8
	%162 = alloca %Type_Info_Enum_Value, align 8
	%163 = alloca %Type_Info_Enum_Value, align 8
	%164 = alloca %Type_Info_Enum_Value, align 8
	%165 = alloca %Type_Info_Enum_Value, align 8
	%166 = alloca %Type_Info_Enum_Value, align 8
	%167 = alloca %Type_Info_Enum_Value, align 8
	%168 = alloca %Type_Info_Enum_Value, align 8
	%169 = alloca %Type_Info_Enum_Value, align 8
	%170 = alloca %Type_Info_Enum_Value, align 8
	%171 = alloca %Type_Info_Enum_Value, align 8
	%172 = alloca %Type_Info_Enum_Value, align 8
	%173 = alloca %Type_Info_Enum_Value, align 8
	%174 = alloca %Type_Info_Enum_Value, align 8
	%175 = alloca %Type_Info_Enum_Value, align 8
	%176 = alloca %Type_Info_Enum_Value, align 8
	%177 = alloca %Type_Info_Enum_Value, align 8
	%178 = alloca %Type_Info_Enum_Value, align 8
	%179 = alloca %Type_Info_Enum_Value, align 8
	%180 = alloca %Type_Info_Enum_Value, align 8
	%181 = alloca %Type_Info_Enum_Value, align 8
	%182 = alloca %Type_Info_Enum_Value, align 8
	%183 = alloca %Type_Info_Enum_Value, align 8
	%184 = alloca %Type_Info_Enum_Value, align 8
	%185 = alloca %Type_Info_Enum_Value, align 8
	%186 = alloca %Type_Info_Enum_Value, align 8
	%187 = alloca %Type_Info_Enum_Value, align 8
	%188 = alloca %Type_Info_Enum_Value, align 8
	%189 = alloca %Type_Info_Enum_Value, align 8
	%190 = alloca %Type_Info_Enum_Value, align 8
	%191 = alloca %Type_Info_Enum_Value, align 8
	%192 = alloca %Type_Info_Enum_Value, align 8
	%193 = alloca %Type_Info_Enum_Value, align 8
	%194 = alloca %Type_Info_Enum_Value, align 8
	%195 = alloca %Type_Info_Enum_Value, align 8
	%196 = alloca %Type_Info_Enum_Value, align 8
	%197 = alloca %Type_Info_Enum_Value, align 8
	%198 = alloca %Type_Info_Enum_Value, align 8
	%199 = alloca %Type_Info_Enum_Value, align 8
	%200 = alloca %Type_Info_Enum_Value, align 8
	%201 = alloca %Type_Info_Enum_Value, align 8
	%202 = alloca %Type_Info_Enum_Value, align 8
	%203 = alloca %Type_Info_Enum_Value, align 8
	%204 = alloca %Type_Info_Enum_Value, align 8
	%205 = alloca %Type_Info_Enum_Value, align 8
	%206 = alloca %Type_Info_Enum_Value, align 8
	%207 = alloca %Type_Info_Enum_Value, align 8
	%208 = alloca %Type_Info_Enum_Value, align 8
	%209 = alloca %Type_Info_Enum_Value, align 8
	%210 = alloca %Type_Info_Enum_Value, align 8
	%211 = alloca %Type_Info_Enum_Value, align 8
	%212 = alloca %Type_Info_Enum_Value, align 8
	%213 = alloca %Type_Info_Enum_Value, align 8
	%214 = alloca %Type_Info_Enum_Value, align 8
	%215 = alloca %Type_Info_Enum_Value, align 8
	%216 = alloca %Type_Info_Enum_Value, align 8
	%217 = alloca %Type_Info_Enum_Value, align 8
	%218 = alloca %Type_Info_Enum_Value, align 8
	%219 = alloca %Type_Info_Enum_Value, align 8
	%220 = alloca %Type_Info_Enum_Value, align 8
	%221 = alloca %Type_Info_Enum_Value, align 8
	%222 = alloca %Type_Info_Enum_Value, align 8
	%223 = alloca %Type_Info_Enum_Value, align 8
	%224 = alloca %Type_Info_Enum_Value, align 8
	%225 = alloca %Type_Info_Enum_Value, align 8
	%226 = alloca %Type_Info_Enum_Value, align 8
	%227 = alloca %Type_Info_Enum_Value, align 8
	%228 = alloca %Type_Info_Enum_Value, align 8
	%229 = alloca %Type_Info_Enum_Value, align 8
	%230 = alloca %Type_Info_Enum_Value, align 8
	%231 = alloca %Type_Info_Enum_Value, align 8
	%232 = alloca %Type_Info_Enum_Value, align 8
	%233 = alloca %Type_Info_Enum_Value, align 8
	%234 = alloca %Type_Info_Enum_Value, align 8
	%235 = alloca %Type_Info_Enum_Value, align 8
	%236 = alloca %Type_Info_Enum_Value, align 8
	%237 = alloca %Type_Info_Enum_Value, align 8
	%238 = alloca %Type_Info_Enum_Value, align 8
	%239 = alloca %Type_Info_Enum_Value, align 8
	%240 = alloca %Type_Info_Enum_Value, align 8
	%241 = alloca %Type_Info_Enum_Value, align 8
	%242 = alloca %Type_Info_Enum_Value, align 8
	%243 = alloca %Type_Info_Enum_Value, align 8
	%244 = alloca %Type_Info_Enum_Value, align 8
	%245 = alloca %Type_Info_Enum_Value, align 8
	%246 = alloca %Type_Info_Enum_Value, align 8
	%247 = alloca %Type_Info_Enum_Value, align 8
	%248 = alloca %Type_Info_Enum_Value, align 8
	%249 = alloca %Type_Info_Enum_Value, align 8
	%250 = alloca %Type_Info_Enum_Value, align 8
	%251 = alloca %Type_Info_Enum_Value, align 8
	%252 = alloca %Type_Info_Enum_Value, align 8
	%253 = alloca %Type_Info_Enum_Value, align 8
	%254 = alloca %Type_Info_Enum_Value, align 8
	%255 = alloca %Type_Info_Enum_Value, align 8
	%256 = alloca %Type_Info_Enum_Value, align 8
	%257 = alloca %Type_Info_Enum_Value, align 8
	%258 = alloca %Type_Info_Enum_Value, align 8
	%259 = alloca %Type_Info_Enum_Value, align 8
	%260 = alloca %Type_Info_Enum_Value, align 8
	%261 = alloca %Type_Info_Enum_Value, align 8
	%262 = alloca %Type_Info_Enum_Value, align 8
	%263 = alloca %Type_Info_Enum_Value, align 8
	%264 = alloca %Type_Info_Enum_Value, align 8
	%265 = alloca %Type_Info_Enum_Value, align 8
	%266 = alloca %Type_Info_Enum_Value, align 8
	%267 = alloca %Type_Info_Enum_Value, align 8
	%268 = alloca %Type_Info_Enum_Value, align 8
	%269 = alloca {%main-0.Entity*, i64, i64, %Allocator}, align 8
	%270 = alloca %Context, align 8
	%271 = alloca %Source_Code_Location, align 16
	%272 = alloca {%engine-10.Sprite*, i64, i64, %Allocator}, align 8
	%273 = alloca %Source_Code_Location, align 16
	call void @__init_context(%Context* @__ggv$0)
	%274 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 0
	%275 = getelementptr inbounds {%Type_Info*, i64}, {%Type_Info*, i64}* @__type_table, i64 0, i32 0
	store %Type_Info* %274, %Type_Info** %275
	%276 = getelementptr inbounds {%Type_Info*, i64}, {%Type_Info*, i64}* @__type_table, i64 0, i32 1
	store i64 339, i64* %276
	%277 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 1
	%278 = getelementptr inbounds %Type_Info, %Type_Info* %277, i64 0, i32 2
	%279 = getelementptr inbounds %Type_Info, %Type_Info* %277, i64 0, i32 0
	store i64 24, i64* %279
	%280 = getelementptr inbounds %Type_Info, %Type_Info* %277, i64 0, i32 1
	store i64 8, i64* %280
	; TypeInfoNamed
	%281 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %278 to %Type_Info_Named*
	%282 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 2
	%283 = bitcast %Type_Info* %282 to %Type_Info*
	%284 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %281, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$44a, i64 0, i32 0), i64 15}, %..string* %284
	%285 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %281, i64 0, i32 1
	store %Type_Info* %283, %Type_Info** %285
	%286 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %278, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %286
	%287 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 2
	%288 = getelementptr inbounds %Type_Info, %Type_Info* %287, i64 0, i32 2
	%289 = getelementptr inbounds %Type_Info, %Type_Info* %287, i64 0, i32 0
	store i64 24, i64* %289
	%290 = getelementptr inbounds %Type_Info, %Type_Info* %287, i64 0, i32 1
	store i64 8, i64* %290
	; TypeInfoStruct
	%291 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %288 to %Type_Info_Struct*
	%292 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %291, i64 0, i32 4
	store i1 false, i1* %292
	%293 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %291, i64 0, i32 5
	store i1 true, i1* %293
	%294 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %291, i64 0, i32 6
	store i1 false, i1* %294
	%295 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %291, i64 0, i32 7
	store i1 false, i1* %295
	%296 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 0
	%297 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 0
	%298 = getelementptr inbounds [450 x i64], [450 x i64]* @__$type_info_offsets_data, i64 0, i32 0
	%299 = getelementptr inbounds [450 x i1], [450 x i1]* @__$type_info_usings_data, i64 0, i32 0
	%300 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%301 = bitcast %Type_Info* %300 to %Type_Info*
	%302 = getelementptr inbounds %Type_Info*, %Type_Info** %296, i64 0
	%303 = getelementptr inbounds i64, i64* %298, i64 0
	%304 = getelementptr inbounds i1, i1* %299, i64 0
	%305 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	store %Type_Info* %305, %Type_Info** %302
	%306 = getelementptr inbounds %..string, %..string* %297, i64 0
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$44b, i64 0, i32 0), i64 4}, %..string* %306
	store i64 0, i64* %303
	store i1 false, i1* %304
	%307 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%308 = bitcast %Type_Info* %307 to %Type_Info*
	%309 = getelementptr inbounds %Type_Info*, %Type_Info** %296, i64 1
	%310 = getelementptr inbounds i64, i64* %298, i64 1
	%311 = getelementptr inbounds i1, i1* %299, i64 1
	%312 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	store %Type_Info* %312, %Type_Info** %309
	%313 = getelementptr inbounds %..string, %..string* %297, i64 1
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$44c, i64 0, i32 0), i64 4}, %..string* %313
	store i64 16, i64* %310
	store i1 false, i1* %311
	%314 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %291, i64 0, i32 0
	%315 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %314, i64 0, i32 0
	store %Type_Info** %296, %Type_Info*** %315
	%316 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %314, i64 0, i32 1
	store i64 2, i64* %316
	%317 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %291, i64 0, i32 1
	%318 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %317, i64 0, i32 0
	store %..string* %297, %..string** %318
	%319 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %317, i64 0, i32 1
	store i64 2, i64* %319
	%320 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %291, i64 0, i32 2
	%321 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %320, i64 0, i32 0
	store i64* %298, i64** %321
	%322 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %320, i64 0, i32 1
	store i64 2, i64* %322
	%323 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %291, i64 0, i32 3
	%324 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %323, i64 0, i32 0
	store i1* %299, i1** %324
	%325 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %323, i64 0, i32 1
	store i64 2, i64* %325
	%326 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %288, i64 0, i32 2 ; UnionTagPtr
	store i8 16, i8* %326
	%327 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%328 = getelementptr inbounds %Type_Info, %Type_Info* %327, i64 0, i32 2
	%329 = getelementptr inbounds %Type_Info, %Type_Info* %327, i64 0, i32 0
	store i64 16, i64* %329
	%330 = getelementptr inbounds %Type_Info, %Type_Info* %327, i64 0, i32 1
	store i64 8, i64* %330
	; TypeInfoBasic
	%331 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %328 to %Type_Info_String*
	%332 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %328, i64 0, i32 2 ; UnionTagPtr
	store i8 6, i8* %332
	%333 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%334 = getelementptr inbounds %Type_Info, %Type_Info* %333, i64 0, i32 2
	%335 = getelementptr inbounds %Type_Info, %Type_Info* %333, i64 0, i32 0
	store i64 8, i64* %335
	%336 = getelementptr inbounds %Type_Info, %Type_Info* %333, i64 0, i32 1
	store i64 8, i64* %336
	; TypeInfoPointer
	%337 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %334 to %Type_Info_Pointer*
	%338 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	%339 = bitcast %Type_Info* %338 to %Type_Info*
	%340 = getelementptr inbounds %Type_Info_Pointer, %Type_Info_Pointer* %337, i64 0, i32 0
	store %Type_Info* %339, %Type_Info** %340
	%341 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %334, i64 0, i32 2 ; UnionTagPtr
	store i8 9, i8* %341
	%342 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	%343 = getelementptr inbounds %Type_Info, %Type_Info* %342, i64 0, i32 2
	%344 = getelementptr inbounds %Type_Info, %Type_Info* %342, i64 0, i32 0
	store i64 1, i64* %344
	%345 = getelementptr inbounds %Type_Info, %Type_Info* %342, i64 0, i32 1
	store i64 1, i64* %345
	; TypeInfoBasic
	%346 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %343 to %Type_Info_Integer*
	%347 = getelementptr inbounds %Type_Info_Integer, %Type_Info_Integer* %346, i64 0, i32 0
	store i1 false, i1* %347
	%348 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %343, i64 0, i32 2 ; UnionTagPtr
	store i8 2, i8* %348
	%349 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%350 = getelementptr inbounds %Type_Info, %Type_Info* %349, i64 0, i32 2
	%351 = getelementptr inbounds %Type_Info, %Type_Info* %349, i64 0, i32 0
	store i64 8, i64* %351
	%352 = getelementptr inbounds %Type_Info, %Type_Info* %349, i64 0, i32 1
	store i64 8, i64* %352
	; TypeInfoBasic
	%353 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %350 to %Type_Info_Integer*
	%354 = getelementptr inbounds %Type_Info_Integer, %Type_Info_Integer* %353, i64 0, i32 0
	store i1 true, i1* %354
	%355 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %350, i64 0, i32 2 ; UnionTagPtr
	store i8 2, i8* %355
	%356 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%357 = getelementptr inbounds %Type_Info, %Type_Info* %356, i64 0, i32 2
	%358 = getelementptr inbounds %Type_Info, %Type_Info* %356, i64 0, i32 0
	store i64 8, i64* %358
	%359 = getelementptr inbounds %Type_Info, %Type_Info* %356, i64 0, i32 1
	store i64 8, i64* %359
	; TypeInfoPointer
	%360 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %357 to %Type_Info_Pointer*
	%361 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 8
	%362 = bitcast %Type_Info* %361 to %Type_Info*
	%363 = getelementptr inbounds %Type_Info_Pointer, %Type_Info_Pointer* %360, i64 0, i32 0
	store %Type_Info* %362, %Type_Info** %363
	%364 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %357, i64 0, i32 2 ; UnionTagPtr
	store i8 9, i8* %364
	%365 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 8
	%366 = getelementptr inbounds %Type_Info, %Type_Info* %365, i64 0, i32 2
	%367 = getelementptr inbounds %Type_Info, %Type_Info* %365, i64 0, i32 0
	store i64 96, i64* %367
	%368 = getelementptr inbounds %Type_Info, %Type_Info* %365, i64 0, i32 1
	store i64 8, i64* %368
	; TypeInfoNamed
	%369 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %366 to %Type_Info_Named*
	%370 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 9
	%371 = bitcast %Type_Info* %370 to %Type_Info*
	%372 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %369, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$44d, i64 0, i32 0), i64 9}, %..string* %372
	%373 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %369, i64 0, i32 1
	store %Type_Info* %371, %Type_Info** %373
	%374 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %366, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %374
	%375 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 9
	%376 = getelementptr inbounds %Type_Info, %Type_Info* %375, i64 0, i32 2
	%377 = getelementptr inbounds %Type_Info, %Type_Info* %375, i64 0, i32 0
	store i64 96, i64* %377
	%378 = getelementptr inbounds %Type_Info, %Type_Info* %375, i64 0, i32 1
	store i64 8, i64* %378
	; TypeInfoStruct
	%379 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %376 to %Type_Info_Struct*
	%380 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %379, i64 0, i32 4
	store i1 false, i1* %380
	%381 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %379, i64 0, i32 5
	store i1 true, i1* %381
	%382 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %379, i64 0, i32 6
	store i1 false, i1* %382
	%383 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %379, i64 0, i32 7
	store i1 false, i1* %383
	%384 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 2
	%385 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 2
	%386 = getelementptr inbounds [450 x i64], [450 x i64]* @__$type_info_offsets_data, i64 0, i32 2
	%387 = getelementptr inbounds [450 x i1], [450 x i1]* @__$type_info_usings_data, i64 0, i32 2
	%388 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%389 = bitcast %Type_Info* %388 to %Type_Info*
	%390 = getelementptr inbounds %Type_Info*, %Type_Info** %384, i64 0
	%391 = getelementptr inbounds i64, i64* %386, i64 0
	%392 = getelementptr inbounds i1, i1* %387, i64 0
	%393 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	store %Type_Info* %393, %Type_Info** %390
	%394 = getelementptr inbounds %..string, %..string* %385, i64 0
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$44e, i64 0, i32 0), i64 4}, %..string* %394
	store i64 0, i64* %391
	store i1 false, i1* %392
	%395 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%396 = bitcast %Type_Info* %395 to %Type_Info*
	%397 = getelementptr inbounds %Type_Info*, %Type_Info** %384, i64 1
	%398 = getelementptr inbounds i64, i64* %386, i64 1
	%399 = getelementptr inbounds i1, i1* %387, i64 1
	%400 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	store %Type_Info* %400, %Type_Info** %397
	%401 = getelementptr inbounds %..string, %..string* %385, i64 1
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$44f, i64 0, i32 0), i64 5}, %..string* %401
	store i64 8, i64* %398
	store i1 false, i1* %399
	%402 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 10
	%403 = bitcast %Type_Info* %402 to %Type_Info*
	%404 = getelementptr inbounds %Type_Info*, %Type_Info** %384, i64 2
	%405 = getelementptr inbounds i64, i64* %386, i64 2
	%406 = getelementptr inbounds i1, i1* %387, i64 2
	%407 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 10
	store %Type_Info* %407, %Type_Info** %404
	%408 = getelementptr inbounds %..string, %..string* %385, i64 2
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$450, i64 0, i32 0), i64 7}, %..string* %408
	store i64 16, i64* %405
	store i1 false, i1* %406
	%409 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %379, i64 0, i32 0
	%410 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %409, i64 0, i32 0
	store %Type_Info** %384, %Type_Info*** %410
	%411 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %409, i64 0, i32 1
	store i64 3, i64* %411
	%412 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %379, i64 0, i32 1
	%413 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %412, i64 0, i32 0
	store %..string* %385, %..string** %413
	%414 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %412, i64 0, i32 1
	store i64 3, i64* %414
	%415 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %379, i64 0, i32 2
	%416 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %415, i64 0, i32 0
	store i64* %386, i64** %416
	%417 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %415, i64 0, i32 1
	store i64 3, i64* %417
	%418 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %379, i64 0, i32 3
	%419 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %418, i64 0, i32 0
	store i1* %387, i1** %419
	%420 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %418, i64 0, i32 1
	store i64 3, i64* %420
	%421 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %376, i64 0, i32 2 ; UnionTagPtr
	store i8 16, i8* %421
	%422 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 10
	%423 = getelementptr inbounds %Type_Info, %Type_Info* %422, i64 0, i32 2
	%424 = getelementptr inbounds %Type_Info, %Type_Info* %422, i64 0, i32 0
	store i64 80, i64* %424
	%425 = getelementptr inbounds %Type_Info, %Type_Info* %422, i64 0, i32 1
	store i64 8, i64* %425
	; TypeInfoUnion
	%426 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %423 to %Type_Info_Union*
	%427 = getelementptr inbounds %Type_Info_Union, %Type_Info_Union* %426, i64 0, i32 0
	%428 = getelementptr inbounds %Type_Info_Union, %Type_Info_Union* %426, i64 0, i32 1
	%429 = getelementptr inbounds %Type_Info_Union, %Type_Info_Union* %426, i64 0, i32 2
	%430 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 5
	%431 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 1
	%432 = bitcast %Type_Info* %431 to %Type_Info*
	%433 = getelementptr inbounds %Type_Info*, %Type_Info** %430, i64 0
	%434 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 1
	store %Type_Info* %434, %Type_Info** %433
	%435 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 11
	%436 = bitcast %Type_Info* %435 to %Type_Info*
	%437 = getelementptr inbounds %Type_Info*, %Type_Info** %430, i64 1
	%438 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 11
	store %Type_Info* %438, %Type_Info** %437
	%439 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 14
	%440 = bitcast %Type_Info* %439 to %Type_Info*
	%441 = getelementptr inbounds %Type_Info*, %Type_Info** %430, i64 2
	%442 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 14
	store %Type_Info* %442, %Type_Info** %441
	%443 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 16
	%444 = bitcast %Type_Info* %443 to %Type_Info*
	%445 = getelementptr inbounds %Type_Info*, %Type_Info** %430, i64 3
	%446 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 16
	store %Type_Info* %446, %Type_Info** %445
	%447 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 17
	%448 = bitcast %Type_Info* %447 to %Type_Info*
	%449 = getelementptr inbounds %Type_Info*, %Type_Info** %430, i64 4
	%450 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 17
	store %Type_Info* %450, %Type_Info** %449
	%451 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 18
	%452 = bitcast %Type_Info* %451 to %Type_Info*
	%453 = getelementptr inbounds %Type_Info*, %Type_Info** %430, i64 5
	%454 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 18
	store %Type_Info* %454, %Type_Info** %453
	%455 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 19
	%456 = bitcast %Type_Info* %455 to %Type_Info*
	%457 = getelementptr inbounds %Type_Info*, %Type_Info** %430, i64 6
	%458 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 19
	store %Type_Info* %458, %Type_Info** %457
	%459 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 20
	%460 = bitcast %Type_Info* %459 to %Type_Info*
	%461 = getelementptr inbounds %Type_Info*, %Type_Info** %430, i64 7
	%462 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 20
	store %Type_Info* %462, %Type_Info** %461
	%463 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 21
	%464 = bitcast %Type_Info* %463 to %Type_Info*
	%465 = getelementptr inbounds %Type_Info*, %Type_Info** %430, i64 8
	%466 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 21
	store %Type_Info* %466, %Type_Info** %465
	%467 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 23
	%468 = bitcast %Type_Info* %467 to %Type_Info*
	%469 = getelementptr inbounds %Type_Info*, %Type_Info** %430, i64 9
	%470 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 23
	store %Type_Info* %470, %Type_Info** %469
	%471 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 27
	%472 = bitcast %Type_Info* %471 to %Type_Info*
	%473 = getelementptr inbounds %Type_Info*, %Type_Info** %430, i64 10
	%474 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 27
	store %Type_Info* %474, %Type_Info** %473
	%475 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 29
	%476 = bitcast %Type_Info* %475 to %Type_Info*
	%477 = getelementptr inbounds %Type_Info*, %Type_Info** %430, i64 11
	%478 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 29
	store %Type_Info* %478, %Type_Info** %477
	%479 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 31
	%480 = bitcast %Type_Info* %479 to %Type_Info*
	%481 = getelementptr inbounds %Type_Info*, %Type_Info** %430, i64 12
	%482 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 31
	store %Type_Info* %482, %Type_Info** %481
	%483 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 32
	%484 = bitcast %Type_Info* %483 to %Type_Info*
	%485 = getelementptr inbounds %Type_Info*, %Type_Info** %430, i64 13
	%486 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 32
	store %Type_Info* %486, %Type_Info** %485
	%487 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 33
	%488 = bitcast %Type_Info* %487 to %Type_Info*
	%489 = getelementptr inbounds %Type_Info*, %Type_Info** %430, i64 14
	%490 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 33
	store %Type_Info* %490, %Type_Info** %489
	%491 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 39
	%492 = bitcast %Type_Info* %491 to %Type_Info*
	%493 = getelementptr inbounds %Type_Info*, %Type_Info** %430, i64 15
	%494 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 39
	store %Type_Info* %494, %Type_Info** %493
	%495 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 46
	%496 = bitcast %Type_Info* %495 to %Type_Info*
	%497 = getelementptr inbounds %Type_Info*, %Type_Info** %430, i64 16
	%498 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 46
	store %Type_Info* %498, %Type_Info** %497
	%499 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 48
	%500 = bitcast %Type_Info* %499 to %Type_Info*
	%501 = getelementptr inbounds %Type_Info*, %Type_Info** %430, i64 17
	%502 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 48
	store %Type_Info* %502, %Type_Info** %501
	%503 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 67
	%504 = bitcast %Type_Info* %503 to %Type_Info*
	%505 = getelementptr inbounds %Type_Info*, %Type_Info** %430, i64 18
	%506 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 67
	store %Type_Info* %506, %Type_Info** %505
	%507 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 69
	%508 = bitcast %Type_Info* %507 to %Type_Info*
	%509 = getelementptr inbounds %Type_Info*, %Type_Info** %430, i64 19
	%510 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 69
	store %Type_Info* %510, %Type_Info** %509
	%511 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %427, i64 0, i32 0
	store %Type_Info** %430, %Type_Info*** %511
	%512 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %427, i64 0, i32 1
	store i64 20, i64* %512
	store i64 72, i64* %428
	%513 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	store %Type_Info* %513, %Type_Info** %429
	%514 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %423, i64 0, i32 2 ; UnionTagPtr
	store i8 17, i8* %514
	%515 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%516 = getelementptr inbounds %Type_Info, %Type_Info* %515, i64 0, i32 2
	%517 = getelementptr inbounds %Type_Info, %Type_Info* %515, i64 0, i32 0
	store i64 8, i64* %517
	%518 = getelementptr inbounds %Type_Info, %Type_Info* %515, i64 0, i32 1
	store i64 8, i64* %518
	; TypeInfoPointer
	%519 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %516 to %Type_Info_Pointer*
	%520 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 8
	%521 = bitcast %Type_Info* %520 to %Type_Info*
	%522 = getelementptr inbounds %Type_Info_Pointer, %Type_Info_Pointer* %519, i64 0, i32 0
	store %Type_Info* %521, %Type_Info** %522
	%523 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %516, i64 0, i32 2 ; UnionTagPtr
	store i8 9, i8* %523
	%524 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 11
	%525 = getelementptr inbounds %Type_Info, %Type_Info* %524, i64 0, i32 2
	%526 = getelementptr inbounds %Type_Info, %Type_Info* %524, i64 0, i32 0
	store i64 1, i64* %526
	%527 = getelementptr inbounds %Type_Info, %Type_Info* %524, i64 0, i32 1
	store i64 1, i64* %527
	; TypeInfoNamed
	%528 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %525 to %Type_Info_Named*
	%529 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 12
	%530 = bitcast %Type_Info* %529 to %Type_Info*
	%531 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %528, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__str$451, i64 0, i32 0), i64 17}, %..string* %531
	%532 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %528, i64 0, i32 1
	store %Type_Info* %530, %Type_Info** %532
	%533 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %525, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %533
	%534 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 12
	%535 = getelementptr inbounds %Type_Info, %Type_Info* %534, i64 0, i32 2
	%536 = getelementptr inbounds %Type_Info, %Type_Info* %534, i64 0, i32 0
	store i64 1, i64* %536
	%537 = getelementptr inbounds %Type_Info, %Type_Info* %534, i64 0, i32 1
	store i64 1, i64* %537
	; TypeInfoStruct
	%538 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %535 to %Type_Info_Struct*
	%539 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %538, i64 0, i32 4
	store i1 false, i1* %539
	%540 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %538, i64 0, i32 5
	store i1 true, i1* %540
	%541 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %538, i64 0, i32 6
	store i1 false, i1* %541
	%542 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %538, i64 0, i32 7
	store i1 false, i1* %542
	%543 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 25
	%544 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 5
	%545 = getelementptr inbounds [450 x i64], [450 x i64]* @__$type_info_offsets_data, i64 0, i32 5
	%546 = getelementptr inbounds [450 x i1], [450 x i1]* @__$type_info_usings_data, i64 0, i32 5
	%547 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 13
	%548 = bitcast %Type_Info* %547 to %Type_Info*
	%549 = getelementptr inbounds %Type_Info*, %Type_Info** %543, i64 0
	%550 = getelementptr inbounds i64, i64* %545, i64 0
	%551 = getelementptr inbounds i1, i1* %546, i64 0
	%552 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 13
	store %Type_Info* %552, %Type_Info** %549
	%553 = getelementptr inbounds %..string, %..string* %544, i64 0
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$452, i64 0, i32 0), i64 6}, %..string* %553
	store i64 0, i64* %550
	store i1 false, i1* %551
	%554 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %538, i64 0, i32 0
	%555 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %554, i64 0, i32 0
	store %Type_Info** %543, %Type_Info*** %555
	%556 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %554, i64 0, i32 1
	store i64 1, i64* %556
	%557 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %538, i64 0, i32 1
	%558 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %557, i64 0, i32 0
	store %..string* %544, %..string** %558
	%559 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %557, i64 0, i32 1
	store i64 1, i64* %559
	%560 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %538, i64 0, i32 2
	%561 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %560, i64 0, i32 0
	store i64* %545, i64** %561
	%562 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %560, i64 0, i32 1
	store i64 1, i64* %562
	%563 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %538, i64 0, i32 3
	%564 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %563, i64 0, i32 0
	store i1* %546, i1** %564
	%565 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %563, i64 0, i32 1
	store i64 1, i64* %565
	%566 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %535, i64 0, i32 2 ; UnionTagPtr
	store i8 16, i8* %566
	%567 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 13
	%568 = getelementptr inbounds %Type_Info, %Type_Info* %567, i64 0, i32 2
	%569 = getelementptr inbounds %Type_Info, %Type_Info* %567, i64 0, i32 0
	store i64 1, i64* %569
	%570 = getelementptr inbounds %Type_Info, %Type_Info* %567, i64 0, i32 1
	store i64 1, i64* %570
	; TypeInfoBasic
	%571 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %568 to %Type_Info_Boolean*
	%572 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %568, i64 0, i32 2 ; UnionTagPtr
	store i8 7, i8* %572
	%573 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 14
	%574 = getelementptr inbounds %Type_Info, %Type_Info* %573, i64 0, i32 2
	%575 = getelementptr inbounds %Type_Info, %Type_Info* %573, i64 0, i32 0
	store i64 0, i64* %575
	%576 = getelementptr inbounds %Type_Info, %Type_Info* %573, i64 0, i32 1
	store i64 1, i64* %576
	; TypeInfoNamed
	%577 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %574 to %Type_Info_Named*
	%578 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 15
	%579 = bitcast %Type_Info* %578 to %Type_Info*
	%580 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %577, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$453, i64 0, i32 0), i64 14}, %..string* %580
	%581 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %577, i64 0, i32 1
	store %Type_Info* %579, %Type_Info** %581
	%582 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %574, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %582
	%583 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 15
	%584 = getelementptr inbounds %Type_Info, %Type_Info* %583, i64 0, i32 2
	%585 = getelementptr inbounds %Type_Info, %Type_Info* %583, i64 0, i32 0
	store i64 0, i64* %585
	%586 = getelementptr inbounds %Type_Info, %Type_Info* %583, i64 0, i32 1
	store i64 1, i64* %586
	; TypeInfoStruct
	%587 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %584 to %Type_Info_Struct*
	%588 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %587, i64 0, i32 4
	store i1 false, i1* %588
	%589 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %587, i64 0, i32 5
	store i1 false, i1* %589
	%590 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %587, i64 0, i32 6
	store i1 false, i1* %590
	%591 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %587, i64 0, i32 7
	store i1 false, i1* %591
	%592 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 26
	%593 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 6
	%594 = getelementptr inbounds [450 x i64], [450 x i64]* @__$type_info_offsets_data, i64 0, i32 6
	%595 = getelementptr inbounds [450 x i1], [450 x i1]* @__$type_info_usings_data, i64 0, i32 6
	%596 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %587, i64 0, i32 0
	%597 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %596, i64 0, i32 0
	store %Type_Info** %592, %Type_Info*** %597
	%598 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %596, i64 0, i32 1
	store i64 0, i64* %598
	%599 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %587, i64 0, i32 1
	%600 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %599, i64 0, i32 0
	store %..string* %593, %..string** %600
	%601 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %599, i64 0, i32 1
	store i64 0, i64* %601
	%602 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %587, i64 0, i32 2
	%603 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %602, i64 0, i32 0
	store i64* %594, i64** %603
	%604 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %602, i64 0, i32 1
	store i64 0, i64* %604
	%605 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %587, i64 0, i32 3
	%606 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %605, i64 0, i32 0
	store i1* %595, i1** %606
	%607 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %605, i64 0, i32 1
	store i64 0, i64* %607
	%608 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %584, i64 0, i32 2 ; UnionTagPtr
	store i8 16, i8* %608
	%609 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 16
	%610 = getelementptr inbounds %Type_Info, %Type_Info* %609, i64 0, i32 2
	%611 = getelementptr inbounds %Type_Info, %Type_Info* %609, i64 0, i32 0
	store i64 0, i64* %611
	%612 = getelementptr inbounds %Type_Info, %Type_Info* %609, i64 0, i32 1
	store i64 1, i64* %612
	; TypeInfoNamed
	%613 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %610 to %Type_Info_Named*
	%614 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 15
	%615 = bitcast %Type_Info* %614 to %Type_Info*
	%616 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %613, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$454, i64 0, i32 0), i64 15}, %..string* %616
	%617 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %613, i64 0, i32 1
	store %Type_Info* %615, %Type_Info** %617
	%618 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %610, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %618
	%619 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 15
	%620 = getelementptr inbounds %Type_Info, %Type_Info* %619, i64 0, i32 2
	%621 = getelementptr inbounds %Type_Info, %Type_Info* %619, i64 0, i32 0
	store i64 0, i64* %621
	%622 = getelementptr inbounds %Type_Info, %Type_Info* %619, i64 0, i32 1
	store i64 1, i64* %622
	; TypeInfoStruct
	%623 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %620 to %Type_Info_Struct*
	%624 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %623, i64 0, i32 4
	store i1 false, i1* %624
	%625 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %623, i64 0, i32 5
	store i1 false, i1* %625
	%626 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %623, i64 0, i32 6
	store i1 false, i1* %626
	%627 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %623, i64 0, i32 7
	store i1 false, i1* %627
	%628 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 26
	%629 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 6
	%630 = getelementptr inbounds [450 x i64], [450 x i64]* @__$type_info_offsets_data, i64 0, i32 6
	%631 = getelementptr inbounds [450 x i1], [450 x i1]* @__$type_info_usings_data, i64 0, i32 6
	%632 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %623, i64 0, i32 0
	%633 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %632, i64 0, i32 0
	store %Type_Info** %628, %Type_Info*** %633
	%634 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %632, i64 0, i32 1
	store i64 0, i64* %634
	%635 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %623, i64 0, i32 1
	%636 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %635, i64 0, i32 0
	store %..string* %629, %..string** %636
	%637 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %635, i64 0, i32 1
	store i64 0, i64* %637
	%638 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %623, i64 0, i32 2
	%639 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %638, i64 0, i32 0
	store i64* %630, i64** %639
	%640 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %638, i64 0, i32 1
	store i64 0, i64* %640
	%641 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %623, i64 0, i32 3
	%642 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %641, i64 0, i32 0
	store i1* %631, i1** %642
	%643 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %641, i64 0, i32 1
	store i64 0, i64* %643
	%644 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %620, i64 0, i32 2 ; UnionTagPtr
	store i8 16, i8* %644
	%645 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 17
	%646 = getelementptr inbounds %Type_Info, %Type_Info* %645, i64 0, i32 2
	%647 = getelementptr inbounds %Type_Info, %Type_Info* %645, i64 0, i32 0
	store i64 0, i64* %647
	%648 = getelementptr inbounds %Type_Info, %Type_Info* %645, i64 0, i32 1
	store i64 1, i64* %648
	; TypeInfoNamed
	%649 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %646 to %Type_Info_Named*
	%650 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 15
	%651 = bitcast %Type_Info* %650 to %Type_Info*
	%652 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %649, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__str$455, i64 0, i32 0), i64 17}, %..string* %652
	%653 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %649, i64 0, i32 1
	store %Type_Info* %651, %Type_Info** %653
	%654 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %646, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %654
	%655 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 15
	%656 = getelementptr inbounds %Type_Info, %Type_Info* %655, i64 0, i32 2
	%657 = getelementptr inbounds %Type_Info, %Type_Info* %655, i64 0, i32 0
	store i64 0, i64* %657
	%658 = getelementptr inbounds %Type_Info, %Type_Info* %655, i64 0, i32 1
	store i64 1, i64* %658
	; TypeInfoStruct
	%659 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %656 to %Type_Info_Struct*
	%660 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %659, i64 0, i32 4
	store i1 false, i1* %660
	%661 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %659, i64 0, i32 5
	store i1 false, i1* %661
	%662 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %659, i64 0, i32 6
	store i1 false, i1* %662
	%663 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %659, i64 0, i32 7
	store i1 false, i1* %663
	%664 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 26
	%665 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 6
	%666 = getelementptr inbounds [450 x i64], [450 x i64]* @__$type_info_offsets_data, i64 0, i32 6
	%667 = getelementptr inbounds [450 x i1], [450 x i1]* @__$type_info_usings_data, i64 0, i32 6
	%668 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %659, i64 0, i32 0
	%669 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %668, i64 0, i32 0
	store %Type_Info** %664, %Type_Info*** %669
	%670 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %668, i64 0, i32 1
	store i64 0, i64* %670
	%671 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %659, i64 0, i32 1
	%672 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %671, i64 0, i32 0
	store %..string* %665, %..string** %672
	%673 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %671, i64 0, i32 1
	store i64 0, i64* %673
	%674 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %659, i64 0, i32 2
	%675 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %674, i64 0, i32 0
	store i64* %666, i64** %675
	%676 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %674, i64 0, i32 1
	store i64 0, i64* %676
	%677 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %659, i64 0, i32 3
	%678 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %677, i64 0, i32 0
	store i1* %667, i1** %678
	%679 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %677, i64 0, i32 1
	store i64 0, i64* %679
	%680 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %656, i64 0, i32 2 ; UnionTagPtr
	store i8 16, i8* %680
	%681 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 18
	%682 = getelementptr inbounds %Type_Info, %Type_Info* %681, i64 0, i32 2
	%683 = getelementptr inbounds %Type_Info, %Type_Info* %681, i64 0, i32 0
	store i64 0, i64* %683
	%684 = getelementptr inbounds %Type_Info, %Type_Info* %681, i64 0, i32 1
	store i64 1, i64* %684
	; TypeInfoNamed
	%685 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %682 to %Type_Info_Named*
	%686 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 15
	%687 = bitcast %Type_Info* %686 to %Type_Info*
	%688 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %685, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$456, i64 0, i32 0), i64 16}, %..string* %688
	%689 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %685, i64 0, i32 1
	store %Type_Info* %687, %Type_Info** %689
	%690 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %682, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %690
	%691 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 15
	%692 = getelementptr inbounds %Type_Info, %Type_Info* %691, i64 0, i32 2
	%693 = getelementptr inbounds %Type_Info, %Type_Info* %691, i64 0, i32 0
	store i64 0, i64* %693
	%694 = getelementptr inbounds %Type_Info, %Type_Info* %691, i64 0, i32 1
	store i64 1, i64* %694
	; TypeInfoStruct
	%695 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %692 to %Type_Info_Struct*
	%696 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %695, i64 0, i32 4
	store i1 false, i1* %696
	%697 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %695, i64 0, i32 5
	store i1 false, i1* %697
	%698 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %695, i64 0, i32 6
	store i1 false, i1* %698
	%699 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %695, i64 0, i32 7
	store i1 false, i1* %699
	%700 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 26
	%701 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 6
	%702 = getelementptr inbounds [450 x i64], [450 x i64]* @__$type_info_offsets_data, i64 0, i32 6
	%703 = getelementptr inbounds [450 x i1], [450 x i1]* @__$type_info_usings_data, i64 0, i32 6
	%704 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %695, i64 0, i32 0
	%705 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %704, i64 0, i32 0
	store %Type_Info** %700, %Type_Info*** %705
	%706 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %704, i64 0, i32 1
	store i64 0, i64* %706
	%707 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %695, i64 0, i32 1
	%708 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %707, i64 0, i32 0
	store %..string* %701, %..string** %708
	%709 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %707, i64 0, i32 1
	store i64 0, i64* %709
	%710 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %695, i64 0, i32 2
	%711 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %710, i64 0, i32 0
	store i64* %702, i64** %711
	%712 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %710, i64 0, i32 1
	store i64 0, i64* %712
	%713 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %695, i64 0, i32 3
	%714 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %713, i64 0, i32 0
	store i1* %703, i1** %714
	%715 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %713, i64 0, i32 1
	store i64 0, i64* %715
	%716 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %692, i64 0, i32 2 ; UnionTagPtr
	store i8 16, i8* %716
	%717 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 19
	%718 = getelementptr inbounds %Type_Info, %Type_Info* %717, i64 0, i32 2
	%719 = getelementptr inbounds %Type_Info, %Type_Info* %717, i64 0, i32 0
	store i64 0, i64* %719
	%720 = getelementptr inbounds %Type_Info, %Type_Info* %717, i64 0, i32 1
	store i64 1, i64* %720
	; TypeInfoNamed
	%721 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %718 to %Type_Info_Named*
	%722 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 15
	%723 = bitcast %Type_Info* %722 to %Type_Info*
	%724 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %721, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__str$457, i64 0, i32 0), i64 17}, %..string* %724
	%725 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %721, i64 0, i32 1
	store %Type_Info* %723, %Type_Info** %725
	%726 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %718, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %726
	%727 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 15
	%728 = getelementptr inbounds %Type_Info, %Type_Info* %727, i64 0, i32 2
	%729 = getelementptr inbounds %Type_Info, %Type_Info* %727, i64 0, i32 0
	store i64 0, i64* %729
	%730 = getelementptr inbounds %Type_Info, %Type_Info* %727, i64 0, i32 1
	store i64 1, i64* %730
	; TypeInfoStruct
	%731 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %728 to %Type_Info_Struct*
	%732 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %731, i64 0, i32 4
	store i1 false, i1* %732
	%733 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %731, i64 0, i32 5
	store i1 false, i1* %733
	%734 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %731, i64 0, i32 6
	store i1 false, i1* %734
	%735 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %731, i64 0, i32 7
	store i1 false, i1* %735
	%736 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 26
	%737 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 6
	%738 = getelementptr inbounds [450 x i64], [450 x i64]* @__$type_info_offsets_data, i64 0, i32 6
	%739 = getelementptr inbounds [450 x i1], [450 x i1]* @__$type_info_usings_data, i64 0, i32 6
	%740 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %731, i64 0, i32 0
	%741 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %740, i64 0, i32 0
	store %Type_Info** %736, %Type_Info*** %741
	%742 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %740, i64 0, i32 1
	store i64 0, i64* %742
	%743 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %731, i64 0, i32 1
	%744 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %743, i64 0, i32 0
	store %..string* %737, %..string** %744
	%745 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %743, i64 0, i32 1
	store i64 0, i64* %745
	%746 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %731, i64 0, i32 2
	%747 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %746, i64 0, i32 0
	store i64* %738, i64** %747
	%748 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %746, i64 0, i32 1
	store i64 0, i64* %748
	%749 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %731, i64 0, i32 3
	%750 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %749, i64 0, i32 0
	store i1* %739, i1** %750
	%751 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %749, i64 0, i32 1
	store i64 0, i64* %751
	%752 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %728, i64 0, i32 2 ; UnionTagPtr
	store i8 16, i8* %752
	%753 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 20
	%754 = getelementptr inbounds %Type_Info, %Type_Info* %753, i64 0, i32 2
	%755 = getelementptr inbounds %Type_Info, %Type_Info* %753, i64 0, i32 0
	store i64 0, i64* %755
	%756 = getelementptr inbounds %Type_Info, %Type_Info* %753, i64 0, i32 1
	store i64 1, i64* %756
	; TypeInfoNamed
	%757 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %754 to %Type_Info_Named*
	%758 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 15
	%759 = bitcast %Type_Info* %758 to %Type_Info*
	%760 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %757, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$458, i64 0, i32 0), i64 13}, %..string* %760
	%761 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %757, i64 0, i32 1
	store %Type_Info* %759, %Type_Info** %761
	%762 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %754, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %762
	%763 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 15
	%764 = getelementptr inbounds %Type_Info, %Type_Info* %763, i64 0, i32 2
	%765 = getelementptr inbounds %Type_Info, %Type_Info* %763, i64 0, i32 0
	store i64 0, i64* %765
	%766 = getelementptr inbounds %Type_Info, %Type_Info* %763, i64 0, i32 1
	store i64 1, i64* %766
	; TypeInfoStruct
	%767 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %764 to %Type_Info_Struct*
	%768 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %767, i64 0, i32 4
	store i1 false, i1* %768
	%769 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %767, i64 0, i32 5
	store i1 false, i1* %769
	%770 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %767, i64 0, i32 6
	store i1 false, i1* %770
	%771 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %767, i64 0, i32 7
	store i1 false, i1* %771
	%772 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 26
	%773 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 6
	%774 = getelementptr inbounds [450 x i64], [450 x i64]* @__$type_info_offsets_data, i64 0, i32 6
	%775 = getelementptr inbounds [450 x i1], [450 x i1]* @__$type_info_usings_data, i64 0, i32 6
	%776 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %767, i64 0, i32 0
	%777 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %776, i64 0, i32 0
	store %Type_Info** %772, %Type_Info*** %777
	%778 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %776, i64 0, i32 1
	store i64 0, i64* %778
	%779 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %767, i64 0, i32 1
	%780 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %779, i64 0, i32 0
	store %..string* %773, %..string** %780
	%781 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %779, i64 0, i32 1
	store i64 0, i64* %781
	%782 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %767, i64 0, i32 2
	%783 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %782, i64 0, i32 0
	store i64* %774, i64** %783
	%784 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %782, i64 0, i32 1
	store i64 0, i64* %784
	%785 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %767, i64 0, i32 3
	%786 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %785, i64 0, i32 0
	store i1* %775, i1** %786
	%787 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %785, i64 0, i32 1
	store i64 0, i64* %787
	%788 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %764, i64 0, i32 2 ; UnionTagPtr
	store i8 16, i8* %788
	%789 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 21
	%790 = getelementptr inbounds %Type_Info, %Type_Info* %789, i64 0, i32 2
	%791 = getelementptr inbounds %Type_Info, %Type_Info* %789, i64 0, i32 0
	store i64 8, i64* %791
	%792 = getelementptr inbounds %Type_Info, %Type_Info* %789, i64 0, i32 1
	store i64 8, i64* %792
	; TypeInfoNamed
	%793 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %790 to %Type_Info_Named*
	%794 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 22
	%795 = bitcast %Type_Info* %794 to %Type_Info*
	%796 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %793, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__str$459, i64 0, i32 0), i64 17}, %..string* %796
	%797 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %793, i64 0, i32 1
	store %Type_Info* %795, %Type_Info** %797
	%798 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %790, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %798
	%799 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 22
	%800 = getelementptr inbounds %Type_Info, %Type_Info* %799, i64 0, i32 2
	%801 = getelementptr inbounds %Type_Info, %Type_Info* %799, i64 0, i32 0
	store i64 8, i64* %801
	%802 = getelementptr inbounds %Type_Info, %Type_Info* %799, i64 0, i32 1
	store i64 8, i64* %802
	; TypeInfoStruct
	%803 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %800 to %Type_Info_Struct*
	%804 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %803, i64 0, i32 4
	store i1 false, i1* %804
	%805 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %803, i64 0, i32 5
	store i1 true, i1* %805
	%806 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %803, i64 0, i32 6
	store i1 false, i1* %806
	%807 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %803, i64 0, i32 7
	store i1 false, i1* %807
	%808 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 26
	%809 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 6
	%810 = getelementptr inbounds [450 x i64], [450 x i64]* @__$type_info_offsets_data, i64 0, i32 6
	%811 = getelementptr inbounds [450 x i1], [450 x i1]* @__$type_info_usings_data, i64 0, i32 6
	%812 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%813 = bitcast %Type_Info* %812 to %Type_Info*
	%814 = getelementptr inbounds %Type_Info*, %Type_Info** %808, i64 0
	%815 = getelementptr inbounds i64, i64* %810, i64 0
	%816 = getelementptr inbounds i1, i1* %811, i64 0
	%817 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	store %Type_Info* %817, %Type_Info** %814
	%818 = getelementptr inbounds %..string, %..string* %809, i64 0
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$45a, i64 0, i32 0), i64 4}, %..string* %818
	store i64 0, i64* %815
	store i1 false, i1* %816
	%819 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %803, i64 0, i32 0
	%820 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %819, i64 0, i32 0
	store %Type_Info** %808, %Type_Info*** %820
	%821 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %819, i64 0, i32 1
	store i64 1, i64* %821
	%822 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %803, i64 0, i32 1
	%823 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %822, i64 0, i32 0
	store %..string* %809, %..string** %823
	%824 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %822, i64 0, i32 1
	store i64 1, i64* %824
	%825 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %803, i64 0, i32 2
	%826 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %825, i64 0, i32 0
	store i64* %810, i64** %826
	%827 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %825, i64 0, i32 1
	store i64 1, i64* %827
	%828 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %803, i64 0, i32 3
	%829 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %828, i64 0, i32 0
	store i1* %811, i1** %829
	%830 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %828, i64 0, i32 1
	store i64 1, i64* %830
	%831 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %800, i64 0, i32 2 ; UnionTagPtr
	store i8 16, i8* %831
	%832 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%833 = getelementptr inbounds %Type_Info, %Type_Info* %832, i64 0, i32 2
	%834 = getelementptr inbounds %Type_Info, %Type_Info* %832, i64 0, i32 0
	store i64 8, i64* %834
	%835 = getelementptr inbounds %Type_Info, %Type_Info* %832, i64 0, i32 1
	store i64 8, i64* %835
	; TypeInfoPointer
	%836 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %833 to %Type_Info_Pointer*
	%837 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 8
	%838 = bitcast %Type_Info* %837 to %Type_Info*
	%839 = getelementptr inbounds %Type_Info_Pointer, %Type_Info_Pointer* %836, i64 0, i32 0
	store %Type_Info* %838, %Type_Info** %839
	%840 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %833, i64 0, i32 2 ; UnionTagPtr
	store i8 9, i8* %840
	%841 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 23
	%842 = getelementptr inbounds %Type_Info, %Type_Info* %841, i64 0, i32 2
	%843 = getelementptr inbounds %Type_Info, %Type_Info* %841, i64 0, i32 0
	store i64 32, i64* %843
	%844 = getelementptr inbounds %Type_Info, %Type_Info* %841, i64 0, i32 1
	store i64 8, i64* %844
	; TypeInfoNamed
	%845 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %842 to %Type_Info_Named*
	%846 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 24
	%847 = bitcast %Type_Info* %846 to %Type_Info*
	%848 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %845, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$45b, i64 0, i32 0), i64 19}, %..string* %848
	%849 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %845, i64 0, i32 1
	store %Type_Info* %847, %Type_Info** %849
	%850 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %842, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %850
	%851 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 24
	%852 = getelementptr inbounds %Type_Info, %Type_Info* %851, i64 0, i32 2
	%853 = getelementptr inbounds %Type_Info, %Type_Info* %851, i64 0, i32 0
	store i64 32, i64* %853
	%854 = getelementptr inbounds %Type_Info, %Type_Info* %851, i64 0, i32 1
	store i64 8, i64* %854
	; TypeInfoStruct
	%855 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %852 to %Type_Info_Struct*
	%856 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %855, i64 0, i32 4
	store i1 false, i1* %856
	%857 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %855, i64 0, i32 5
	store i1 true, i1* %857
	%858 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %855, i64 0, i32 6
	store i1 false, i1* %858
	%859 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %855, i64 0, i32 7
	store i1 false, i1* %859
	%860 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 27
	%861 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 7
	%862 = getelementptr inbounds [450 x i64], [450 x i64]* @__$type_info_offsets_data, i64 0, i32 7
	%863 = getelementptr inbounds [450 x i1], [450 x i1]* @__$type_info_usings_data, i64 0, i32 7
	%864 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%865 = bitcast %Type_Info* %864 to %Type_Info*
	%866 = getelementptr inbounds %Type_Info*, %Type_Info** %860, i64 0
	%867 = getelementptr inbounds i64, i64* %862, i64 0
	%868 = getelementptr inbounds i1, i1* %863, i64 0
	%869 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	store %Type_Info* %869, %Type_Info** %866
	%870 = getelementptr inbounds %..string, %..string* %861, i64 0
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$45c, i64 0, i32 0), i64 6}, %..string* %870
	store i64 0, i64* %867
	store i1 false, i1* %868
	%871 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%872 = bitcast %Type_Info* %871 to %Type_Info*
	%873 = getelementptr inbounds %Type_Info*, %Type_Info** %860, i64 1
	%874 = getelementptr inbounds i64, i64* %862, i64 1
	%875 = getelementptr inbounds i1, i1* %863, i64 1
	%876 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	store %Type_Info* %876, %Type_Info** %873
	%877 = getelementptr inbounds %..string, %..string* %861, i64 1
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$45d, i64 0, i32 0), i64 7}, %..string* %877
	store i64 8, i64* %874
	store i1 false, i1* %875
	%878 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 13
	%879 = bitcast %Type_Info* %878 to %Type_Info*
	%880 = getelementptr inbounds %Type_Info*, %Type_Info** %860, i64 2
	%881 = getelementptr inbounds i64, i64* %862, i64 2
	%882 = getelementptr inbounds i1, i1* %863, i64 2
	%883 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 13
	store %Type_Info* %883, %Type_Info** %880
	%884 = getelementptr inbounds %..string, %..string* %861, i64 2
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$45e, i64 0, i32 0), i64 8}, %..string* %884
	store i64 16, i64* %881
	store i1 false, i1* %882
	%885 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 25
	%886 = bitcast %Type_Info* %885 to %Type_Info*
	%887 = getelementptr inbounds %Type_Info*, %Type_Info** %860, i64 3
	%888 = getelementptr inbounds i64, i64* %862, i64 3
	%889 = getelementptr inbounds i1, i1* %863, i64 3
	%890 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 25
	store %Type_Info* %890, %Type_Info** %887
	%891 = getelementptr inbounds %..string, %..string* %861, i64 3
	store %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$45f, i64 0, i32 0), i64 10}, %..string* %891
	store i64 24, i64* %888
	store i1 false, i1* %889
	%892 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %855, i64 0, i32 0
	%893 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %892, i64 0, i32 0
	store %Type_Info** %860, %Type_Info*** %893
	%894 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %892, i64 0, i32 1
	store i64 4, i64* %894
	%895 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %855, i64 0, i32 1
	%896 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %895, i64 0, i32 0
	store %..string* %861, %..string** %896
	%897 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %895, i64 0, i32 1
	store i64 4, i64* %897
	%898 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %855, i64 0, i32 2
	%899 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %898, i64 0, i32 0
	store i64* %862, i64** %899
	%900 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %898, i64 0, i32 1
	store i64 4, i64* %900
	%901 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %855, i64 0, i32 3
	%902 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %901, i64 0, i32 0
	store i1* %863, i1** %902
	%903 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %901, i64 0, i32 1
	store i64 4, i64* %903
	%904 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %852, i64 0, i32 2 ; UnionTagPtr
	store i8 16, i8* %904
	%905 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%906 = getelementptr inbounds %Type_Info, %Type_Info* %905, i64 0, i32 2
	%907 = getelementptr inbounds %Type_Info, %Type_Info* %905, i64 0, i32 0
	store i64 8, i64* %907
	%908 = getelementptr inbounds %Type_Info, %Type_Info* %905, i64 0, i32 1
	store i64 8, i64* %908
	; TypeInfoPointer
	%909 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %906 to %Type_Info_Pointer*
	%910 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 8
	%911 = bitcast %Type_Info* %910 to %Type_Info*
	%912 = getelementptr inbounds %Type_Info_Pointer, %Type_Info_Pointer* %909, i64 0, i32 0
	store %Type_Info* %911, %Type_Info** %912
	%913 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %906, i64 0, i32 2 ; UnionTagPtr
	store i8 9, i8* %913
	%914 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%915 = getelementptr inbounds %Type_Info, %Type_Info* %914, i64 0, i32 2
	%916 = getelementptr inbounds %Type_Info, %Type_Info* %914, i64 0, i32 0
	store i64 8, i64* %916
	%917 = getelementptr inbounds %Type_Info, %Type_Info* %914, i64 0, i32 1
	store i64 8, i64* %917
	; TypeInfoPointer
	%918 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %915 to %Type_Info_Pointer*
	%919 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 8
	%920 = bitcast %Type_Info* %919 to %Type_Info*
	%921 = getelementptr inbounds %Type_Info_Pointer, %Type_Info_Pointer* %918, i64 0, i32 0
	store %Type_Info* %920, %Type_Info** %921
	%922 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %915, i64 0, i32 2 ; UnionTagPtr
	store i8 9, i8* %922
	%923 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 25
	%924 = getelementptr inbounds %Type_Info, %Type_Info* %923, i64 0, i32 2
	%925 = getelementptr inbounds %Type_Info, %Type_Info* %923, i64 0, i32 0
	store i64 8, i64* %925
	%926 = getelementptr inbounds %Type_Info, %Type_Info* %923, i64 0, i32 1
	store i64 8, i64* %926
	; TypeInfoNamed
	%927 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %924 to %Type_Info_Named*
	%928 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 26
	%929 = bitcast %Type_Info* %928 to %Type_Info*
	%930 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %927, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__str$460, i64 0, i32 0), i64 18}, %..string* %930
	%931 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %927, i64 0, i32 1
	store %Type_Info* %929, %Type_Info** %931
	%932 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %924, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %932
	%933 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 26
	%934 = getelementptr inbounds %Type_Info, %Type_Info* %933, i64 0, i32 2
	%935 = getelementptr inbounds %Type_Info, %Type_Info* %933, i64 0, i32 0
	store i64 8, i64* %935
	%936 = getelementptr inbounds %Type_Info, %Type_Info* %933, i64 0, i32 1
	store i64 8, i64* %936
	; TypeInfoEnum
	%937 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %934 to %Type_Info_Enum*
	%938 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%939 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %937, i64 0, i32 0
	store %Type_Info* %938, %Type_Info** %939
	%940 = getelementptr inbounds [6 x %..string], [6 x %..string]* @__$enum_names-1a, i64 0, i32 0
	%941 = getelementptr inbounds [6 x %Type_Info_Enum_Value], [6 x %Type_Info_Enum_Value]* @__$enum_values-1a, i64 0, i32 0
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %0
	%942 = bitcast %Type_Info_Enum_Value* %0 to i64*
	store i64 0, i64* %942
	%943 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %0, i64 0, i32 2 ; UnionTagPtr
	store i8 7, i8* %943
	%944 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %0, align 8
	store %Type_Info_Enum_Value %944, %Type_Info_Enum_Value* %941
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$461, i64 0, i32 0), i64 7}, %..string* %940
	%945 = getelementptr inbounds [6 x %..string], [6 x %..string]* @__$enum_names-1a, i64 0, i32 1
	%946 = getelementptr inbounds [6 x %Type_Info_Enum_Value], [6 x %Type_Info_Enum_Value]* @__$enum_values-1a, i64 0, i32 1
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %1
	%947 = bitcast %Type_Info_Enum_Value* %1 to i64*
	store i64 1, i64* %947
	%948 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %1, i64 0, i32 2 ; UnionTagPtr
	store i8 7, i8* %948
	%949 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %1, align 8
	store %Type_Info_Enum_Value %949, %Type_Info_Enum_Value* %946
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$462, i64 0, i32 0), i64 4}, %..string* %945
	%950 = getelementptr inbounds [6 x %..string], [6 x %..string]* @__$enum_names-1a, i64 0, i32 2
	%951 = getelementptr inbounds [6 x %Type_Info_Enum_Value], [6 x %Type_Info_Enum_Value]* @__$enum_values-1a, i64 0, i32 2
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %2
	%952 = bitcast %Type_Info_Enum_Value* %2 to i64*
	store i64 2, i64* %952
	%953 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %2, i64 0, i32 2 ; UnionTagPtr
	store i8 7, i8* %953
	%954 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %2, align 8
	store %Type_Info_Enum_Value %954, %Type_Info_Enum_Value* %951
	store %..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$463, i64 0, i32 0), i64 11}, %..string* %950
	%955 = getelementptr inbounds [6 x %..string], [6 x %..string]* @__$enum_names-1a, i64 0, i32 3
	%956 = getelementptr inbounds [6 x %Type_Info_Enum_Value], [6 x %Type_Info_Enum_Value]* @__$enum_values-1a, i64 0, i32 3
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %3
	%957 = bitcast %Type_Info_Enum_Value* %3 to i64*
	store i64 3, i64* %957
	%958 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %3, i64 0, i32 2 ; UnionTagPtr
	store i8 7, i8* %958
	%959 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %3, align 8
	store %Type_Info_Enum_Value %959, %Type_Info_Enum_Value* %956
	store %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$464, i64 0, i32 0), i64 1}, %..string* %955
	%960 = getelementptr inbounds [6 x %..string], [6 x %..string]* @__$enum_names-1a, i64 0, i32 4
	%961 = getelementptr inbounds [6 x %Type_Info_Enum_Value], [6 x %Type_Info_Enum_Value]* @__$enum_values-1a, i64 0, i32 4
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %4
	%962 = bitcast %Type_Info_Enum_Value* %4 to i64*
	store i64 4, i64* %962
	%963 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %4, i64 0, i32 2 ; UnionTagPtr
	store i8 7, i8* %963
	%964 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %4, align 8
	store %Type_Info_Enum_Value %964, %Type_Info_Enum_Value* %961
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$465, i64 0, i32 0), i64 3}, %..string* %960
	%965 = getelementptr inbounds [6 x %..string], [6 x %..string]* @__$enum_names-1a, i64 0, i32 5
	%966 = getelementptr inbounds [6 x %Type_Info_Enum_Value], [6 x %Type_Info_Enum_Value]* @__$enum_values-1a, i64 0, i32 5
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %5
	%967 = bitcast %Type_Info_Enum_Value* %5 to i64*
	store i64 5, i64* %967
	%968 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %5, i64 0, i32 2 ; UnionTagPtr
	store i8 7, i8* %968
	%969 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %5, align 8
	store %Type_Info_Enum_Value %969, %Type_Info_Enum_Value* %966
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$466, i64 0, i32 0), i64 4}, %..string* %965
	%970 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %937, i64 0, i32 1
	%971 = getelementptr inbounds [6 x %..string], [6 x %..string]* @__$enum_names-1a, i64 0, i32 0
	%972 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %970, i64 0, i32 0
	store %..string* %971, %..string** %972
	%973 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %970, i64 0, i32 1
	store i64 6, i64* %973
	%974 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %937, i64 0, i32 2
	%975 = getelementptr inbounds [6 x %Type_Info_Enum_Value], [6 x %Type_Info_Enum_Value]* @__$enum_values-1a, i64 0, i32 0
	%976 = getelementptr inbounds {%Type_Info_Enum_Value*, i64}, {%Type_Info_Enum_Value*, i64}* %974, i64 0, i32 0
	store %Type_Info_Enum_Value* %975, %Type_Info_Enum_Value** %976
	%977 = getelementptr inbounds {%Type_Info_Enum_Value*, i64}, {%Type_Info_Enum_Value*, i64}* %974, i64 0, i32 1
	store i64 6, i64* %977
	%978 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %934, i64 0, i32 2 ; UnionTagPtr
	store i8 18, i8* %978
	%979 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 27
	%980 = getelementptr inbounds %Type_Info, %Type_Info* %979, i64 0, i32 2
	%981 = getelementptr inbounds %Type_Info, %Type_Info* %979, i64 0, i32 0
	store i64 24, i64* %981
	%982 = getelementptr inbounds %Type_Info, %Type_Info* %979, i64 0, i32 1
	store i64 8, i64* %982
	; TypeInfoNamed
	%983 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %980 to %Type_Info_Named*
	%984 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 28
	%985 = bitcast %Type_Info* %984 to %Type_Info*
	%986 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %983, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$467, i64 0, i32 0), i64 15}, %..string* %986
	%987 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %983, i64 0, i32 1
	store %Type_Info* %985, %Type_Info** %987
	%988 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %980, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %988
	%989 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 28
	%990 = getelementptr inbounds %Type_Info, %Type_Info* %989, i64 0, i32 2
	%991 = getelementptr inbounds %Type_Info, %Type_Info* %989, i64 0, i32 0
	store i64 24, i64* %991
	%992 = getelementptr inbounds %Type_Info, %Type_Info* %989, i64 0, i32 1
	store i64 8, i64* %992
	; TypeInfoStruct
	%993 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %990 to %Type_Info_Struct*
	%994 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %993, i64 0, i32 4
	store i1 false, i1* %994
	%995 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %993, i64 0, i32 5
	store i1 true, i1* %995
	%996 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %993, i64 0, i32 6
	store i1 false, i1* %996
	%997 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %993, i64 0, i32 7
	store i1 false, i1* %997
	%998 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 31
	%999 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 11
	%1000 = getelementptr inbounds [450 x i64], [450 x i64]* @__$type_info_offsets_data, i64 0, i32 11
	%1001 = getelementptr inbounds [450 x i1], [450 x i1]* @__$type_info_usings_data, i64 0, i32 11
	%1002 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%1003 = bitcast %Type_Info* %1002 to %Type_Info*
	%1004 = getelementptr inbounds %Type_Info*, %Type_Info** %998, i64 0
	%1005 = getelementptr inbounds i64, i64* %1000, i64 0
	%1006 = getelementptr inbounds i1, i1* %1001, i64 0
	%1007 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	store %Type_Info* %1007, %Type_Info** %1004
	%1008 = getelementptr inbounds %..string, %..string* %999, i64 0
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$468, i64 0, i32 0), i64 4}, %..string* %1008
	store i64 0, i64* %1005
	store i1 false, i1* %1006
	%1009 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%1010 = bitcast %Type_Info* %1009 to %Type_Info*
	%1011 = getelementptr inbounds %Type_Info*, %Type_Info** %998, i64 1
	%1012 = getelementptr inbounds i64, i64* %1000, i64 1
	%1013 = getelementptr inbounds i1, i1* %1001, i64 1
	%1014 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	store %Type_Info* %1014, %Type_Info** %1011
	%1015 = getelementptr inbounds %..string, %..string* %999, i64 1
	store %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$469, i64 0, i32 0), i64 9}, %..string* %1015
	store i64 8, i64* %1012
	store i1 false, i1* %1013
	%1016 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%1017 = bitcast %Type_Info* %1016 to %Type_Info*
	%1018 = getelementptr inbounds %Type_Info*, %Type_Info** %998, i64 2
	%1019 = getelementptr inbounds i64, i64* %1000, i64 2
	%1020 = getelementptr inbounds i1, i1* %1001, i64 2
	%1021 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	store %Type_Info* %1021, %Type_Info** %1018
	%1022 = getelementptr inbounds %..string, %..string* %999, i64 2
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$46a, i64 0, i32 0), i64 5}, %..string* %1022
	store i64 16, i64* %1019
	store i1 false, i1* %1020
	%1023 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %993, i64 0, i32 0
	%1024 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %1023, i64 0, i32 0
	store %Type_Info** %998, %Type_Info*** %1024
	%1025 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %1023, i64 0, i32 1
	store i64 3, i64* %1025
	%1026 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %993, i64 0, i32 1
	%1027 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %1026, i64 0, i32 0
	store %..string* %999, %..string** %1027
	%1028 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %1026, i64 0, i32 1
	store i64 3, i64* %1028
	%1029 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %993, i64 0, i32 2
	%1030 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %1029, i64 0, i32 0
	store i64* %1000, i64** %1030
	%1031 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %1029, i64 0, i32 1
	store i64 3, i64* %1031
	%1032 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %993, i64 0, i32 3
	%1033 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %1032, i64 0, i32 0
	store i1* %1001, i1** %1033
	%1034 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %1032, i64 0, i32 1
	store i64 3, i64* %1034
	%1035 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %990, i64 0, i32 2 ; UnionTagPtr
	store i8 16, i8* %1035
	%1036 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%1037 = getelementptr inbounds %Type_Info, %Type_Info* %1036, i64 0, i32 2
	%1038 = getelementptr inbounds %Type_Info, %Type_Info* %1036, i64 0, i32 0
	store i64 8, i64* %1038
	%1039 = getelementptr inbounds %Type_Info, %Type_Info* %1036, i64 0, i32 1
	store i64 8, i64* %1039
	; TypeInfoPointer
	%1040 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %1037 to %Type_Info_Pointer*
	%1041 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 8
	%1042 = bitcast %Type_Info* %1041 to %Type_Info*
	%1043 = getelementptr inbounds %Type_Info_Pointer, %Type_Info_Pointer* %1040, i64 0, i32 0
	store %Type_Info* %1042, %Type_Info** %1043
	%1044 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %1037, i64 0, i32 2 ; UnionTagPtr
	store i8 9, i8* %1044
	%1045 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 29
	%1046 = getelementptr inbounds %Type_Info, %Type_Info* %1045, i64 0, i32 2
	%1047 = getelementptr inbounds %Type_Info, %Type_Info* %1045, i64 0, i32 0
	store i64 16, i64* %1047
	%1048 = getelementptr inbounds %Type_Info, %Type_Info* %1045, i64 0, i32 1
	store i64 8, i64* %1048
	; TypeInfoNamed
	%1049 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %1046 to %Type_Info_Named*
	%1050 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 30
	%1051 = bitcast %Type_Info* %1050 to %Type_Info*
	%1052 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %1049, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__str$46b, i64 0, i32 0), i64 23}, %..string* %1052
	%1053 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %1049, i64 0, i32 1
	store %Type_Info* %1051, %Type_Info** %1053
	%1054 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %1046, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %1054
	%1055 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 30
	%1056 = getelementptr inbounds %Type_Info, %Type_Info* %1055, i64 0, i32 2
	%1057 = getelementptr inbounds %Type_Info, %Type_Info* %1055, i64 0, i32 0
	store i64 16, i64* %1057
	%1058 = getelementptr inbounds %Type_Info, %Type_Info* %1055, i64 0, i32 1
	store i64 8, i64* %1058
	; TypeInfoStruct
	%1059 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %1056 to %Type_Info_Struct*
	%1060 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %1059, i64 0, i32 4
	store i1 false, i1* %1060
	%1061 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %1059, i64 0, i32 5
	store i1 true, i1* %1061
	%1062 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %1059, i64 0, i32 6
	store i1 false, i1* %1062
	%1063 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %1059, i64 0, i32 7
	store i1 false, i1* %1063
	%1064 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 34
	%1065 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 14
	%1066 = getelementptr inbounds [450 x i64], [450 x i64]* @__$type_info_offsets_data, i64 0, i32 14
	%1067 = getelementptr inbounds [450 x i1], [450 x i1]* @__$type_info_usings_data, i64 0, i32 14
	%1068 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%1069 = bitcast %Type_Info* %1068 to %Type_Info*
	%1070 = getelementptr inbounds %Type_Info*, %Type_Info** %1064, i64 0
	%1071 = getelementptr inbounds i64, i64* %1066, i64 0
	%1072 = getelementptr inbounds i1, i1* %1067, i64 0
	%1073 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	store %Type_Info* %1073, %Type_Info** %1070
	%1074 = getelementptr inbounds %..string, %..string* %1065, i64 0
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$46c, i64 0, i32 0), i64 4}, %..string* %1074
	store i64 0, i64* %1071
	store i1 false, i1* %1072
	%1075 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%1076 = bitcast %Type_Info* %1075 to %Type_Info*
	%1077 = getelementptr inbounds %Type_Info*, %Type_Info** %1064, i64 1
	%1078 = getelementptr inbounds i64, i64* %1066, i64 1
	%1079 = getelementptr inbounds i1, i1* %1067, i64 1
	%1080 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	store %Type_Info* %1080, %Type_Info** %1077
	%1081 = getelementptr inbounds %..string, %..string* %1065, i64 1
	store %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$46d, i64 0, i32 0), i64 9}, %..string* %1081
	store i64 8, i64* %1078
	store i1 false, i1* %1079
	%1082 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %1059, i64 0, i32 0
	%1083 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %1082, i64 0, i32 0
	store %Type_Info** %1064, %Type_Info*** %1083
	%1084 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %1082, i64 0, i32 1
	store i64 2, i64* %1084
	%1085 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %1059, i64 0, i32 1
	%1086 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %1085, i64 0, i32 0
	store %..string* %1065, %..string** %1086
	%1087 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %1085, i64 0, i32 1
	store i64 2, i64* %1087
	%1088 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %1059, i64 0, i32 2
	%1089 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %1088, i64 0, i32 0
	store i64* %1066, i64** %1089
	%1090 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %1088, i64 0, i32 1
	store i64 2, i64* %1090
	%1091 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %1059, i64 0, i32 3
	%1092 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %1091, i64 0, i32 0
	store i1* %1067, i1** %1092
	%1093 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %1091, i64 0, i32 1
	store i64 2, i64* %1093
	%1094 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %1056, i64 0, i32 2 ; UnionTagPtr
	store i8 16, i8* %1094
	%1095 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%1096 = getelementptr inbounds %Type_Info, %Type_Info* %1095, i64 0, i32 2
	%1097 = getelementptr inbounds %Type_Info, %Type_Info* %1095, i64 0, i32 0
	store i64 8, i64* %1097
	%1098 = getelementptr inbounds %Type_Info, %Type_Info* %1095, i64 0, i32 1
	store i64 8, i64* %1098
	; TypeInfoPointer
	%1099 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %1096 to %Type_Info_Pointer*
	%1100 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 8
	%1101 = bitcast %Type_Info* %1100 to %Type_Info*
	%1102 = getelementptr inbounds %Type_Info_Pointer, %Type_Info_Pointer* %1099, i64 0, i32 0
	store %Type_Info* %1101, %Type_Info** %1102
	%1103 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %1096, i64 0, i32 2 ; UnionTagPtr
	store i8 9, i8* %1103
	%1104 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 31
	%1105 = getelementptr inbounds %Type_Info, %Type_Info* %1104, i64 0, i32 2
	%1106 = getelementptr inbounds %Type_Info, %Type_Info* %1104, i64 0, i32 0
	store i64 16, i64* %1106
	%1107 = getelementptr inbounds %Type_Info, %Type_Info* %1104, i64 0, i32 1
	store i64 8, i64* %1107
	; TypeInfoNamed
	%1108 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %1105 to %Type_Info_Named*
	%1109 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 30
	%1110 = bitcast %Type_Info* %1109 to %Type_Info*
	%1111 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %1108, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$46e, i64 0, i32 0), i64 15}, %..string* %1111
	%1112 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %1108, i64 0, i32 1
	store %Type_Info* %1110, %Type_Info** %1112
	%1113 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %1105, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %1113
	%1114 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 30
	%1115 = getelementptr inbounds %Type_Info, %Type_Info* %1114, i64 0, i32 2
	%1116 = getelementptr inbounds %Type_Info, %Type_Info* %1114, i64 0, i32 0
	store i64 16, i64* %1116
	%1117 = getelementptr inbounds %Type_Info, %Type_Info* %1114, i64 0, i32 1
	store i64 8, i64* %1117
	; TypeInfoStruct
	%1118 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %1115 to %Type_Info_Struct*
	%1119 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %1118, i64 0, i32 4
	store i1 false, i1* %1119
	%1120 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %1118, i64 0, i32 5
	store i1 true, i1* %1120
	%1121 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %1118, i64 0, i32 6
	store i1 false, i1* %1121
	%1122 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %1118, i64 0, i32 7
	store i1 false, i1* %1122
	%1123 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 36
	%1124 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 16
	%1125 = getelementptr inbounds [450 x i64], [450 x i64]* @__$type_info_offsets_data, i64 0, i32 16
	%1126 = getelementptr inbounds [450 x i1], [450 x i1]* @__$type_info_usings_data, i64 0, i32 16
	%1127 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%1128 = bitcast %Type_Info* %1127 to %Type_Info*
	%1129 = getelementptr inbounds %Type_Info*, %Type_Info** %1123, i64 0
	%1130 = getelementptr inbounds i64, i64* %1125, i64 0
	%1131 = getelementptr inbounds i1, i1* %1126, i64 0
	%1132 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	store %Type_Info* %1132, %Type_Info** %1129
	%1133 = getelementptr inbounds %..string, %..string* %1124, i64 0
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$46f, i64 0, i32 0), i64 4}, %..string* %1133
	store i64 0, i64* %1130
	store i1 false, i1* %1131
	%1134 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%1135 = bitcast %Type_Info* %1134 to %Type_Info*
	%1136 = getelementptr inbounds %Type_Info*, %Type_Info** %1123, i64 1
	%1137 = getelementptr inbounds i64, i64* %1125, i64 1
	%1138 = getelementptr inbounds i1, i1* %1126, i64 1
	%1139 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	store %Type_Info* %1139, %Type_Info** %1136
	%1140 = getelementptr inbounds %..string, %..string* %1124, i64 1
	store %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$470, i64 0, i32 0), i64 9}, %..string* %1140
	store i64 8, i64* %1137
	store i1 false, i1* %1138
	%1141 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %1118, i64 0, i32 0
	%1142 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %1141, i64 0, i32 0
	store %Type_Info** %1123, %Type_Info*** %1142
	%1143 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %1141, i64 0, i32 1
	store i64 2, i64* %1143
	%1144 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %1118, i64 0, i32 1
	%1145 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %1144, i64 0, i32 0
	store %..string* %1124, %..string** %1145
	%1146 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %1144, i64 0, i32 1
	store i64 2, i64* %1146
	%1147 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %1118, i64 0, i32 2
	%1148 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %1147, i64 0, i32 0
	store i64* %1125, i64** %1148
	%1149 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %1147, i64 0, i32 1
	store i64 2, i64* %1149
	%1150 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %1118, i64 0, i32 3
	%1151 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %1150, i64 0, i32 0
	store i1* %1126, i1** %1151
	%1152 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %1150, i64 0, i32 1
	store i64 2, i64* %1152
	%1153 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %1115, i64 0, i32 2 ; UnionTagPtr
	store i8 16, i8* %1153
	%1154 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%1155 = getelementptr inbounds %Type_Info, %Type_Info* %1154, i64 0, i32 2
	%1156 = getelementptr inbounds %Type_Info, %Type_Info* %1154, i64 0, i32 0
	store i64 8, i64* %1156
	%1157 = getelementptr inbounds %Type_Info, %Type_Info* %1154, i64 0, i32 1
	store i64 8, i64* %1157
	; TypeInfoPointer
	%1158 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %1155 to %Type_Info_Pointer*
	%1159 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 8
	%1160 = bitcast %Type_Info* %1159 to %Type_Info*
	%1161 = getelementptr inbounds %Type_Info_Pointer, %Type_Info_Pointer* %1158, i64 0, i32 0
	store %Type_Info* %1160, %Type_Info** %1161
	%1162 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %1155, i64 0, i32 2 ; UnionTagPtr
	store i8 9, i8* %1162
	%1163 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 32
	%1164 = getelementptr inbounds %Type_Info, %Type_Info* %1163, i64 0, i32 2
	%1165 = getelementptr inbounds %Type_Info, %Type_Info* %1163, i64 0, i32 0
	store i64 24, i64* %1165
	%1166 = getelementptr inbounds %Type_Info, %Type_Info* %1163, i64 0, i32 1
	store i64 8, i64* %1166
	; TypeInfoNamed
	%1167 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %1164 to %Type_Info_Named*
	%1168 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 28
	%1169 = bitcast %Type_Info* %1168 to %Type_Info*
	%1170 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %1167, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$471, i64 0, i32 0), i64 16}, %..string* %1170
	%1171 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %1167, i64 0, i32 1
	store %Type_Info* %1169, %Type_Info** %1171
	%1172 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %1164, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %1172
	%1173 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 28
	%1174 = getelementptr inbounds %Type_Info, %Type_Info* %1173, i64 0, i32 2
	%1175 = getelementptr inbounds %Type_Info, %Type_Info* %1173, i64 0, i32 0
	store i64 24, i64* %1175
	%1176 = getelementptr inbounds %Type_Info, %Type_Info* %1173, i64 0, i32 1
	store i64 8, i64* %1176
	; TypeInfoStruct
	%1177 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %1174 to %Type_Info_Struct*
	%1178 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %1177, i64 0, i32 4
	store i1 false, i1* %1178
	%1179 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %1177, i64 0, i32 5
	store i1 true, i1* %1179
	%1180 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %1177, i64 0, i32 6
	store i1 false, i1* %1180
	%1181 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %1177, i64 0, i32 7
	store i1 false, i1* %1181
	%1182 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 38
	%1183 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 18
	%1184 = getelementptr inbounds [450 x i64], [450 x i64]* @__$type_info_offsets_data, i64 0, i32 18
	%1185 = getelementptr inbounds [450 x i1], [450 x i1]* @__$type_info_usings_data, i64 0, i32 18
	%1186 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%1187 = bitcast %Type_Info* %1186 to %Type_Info*
	%1188 = getelementptr inbounds %Type_Info*, %Type_Info** %1182, i64 0
	%1189 = getelementptr inbounds i64, i64* %1184, i64 0
	%1190 = getelementptr inbounds i1, i1* %1185, i64 0
	%1191 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	store %Type_Info* %1191, %Type_Info** %1188
	%1192 = getelementptr inbounds %..string, %..string* %1183, i64 0
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$472, i64 0, i32 0), i64 4}, %..string* %1192
	store i64 0, i64* %1189
	store i1 false, i1* %1190
	%1193 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%1194 = bitcast %Type_Info* %1193 to %Type_Info*
	%1195 = getelementptr inbounds %Type_Info*, %Type_Info** %1182, i64 1
	%1196 = getelementptr inbounds i64, i64* %1184, i64 1
	%1197 = getelementptr inbounds i1, i1* %1185, i64 1
	%1198 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	store %Type_Info* %1198, %Type_Info** %1195
	%1199 = getelementptr inbounds %..string, %..string* %1183, i64 1
	store %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$473, i64 0, i32 0), i64 9}, %..string* %1199
	store i64 8, i64* %1196
	store i1 false, i1* %1197
	%1200 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%1201 = bitcast %Type_Info* %1200 to %Type_Info*
	%1202 = getelementptr inbounds %Type_Info*, %Type_Info** %1182, i64 2
	%1203 = getelementptr inbounds i64, i64* %1184, i64 2
	%1204 = getelementptr inbounds i1, i1* %1185, i64 2
	%1205 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	store %Type_Info* %1205, %Type_Info** %1202
	%1206 = getelementptr inbounds %..string, %..string* %1183, i64 2
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$474, i64 0, i32 0), i64 5}, %..string* %1206
	store i64 16, i64* %1203
	store i1 false, i1* %1204
	%1207 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %1177, i64 0, i32 0
	%1208 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %1207, i64 0, i32 0
	store %Type_Info** %1182, %Type_Info*** %1208
	%1209 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %1207, i64 0, i32 1
	store i64 3, i64* %1209
	%1210 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %1177, i64 0, i32 1
	%1211 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %1210, i64 0, i32 0
	store %..string* %1183, %..string** %1211
	%1212 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %1210, i64 0, i32 1
	store i64 3, i64* %1212
	%1213 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %1177, i64 0, i32 2
	%1214 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %1213, i64 0, i32 0
	store i64* %1184, i64** %1214
	%1215 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %1213, i64 0, i32 1
	store i64 3, i64* %1215
	%1216 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %1177, i64 0, i32 3
	%1217 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %1216, i64 0, i32 0
	store i1* %1185, i1** %1217
	%1218 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %1216, i64 0, i32 1
	store i64 3, i64* %1218
	%1219 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %1174, i64 0, i32 2 ; UnionTagPtr
	store i8 16, i8* %1219
	%1220 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%1221 = getelementptr inbounds %Type_Info, %Type_Info* %1220, i64 0, i32 2
	%1222 = getelementptr inbounds %Type_Info, %Type_Info* %1220, i64 0, i32 0
	store i64 8, i64* %1222
	%1223 = getelementptr inbounds %Type_Info, %Type_Info* %1220, i64 0, i32 1
	store i64 8, i64* %1223
	; TypeInfoPointer
	%1224 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %1221 to %Type_Info_Pointer*
	%1225 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 8
	%1226 = bitcast %Type_Info* %1225 to %Type_Info*
	%1227 = getelementptr inbounds %Type_Info_Pointer, %Type_Info_Pointer* %1224, i64 0, i32 0
	store %Type_Info* %1226, %Type_Info** %1227
	%1228 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %1221, i64 0, i32 2 ; UnionTagPtr
	store i8 9, i8* %1228
	%1229 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 33
	%1230 = getelementptr inbounds %Type_Info, %Type_Info* %1229, i64 0, i32 2
	%1231 = getelementptr inbounds %Type_Info, %Type_Info* %1229, i64 0, i32 0
	store i64 32, i64* %1231
	%1232 = getelementptr inbounds %Type_Info, %Type_Info* %1229, i64 0, i32 1
	store i64 8, i64* %1232
	; TypeInfoNamed
	%1233 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %1230 to %Type_Info_Named*
	%1234 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 34
	%1235 = bitcast %Type_Info* %1234 to %Type_Info*
	%1236 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %1233, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$475, i64 0, i32 0), i64 15}, %..string* %1236
	%1237 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %1233, i64 0, i32 1
	store %Type_Info* %1235, %Type_Info** %1237
	%1238 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %1230, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %1238
	%1239 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 34
	%1240 = getelementptr inbounds %Type_Info, %Type_Info* %1239, i64 0, i32 2
	%1241 = getelementptr inbounds %Type_Info, %Type_Info* %1239, i64 0, i32 0
	store i64 32, i64* %1241
	%1242 = getelementptr inbounds %Type_Info, %Type_Info* %1239, i64 0, i32 1
	store i64 8, i64* %1242
	; TypeInfoStruct
	%1243 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %1240 to %Type_Info_Struct*
	%1244 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %1243, i64 0, i32 4
	store i1 false, i1* %1244
	%1245 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %1243, i64 0, i32 5
	store i1 true, i1* %1245
	%1246 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %1243, i64 0, i32 6
	store i1 false, i1* %1246
	%1247 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %1243, i64 0, i32 7
	store i1 false, i1* %1247
	%1248 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 41
	%1249 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 21
	%1250 = getelementptr inbounds [450 x i64], [450 x i64]* @__$type_info_offsets_data, i64 0, i32 21
	%1251 = getelementptr inbounds [450 x i1], [450 x i1]* @__$type_info_usings_data, i64 0, i32 21
	%1252 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 35
	%1253 = bitcast %Type_Info* %1252 to %Type_Info*
	%1254 = getelementptr inbounds %Type_Info*, %Type_Info** %1248, i64 0
	%1255 = getelementptr inbounds i64, i64* %1250, i64 0
	%1256 = getelementptr inbounds i1, i1* %1251, i64 0
	%1257 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 35
	store %Type_Info* %1257, %Type_Info** %1254
	%1258 = getelementptr inbounds %..string, %..string* %1249, i64 0
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$476, i64 0, i32 0), i64 5}, %..string* %1258
	store i64 0, i64* %1255
	store i1 false, i1* %1256
	%1259 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 37
	%1260 = bitcast %Type_Info* %1259 to %Type_Info*
	%1261 = getelementptr inbounds %Type_Info*, %Type_Info** %1248, i64 1
	%1262 = getelementptr inbounds i64, i64* %1250, i64 1
	%1263 = getelementptr inbounds i1, i1* %1251, i64 1
	%1264 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 37
	store %Type_Info* %1264, %Type_Info** %1261
	%1265 = getelementptr inbounds %..string, %..string* %1249, i64 1
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$477, i64 0, i32 0), i64 5}, %..string* %1265
	store i64 16, i64* %1262
	store i1 false, i1* %1263
	%1266 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %1243, i64 0, i32 0
	%1267 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %1266, i64 0, i32 0
	store %Type_Info** %1248, %Type_Info*** %1267
	%1268 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %1266, i64 0, i32 1
	store i64 2, i64* %1268
	%1269 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %1243, i64 0, i32 1
	%1270 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %1269, i64 0, i32 0
	store %..string* %1249, %..string** %1270
	%1271 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %1269, i64 0, i32 1
	store i64 2, i64* %1271
	%1272 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %1243, i64 0, i32 2
	%1273 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %1272, i64 0, i32 0
	store i64* %1250, i64** %1273
	%1274 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %1272, i64 0, i32 1
	store i64 2, i64* %1274
	%1275 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %1243, i64 0, i32 3
	%1276 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %1275, i64 0, i32 0
	store i1* %1251, i1** %1276
	%1277 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %1275, i64 0, i32 1
	store i64 2, i64* %1277
	%1278 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %1240, i64 0, i32 2 ; UnionTagPtr
	store i8 16, i8* %1278
	%1279 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 35
	%1280 = getelementptr inbounds %Type_Info, %Type_Info* %1279, i64 0, i32 2
	%1281 = getelementptr inbounds %Type_Info, %Type_Info* %1279, i64 0, i32 0
	store i64 16, i64* %1281
	%1282 = getelementptr inbounds %Type_Info, %Type_Info* %1279, i64 0, i32 1
	store i64 8, i64* %1282
	; TypeInfoSlice
	%1283 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %1280 to %Type_Info_Slice*
	%1284 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%1285 = bitcast %Type_Info* %1284 to %Type_Info*
	%1286 = getelementptr inbounds %Type_Info_Slice, %Type_Info_Slice* %1283, i64 0, i32 0
	store %Type_Info* %1285, %Type_Info** %1286
	%1287 = getelementptr inbounds %Type_Info_Slice, %Type_Info_Slice* %1283, i64 0, i32 1
	store i64 8, i64* %1287
	%1288 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %1280, i64 0, i32 2 ; UnionTagPtr
	store i8 13, i8* %1288
	%1289 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%1290 = getelementptr inbounds %Type_Info, %Type_Info* %1289, i64 0, i32 2
	%1291 = getelementptr inbounds %Type_Info, %Type_Info* %1289, i64 0, i32 0
	store i64 8, i64* %1291
	%1292 = getelementptr inbounds %Type_Info, %Type_Info* %1289, i64 0, i32 1
	store i64 8, i64* %1292
	; TypeInfoPointer
	%1293 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %1290 to %Type_Info_Pointer*
	%1294 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 8
	%1295 = bitcast %Type_Info* %1294 to %Type_Info*
	%1296 = getelementptr inbounds %Type_Info_Pointer, %Type_Info_Pointer* %1293, i64 0, i32 0
	store %Type_Info* %1295, %Type_Info** %1296
	%1297 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %1290, i64 0, i32 2 ; UnionTagPtr
	store i8 9, i8* %1297
	%1298 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 36
	%1299 = getelementptr inbounds %Type_Info, %Type_Info* %1298, i64 0, i32 2
	%1300 = getelementptr inbounds %Type_Info, %Type_Info* %1298, i64 0, i32 0
	store i64 8, i64* %1300
	%1301 = getelementptr inbounds %Type_Info, %Type_Info* %1298, i64 0, i32 1
	store i64 8, i64* %1301
	; TypeInfoPointer
	%1302 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %1299 to %Type_Info_Pointer*
	%1303 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%1304 = bitcast %Type_Info* %1303 to %Type_Info*
	%1305 = getelementptr inbounds %Type_Info_Pointer, %Type_Info_Pointer* %1302, i64 0, i32 0
	store %Type_Info* %1304, %Type_Info** %1305
	%1306 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %1299, i64 0, i32 2 ; UnionTagPtr
	store i8 9, i8* %1306
	%1307 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 37
	%1308 = getelementptr inbounds %Type_Info, %Type_Info* %1307, i64 0, i32 2
	%1309 = getelementptr inbounds %Type_Info, %Type_Info* %1307, i64 0, i32 0
	store i64 16, i64* %1309
	%1310 = getelementptr inbounds %Type_Info, %Type_Info* %1307, i64 0, i32 1
	store i64 8, i64* %1310
	; TypeInfoSlice
	%1311 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %1308 to %Type_Info_Slice*
	%1312 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%1313 = bitcast %Type_Info* %1312 to %Type_Info*
	%1314 = getelementptr inbounds %Type_Info_Slice, %Type_Info_Slice* %1311, i64 0, i32 0
	store %Type_Info* %1313, %Type_Info** %1314
	%1315 = getelementptr inbounds %Type_Info_Slice, %Type_Info_Slice* %1311, i64 0, i32 1
	store i64 16, i64* %1315
	%1316 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %1308, i64 0, i32 2 ; UnionTagPtr
	store i8 13, i8* %1316
	%1317 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 38
	%1318 = getelementptr inbounds %Type_Info, %Type_Info* %1317, i64 0, i32 2
	%1319 = getelementptr inbounds %Type_Info, %Type_Info* %1317, i64 0, i32 0
	store i64 8, i64* %1319
	%1320 = getelementptr inbounds %Type_Info, %Type_Info* %1317, i64 0, i32 1
	store i64 8, i64* %1320
	; TypeInfoPointer
	%1321 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %1318 to %Type_Info_Pointer*
	%1322 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%1323 = bitcast %Type_Info* %1322 to %Type_Info*
	%1324 = getelementptr inbounds %Type_Info_Pointer, %Type_Info_Pointer* %1321, i64 0, i32 0
	store %Type_Info* %1323, %Type_Info** %1324
	%1325 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %1318, i64 0, i32 2 ; UnionTagPtr
	store i8 9, i8* %1325
	%1326 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 39
	%1327 = getelementptr inbounds %Type_Info, %Type_Info* %1326, i64 0, i32 2
	%1328 = getelementptr inbounds %Type_Info, %Type_Info* %1326, i64 0, i32 0
	store i64 72, i64* %1328
	%1329 = getelementptr inbounds %Type_Info, %Type_Info* %1326, i64 0, i32 1
	store i64 8, i64* %1329
	; TypeInfoNamed
	%1330 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %1327 to %Type_Info_Named*
	%1331 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 40
	%1332 = bitcast %Type_Info* %1331 to %Type_Info*
	%1333 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %1330, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$478, i64 0, i32 0), i64 16}, %..string* %1333
	%1334 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %1330, i64 0, i32 1
	store %Type_Info* %1332, %Type_Info** %1334
	%1335 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %1327, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %1335
	%1336 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 40
	%1337 = getelementptr inbounds %Type_Info, %Type_Info* %1336, i64 0, i32 2
	%1338 = getelementptr inbounds %Type_Info, %Type_Info* %1336, i64 0, i32 0
	store i64 72, i64* %1338
	%1339 = getelementptr inbounds %Type_Info, %Type_Info* %1336, i64 0, i32 1
	store i64 8, i64* %1339
	; TypeInfoStruct
	%1340 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %1337 to %Type_Info_Struct*
	%1341 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %1340, i64 0, i32 4
	store i1 false, i1* %1341
	%1342 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %1340, i64 0, i32 5
	store i1 true, i1* %1342
	%1343 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %1340, i64 0, i32 6
	store i1 false, i1* %1343
	%1344 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %1340, i64 0, i32 7
	store i1 false, i1* %1344
	%1345 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 43
	%1346 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 23
	%1347 = getelementptr inbounds [450 x i64], [450 x i64]* @__$type_info_offsets_data, i64 0, i32 23
	%1348 = getelementptr inbounds [450 x i1], [450 x i1]* @__$type_info_usings_data, i64 0, i32 23
	%1349 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 35
	%1350 = bitcast %Type_Info* %1349 to %Type_Info*
	%1351 = getelementptr inbounds %Type_Info*, %Type_Info** %1345, i64 0
	%1352 = getelementptr inbounds i64, i64* %1347, i64 0
	%1353 = getelementptr inbounds i1, i1* %1348, i64 0
	%1354 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 35
	store %Type_Info* %1354, %Type_Info** %1351
	%1355 = getelementptr inbounds %..string, %..string* %1346, i64 0
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$479, i64 0, i32 0), i64 5}, %..string* %1355
	store i64 0, i64* %1352
	store i1 false, i1* %1353
	%1356 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 37
	%1357 = bitcast %Type_Info* %1356 to %Type_Info*
	%1358 = getelementptr inbounds %Type_Info*, %Type_Info** %1345, i64 1
	%1359 = getelementptr inbounds i64, i64* %1347, i64 1
	%1360 = getelementptr inbounds i1, i1* %1348, i64 1
	%1361 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 37
	store %Type_Info* %1361, %Type_Info** %1358
	%1362 = getelementptr inbounds %..string, %..string* %1346, i64 1
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$47a, i64 0, i32 0), i64 5}, %..string* %1362
	store i64 16, i64* %1359
	store i1 false, i1* %1360
	%1363 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 41
	%1364 = bitcast %Type_Info* %1363 to %Type_Info*
	%1365 = getelementptr inbounds %Type_Info*, %Type_Info** %1345, i64 2
	%1366 = getelementptr inbounds i64, i64* %1347, i64 2
	%1367 = getelementptr inbounds i1, i1* %1348, i64 2
	%1368 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 41
	store %Type_Info* %1368, %Type_Info** %1365
	%1369 = getelementptr inbounds %..string, %..string* %1346, i64 2
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$47b, i64 0, i32 0), i64 7}, %..string* %1369
	store i64 32, i64* %1366
	store i1 false, i1* %1367
	%1370 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 44
	%1371 = bitcast %Type_Info* %1370 to %Type_Info*
	%1372 = getelementptr inbounds %Type_Info*, %Type_Info** %1345, i64 3
	%1373 = getelementptr inbounds i64, i64* %1347, i64 3
	%1374 = getelementptr inbounds i1, i1* %1348, i64 3
	%1375 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 44
	store %Type_Info* %1375, %Type_Info** %1372
	%1376 = getelementptr inbounds %..string, %..string* %1346, i64 3
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$47c, i64 0, i32 0), i64 6}, %..string* %1376
	store i64 48, i64* %1373
	store i1 false, i1* %1374
	%1377 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 13
	%1378 = bitcast %Type_Info* %1377 to %Type_Info*
	%1379 = getelementptr inbounds %Type_Info*, %Type_Info** %1345, i64 4
	%1380 = getelementptr inbounds i64, i64* %1347, i64 4
	%1381 = getelementptr inbounds i1, i1* %1348, i64 4
	%1382 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 13
	store %Type_Info* %1382, %Type_Info** %1379
	%1383 = getelementptr inbounds %..string, %..string* %1346, i64 4
	store %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$47d, i64 0, i32 0), i64 9}, %..string* %1383
	store i64 64, i64* %1380
	store i1 false, i1* %1381
	%1384 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 13
	%1385 = bitcast %Type_Info* %1384 to %Type_Info*
	%1386 = getelementptr inbounds %Type_Info*, %Type_Info** %1345, i64 5
	%1387 = getelementptr inbounds i64, i64* %1347, i64 5
	%1388 = getelementptr inbounds i1, i1* %1348, i64 5
	%1389 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 13
	store %Type_Info* %1389, %Type_Info** %1386
	%1390 = getelementptr inbounds %..string, %..string* %1346, i64 5
	store %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$47e, i64 0, i32 0), i64 10}, %..string* %1390
	store i64 65, i64* %1387
	store i1 false, i1* %1388
	%1391 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 13
	%1392 = bitcast %Type_Info* %1391 to %Type_Info*
	%1393 = getelementptr inbounds %Type_Info*, %Type_Info** %1345, i64 6
	%1394 = getelementptr inbounds i64, i64* %1347, i64 6
	%1395 = getelementptr inbounds i1, i1* %1348, i64 6
	%1396 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 13
	store %Type_Info* %1396, %Type_Info** %1393
	%1397 = getelementptr inbounds %..string, %..string* %1346, i64 6
	store %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$47f, i64 0, i32 0), i64 12}, %..string* %1397
	store i64 66, i64* %1394
	store i1 false, i1* %1395
	%1398 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 13
	%1399 = bitcast %Type_Info* %1398 to %Type_Info*
	%1400 = getelementptr inbounds %Type_Info*, %Type_Info** %1345, i64 7
	%1401 = getelementptr inbounds i64, i64* %1347, i64 7
	%1402 = getelementptr inbounds i1, i1* %1348, i64 7
	%1403 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 13
	store %Type_Info* %1403, %Type_Info** %1400
	%1404 = getelementptr inbounds %..string, %..string* %1346, i64 7
	store %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$480, i64 0, i32 0), i64 12}, %..string* %1404
	store i64 67, i64* %1401
	store i1 false, i1* %1402
	%1405 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %1340, i64 0, i32 0
	%1406 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %1405, i64 0, i32 0
	store %Type_Info** %1345, %Type_Info*** %1406
	%1407 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %1405, i64 0, i32 1
	store i64 8, i64* %1407
	%1408 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %1340, i64 0, i32 1
	%1409 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %1408, i64 0, i32 0
	store %..string* %1346, %..string** %1409
	%1410 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %1408, i64 0, i32 1
	store i64 8, i64* %1410
	%1411 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %1340, i64 0, i32 2
	%1412 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %1411, i64 0, i32 0
	store i64* %1347, i64** %1412
	%1413 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %1411, i64 0, i32 1
	store i64 8, i64* %1413
	%1414 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %1340, i64 0, i32 3
	%1415 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %1414, i64 0, i32 0
	store i1* %1348, i1** %1415
	%1416 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %1414, i64 0, i32 1
	store i64 8, i64* %1416
	%1417 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %1337, i64 0, i32 2 ; UnionTagPtr
	store i8 16, i8* %1417
	%1418 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 35
	%1419 = getelementptr inbounds %Type_Info, %Type_Info* %1418, i64 0, i32 2
	%1420 = getelementptr inbounds %Type_Info, %Type_Info* %1418, i64 0, i32 0
	store i64 16, i64* %1420
	%1421 = getelementptr inbounds %Type_Info, %Type_Info* %1418, i64 0, i32 1
	store i64 8, i64* %1421
	; TypeInfoSlice
	%1422 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %1419 to %Type_Info_Slice*
	%1423 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%1424 = bitcast %Type_Info* %1423 to %Type_Info*
	%1425 = getelementptr inbounds %Type_Info_Slice, %Type_Info_Slice* %1422, i64 0, i32 0
	store %Type_Info* %1424, %Type_Info** %1425
	%1426 = getelementptr inbounds %Type_Info_Slice, %Type_Info_Slice* %1422, i64 0, i32 1
	store i64 8, i64* %1426
	%1427 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %1419, i64 0, i32 2 ; UnionTagPtr
	store i8 13, i8* %1427
	%1428 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%1429 = getelementptr inbounds %Type_Info, %Type_Info* %1428, i64 0, i32 2
	%1430 = getelementptr inbounds %Type_Info, %Type_Info* %1428, i64 0, i32 0
	store i64 8, i64* %1430
	%1431 = getelementptr inbounds %Type_Info, %Type_Info* %1428, i64 0, i32 1
	store i64 8, i64* %1431
	; TypeInfoPointer
	%1432 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %1429 to %Type_Info_Pointer*
	%1433 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 8
	%1434 = bitcast %Type_Info* %1433 to %Type_Info*
	%1435 = getelementptr inbounds %Type_Info_Pointer, %Type_Info_Pointer* %1432, i64 0, i32 0
	store %Type_Info* %1434, %Type_Info** %1435
	%1436 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %1429, i64 0, i32 2 ; UnionTagPtr
	store i8 9, i8* %1436
	%1437 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 36
	%1438 = getelementptr inbounds %Type_Info, %Type_Info* %1437, i64 0, i32 2
	%1439 = getelementptr inbounds %Type_Info, %Type_Info* %1437, i64 0, i32 0
	store i64 8, i64* %1439
	%1440 = getelementptr inbounds %Type_Info, %Type_Info* %1437, i64 0, i32 1
	store i64 8, i64* %1440
	; TypeInfoPointer
	%1441 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %1438 to %Type_Info_Pointer*
	%1442 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%1443 = bitcast %Type_Info* %1442 to %Type_Info*
	%1444 = getelementptr inbounds %Type_Info_Pointer, %Type_Info_Pointer* %1441, i64 0, i32 0
	store %Type_Info* %1443, %Type_Info** %1444
	%1445 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %1438, i64 0, i32 2 ; UnionTagPtr
	store i8 9, i8* %1445
	%1446 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 37
	%1447 = getelementptr inbounds %Type_Info, %Type_Info* %1446, i64 0, i32 2
	%1448 = getelementptr inbounds %Type_Info, %Type_Info* %1446, i64 0, i32 0
	store i64 16, i64* %1448
	%1449 = getelementptr inbounds %Type_Info, %Type_Info* %1446, i64 0, i32 1
	store i64 8, i64* %1449
	; TypeInfoSlice
	%1450 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %1447 to %Type_Info_Slice*
	%1451 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%1452 = bitcast %Type_Info* %1451 to %Type_Info*
	%1453 = getelementptr inbounds %Type_Info_Slice, %Type_Info_Slice* %1450, i64 0, i32 0
	store %Type_Info* %1452, %Type_Info** %1453
	%1454 = getelementptr inbounds %Type_Info_Slice, %Type_Info_Slice* %1450, i64 0, i32 1
	store i64 16, i64* %1454
	%1455 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %1447, i64 0, i32 2 ; UnionTagPtr
	store i8 13, i8* %1455
	%1456 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 38
	%1457 = getelementptr inbounds %Type_Info, %Type_Info* %1456, i64 0, i32 2
	%1458 = getelementptr inbounds %Type_Info, %Type_Info* %1456, i64 0, i32 0
	store i64 8, i64* %1458
	%1459 = getelementptr inbounds %Type_Info, %Type_Info* %1456, i64 0, i32 1
	store i64 8, i64* %1459
	; TypeInfoPointer
	%1460 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %1457 to %Type_Info_Pointer*
	%1461 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%1462 = bitcast %Type_Info* %1461 to %Type_Info*
	%1463 = getelementptr inbounds %Type_Info_Pointer, %Type_Info_Pointer* %1460, i64 0, i32 0
	store %Type_Info* %1462, %Type_Info** %1463
	%1464 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %1457, i64 0, i32 2 ; UnionTagPtr
	store i8 9, i8* %1464
	%1465 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 41
	%1466 = getelementptr inbounds %Type_Info, %Type_Info* %1465, i64 0, i32 2
	%1467 = getelementptr inbounds %Type_Info, %Type_Info* %1465, i64 0, i32 0
	store i64 16, i64* %1467
	%1468 = getelementptr inbounds %Type_Info, %Type_Info* %1465, i64 0, i32 1
	store i64 8, i64* %1468
	; TypeInfoSlice
	%1469 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %1466 to %Type_Info_Slice*
	%1470 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 42
	%1471 = bitcast %Type_Info* %1470 to %Type_Info*
	%1472 = getelementptr inbounds %Type_Info_Slice, %Type_Info_Slice* %1469, i64 0, i32 0
	store %Type_Info* %1471, %Type_Info** %1472
	%1473 = getelementptr inbounds %Type_Info_Slice, %Type_Info_Slice* %1469, i64 0, i32 1
	store i64 8, i64* %1473
	%1474 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %1466, i64 0, i32 2 ; UnionTagPtr
	store i8 13, i8* %1474
	%1475 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 42
	%1476 = getelementptr inbounds %Type_Info, %Type_Info* %1475, i64 0, i32 2
	%1477 = getelementptr inbounds %Type_Info, %Type_Info* %1475, i64 0, i32 0
	store i64 8, i64* %1477
	%1478 = getelementptr inbounds %Type_Info, %Type_Info* %1475, i64 0, i32 1
	store i64 8, i64* %1478
	; TypeInfoBasic
	%1479 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %1476 to %Type_Info_Integer*
	%1480 = getelementptr inbounds %Type_Info_Integer, %Type_Info_Integer* %1479, i64 0, i32 0
	store i1 false, i1* %1480
	%1481 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %1476, i64 0, i32 2 ; UnionTagPtr
	store i8 2, i8* %1481
	%1482 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 43
	%1483 = getelementptr inbounds %Type_Info, %Type_Info* %1482, i64 0, i32 2
	%1484 = getelementptr inbounds %Type_Info, %Type_Info* %1482, i64 0, i32 0
	store i64 8, i64* %1484
	%1485 = getelementptr inbounds %Type_Info, %Type_Info* %1482, i64 0, i32 1
	store i64 8, i64* %1485
	; TypeInfoPointer
	%1486 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %1483 to %Type_Info_Pointer*
	%1487 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 42
	%1488 = bitcast %Type_Info* %1487 to %Type_Info*
	%1489 = getelementptr inbounds %Type_Info_Pointer, %Type_Info_Pointer* %1486, i64 0, i32 0
	store %Type_Info* %1488, %Type_Info** %1489
	%1490 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %1483, i64 0, i32 2 ; UnionTagPtr
	store i8 9, i8* %1490
	%1491 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 44
	%1492 = getelementptr inbounds %Type_Info, %Type_Info* %1491, i64 0, i32 2
	%1493 = getelementptr inbounds %Type_Info, %Type_Info* %1491, i64 0, i32 0
	store i64 16, i64* %1493
	%1494 = getelementptr inbounds %Type_Info, %Type_Info* %1491, i64 0, i32 1
	store i64 8, i64* %1494
	; TypeInfoSlice
	%1495 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %1492 to %Type_Info_Slice*
	%1496 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 13
	%1497 = bitcast %Type_Info* %1496 to %Type_Info*
	%1498 = getelementptr inbounds %Type_Info_Slice, %Type_Info_Slice* %1495, i64 0, i32 0
	store %Type_Info* %1497, %Type_Info** %1498
	%1499 = getelementptr inbounds %Type_Info_Slice, %Type_Info_Slice* %1495, i64 0, i32 1
	store i64 1, i64* %1499
	%1500 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %1492, i64 0, i32 2 ; UnionTagPtr
	store i8 13, i8* %1500
	%1501 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 45
	%1502 = getelementptr inbounds %Type_Info, %Type_Info* %1501, i64 0, i32 2
	%1503 = getelementptr inbounds %Type_Info, %Type_Info* %1501, i64 0, i32 0
	store i64 8, i64* %1503
	%1504 = getelementptr inbounds %Type_Info, %Type_Info* %1501, i64 0, i32 1
	store i64 8, i64* %1504
	; TypeInfoPointer
	%1505 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %1502 to %Type_Info_Pointer*
	%1506 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 13
	%1507 = bitcast %Type_Info* %1506 to %Type_Info*
	%1508 = getelementptr inbounds %Type_Info_Pointer, %Type_Info_Pointer* %1505, i64 0, i32 0
	store %Type_Info* %1507, %Type_Info** %1508
	%1509 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %1502, i64 0, i32 2 ; UnionTagPtr
	store i8 9, i8* %1509
	%1510 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 46
	%1511 = getelementptr inbounds %Type_Info, %Type_Info* %1510, i64 0, i32 2
	%1512 = getelementptr inbounds %Type_Info, %Type_Info* %1510, i64 0, i32 0
	store i64 32, i64* %1512
	%1513 = getelementptr inbounds %Type_Info, %Type_Info* %1510, i64 0, i32 1
	store i64 8, i64* %1513
	; TypeInfoNamed
	%1514 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %1511 to %Type_Info_Named*
	%1515 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 47
	%1516 = bitcast %Type_Info* %1515 to %Type_Info*
	%1517 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %1514, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$481, i64 0, i32 0), i64 15}, %..string* %1517
	%1518 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %1514, i64 0, i32 1
	store %Type_Info* %1516, %Type_Info** %1518
	%1519 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %1511, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %1519
	%1520 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 47
	%1521 = getelementptr inbounds %Type_Info, %Type_Info* %1520, i64 0, i32 2
	%1522 = getelementptr inbounds %Type_Info, %Type_Info* %1520, i64 0, i32 0
	store i64 32, i64* %1522
	%1523 = getelementptr inbounds %Type_Info, %Type_Info* %1520, i64 0, i32 1
	store i64 8, i64* %1523
	; TypeInfoStruct
	%1524 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %1521 to %Type_Info_Struct*
	%1525 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %1524, i64 0, i32 4
	store i1 false, i1* %1525
	%1526 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %1524, i64 0, i32 5
	store i1 true, i1* %1526
	%1527 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %1524, i64 0, i32 6
	store i1 false, i1* %1527
	%1528 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %1524, i64 0, i32 7
	store i1 false, i1* %1528
	%1529 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 51
	%1530 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 31
	%1531 = getelementptr inbounds [450 x i64], [450 x i64]* @__$type_info_offsets_data, i64 0, i32 31
	%1532 = getelementptr inbounds [450 x i1], [450 x i1]* @__$type_info_usings_data, i64 0, i32 31
	%1533 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 35
	%1534 = bitcast %Type_Info* %1533 to %Type_Info*
	%1535 = getelementptr inbounds %Type_Info*, %Type_Info** %1529, i64 0
	%1536 = getelementptr inbounds i64, i64* %1531, i64 0
	%1537 = getelementptr inbounds i1, i1* %1532, i64 0
	%1538 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 35
	store %Type_Info* %1538, %Type_Info** %1535
	%1539 = getelementptr inbounds %..string, %..string* %1530, i64 0
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$482, i64 0, i32 0), i64 8}, %..string* %1539
	store i64 0, i64* %1536
	store i1 false, i1* %1537
	%1540 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 42
	%1541 = bitcast %Type_Info* %1540 to %Type_Info*
	%1542 = getelementptr inbounds %Type_Info*, %Type_Info** %1529, i64 1
	%1543 = getelementptr inbounds i64, i64* %1531, i64 1
	%1544 = getelementptr inbounds i1, i1* %1532, i64 1
	%1545 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 42
	store %Type_Info* %1545, %Type_Info** %1542
	%1546 = getelementptr inbounds %..string, %..string* %1530, i64 1
	store %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$483, i64 0, i32 0), i64 10}, %..string* %1546
	store i64 16, i64* %1543
	store i1 false, i1* %1544
	%1547 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%1548 = bitcast %Type_Info* %1547 to %Type_Info*
	%1549 = getelementptr inbounds %Type_Info*, %Type_Info** %1529, i64 2
	%1550 = getelementptr inbounds i64, i64* %1531, i64 2
	%1551 = getelementptr inbounds i1, i1* %1532, i64 2
	%1552 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	store %Type_Info* %1552, %Type_Info** %1549
	%1553 = getelementptr inbounds %..string, %..string* %1530, i64 2
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$484, i64 0, i32 0), i64 8}, %..string* %1553
	store i64 24, i64* %1550
	store i1 false, i1* %1551
	%1554 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %1524, i64 0, i32 0
	%1555 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %1554, i64 0, i32 0
	store %Type_Info** %1529, %Type_Info*** %1555
	%1556 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %1554, i64 0, i32 1
	store i64 3, i64* %1556
	%1557 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %1524, i64 0, i32 1
	%1558 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %1557, i64 0, i32 0
	store %..string* %1530, %..string** %1558
	%1559 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %1557, i64 0, i32 1
	store i64 3, i64* %1559
	%1560 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %1524, i64 0, i32 2
	%1561 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %1560, i64 0, i32 0
	store i64* %1531, i64** %1561
	%1562 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %1560, i64 0, i32 1
	store i64 3, i64* %1562
	%1563 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %1524, i64 0, i32 3
	%1564 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %1563, i64 0, i32 0
	store i1* %1532, i1** %1564
	%1565 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %1563, i64 0, i32 1
	store i64 3, i64* %1565
	%1566 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %1521, i64 0, i32 2 ; UnionTagPtr
	store i8 16, i8* %1566
	%1567 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 35
	%1568 = getelementptr inbounds %Type_Info, %Type_Info* %1567, i64 0, i32 2
	%1569 = getelementptr inbounds %Type_Info, %Type_Info* %1567, i64 0, i32 0
	store i64 16, i64* %1569
	%1570 = getelementptr inbounds %Type_Info, %Type_Info* %1567, i64 0, i32 1
	store i64 8, i64* %1570
	; TypeInfoSlice
	%1571 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %1568 to %Type_Info_Slice*
	%1572 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%1573 = bitcast %Type_Info* %1572 to %Type_Info*
	%1574 = getelementptr inbounds %Type_Info_Slice, %Type_Info_Slice* %1571, i64 0, i32 0
	store %Type_Info* %1573, %Type_Info** %1574
	%1575 = getelementptr inbounds %Type_Info_Slice, %Type_Info_Slice* %1571, i64 0, i32 1
	store i64 8, i64* %1575
	%1576 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %1568, i64 0, i32 2 ; UnionTagPtr
	store i8 13, i8* %1576
	%1577 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%1578 = getelementptr inbounds %Type_Info, %Type_Info* %1577, i64 0, i32 2
	%1579 = getelementptr inbounds %Type_Info, %Type_Info* %1577, i64 0, i32 0
	store i64 8, i64* %1579
	%1580 = getelementptr inbounds %Type_Info, %Type_Info* %1577, i64 0, i32 1
	store i64 8, i64* %1580
	; TypeInfoPointer
	%1581 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %1578 to %Type_Info_Pointer*
	%1582 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 8
	%1583 = bitcast %Type_Info* %1582 to %Type_Info*
	%1584 = getelementptr inbounds %Type_Info_Pointer, %Type_Info_Pointer* %1581, i64 0, i32 0
	store %Type_Info* %1583, %Type_Info** %1584
	%1585 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %1578, i64 0, i32 2 ; UnionTagPtr
	store i8 9, i8* %1585
	%1586 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 36
	%1587 = getelementptr inbounds %Type_Info, %Type_Info* %1586, i64 0, i32 2
	%1588 = getelementptr inbounds %Type_Info, %Type_Info* %1586, i64 0, i32 0
	store i64 8, i64* %1588
	%1589 = getelementptr inbounds %Type_Info, %Type_Info* %1586, i64 0, i32 1
	store i64 8, i64* %1589
	; TypeInfoPointer
	%1590 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %1587 to %Type_Info_Pointer*
	%1591 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%1592 = bitcast %Type_Info* %1591 to %Type_Info*
	%1593 = getelementptr inbounds %Type_Info_Pointer, %Type_Info_Pointer* %1590, i64 0, i32 0
	store %Type_Info* %1592, %Type_Info** %1593
	%1594 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %1587, i64 0, i32 2 ; UnionTagPtr
	store i8 9, i8* %1594
	%1595 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%1596 = getelementptr inbounds %Type_Info, %Type_Info* %1595, i64 0, i32 2
	%1597 = getelementptr inbounds %Type_Info, %Type_Info* %1595, i64 0, i32 0
	store i64 8, i64* %1597
	%1598 = getelementptr inbounds %Type_Info, %Type_Info* %1595, i64 0, i32 1
	store i64 8, i64* %1598
	; TypeInfoPointer
	%1599 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %1596 to %Type_Info_Pointer*
	%1600 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 8
	%1601 = bitcast %Type_Info* %1600 to %Type_Info*
	%1602 = getelementptr inbounds %Type_Info_Pointer, %Type_Info_Pointer* %1599, i64 0, i32 0
	store %Type_Info* %1601, %Type_Info** %1602
	%1603 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %1596, i64 0, i32 2 ; UnionTagPtr
	store i8 9, i8* %1603
	%1604 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 48
	%1605 = getelementptr inbounds %Type_Info, %Type_Info* %1604, i64 0, i32 2
	%1606 = getelementptr inbounds %Type_Info, %Type_Info* %1604, i64 0, i32 0
	store i64 40, i64* %1606
	%1607 = getelementptr inbounds %Type_Info, %Type_Info* %1604, i64 0, i32 1
	store i64 8, i64* %1607
	; TypeInfoNamed
	%1608 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %1605 to %Type_Info_Named*
	%1609 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 49
	%1610 = bitcast %Type_Info* %1609 to %Type_Info*
	%1611 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %1608, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$485, i64 0, i32 0), i64 14}, %..string* %1611
	%1612 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %1608, i64 0, i32 1
	store %Type_Info* %1610, %Type_Info** %1612
	%1613 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %1605, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %1613
	%1614 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 49
	%1615 = getelementptr inbounds %Type_Info, %Type_Info* %1614, i64 0, i32 2
	%1616 = getelementptr inbounds %Type_Info, %Type_Info* %1614, i64 0, i32 0
	store i64 40, i64* %1616
	%1617 = getelementptr inbounds %Type_Info, %Type_Info* %1614, i64 0, i32 1
	store i64 8, i64* %1617
	; TypeInfoStruct
	%1618 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %1615 to %Type_Info_Struct*
	%1619 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %1618, i64 0, i32 4
	store i1 false, i1* %1619
	%1620 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %1618, i64 0, i32 5
	store i1 true, i1* %1620
	%1621 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %1618, i64 0, i32 6
	store i1 false, i1* %1621
	%1622 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %1618, i64 0, i32 7
	store i1 false, i1* %1622
	%1623 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 54
	%1624 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 34
	%1625 = getelementptr inbounds [450 x i64], [450 x i64]* @__$type_info_offsets_data, i64 0, i32 34
	%1626 = getelementptr inbounds [450 x i1], [450 x i1]* @__$type_info_usings_data, i64 0, i32 34
	%1627 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%1628 = bitcast %Type_Info* %1627 to %Type_Info*
	%1629 = getelementptr inbounds %Type_Info*, %Type_Info** %1623, i64 0
	%1630 = getelementptr inbounds i64, i64* %1625, i64 0
	%1631 = getelementptr inbounds i1, i1* %1626, i64 0
	%1632 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	store %Type_Info* %1632, %Type_Info** %1629
	%1633 = getelementptr inbounds %..string, %..string* %1624, i64 0
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$486, i64 0, i32 0), i64 4}, %..string* %1633
	store i64 0, i64* %1630
	store i1 false, i1* %1631
	%1634 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 37
	%1635 = bitcast %Type_Info* %1634 to %Type_Info*
	%1636 = getelementptr inbounds %Type_Info*, %Type_Info** %1623, i64 1
	%1637 = getelementptr inbounds i64, i64* %1625, i64 1
	%1638 = getelementptr inbounds i1, i1* %1626, i64 1
	%1639 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 37
	store %Type_Info* %1639, %Type_Info** %1636
	%1640 = getelementptr inbounds %..string, %..string* %1624, i64 1
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$487, i64 0, i32 0), i64 5}, %..string* %1640
	store i64 8, i64* %1637
	store i1 false, i1* %1638
	%1641 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 50
	%1642 = bitcast %Type_Info* %1641 to %Type_Info*
	%1643 = getelementptr inbounds %Type_Info*, %Type_Info** %1623, i64 2
	%1644 = getelementptr inbounds i64, i64* %1625, i64 2
	%1645 = getelementptr inbounds i1, i1* %1626, i64 2
	%1646 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 50
	store %Type_Info* %1646, %Type_Info** %1643
	%1647 = getelementptr inbounds %..string, %..string* %1624, i64 2
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$488, i64 0, i32 0), i64 6}, %..string* %1647
	store i64 24, i64* %1644
	store i1 false, i1* %1645
	%1648 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %1618, i64 0, i32 0
	%1649 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %1648, i64 0, i32 0
	store %Type_Info** %1623, %Type_Info*** %1649
	%1650 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %1648, i64 0, i32 1
	store i64 3, i64* %1650
	%1651 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %1618, i64 0, i32 1
	%1652 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %1651, i64 0, i32 0
	store %..string* %1624, %..string** %1652
	%1653 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %1651, i64 0, i32 1
	store i64 3, i64* %1653
	%1654 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %1618, i64 0, i32 2
	%1655 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %1654, i64 0, i32 0
	store i64* %1625, i64** %1655
	%1656 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %1654, i64 0, i32 1
	store i64 3, i64* %1656
	%1657 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %1618, i64 0, i32 3
	%1658 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %1657, i64 0, i32 0
	store i1* %1626, i1** %1658
	%1659 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %1657, i64 0, i32 1
	store i64 3, i64* %1659
	%1660 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %1615, i64 0, i32 2 ; UnionTagPtr
	store i8 16, i8* %1660
	%1661 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%1662 = getelementptr inbounds %Type_Info, %Type_Info* %1661, i64 0, i32 2
	%1663 = getelementptr inbounds %Type_Info, %Type_Info* %1661, i64 0, i32 0
	store i64 8, i64* %1663
	%1664 = getelementptr inbounds %Type_Info, %Type_Info* %1661, i64 0, i32 1
	store i64 8, i64* %1664
	; TypeInfoPointer
	%1665 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %1662 to %Type_Info_Pointer*
	%1666 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 8
	%1667 = bitcast %Type_Info* %1666 to %Type_Info*
	%1668 = getelementptr inbounds %Type_Info_Pointer, %Type_Info_Pointer* %1665, i64 0, i32 0
	store %Type_Info* %1667, %Type_Info** %1668
	%1669 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %1662, i64 0, i32 2 ; UnionTagPtr
	store i8 9, i8* %1669
	%1670 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 37
	%1671 = getelementptr inbounds %Type_Info, %Type_Info* %1670, i64 0, i32 2
	%1672 = getelementptr inbounds %Type_Info, %Type_Info* %1670, i64 0, i32 0
	store i64 16, i64* %1672
	%1673 = getelementptr inbounds %Type_Info, %Type_Info* %1670, i64 0, i32 1
	store i64 8, i64* %1673
	; TypeInfoSlice
	%1674 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %1671 to %Type_Info_Slice*
	%1675 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%1676 = bitcast %Type_Info* %1675 to %Type_Info*
	%1677 = getelementptr inbounds %Type_Info_Slice, %Type_Info_Slice* %1674, i64 0, i32 0
	store %Type_Info* %1676, %Type_Info** %1677
	%1678 = getelementptr inbounds %Type_Info_Slice, %Type_Info_Slice* %1674, i64 0, i32 1
	store i64 16, i64* %1678
	%1679 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %1671, i64 0, i32 2 ; UnionTagPtr
	store i8 13, i8* %1679
	%1680 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 38
	%1681 = getelementptr inbounds %Type_Info, %Type_Info* %1680, i64 0, i32 2
	%1682 = getelementptr inbounds %Type_Info, %Type_Info* %1680, i64 0, i32 0
	store i64 8, i64* %1682
	%1683 = getelementptr inbounds %Type_Info, %Type_Info* %1680, i64 0, i32 1
	store i64 8, i64* %1683
	; TypeInfoPointer
	%1684 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %1681 to %Type_Info_Pointer*
	%1685 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%1686 = bitcast %Type_Info* %1685 to %Type_Info*
	%1687 = getelementptr inbounds %Type_Info_Pointer, %Type_Info_Pointer* %1684, i64 0, i32 0
	store %Type_Info* %1686, %Type_Info** %1687
	%1688 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %1681, i64 0, i32 2 ; UnionTagPtr
	store i8 9, i8* %1688
	%1689 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 50
	%1690 = getelementptr inbounds %Type_Info, %Type_Info* %1689, i64 0, i32 2
	%1691 = getelementptr inbounds %Type_Info, %Type_Info* %1689, i64 0, i32 0
	store i64 16, i64* %1691
	%1692 = getelementptr inbounds %Type_Info, %Type_Info* %1689, i64 0, i32 1
	store i64 8, i64* %1692
	; TypeInfoSlice
	%1693 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %1690 to %Type_Info_Slice*
	%1694 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 51
	%1695 = bitcast %Type_Info* %1694 to %Type_Info*
	%1696 = getelementptr inbounds %Type_Info_Slice, %Type_Info_Slice* %1693, i64 0, i32 0
	store %Type_Info* %1695, %Type_Info** %1696
	%1697 = getelementptr inbounds %Type_Info_Slice, %Type_Info_Slice* %1693, i64 0, i32 1
	store i64 24, i64* %1697
	%1698 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %1690, i64 0, i32 2 ; UnionTagPtr
	store i8 13, i8* %1698
	%1699 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 51
	%1700 = getelementptr inbounds %Type_Info, %Type_Info* %1699, i64 0, i32 2
	%1701 = getelementptr inbounds %Type_Info, %Type_Info* %1699, i64 0, i32 0
	store i64 24, i64* %1701
	%1702 = getelementptr inbounds %Type_Info, %Type_Info* %1699, i64 0, i32 1
	store i64 8, i64* %1702
	; TypeInfoNamed
	%1703 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %1700 to %Type_Info_Named*
	%1704 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 52
	%1705 = bitcast %Type_Info* %1704 to %Type_Info*
	%1706 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %1703, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$489, i64 0, i32 0), i64 20}, %..string* %1706
	%1707 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %1703, i64 0, i32 1
	store %Type_Info* %1705, %Type_Info** %1707
	%1708 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %1700, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %1708
	%1709 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 52
	%1710 = getelementptr inbounds %Type_Info, %Type_Info* %1709, i64 0, i32 2
	%1711 = getelementptr inbounds %Type_Info, %Type_Info* %1709, i64 0, i32 0
	store i64 24, i64* %1711
	%1712 = getelementptr inbounds %Type_Info, %Type_Info* %1709, i64 0, i32 1
	store i64 8, i64* %1712
	; TypeInfoUnion
	%1713 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %1710 to %Type_Info_Union*
	%1714 = getelementptr inbounds %Type_Info_Union, %Type_Info_Union* %1713, i64 0, i32 0
	%1715 = getelementptr inbounds %Type_Info_Union, %Type_Info_Union* %1713, i64 0, i32 1
	%1716 = getelementptr inbounds %Type_Info_Union, %Type_Info_Union* %1713, i64 0, i32 2
	%1717 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 57
	%1718 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 53
	%1719 = bitcast %Type_Info* %1718 to %Type_Info*
	%1720 = getelementptr inbounds %Type_Info*, %Type_Info** %1717, i64 0
	%1721 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 53
	store %Type_Info* %1721, %Type_Info** %1720
	%1722 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 54
	%1723 = bitcast %Type_Info* %1722 to %Type_Info*
	%1724 = getelementptr inbounds %Type_Info*, %Type_Info** %1717, i64 1
	%1725 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 54
	store %Type_Info* %1725, %Type_Info** %1724
	%1726 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 55
	%1727 = bitcast %Type_Info* %1726 to %Type_Info*
	%1728 = getelementptr inbounds %Type_Info*, %Type_Info** %1717, i64 2
	%1729 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 55
	store %Type_Info* %1729, %Type_Info** %1728
	%1730 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	%1731 = bitcast %Type_Info* %1730 to %Type_Info*
	%1732 = getelementptr inbounds %Type_Info*, %Type_Info** %1717, i64 3
	%1733 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	store %Type_Info* %1733, %Type_Info** %1732
	%1734 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 57
	%1735 = bitcast %Type_Info* %1734 to %Type_Info*
	%1736 = getelementptr inbounds %Type_Info*, %Type_Info** %1717, i64 4
	%1737 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 57
	store %Type_Info* %1737, %Type_Info** %1736
	%1738 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 58
	%1739 = bitcast %Type_Info* %1738 to %Type_Info*
	%1740 = getelementptr inbounds %Type_Info*, %Type_Info** %1717, i64 5
	%1741 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 58
	store %Type_Info* %1741, %Type_Info** %1740
	%1742 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%1743 = bitcast %Type_Info* %1742 to %Type_Info*
	%1744 = getelementptr inbounds %Type_Info*, %Type_Info** %1717, i64 6
	%1745 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	store %Type_Info* %1745, %Type_Info** %1744
	%1746 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	%1747 = bitcast %Type_Info* %1746 to %Type_Info*
	%1748 = getelementptr inbounds %Type_Info*, %Type_Info** %1717, i64 7
	%1749 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	store %Type_Info* %1749, %Type_Info** %1748
	%1750 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 59
	%1751 = bitcast %Type_Info* %1750 to %Type_Info*
	%1752 = getelementptr inbounds %Type_Info*, %Type_Info** %1717, i64 8
	%1753 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 59
	store %Type_Info* %1753, %Type_Info** %1752
	%1754 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	%1755 = bitcast %Type_Info* %1754 to %Type_Info*
	%1756 = getelementptr inbounds %Type_Info*, %Type_Info** %1717, i64 9
	%1757 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	store %Type_Info* %1757, %Type_Info** %1756
	%1758 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 61
	%1759 = bitcast %Type_Info* %1758 to %Type_Info*
	%1760 = getelementptr inbounds %Type_Info*, %Type_Info** %1717, i64 10
	%1761 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 61
	store %Type_Info* %1761, %Type_Info** %1760
	%1762 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 62
	%1763 = bitcast %Type_Info* %1762 to %Type_Info*
	%1764 = getelementptr inbounds %Type_Info*, %Type_Info** %1717, i64 11
	%1765 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 62
	store %Type_Info* %1765, %Type_Info** %1764
	%1766 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	%1767 = bitcast %Type_Info* %1766 to %Type_Info*
	%1768 = getelementptr inbounds %Type_Info*, %Type_Info** %1717, i64 12
	%1769 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %1769, %Type_Info** %1768
	%1770 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 42
	%1771 = bitcast %Type_Info* %1770 to %Type_Info*
	%1772 = getelementptr inbounds %Type_Info*, %Type_Info** %1717, i64 13
	%1773 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 42
	store %Type_Info* %1773, %Type_Info** %1772
	%1774 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 64
	%1775 = bitcast %Type_Info* %1774 to %Type_Info*
	%1776 = getelementptr inbounds %Type_Info*, %Type_Info** %1717, i64 14
	%1777 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 64
	store %Type_Info* %1777, %Type_Info** %1776
	%1778 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 65
	%1779 = bitcast %Type_Info* %1778 to %Type_Info*
	%1780 = getelementptr inbounds %Type_Info*, %Type_Info** %1717, i64 15
	%1781 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 65
	store %Type_Info* %1781, %Type_Info** %1780
	%1782 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %1714, i64 0, i32 0
	store %Type_Info** %1717, %Type_Info*** %1782
	%1783 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %1714, i64 0, i32 1
	store i64 16, i64* %1783
	store i64 16, i64* %1715
	%1784 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	store %Type_Info* %1784, %Type_Info** %1716
	%1785 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %1710, i64 0, i32 2 ; UnionTagPtr
	store i8 17, i8* %1785
	%1786 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 53
	%1787 = getelementptr inbounds %Type_Info, %Type_Info* %1786, i64 0, i32 2
	%1788 = getelementptr inbounds %Type_Info, %Type_Info* %1786, i64 0, i32 0
	store i64 4, i64* %1788
	%1789 = getelementptr inbounds %Type_Info, %Type_Info* %1786, i64 0, i32 1
	store i64 4, i64* %1789
	; TypeInfoBasic
	%1790 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %1787 to %Type_Info_Rune*
	%1791 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %1787, i64 0, i32 2 ; UnionTagPtr
	store i8 3, i8* %1791
	%1792 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 54
	%1793 = getelementptr inbounds %Type_Info, %Type_Info* %1792, i64 0, i32 2
	%1794 = getelementptr inbounds %Type_Info, %Type_Info* %1792, i64 0, i32 0
	store i64 1, i64* %1794
	%1795 = getelementptr inbounds %Type_Info, %Type_Info* %1792, i64 0, i32 1
	store i64 1, i64* %1795
	; TypeInfoBasic
	%1796 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %1793 to %Type_Info_Integer*
	%1797 = getelementptr inbounds %Type_Info_Integer, %Type_Info_Integer* %1796, i64 0, i32 0
	store i1 true, i1* %1797
	%1798 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %1793, i64 0, i32 2 ; UnionTagPtr
	store i8 2, i8* %1798
	%1799 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 55
	%1800 = getelementptr inbounds %Type_Info, %Type_Info* %1799, i64 0, i32 2
	%1801 = getelementptr inbounds %Type_Info, %Type_Info* %1799, i64 0, i32 0
	store i64 2, i64* %1801
	%1802 = getelementptr inbounds %Type_Info, %Type_Info* %1799, i64 0, i32 1
	store i64 2, i64* %1802
	; TypeInfoBasic
	%1803 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %1800 to %Type_Info_Integer*
	%1804 = getelementptr inbounds %Type_Info_Integer, %Type_Info_Integer* %1803, i64 0, i32 0
	store i1 true, i1* %1804
	%1805 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %1800, i64 0, i32 2 ; UnionTagPtr
	store i8 2, i8* %1805
	%1806 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	%1807 = getelementptr inbounds %Type_Info, %Type_Info* %1806, i64 0, i32 2
	%1808 = getelementptr inbounds %Type_Info, %Type_Info* %1806, i64 0, i32 0
	store i64 4, i64* %1808
	%1809 = getelementptr inbounds %Type_Info, %Type_Info* %1806, i64 0, i32 1
	store i64 4, i64* %1809
	; TypeInfoBasic
	%1810 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %1807 to %Type_Info_Integer*
	%1811 = getelementptr inbounds %Type_Info_Integer, %Type_Info_Integer* %1810, i64 0, i32 0
	store i1 true, i1* %1811
	%1812 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %1807, i64 0, i32 2 ; UnionTagPtr
	store i8 2, i8* %1812
	%1813 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 57
	%1814 = getelementptr inbounds %Type_Info, %Type_Info* %1813, i64 0, i32 2
	%1815 = getelementptr inbounds %Type_Info, %Type_Info* %1813, i64 0, i32 0
	store i64 8, i64* %1815
	%1816 = getelementptr inbounds %Type_Info, %Type_Info* %1813, i64 0, i32 1
	store i64 8, i64* %1816
	; TypeInfoBasic
	%1817 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %1814 to %Type_Info_Integer*
	%1818 = getelementptr inbounds %Type_Info_Integer, %Type_Info_Integer* %1817, i64 0, i32 0
	store i1 true, i1* %1818
	%1819 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %1814, i64 0, i32 2 ; UnionTagPtr
	store i8 2, i8* %1819
	%1820 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 58
	%1821 = getelementptr inbounds %Type_Info, %Type_Info* %1820, i64 0, i32 2
	%1822 = getelementptr inbounds %Type_Info, %Type_Info* %1820, i64 0, i32 0
	store i64 16, i64* %1822
	%1823 = getelementptr inbounds %Type_Info, %Type_Info* %1820, i64 0, i32 1
	store i64 8, i64* %1823
	; TypeInfoBasic
	%1824 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %1821 to %Type_Info_Integer*
	%1825 = getelementptr inbounds %Type_Info_Integer, %Type_Info_Integer* %1824, i64 0, i32 0
	store i1 true, i1* %1825
	%1826 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %1821, i64 0, i32 2 ; UnionTagPtr
	store i8 2, i8* %1826
	%1827 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 59
	%1828 = getelementptr inbounds %Type_Info, %Type_Info* %1827, i64 0, i32 2
	%1829 = getelementptr inbounds %Type_Info, %Type_Info* %1827, i64 0, i32 0
	store i64 2, i64* %1829
	%1830 = getelementptr inbounds %Type_Info, %Type_Info* %1827, i64 0, i32 1
	store i64 2, i64* %1830
	; TypeInfoBasic
	%1831 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %1828 to %Type_Info_Integer*
	%1832 = getelementptr inbounds %Type_Info_Integer, %Type_Info_Integer* %1831, i64 0, i32 0
	store i1 false, i1* %1832
	%1833 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %1828, i64 0, i32 2 ; UnionTagPtr
	store i8 2, i8* %1833
	%1834 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	%1835 = getelementptr inbounds %Type_Info, %Type_Info* %1834, i64 0, i32 2
	%1836 = getelementptr inbounds %Type_Info, %Type_Info* %1834, i64 0, i32 0
	store i64 4, i64* %1836
	%1837 = getelementptr inbounds %Type_Info, %Type_Info* %1834, i64 0, i32 1
	store i64 4, i64* %1837
	; TypeInfoBasic
	%1838 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %1835 to %Type_Info_Integer*
	%1839 = getelementptr inbounds %Type_Info_Integer, %Type_Info_Integer* %1838, i64 0, i32 0
	store i1 false, i1* %1839
	%1840 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %1835, i64 0, i32 2 ; UnionTagPtr
	store i8 2, i8* %1840
	%1841 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 61
	%1842 = getelementptr inbounds %Type_Info, %Type_Info* %1841, i64 0, i32 2
	%1843 = getelementptr inbounds %Type_Info, %Type_Info* %1841, i64 0, i32 0
	store i64 8, i64* %1843
	%1844 = getelementptr inbounds %Type_Info, %Type_Info* %1841, i64 0, i32 1
	store i64 8, i64* %1844
	; TypeInfoBasic
	%1845 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %1842 to %Type_Info_Integer*
	%1846 = getelementptr inbounds %Type_Info_Integer, %Type_Info_Integer* %1845, i64 0, i32 0
	store i1 false, i1* %1846
	%1847 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %1842, i64 0, i32 2 ; UnionTagPtr
	store i8 2, i8* %1847
	%1848 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 62
	%1849 = getelementptr inbounds %Type_Info, %Type_Info* %1848, i64 0, i32 2
	%1850 = getelementptr inbounds %Type_Info, %Type_Info* %1848, i64 0, i32 0
	store i64 16, i64* %1850
	%1851 = getelementptr inbounds %Type_Info, %Type_Info* %1848, i64 0, i32 1
	store i64 8, i64* %1851
	; TypeInfoBasic
	%1852 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %1849 to %Type_Info_Integer*
	%1853 = getelementptr inbounds %Type_Info_Integer, %Type_Info_Integer* %1852, i64 0, i32 0
	store i1 false, i1* %1853
	%1854 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %1849, i64 0, i32 2 ; UnionTagPtr
	store i8 2, i8* %1854
	%1855 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	%1856 = getelementptr inbounds %Type_Info, %Type_Info* %1855, i64 0, i32 2
	%1857 = getelementptr inbounds %Type_Info, %Type_Info* %1855, i64 0, i32 0
	store i64 8, i64* %1857
	%1858 = getelementptr inbounds %Type_Info, %Type_Info* %1855, i64 0, i32 1
	store i64 8, i64* %1858
	; TypeInfoBasic
	%1859 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %1856 to %Type_Info_Integer*
	%1860 = getelementptr inbounds %Type_Info_Integer, %Type_Info_Integer* %1859, i64 0, i32 0
	store i1 false, i1* %1860
	%1861 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %1856, i64 0, i32 2 ; UnionTagPtr
	store i8 2, i8* %1861
	%1862 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 64
	%1863 = getelementptr inbounds %Type_Info, %Type_Info* %1862, i64 0, i32 2
	%1864 = getelementptr inbounds %Type_Info, %Type_Info* %1862, i64 0, i32 0
	store i64 4, i64* %1864
	%1865 = getelementptr inbounds %Type_Info, %Type_Info* %1862, i64 0, i32 1
	store i64 4, i64* %1865
	; TypeInfoBasic
	%1866 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %1863 to %Type_Info_Float*
	%1867 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %1863, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %1867
	%1868 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 65
	%1869 = getelementptr inbounds %Type_Info, %Type_Info* %1868, i64 0, i32 2
	%1870 = getelementptr inbounds %Type_Info, %Type_Info* %1868, i64 0, i32 0
	store i64 8, i64* %1870
	%1871 = getelementptr inbounds %Type_Info, %Type_Info* %1868, i64 0, i32 1
	store i64 8, i64* %1871
	; TypeInfoBasic
	%1872 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %1869 to %Type_Info_Float*
	%1873 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %1869, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %1873
	%1874 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 66
	%1875 = getelementptr inbounds %Type_Info, %Type_Info* %1874, i64 0, i32 2
	%1876 = getelementptr inbounds %Type_Info, %Type_Info* %1874, i64 0, i32 0
	store i64 8, i64* %1876
	%1877 = getelementptr inbounds %Type_Info, %Type_Info* %1874, i64 0, i32 1
	store i64 8, i64* %1877
	; TypeInfoPointer
	%1878 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %1875 to %Type_Info_Pointer*
	%1879 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 51
	%1880 = bitcast %Type_Info* %1879 to %Type_Info*
	%1881 = getelementptr inbounds %Type_Info_Pointer, %Type_Info_Pointer* %1878, i64 0, i32 0
	store %Type_Info* %1880, %Type_Info** %1881
	%1882 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %1875, i64 0, i32 2 ; UnionTagPtr
	store i8 9, i8* %1882
	%1883 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 67
	%1884 = getelementptr inbounds %Type_Info, %Type_Info* %1883, i64 0, i32 2
	%1885 = getelementptr inbounds %Type_Info, %Type_Info* %1883, i64 0, i32 0
	store i64 24, i64* %1885
	%1886 = getelementptr inbounds %Type_Info, %Type_Info* %1883, i64 0, i32 1
	store i64 8, i64* %1886
	; TypeInfoNamed
	%1887 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %1884 to %Type_Info_Named*
	%1888 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 68
	%1889 = bitcast %Type_Info* %1888 to %Type_Info*
	%1890 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %1887, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$48a, i64 0, i32 0), i64 13}, %..string* %1890
	%1891 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %1887, i64 0, i32 1
	store %Type_Info* %1889, %Type_Info** %1891
	%1892 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %1884, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %1892
	%1893 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 68
	%1894 = getelementptr inbounds %Type_Info, %Type_Info* %1893, i64 0, i32 2
	%1895 = getelementptr inbounds %Type_Info, %Type_Info* %1893, i64 0, i32 0
	store i64 24, i64* %1895
	%1896 = getelementptr inbounds %Type_Info, %Type_Info* %1893, i64 0, i32 1
	store i64 8, i64* %1896
	; TypeInfoStruct
	%1897 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %1894 to %Type_Info_Struct*
	%1898 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %1897, i64 0, i32 4
	store i1 false, i1* %1898
	%1899 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %1897, i64 0, i32 5
	store i1 true, i1* %1899
	%1900 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %1897, i64 0, i32 6
	store i1 false, i1* %1900
	%1901 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %1897, i64 0, i32 7
	store i1 false, i1* %1901
	%1902 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 73
	%1903 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 37
	%1904 = getelementptr inbounds [450 x i64], [450 x i64]* @__$type_info_offsets_data, i64 0, i32 37
	%1905 = getelementptr inbounds [450 x i1], [450 x i1]* @__$type_info_usings_data, i64 0, i32 37
	%1906 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%1907 = bitcast %Type_Info* %1906 to %Type_Info*
	%1908 = getelementptr inbounds %Type_Info*, %Type_Info** %1902, i64 0
	%1909 = getelementptr inbounds i64, i64* %1904, i64 0
	%1910 = getelementptr inbounds i1, i1* %1905, i64 0
	%1911 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	store %Type_Info* %1911, %Type_Info** %1908
	%1912 = getelementptr inbounds %..string, %..string* %1903, i64 0
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$48b, i64 0, i32 0), i64 3}, %..string* %1912
	store i64 0, i64* %1909
	store i1 false, i1* %1910
	%1913 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%1914 = bitcast %Type_Info* %1913 to %Type_Info*
	%1915 = getelementptr inbounds %Type_Info*, %Type_Info** %1902, i64 1
	%1916 = getelementptr inbounds i64, i64* %1904, i64 1
	%1917 = getelementptr inbounds i1, i1* %1905, i64 1
	%1918 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	store %Type_Info* %1918, %Type_Info** %1915
	%1919 = getelementptr inbounds %..string, %..string* %1903, i64 1
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$48c, i64 0, i32 0), i64 5}, %..string* %1919
	store i64 8, i64* %1916
	store i1 false, i1* %1917
	%1920 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%1921 = bitcast %Type_Info* %1920 to %Type_Info*
	%1922 = getelementptr inbounds %Type_Info*, %Type_Info** %1902, i64 2
	%1923 = getelementptr inbounds i64, i64* %1904, i64 2
	%1924 = getelementptr inbounds i1, i1* %1905, i64 2
	%1925 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	store %Type_Info* %1925, %Type_Info** %1922
	%1926 = getelementptr inbounds %..string, %..string* %1903, i64 2
	store %..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$48d, i64 0, i32 0), i64 16}, %..string* %1926
	store i64 16, i64* %1923
	store i1 false, i1* %1924
	%1927 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %1897, i64 0, i32 0
	%1928 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %1927, i64 0, i32 0
	store %Type_Info** %1902, %Type_Info*** %1928
	%1929 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %1927, i64 0, i32 1
	store i64 3, i64* %1929
	%1930 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %1897, i64 0, i32 1
	%1931 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %1930, i64 0, i32 0
	store %..string* %1903, %..string** %1931
	%1932 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %1930, i64 0, i32 1
	store i64 3, i64* %1932
	%1933 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %1897, i64 0, i32 2
	%1934 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %1933, i64 0, i32 0
	store i64* %1904, i64** %1934
	%1935 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %1933, i64 0, i32 1
	store i64 3, i64* %1935
	%1936 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %1897, i64 0, i32 3
	%1937 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %1936, i64 0, i32 0
	store i1* %1905, i1** %1937
	%1938 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %1936, i64 0, i32 1
	store i64 3, i64* %1938
	%1939 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %1894, i64 0, i32 2 ; UnionTagPtr
	store i8 16, i8* %1939
	%1940 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%1941 = getelementptr inbounds %Type_Info, %Type_Info* %1940, i64 0, i32 2
	%1942 = getelementptr inbounds %Type_Info, %Type_Info* %1940, i64 0, i32 0
	store i64 8, i64* %1942
	%1943 = getelementptr inbounds %Type_Info, %Type_Info* %1940, i64 0, i32 1
	store i64 8, i64* %1943
	; TypeInfoPointer
	%1944 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %1941 to %Type_Info_Pointer*
	%1945 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 8
	%1946 = bitcast %Type_Info* %1945 to %Type_Info*
	%1947 = getelementptr inbounds %Type_Info_Pointer, %Type_Info_Pointer* %1944, i64 0, i32 0
	store %Type_Info* %1946, %Type_Info** %1947
	%1948 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %1941, i64 0, i32 2 ; UnionTagPtr
	store i8 9, i8* %1948
	%1949 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%1950 = getelementptr inbounds %Type_Info, %Type_Info* %1949, i64 0, i32 2
	%1951 = getelementptr inbounds %Type_Info, %Type_Info* %1949, i64 0, i32 0
	store i64 8, i64* %1951
	%1952 = getelementptr inbounds %Type_Info, %Type_Info* %1949, i64 0, i32 1
	store i64 8, i64* %1952
	; TypeInfoPointer
	%1953 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %1950 to %Type_Info_Pointer*
	%1954 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 8
	%1955 = bitcast %Type_Info* %1954 to %Type_Info*
	%1956 = getelementptr inbounds %Type_Info_Pointer, %Type_Info_Pointer* %1953, i64 0, i32 0
	store %Type_Info* %1955, %Type_Info** %1956
	%1957 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %1950, i64 0, i32 2 ; UnionTagPtr
	store i8 9, i8* %1957
	%1958 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%1959 = getelementptr inbounds %Type_Info, %Type_Info* %1958, i64 0, i32 2
	%1960 = getelementptr inbounds %Type_Info, %Type_Info* %1958, i64 0, i32 0
	store i64 8, i64* %1960
	%1961 = getelementptr inbounds %Type_Info, %Type_Info* %1958, i64 0, i32 1
	store i64 8, i64* %1961
	; TypeInfoPointer
	%1962 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %1959 to %Type_Info_Pointer*
	%1963 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 8
	%1964 = bitcast %Type_Info* %1963 to %Type_Info*
	%1965 = getelementptr inbounds %Type_Info_Pointer, %Type_Info_Pointer* %1962, i64 0, i32 0
	store %Type_Info* %1964, %Type_Info** %1965
	%1966 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %1959, i64 0, i32 2 ; UnionTagPtr
	store i8 9, i8* %1966
	%1967 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 69
	%1968 = getelementptr inbounds %Type_Info, %Type_Info* %1967, i64 0, i32 2
	%1969 = getelementptr inbounds %Type_Info, %Type_Info* %1967, i64 0, i32 0
	store i64 48, i64* %1969
	%1970 = getelementptr inbounds %Type_Info, %Type_Info* %1967, i64 0, i32 1
	store i64 8, i64* %1970
	; TypeInfoNamed
	%1971 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %1968 to %Type_Info_Named*
	%1972 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 70
	%1973 = bitcast %Type_Info* %1972 to %Type_Info*
	%1974 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %1971, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$48e, i64 0, i32 0), i64 19}, %..string* %1974
	%1975 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %1971, i64 0, i32 1
	store %Type_Info* %1973, %Type_Info** %1975
	%1976 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %1968, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %1976
	%1977 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 70
	%1978 = getelementptr inbounds %Type_Info, %Type_Info* %1977, i64 0, i32 2
	%1979 = getelementptr inbounds %Type_Info, %Type_Info* %1977, i64 0, i32 0
	store i64 48, i64* %1979
	%1980 = getelementptr inbounds %Type_Info, %Type_Info* %1977, i64 0, i32 1
	store i64 8, i64* %1980
	; TypeInfoStruct
	%1981 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %1978 to %Type_Info_Struct*
	%1982 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %1981, i64 0, i32 4
	store i1 false, i1* %1982
	%1983 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %1981, i64 0, i32 5
	store i1 true, i1* %1983
	%1984 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %1981, i64 0, i32 6
	store i1 false, i1* %1984
	%1985 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %1981, i64 0, i32 7
	store i1 false, i1* %1985
	%1986 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 76
	%1987 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 40
	%1988 = getelementptr inbounds [450 x i64], [450 x i64]* @__$type_info_offsets_data, i64 0, i32 40
	%1989 = getelementptr inbounds [450 x i1], [450 x i1]* @__$type_info_usings_data, i64 0, i32 40
	%1990 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 37
	%1991 = bitcast %Type_Info* %1990 to %Type_Info*
	%1992 = getelementptr inbounds %Type_Info*, %Type_Info** %1986, i64 0
	%1993 = getelementptr inbounds i64, i64* %1988, i64 0
	%1994 = getelementptr inbounds i1, i1* %1989, i64 0
	%1995 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 37
	store %Type_Info* %1995, %Type_Info** %1992
	%1996 = getelementptr inbounds %..string, %..string* %1987, i64 0
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$48f, i64 0, i32 0), i64 5}, %..string* %1996
	store i64 0, i64* %1993
	store i1 false, i1* %1994
	%1997 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 71
	%1998 = bitcast %Type_Info* %1997 to %Type_Info*
	%1999 = getelementptr inbounds %Type_Info*, %Type_Info** %1986, i64 1
	%2000 = getelementptr inbounds i64, i64* %1988, i64 1
	%2001 = getelementptr inbounds i1, i1* %1989, i64 1
	%2002 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 71
	store %Type_Info* %2002, %Type_Info** %1999
	%2003 = getelementptr inbounds %..string, %..string* %1987, i64 1
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$490, i64 0, i32 0), i64 4}, %..string* %2003
	store i64 16, i64* %2000
	store i1 false, i1* %2001
	%2004 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 71
	%2005 = bitcast %Type_Info* %2004 to %Type_Info*
	%2006 = getelementptr inbounds %Type_Info*, %Type_Info** %1986, i64 2
	%2007 = getelementptr inbounds i64, i64* %1988, i64 2
	%2008 = getelementptr inbounds i1, i1* %1989, i64 2
	%2009 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 71
	store %Type_Info* %2009, %Type_Info** %2006
	%2010 = getelementptr inbounds %..string, %..string* %1987, i64 2
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$491, i64 0, i32 0), i64 7}, %..string* %2010
	store i64 32, i64* %2007
	store i1 false, i1* %2008
	%2011 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %1981, i64 0, i32 0
	%2012 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %2011, i64 0, i32 0
	store %Type_Info** %1986, %Type_Info*** %2012
	%2013 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %2011, i64 0, i32 1
	store i64 3, i64* %2013
	%2014 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %1981, i64 0, i32 1
	%2015 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %2014, i64 0, i32 0
	store %..string* %1987, %..string** %2015
	%2016 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %2014, i64 0, i32 1
	store i64 3, i64* %2016
	%2017 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %1981, i64 0, i32 2
	%2018 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %2017, i64 0, i32 0
	store i64* %1988, i64** %2018
	%2019 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %2017, i64 0, i32 1
	store i64 3, i64* %2019
	%2020 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %1981, i64 0, i32 3
	%2021 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %2020, i64 0, i32 0
	store i1* %1989, i1** %2021
	%2022 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %2020, i64 0, i32 1
	store i64 3, i64* %2022
	%2023 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %1978, i64 0, i32 2 ; UnionTagPtr
	store i8 16, i8* %2023
	%2024 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 37
	%2025 = getelementptr inbounds %Type_Info, %Type_Info* %2024, i64 0, i32 2
	%2026 = getelementptr inbounds %Type_Info, %Type_Info* %2024, i64 0, i32 0
	store i64 16, i64* %2026
	%2027 = getelementptr inbounds %Type_Info, %Type_Info* %2024, i64 0, i32 1
	store i64 8, i64* %2027
	; TypeInfoSlice
	%2028 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %2025 to %Type_Info_Slice*
	%2029 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%2030 = bitcast %Type_Info* %2029 to %Type_Info*
	%2031 = getelementptr inbounds %Type_Info_Slice, %Type_Info_Slice* %2028, i64 0, i32 0
	store %Type_Info* %2030, %Type_Info** %2031
	%2032 = getelementptr inbounds %Type_Info_Slice, %Type_Info_Slice* %2028, i64 0, i32 1
	store i64 16, i64* %2032
	%2033 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %2025, i64 0, i32 2 ; UnionTagPtr
	store i8 13, i8* %2033
	%2034 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 38
	%2035 = getelementptr inbounds %Type_Info, %Type_Info* %2034, i64 0, i32 2
	%2036 = getelementptr inbounds %Type_Info, %Type_Info* %2034, i64 0, i32 0
	store i64 8, i64* %2036
	%2037 = getelementptr inbounds %Type_Info, %Type_Info* %2034, i64 0, i32 1
	store i64 8, i64* %2037
	; TypeInfoPointer
	%2038 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %2035 to %Type_Info_Pointer*
	%2039 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%2040 = bitcast %Type_Info* %2039 to %Type_Info*
	%2041 = getelementptr inbounds %Type_Info_Pointer, %Type_Info_Pointer* %2038, i64 0, i32 0
	store %Type_Info* %2040, %Type_Info** %2041
	%2042 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %2035, i64 0, i32 2 ; UnionTagPtr
	store i8 9, i8* %2042
	%2043 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 71
	%2044 = getelementptr inbounds %Type_Info, %Type_Info* %2043, i64 0, i32 2
	%2045 = getelementptr inbounds %Type_Info, %Type_Info* %2043, i64 0, i32 0
	store i64 16, i64* %2045
	%2046 = getelementptr inbounds %Type_Info, %Type_Info* %2043, i64 0, i32 1
	store i64 8, i64* %2046
	; TypeInfoSlice
	%2047 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %2044 to %Type_Info_Slice*
	%2048 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	%2049 = bitcast %Type_Info* %2048 to %Type_Info*
	%2050 = getelementptr inbounds %Type_Info_Slice, %Type_Info_Slice* %2047, i64 0, i32 0
	store %Type_Info* %2049, %Type_Info** %2050
	%2051 = getelementptr inbounds %Type_Info_Slice, %Type_Info_Slice* %2047, i64 0, i32 1
	store i64 4, i64* %2051
	%2052 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %2044, i64 0, i32 2 ; UnionTagPtr
	store i8 13, i8* %2052
	%2053 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 72
	%2054 = getelementptr inbounds %Type_Info, %Type_Info* %2053, i64 0, i32 2
	%2055 = getelementptr inbounds %Type_Info, %Type_Info* %2053, i64 0, i32 0
	store i64 8, i64* %2055
	%2056 = getelementptr inbounds %Type_Info, %Type_Info* %2053, i64 0, i32 1
	store i64 8, i64* %2056
	; TypeInfoPointer
	%2057 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %2054 to %Type_Info_Pointer*
	%2058 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	%2059 = bitcast %Type_Info* %2058 to %Type_Info*
	%2060 = getelementptr inbounds %Type_Info_Pointer, %Type_Info_Pointer* %2057, i64 0, i32 0
	store %Type_Info* %2059, %Type_Info** %2060
	%2061 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %2054, i64 0, i32 2 ; UnionTagPtr
	store i8 9, i8* %2061
	%2062 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 71
	%2063 = getelementptr inbounds %Type_Info, %Type_Info* %2062, i64 0, i32 2
	%2064 = getelementptr inbounds %Type_Info, %Type_Info* %2062, i64 0, i32 0
	store i64 16, i64* %2064
	%2065 = getelementptr inbounds %Type_Info, %Type_Info* %2062, i64 0, i32 1
	store i64 8, i64* %2065
	; TypeInfoSlice
	%2066 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %2063 to %Type_Info_Slice*
	%2067 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	%2068 = bitcast %Type_Info* %2067 to %Type_Info*
	%2069 = getelementptr inbounds %Type_Info_Slice, %Type_Info_Slice* %2066, i64 0, i32 0
	store %Type_Info* %2068, %Type_Info** %2069
	%2070 = getelementptr inbounds %Type_Info_Slice, %Type_Info_Slice* %2066, i64 0, i32 1
	store i64 4, i64* %2070
	%2071 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %2063, i64 0, i32 2 ; UnionTagPtr
	store i8 13, i8* %2071
	%2072 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 72
	%2073 = getelementptr inbounds %Type_Info, %Type_Info* %2072, i64 0, i32 2
	%2074 = getelementptr inbounds %Type_Info, %Type_Info* %2072, i64 0, i32 0
	store i64 8, i64* %2074
	%2075 = getelementptr inbounds %Type_Info, %Type_Info* %2072, i64 0, i32 1
	store i64 8, i64* %2075
	; TypeInfoPointer
	%2076 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %2073 to %Type_Info_Pointer*
	%2077 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	%2078 = bitcast %Type_Info* %2077 to %Type_Info*
	%2079 = getelementptr inbounds %Type_Info_Pointer, %Type_Info_Pointer* %2076, i64 0, i32 0
	store %Type_Info* %2078, %Type_Info** %2079
	%2080 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %2073, i64 0, i32 2 ; UnionTagPtr
	store i8 9, i8* %2080
	%2081 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 73
	%2082 = getelementptr inbounds %Type_Info, %Type_Info* %2081, i64 0, i32 2
	%2083 = getelementptr inbounds %Type_Info, %Type_Info* %2081, i64 0, i32 0
	store i64 1, i64* %2083
	%2084 = getelementptr inbounds %Type_Info, %Type_Info* %2081, i64 0, i32 1
	store i64 1, i64* %2084
	; TypeInfoNamed
	%2085 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %2082 to %Type_Info_Named*
	%2086 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 74
	%2087 = bitcast %Type_Info* %2086 to %Type_Info*
	%2088 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %2085, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$492, i64 0, i32 0), i64 14}, %..string* %2088
	%2089 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %2085, i64 0, i32 1
	store %Type_Info* %2087, %Type_Info** %2089
	%2090 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %2082, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %2090
	%2091 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 74
	%2092 = getelementptr inbounds %Type_Info, %Type_Info* %2091, i64 0, i32 2
	%2093 = getelementptr inbounds %Type_Info, %Type_Info* %2091, i64 0, i32 0
	store i64 1, i64* %2093
	%2094 = getelementptr inbounds %Type_Info, %Type_Info* %2091, i64 0, i32 1
	store i64 1, i64* %2094
	; TypeInfoEnum
	%2095 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %2092 to %Type_Info_Enum*
	%2096 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	%2097 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %2095, i64 0, i32 0
	store %Type_Info* %2096, %Type_Info** %2097
	%2098 = getelementptr inbounds [4 x %..string], [4 x %..string]* @__$enum_names-4a, i64 0, i32 0
	%2099 = getelementptr inbounds [4 x %Type_Info_Enum_Value], [4 x %Type_Info_Enum_Value]* @__$enum_values-4a, i64 0, i32 0
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %6
	%2100 = bitcast %Type_Info_Enum_Value* %6 to i8*
	store i8 0, i8* %2100
	%2101 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %6, i64 0, i32 2 ; UnionTagPtr
	store i8 8, i8* %2101
	%2102 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %6, align 8
	store %Type_Info_Enum_Value %2102, %Type_Info_Enum_Value* %2099
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$493, i64 0, i32 0), i64 5}, %..string* %2098
	%2103 = getelementptr inbounds [4 x %..string], [4 x %..string]* @__$enum_names-4a, i64 0, i32 1
	%2104 = getelementptr inbounds [4 x %Type_Info_Enum_Value], [4 x %Type_Info_Enum_Value]* @__$enum_values-4a, i64 0, i32 1
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %7
	%2105 = bitcast %Type_Info_Enum_Value* %7 to i8*
	store i8 1, i8* %2105
	%2106 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %7, i64 0, i32 2 ; UnionTagPtr
	store i8 8, i8* %2106
	%2107 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %7, align 8
	store %Type_Info_Enum_Value %2107, %Type_Info_Enum_Value* %2104
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$494, i64 0, i32 0), i64 4}, %..string* %2103
	%2108 = getelementptr inbounds [4 x %..string], [4 x %..string]* @__$enum_names-4a, i64 0, i32 2
	%2109 = getelementptr inbounds [4 x %Type_Info_Enum_Value], [4 x %Type_Info_Enum_Value]* @__$enum_values-4a, i64 0, i32 2
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %8
	%2110 = bitcast %Type_Info_Enum_Value* %8 to i8*
	store i8 2, i8* %2110
	%2111 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %8, i64 0, i32 2 ; UnionTagPtr
	store i8 8, i8* %2111
	%2112 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %8, align 8
	store %Type_Info_Enum_Value %2112, %Type_Info_Enum_Value* %2109
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$495, i64 0, i32 0), i64 7}, %..string* %2108
	%2113 = getelementptr inbounds [4 x %..string], [4 x %..string]* @__$enum_names-4a, i64 0, i32 3
	%2114 = getelementptr inbounds [4 x %Type_Info_Enum_Value], [4 x %Type_Info_Enum_Value]* @__$enum_values-4a, i64 0, i32 3
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %9
	%2115 = bitcast %Type_Info_Enum_Value* %9 to i8*
	store i8 3, i8* %2115
	%2116 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %9, i64 0, i32 2 ; UnionTagPtr
	store i8 8, i8* %2116
	%2117 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %9, align 8
	store %Type_Info_Enum_Value %2117, %Type_Info_Enum_Value* %2114
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$496, i64 0, i32 0), i64 6}, %..string* %2113
	%2118 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %2095, i64 0, i32 1
	%2119 = getelementptr inbounds [4 x %..string], [4 x %..string]* @__$enum_names-4a, i64 0, i32 0
	%2120 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %2118, i64 0, i32 0
	store %..string* %2119, %..string** %2120
	%2121 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %2118, i64 0, i32 1
	store i64 4, i64* %2121
	%2122 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %2095, i64 0, i32 2
	%2123 = getelementptr inbounds [4 x %Type_Info_Enum_Value], [4 x %Type_Info_Enum_Value]* @__$enum_values-4a, i64 0, i32 0
	%2124 = getelementptr inbounds {%Type_Info_Enum_Value*, i64}, {%Type_Info_Enum_Value*, i64}* %2122, i64 0, i32 0
	store %Type_Info_Enum_Value* %2123, %Type_Info_Enum_Value** %2124
	%2125 = getelementptr inbounds {%Type_Info_Enum_Value*, i64}, {%Type_Info_Enum_Value*, i64}* %2122, i64 0, i32 1
	store i64 4, i64* %2125
	%2126 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %2092, i64 0, i32 2 ; UnionTagPtr
	store i8 18, i8* %2126
	%2127 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%2128 = getelementptr inbounds %Type_Info, %Type_Info* %2127, i64 0, i32 2
	%2129 = getelementptr inbounds %Type_Info, %Type_Info* %2127, i64 0, i32 0
	store i64 8, i64* %2129
	%2130 = getelementptr inbounds %Type_Info, %Type_Info* %2127, i64 0, i32 1
	store i64 8, i64* %2130
	; TypeInfoPointer
	%2131 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %2128 to %Type_Info_Pointer*
	%2132 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 8
	%2133 = bitcast %Type_Info* %2132 to %Type_Info*
	%2134 = getelementptr inbounds %Type_Info_Pointer, %Type_Info_Pointer* %2131, i64 0, i32 0
	store %Type_Info* %2133, %Type_Info** %2134
	%2135 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %2128, i64 0, i32 2 ; UnionTagPtr
	store i8 9, i8* %2135
	%2136 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 75
	%2137 = getelementptr inbounds %Type_Info, %Type_Info* %2136, i64 0, i32 2
	%2138 = getelementptr inbounds %Type_Info, %Type_Info* %2136, i64 0, i32 0
	store i64 16, i64* %2138
	%2139 = getelementptr inbounds %Type_Info, %Type_Info* %2136, i64 0, i32 1
	store i64 8, i64* %2139
	; TypeInfoBasic
	%2140 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %2137 to %Type_Info_Any*
	%2141 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %2137, i64 0, i32 2 ; UnionTagPtr
	store i8 8, i8* %2141
	%2142 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 76
	%2143 = getelementptr inbounds %Type_Info, %Type_Info* %2142, i64 0, i32 2
	%2144 = getelementptr inbounds %Type_Info, %Type_Info* %2142, i64 0, i32 0
	store i64 8, i64* %2144
	%2145 = getelementptr inbounds %Type_Info, %Type_Info* %2142, i64 0, i32 1
	store i64 8, i64* %2145
	; TypeInfoBasic
	%2146 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %2143 to %Type_Info_Pointer*
	%2147 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %2143, i64 0, i32 2 ; UnionTagPtr
	store i8 9, i8* %2147
	%2148 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 77
	%2149 = getelementptr inbounds %Type_Info, %Type_Info* %2148, i64 0, i32 2
	%2150 = getelementptr inbounds %Type_Info, %Type_Info* %2148, i64 0, i32 0
	store i64 8, i64* %2150
	%2151 = getelementptr inbounds %Type_Info, %Type_Info* %2148, i64 0, i32 1
	store i64 8, i64* %2151
	; TypeInfoNamed
	%2152 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %2149 to %Type_Info_Named*
	%2153 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 78
	%2154 = bitcast %Type_Info* %2153 to %Type_Info*
	%2155 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %2152, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$497, i64 0, i32 0), i64 8}, %..string* %2155
	%2156 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %2152, i64 0, i32 1
	store %Type_Info* %2154, %Type_Info** %2156
	%2157 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %2149, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %2157
	%2158 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 78
	%2159 = getelementptr inbounds %Type_Info, %Type_Info* %2158, i64 0, i32 2
	%2160 = getelementptr inbounds %Type_Info, %Type_Info* %2158, i64 0, i32 0
	store i64 8, i64* %2160
	%2161 = getelementptr inbounds %Type_Info, %Type_Info* %2158, i64 0, i32 1
	store i64 8, i64* %2161
	; TypeInfoEnum
	%2162 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %2159 to %Type_Info_Enum*
	%2163 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%2164 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %2162, i64 0, i32 0
	store %Type_Info* %2163, %Type_Info** %2164
	%2165 = getelementptr inbounds [3 x %..string], [3 x %..string]* @__$enum_names-4e, i64 0, i32 0
	%2166 = getelementptr inbounds [3 x %Type_Info_Enum_Value], [3 x %Type_Info_Enum_Value]* @__$enum_values-4e, i64 0, i32 0
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %10
	%2167 = bitcast %Type_Info_Enum_Value* %10 to i64*
	store i64 1, i64* %2167
	%2168 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %10, i64 0, i32 2 ; UnionTagPtr
	store i8 7, i8* %2168
	%2169 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %10, align 8
	store %Type_Info_Enum_Value %2169, %Type_Info_Enum_Value* %2166
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$498, i64 0, i32 0), i64 6}, %..string* %2165
	%2170 = getelementptr inbounds [3 x %..string], [3 x %..string]* @__$enum_names-4e, i64 0, i32 1
	%2171 = getelementptr inbounds [3 x %Type_Info_Enum_Value], [3 x %Type_Info_Enum_Value]* @__$enum_values-4e, i64 0, i32 1
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %11
	%2172 = bitcast %Type_Info_Enum_Value* %11 to i64*
	store i64 2, i64* %2172
	%2173 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %11, i64 0, i32 2 ; UnionTagPtr
	store i8 7, i8* %2173
	%2174 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %11, align 8
	store %Type_Info_Enum_Value %2174, %Type_Info_Enum_Value* %2171
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$499, i64 0, i32 0), i64 4}, %..string* %2170
	%2175 = getelementptr inbounds [3 x %..string], [3 x %..string]* @__$enum_names-4e, i64 0, i32 2
	%2176 = getelementptr inbounds [3 x %Type_Info_Enum_Value], [3 x %Type_Info_Enum_Value]* @__$enum_values-4e, i64 0, i32 2
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %12
	%2177 = bitcast %Type_Info_Enum_Value* %12 to i64*
	store i64 4, i64* %2177
	%2178 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %12, i64 0, i32 2 ; UnionTagPtr
	store i8 7, i8* %2178
	%2179 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %12, align 8
	store %Type_Info_Enum_Value %2179, %Type_Info_Enum_Value* %2176
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$49a, i64 0, i32 0), i64 5}, %..string* %2175
	%2180 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %2162, i64 0, i32 1
	%2181 = getelementptr inbounds [3 x %..string], [3 x %..string]* @__$enum_names-4e, i64 0, i32 0
	%2182 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %2180, i64 0, i32 0
	store %..string* %2181, %..string** %2182
	%2183 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %2180, i64 0, i32 1
	store i64 3, i64* %2183
	%2184 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %2162, i64 0, i32 2
	%2185 = getelementptr inbounds [3 x %Type_Info_Enum_Value], [3 x %Type_Info_Enum_Value]* @__$enum_values-4e, i64 0, i32 0
	%2186 = getelementptr inbounds {%Type_Info_Enum_Value*, i64}, {%Type_Info_Enum_Value*, i64}* %2184, i64 0, i32 0
	store %Type_Info_Enum_Value* %2185, %Type_Info_Enum_Value** %2186
	%2187 = getelementptr inbounds {%Type_Info_Enum_Value*, i64}, {%Type_Info_Enum_Value*, i64}* %2184, i64 0, i32 1
	store i64 3, i64* %2187
	%2188 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %2159, i64 0, i32 2 ; UnionTagPtr
	store i8 18, i8* %2188
	%2189 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%2190 = getelementptr inbounds %Type_Info, %Type_Info* %2189, i64 0, i32 2
	%2191 = getelementptr inbounds %Type_Info, %Type_Info* %2189, i64 0, i32 0
	store i64 8, i64* %2191
	%2192 = getelementptr inbounds %Type_Info, %Type_Info* %2189, i64 0, i32 1
	store i64 8, i64* %2192
	; TypeInfoPointer
	%2193 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %2190 to %Type_Info_Pointer*
	%2194 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 8
	%2195 = bitcast %Type_Info* %2194 to %Type_Info*
	%2196 = getelementptr inbounds %Type_Info_Pointer, %Type_Info_Pointer* %2193, i64 0, i32 0
	store %Type_Info* %2195, %Type_Info** %2196
	%2197 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %2190, i64 0, i32 2 ; UnionTagPtr
	store i8 9, i8* %2197
	%2198 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%2199 = getelementptr inbounds %Type_Info, %Type_Info* %2198, i64 0, i32 2
	%2200 = getelementptr inbounds %Type_Info, %Type_Info* %2198, i64 0, i32 0
	store i64 8, i64* %2200
	%2201 = getelementptr inbounds %Type_Info, %Type_Info* %2198, i64 0, i32 1
	store i64 8, i64* %2201
	; TypeInfoPointer
	%2202 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %2199 to %Type_Info_Pointer*
	%2203 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 8
	%2204 = bitcast %Type_Info* %2203 to %Type_Info*
	%2205 = getelementptr inbounds %Type_Info_Pointer, %Type_Info_Pointer* %2202, i64 0, i32 0
	store %Type_Info* %2204, %Type_Info** %2205
	%2206 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %2199, i64 0, i32 2 ; UnionTagPtr
	store i8 9, i8* %2206
	%2207 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 79
	%2208 = getelementptr inbounds %Type_Info, %Type_Info* %2207, i64 0, i32 2
	%2209 = getelementptr inbounds %Type_Info, %Type_Info* %2207, i64 0, i32 0
	store i64 8, i64* %2209
	%2210 = getelementptr inbounds %Type_Info, %Type_Info* %2207, i64 0, i32 1
	store i64 4, i64* %2210
	; TypeInfoBasic
	%2211 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %2208 to %Type_Info_Complex*
	%2212 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %2208, i64 0, i32 2 ; UnionTagPtr
	store i8 5, i8* %2212
	%2213 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 80
	%2214 = getelementptr inbounds %Type_Info, %Type_Info* %2213, i64 0, i32 2
	%2215 = getelementptr inbounds %Type_Info, %Type_Info* %2213, i64 0, i32 0
	store i64 16, i64* %2215
	%2216 = getelementptr inbounds %Type_Info, %Type_Info* %2213, i64 0, i32 1
	store i64 8, i64* %2216
	; TypeInfoBasic
	%2217 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %2214 to %Type_Info_Complex*
	%2218 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %2214, i64 0, i32 2 ; UnionTagPtr
	store i8 5, i8* %2218
	%2219 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 81
	%2220 = getelementptr inbounds %Type_Info, %Type_Info* %2219, i64 0, i32 2
	%2221 = getelementptr inbounds %Type_Info, %Type_Info* %2219, i64 0, i32 0
	store i64 48, i64* %2221
	%2222 = getelementptr inbounds %Type_Info, %Type_Info* %2219, i64 0, i32 1
	store i64 8, i64* %2222
	; TypeInfoNamed
	%2223 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %2220 to %Type_Info_Named*
	%2224 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 82
	%2225 = bitcast %Type_Info* %2224 to %Type_Info*
	%2226 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %2223, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$49b, i64 0, i32 0), i64 20}, %..string* %2226
	%2227 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %2223, i64 0, i32 1
	store %Type_Info* %2225, %Type_Info** %2227
	%2228 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %2220, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %2228
	%2229 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 82
	%2230 = getelementptr inbounds %Type_Info, %Type_Info* %2229, i64 0, i32 2
	%2231 = getelementptr inbounds %Type_Info, %Type_Info* %2229, i64 0, i32 0
	store i64 48, i64* %2231
	%2232 = getelementptr inbounds %Type_Info, %Type_Info* %2229, i64 0, i32 1
	store i64 8, i64* %2232
	; TypeInfoStruct
	%2233 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %2230 to %Type_Info_Struct*
	%2234 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %2233, i64 0, i32 4
	store i1 false, i1* %2234
	%2235 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %2233, i64 0, i32 5
	store i1 true, i1* %2235
	%2236 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %2233, i64 0, i32 6
	store i1 false, i1* %2236
	%2237 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %2233, i64 0, i32 7
	store i1 false, i1* %2237
	%2238 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 79
	%2239 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 43
	%2240 = getelementptr inbounds [450 x i64], [450 x i64]* @__$type_info_offsets_data, i64 0, i32 43
	%2241 = getelementptr inbounds [450 x i1], [450 x i1]* @__$type_info_usings_data, i64 0, i32 43
	%2242 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%2243 = bitcast %Type_Info* %2242 to %Type_Info*
	%2244 = getelementptr inbounds %Type_Info*, %Type_Info** %2238, i64 0
	%2245 = getelementptr inbounds i64, i64* %2240, i64 0
	%2246 = getelementptr inbounds i1, i1* %2241, i64 0
	%2247 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	store %Type_Info* %2247, %Type_Info** %2244
	%2248 = getelementptr inbounds %..string, %..string* %2239, i64 0
	store %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$49c, i64 0, i32 0), i64 9}, %..string* %2248
	store i64 0, i64* %2245
	store i1 false, i1* %2246
	%2249 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%2250 = bitcast %Type_Info* %2249 to %Type_Info*
	%2251 = getelementptr inbounds %Type_Info*, %Type_Info** %2238, i64 1
	%2252 = getelementptr inbounds i64, i64* %2240, i64 1
	%2253 = getelementptr inbounds i1, i1* %2241, i64 1
	%2254 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	store %Type_Info* %2254, %Type_Info** %2251
	%2255 = getelementptr inbounds %..string, %..string* %2239, i64 1
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$49d, i64 0, i32 0), i64 4}, %..string* %2255
	store i64 16, i64* %2252
	store i1 false, i1* %2253
	%2256 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%2257 = bitcast %Type_Info* %2256 to %Type_Info*
	%2258 = getelementptr inbounds %Type_Info*, %Type_Info** %2238, i64 2
	%2259 = getelementptr inbounds i64, i64* %2240, i64 2
	%2260 = getelementptr inbounds i1, i1* %2241, i64 2
	%2261 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	store %Type_Info* %2261, %Type_Info** %2258
	%2262 = getelementptr inbounds %..string, %..string* %2239, i64 2
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$49e, i64 0, i32 0), i64 6}, %..string* %2262
	store i64 24, i64* %2259
	store i1 false, i1* %2260
	%2263 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%2264 = bitcast %Type_Info* %2263 to %Type_Info*
	%2265 = getelementptr inbounds %Type_Info*, %Type_Info** %2238, i64 3
	%2266 = getelementptr inbounds i64, i64* %2240, i64 3
	%2267 = getelementptr inbounds i1, i1* %2241, i64 3
	%2268 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	store %Type_Info* %2268, %Type_Info** %2265
	%2269 = getelementptr inbounds %..string, %..string* %2239, i64 3
	store %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$49f, i64 0, i32 0), i64 9}, %..string* %2269
	store i64 32, i64* %2266
	store i1 false, i1* %2267
	%2270 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %2233, i64 0, i32 0
	%2271 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %2270, i64 0, i32 0
	store %Type_Info** %2238, %Type_Info*** %2271
	%2272 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %2270, i64 0, i32 1
	store i64 4, i64* %2272
	%2273 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %2233, i64 0, i32 1
	%2274 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %2273, i64 0, i32 0
	store %..string* %2239, %..string** %2274
	%2275 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %2273, i64 0, i32 1
	store i64 4, i64* %2275
	%2276 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %2233, i64 0, i32 2
	%2277 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %2276, i64 0, i32 0
	store i64* %2240, i64** %2277
	%2278 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %2276, i64 0, i32 1
	store i64 4, i64* %2278
	%2279 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %2233, i64 0, i32 3
	%2280 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %2279, i64 0, i32 0
	store i1* %2241, i1** %2280
	%2281 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %2279, i64 0, i32 1
	store i64 4, i64* %2281
	%2282 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %2230, i64 0, i32 2 ; UnionTagPtr
	store i8 16, i8* %2282
	%2283 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 83
	%2284 = getelementptr inbounds %Type_Info, %Type_Info* %2283, i64 0, i32 2
	%2285 = getelementptr inbounds %Type_Info, %Type_Info* %2283, i64 0, i32 0
	store i64 4, i64* %2285
	%2286 = getelementptr inbounds %Type_Info, %Type_Info* %2283, i64 0, i32 1
	store i64 4, i64* %2286
	; TypeInfoNamed
	%2287 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %2284 to %Type_Info_Named*
	%2288 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 84
	%2289 = bitcast %Type_Info* %2288 to %Type_Info*
	%2290 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %2287, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$4a0, i64 0, i32 0), i64 11}, %..string* %2290
	%2291 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %2287, i64 0, i32 1
	store %Type_Info* %2289, %Type_Info** %2291
	%2292 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %2284, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %2292
	%2293 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 84
	%2294 = getelementptr inbounds %Type_Info, %Type_Info* %2293, i64 0, i32 2
	%2295 = getelementptr inbounds %Type_Info, %Type_Info* %2293, i64 0, i32 0
	store i64 4, i64* %2295
	%2296 = getelementptr inbounds %Type_Info, %Type_Info* %2293, i64 0, i32 1
	store i64 4, i64* %2296
	; TypeInfoEnum
	%2297 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %2294 to %Type_Info_Enum*
	%2298 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	%2299 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %2297, i64 0, i32 0
	store %Type_Info* %2298, %Type_Info** %2299
	%2300 = getelementptr inbounds [7 x %..string], [7 x %..string]* @__$enum_names-54, i64 0, i32 0
	%2301 = getelementptr inbounds [7 x %Type_Info_Enum_Value], [7 x %Type_Info_Enum_Value]* @__$enum_values-54, i64 0, i32 0
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %13
	%2302 = bitcast %Type_Info_Enum_Value* %13 to i32*
	store i32 35632, i32* %2302
	%2303 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %13, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %2303
	%2304 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %13, align 8
	store %Type_Info_Enum_Value %2304, %Type_Info_Enum_Value* %2301
	store %..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$4a1, i64 0, i32 0), i64 15}, %..string* %2300
	%2305 = getelementptr inbounds [7 x %..string], [7 x %..string]* @__$enum_names-54, i64 0, i32 1
	%2306 = getelementptr inbounds [7 x %Type_Info_Enum_Value], [7 x %Type_Info_Enum_Value]* @__$enum_values-54, i64 0, i32 1
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %14
	%2307 = bitcast %Type_Info_Enum_Value* %14 to i32*
	store i32 35633, i32* %2307
	%2308 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %14, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %2308
	%2309 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %14, align 8
	store %Type_Info_Enum_Value %2309, %Type_Info_Enum_Value* %2306
	store %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$4a2, i64 0, i32 0), i64 13}, %..string* %2305
	%2310 = getelementptr inbounds [7 x %..string], [7 x %..string]* @__$enum_names-54, i64 0, i32 2
	%2311 = getelementptr inbounds [7 x %Type_Info_Enum_Value], [7 x %Type_Info_Enum_Value]* @__$enum_values-54, i64 0, i32 2
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %15
	%2312 = bitcast %Type_Info_Enum_Value* %15 to i32*
	store i32 36313, i32* %2312
	%2313 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %15, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %2313
	%2314 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %15, align 8
	store %Type_Info_Enum_Value %2314, %Type_Info_Enum_Value* %2311
	store %..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$4a3, i64 0, i32 0), i64 15}, %..string* %2310
	%2315 = getelementptr inbounds [7 x %..string], [7 x %..string]* @__$enum_names-54, i64 0, i32 3
	%2316 = getelementptr inbounds [7 x %Type_Info_Enum_Value], [7 x %Type_Info_Enum_Value]* @__$enum_values-54, i64 0, i32 3
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %16
	%2317 = bitcast %Type_Info_Enum_Value* %16 to i32*
	store i32 37305, i32* %2317
	%2318 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %16, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %2318
	%2319 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %16, align 8
	store %Type_Info_Enum_Value %2319, %Type_Info_Enum_Value* %2316
	store %..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$4a4, i64 0, i32 0), i64 14}, %..string* %2315
	%2320 = getelementptr inbounds [7 x %..string], [7 x %..string]* @__$enum_names-54, i64 0, i32 4
	%2321 = getelementptr inbounds [7 x %Type_Info_Enum_Value], [7 x %Type_Info_Enum_Value]* @__$enum_values-54, i64 0, i32 4
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %17
	%2322 = bitcast %Type_Info_Enum_Value* %17 to i32*
	store i32 36487, i32* %2322
	%2323 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %17, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %2323
	%2324 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %17, align 8
	store %Type_Info_Enum_Value %2324, %Type_Info_Enum_Value* %2321
	store %..string {i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__str$4a5, i64 0, i32 0), i64 22}, %..string* %2320
	%2325 = getelementptr inbounds [7 x %..string], [7 x %..string]* @__$enum_names-54, i64 0, i32 5
	%2326 = getelementptr inbounds [7 x %Type_Info_Enum_Value], [7 x %Type_Info_Enum_Value]* @__$enum_values-54, i64 0, i32 5
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %18
	%2327 = bitcast %Type_Info_Enum_Value* %18 to i32*
	store i32 36488, i32* %2327
	%2328 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %18, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %2328
	%2329 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %18, align 8
	store %Type_Info_Enum_Value %2329, %Type_Info_Enum_Value* %2326
	store %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$4a6, i64 0, i32 0), i64 19}, %..string* %2325
	%2330 = getelementptr inbounds [7 x %..string], [7 x %..string]* @__$enum_names-54, i64 0, i32 6
	%2331 = getelementptr inbounds [7 x %Type_Info_Enum_Value], [7 x %Type_Info_Enum_Value]* @__$enum_values-54, i64 0, i32 6
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %19
	%2332 = bitcast %Type_Info_Enum_Value* %19 to i32*
	store i32 0, i32* %2332
	%2333 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %19, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %2333
	%2334 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %19, align 8
	store %Type_Info_Enum_Value %2334, %Type_Info_Enum_Value* %2331
	store %..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$4a7, i64 0, i32 0), i64 11}, %..string* %2330
	%2335 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %2297, i64 0, i32 1
	%2336 = getelementptr inbounds [7 x %..string], [7 x %..string]* @__$enum_names-54, i64 0, i32 0
	%2337 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %2335, i64 0, i32 0
	store %..string* %2336, %..string** %2337
	%2338 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %2335, i64 0, i32 1
	store i64 7, i64* %2338
	%2339 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %2297, i64 0, i32 2
	%2340 = getelementptr inbounds [7 x %Type_Info_Enum_Value], [7 x %Type_Info_Enum_Value]* @__$enum_values-54, i64 0, i32 0
	%2341 = getelementptr inbounds {%Type_Info_Enum_Value*, i64}, {%Type_Info_Enum_Value*, i64}* %2339, i64 0, i32 0
	store %Type_Info_Enum_Value* %2340, %Type_Info_Enum_Value** %2341
	%2342 = getelementptr inbounds {%Type_Info_Enum_Value*, i64}, {%Type_Info_Enum_Value*, i64}* %2339, i64 0, i32 1
	store i64 7, i64* %2342
	%2343 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %2294, i64 0, i32 2 ; UnionTagPtr
	store i8 18, i8* %2343
	%2344 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 53
	%2345 = getelementptr inbounds %Type_Info, %Type_Info* %2344, i64 0, i32 2
	%2346 = getelementptr inbounds %Type_Info, %Type_Info* %2344, i64 0, i32 0
	store i64 4, i64* %2346
	%2347 = getelementptr inbounds %Type_Info, %Type_Info* %2344, i64 0, i32 1
	store i64 4, i64* %2347
	; TypeInfoBasic
	%2348 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %2345 to %Type_Info_Rune*
	%2349 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %2345, i64 0, i32 2 ; UnionTagPtr
	store i8 3, i8* %2349
	%2350 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 54
	%2351 = getelementptr inbounds %Type_Info, %Type_Info* %2350, i64 0, i32 2
	%2352 = getelementptr inbounds %Type_Info, %Type_Info* %2350, i64 0, i32 0
	store i64 1, i64* %2352
	%2353 = getelementptr inbounds %Type_Info, %Type_Info* %2350, i64 0, i32 1
	store i64 1, i64* %2353
	; TypeInfoBasic
	%2354 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %2351 to %Type_Info_Integer*
	%2355 = getelementptr inbounds %Type_Info_Integer, %Type_Info_Integer* %2354, i64 0, i32 0
	store i1 true, i1* %2355
	%2356 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %2351, i64 0, i32 2 ; UnionTagPtr
	store i8 2, i8* %2356
	%2357 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 55
	%2358 = getelementptr inbounds %Type_Info, %Type_Info* %2357, i64 0, i32 2
	%2359 = getelementptr inbounds %Type_Info, %Type_Info* %2357, i64 0, i32 0
	store i64 2, i64* %2359
	%2360 = getelementptr inbounds %Type_Info, %Type_Info* %2357, i64 0, i32 1
	store i64 2, i64* %2360
	; TypeInfoBasic
	%2361 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %2358 to %Type_Info_Integer*
	%2362 = getelementptr inbounds %Type_Info_Integer, %Type_Info_Integer* %2361, i64 0, i32 0
	store i1 true, i1* %2362
	%2363 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %2358, i64 0, i32 2 ; UnionTagPtr
	store i8 2, i8* %2363
	%2364 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	%2365 = getelementptr inbounds %Type_Info, %Type_Info* %2364, i64 0, i32 2
	%2366 = getelementptr inbounds %Type_Info, %Type_Info* %2364, i64 0, i32 0
	store i64 4, i64* %2366
	%2367 = getelementptr inbounds %Type_Info, %Type_Info* %2364, i64 0, i32 1
	store i64 4, i64* %2367
	; TypeInfoBasic
	%2368 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %2365 to %Type_Info_Integer*
	%2369 = getelementptr inbounds %Type_Info_Integer, %Type_Info_Integer* %2368, i64 0, i32 0
	store i1 true, i1* %2369
	%2370 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %2365, i64 0, i32 2 ; UnionTagPtr
	store i8 2, i8* %2370
	%2371 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 57
	%2372 = getelementptr inbounds %Type_Info, %Type_Info* %2371, i64 0, i32 2
	%2373 = getelementptr inbounds %Type_Info, %Type_Info* %2371, i64 0, i32 0
	store i64 8, i64* %2373
	%2374 = getelementptr inbounds %Type_Info, %Type_Info* %2371, i64 0, i32 1
	store i64 8, i64* %2374
	; TypeInfoBasic
	%2375 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %2372 to %Type_Info_Integer*
	%2376 = getelementptr inbounds %Type_Info_Integer, %Type_Info_Integer* %2375, i64 0, i32 0
	store i1 true, i1* %2376
	%2377 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %2372, i64 0, i32 2 ; UnionTagPtr
	store i8 2, i8* %2377
	%2378 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 58
	%2379 = getelementptr inbounds %Type_Info, %Type_Info* %2378, i64 0, i32 2
	%2380 = getelementptr inbounds %Type_Info, %Type_Info* %2378, i64 0, i32 0
	store i64 16, i64* %2380
	%2381 = getelementptr inbounds %Type_Info, %Type_Info* %2378, i64 0, i32 1
	store i64 8, i64* %2381
	; TypeInfoBasic
	%2382 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %2379 to %Type_Info_Integer*
	%2383 = getelementptr inbounds %Type_Info_Integer, %Type_Info_Integer* %2382, i64 0, i32 0
	store i1 true, i1* %2383
	%2384 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %2379, i64 0, i32 2 ; UnionTagPtr
	store i8 2, i8* %2384
	%2385 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%2386 = getelementptr inbounds %Type_Info, %Type_Info* %2385, i64 0, i32 2
	%2387 = getelementptr inbounds %Type_Info, %Type_Info* %2385, i64 0, i32 0
	store i64 8, i64* %2387
	%2388 = getelementptr inbounds %Type_Info, %Type_Info* %2385, i64 0, i32 1
	store i64 8, i64* %2388
	; TypeInfoBasic
	%2389 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %2386 to %Type_Info_Integer*
	%2390 = getelementptr inbounds %Type_Info_Integer, %Type_Info_Integer* %2389, i64 0, i32 0
	store i1 true, i1* %2390
	%2391 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %2386, i64 0, i32 2 ; UnionTagPtr
	store i8 2, i8* %2391
	%2392 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	%2393 = getelementptr inbounds %Type_Info, %Type_Info* %2392, i64 0, i32 2
	%2394 = getelementptr inbounds %Type_Info, %Type_Info* %2392, i64 0, i32 0
	store i64 1, i64* %2394
	%2395 = getelementptr inbounds %Type_Info, %Type_Info* %2392, i64 0, i32 1
	store i64 1, i64* %2395
	; TypeInfoBasic
	%2396 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %2393 to %Type_Info_Integer*
	%2397 = getelementptr inbounds %Type_Info_Integer, %Type_Info_Integer* %2396, i64 0, i32 0
	store i1 false, i1* %2397
	%2398 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %2393, i64 0, i32 2 ; UnionTagPtr
	store i8 2, i8* %2398
	%2399 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 59
	%2400 = getelementptr inbounds %Type_Info, %Type_Info* %2399, i64 0, i32 2
	%2401 = getelementptr inbounds %Type_Info, %Type_Info* %2399, i64 0, i32 0
	store i64 2, i64* %2401
	%2402 = getelementptr inbounds %Type_Info, %Type_Info* %2399, i64 0, i32 1
	store i64 2, i64* %2402
	; TypeInfoBasic
	%2403 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %2400 to %Type_Info_Integer*
	%2404 = getelementptr inbounds %Type_Info_Integer, %Type_Info_Integer* %2403, i64 0, i32 0
	store i1 false, i1* %2404
	%2405 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %2400, i64 0, i32 2 ; UnionTagPtr
	store i8 2, i8* %2405
	%2406 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	%2407 = getelementptr inbounds %Type_Info, %Type_Info* %2406, i64 0, i32 2
	%2408 = getelementptr inbounds %Type_Info, %Type_Info* %2406, i64 0, i32 0
	store i64 4, i64* %2408
	%2409 = getelementptr inbounds %Type_Info, %Type_Info* %2406, i64 0, i32 1
	store i64 4, i64* %2409
	; TypeInfoBasic
	%2410 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %2407 to %Type_Info_Integer*
	%2411 = getelementptr inbounds %Type_Info_Integer, %Type_Info_Integer* %2410, i64 0, i32 0
	store i1 false, i1* %2411
	%2412 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %2407, i64 0, i32 2 ; UnionTagPtr
	store i8 2, i8* %2412
	%2413 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 61
	%2414 = getelementptr inbounds %Type_Info, %Type_Info* %2413, i64 0, i32 2
	%2415 = getelementptr inbounds %Type_Info, %Type_Info* %2413, i64 0, i32 0
	store i64 8, i64* %2415
	%2416 = getelementptr inbounds %Type_Info, %Type_Info* %2413, i64 0, i32 1
	store i64 8, i64* %2416
	; TypeInfoBasic
	%2417 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %2414 to %Type_Info_Integer*
	%2418 = getelementptr inbounds %Type_Info_Integer, %Type_Info_Integer* %2417, i64 0, i32 0
	store i1 false, i1* %2418
	%2419 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %2414, i64 0, i32 2 ; UnionTagPtr
	store i8 2, i8* %2419
	%2420 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 62
	%2421 = getelementptr inbounds %Type_Info, %Type_Info* %2420, i64 0, i32 2
	%2422 = getelementptr inbounds %Type_Info, %Type_Info* %2420, i64 0, i32 0
	store i64 16, i64* %2422
	%2423 = getelementptr inbounds %Type_Info, %Type_Info* %2420, i64 0, i32 1
	store i64 8, i64* %2423
	; TypeInfoBasic
	%2424 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %2421 to %Type_Info_Integer*
	%2425 = getelementptr inbounds %Type_Info_Integer, %Type_Info_Integer* %2424, i64 0, i32 0
	store i1 false, i1* %2425
	%2426 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %2421, i64 0, i32 2 ; UnionTagPtr
	store i8 2, i8* %2426
	%2427 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	%2428 = getelementptr inbounds %Type_Info, %Type_Info* %2427, i64 0, i32 2
	%2429 = getelementptr inbounds %Type_Info, %Type_Info* %2427, i64 0, i32 0
	store i64 8, i64* %2429
	%2430 = getelementptr inbounds %Type_Info, %Type_Info* %2427, i64 0, i32 1
	store i64 8, i64* %2430
	; TypeInfoBasic
	%2431 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %2428 to %Type_Info_Integer*
	%2432 = getelementptr inbounds %Type_Info_Integer, %Type_Info_Integer* %2431, i64 0, i32 0
	store i1 false, i1* %2432
	%2433 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %2428, i64 0, i32 2 ; UnionTagPtr
	store i8 2, i8* %2433
	%2434 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 42
	%2435 = getelementptr inbounds %Type_Info, %Type_Info* %2434, i64 0, i32 2
	%2436 = getelementptr inbounds %Type_Info, %Type_Info* %2434, i64 0, i32 0
	store i64 8, i64* %2436
	%2437 = getelementptr inbounds %Type_Info, %Type_Info* %2434, i64 0, i32 1
	store i64 8, i64* %2437
	; TypeInfoBasic
	%2438 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %2435 to %Type_Info_Integer*
	%2439 = getelementptr inbounds %Type_Info_Integer, %Type_Info_Integer* %2438, i64 0, i32 0
	store i1 false, i1* %2439
	%2440 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %2435, i64 0, i32 2 ; UnionTagPtr
	store i8 2, i8* %2440
	%2441 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 64
	%2442 = getelementptr inbounds %Type_Info, %Type_Info* %2441, i64 0, i32 2
	%2443 = getelementptr inbounds %Type_Info, %Type_Info* %2441, i64 0, i32 0
	store i64 4, i64* %2443
	%2444 = getelementptr inbounds %Type_Info, %Type_Info* %2441, i64 0, i32 1
	store i64 4, i64* %2444
	; TypeInfoBasic
	%2445 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %2442 to %Type_Info_Float*
	%2446 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %2442, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %2446
	%2447 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 65
	%2448 = getelementptr inbounds %Type_Info, %Type_Info* %2447, i64 0, i32 2
	%2449 = getelementptr inbounds %Type_Info, %Type_Info* %2447, i64 0, i32 0
	store i64 8, i64* %2449
	%2450 = getelementptr inbounds %Type_Info, %Type_Info* %2447, i64 0, i32 1
	store i64 8, i64* %2450
	; TypeInfoBasic
	%2451 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %2448 to %Type_Info_Float*
	%2452 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %2448, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %2452
	%2453 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 85
	%2454 = getelementptr inbounds %Type_Info, %Type_Info* %2453, i64 0, i32 2
	%2455 = getelementptr inbounds %Type_Info, %Type_Info* %2453, i64 0, i32 0
	store i64 8, i64* %2455
	%2456 = getelementptr inbounds %Type_Info, %Type_Info* %2453, i64 0, i32 1
	store i64 8, i64* %2456
	; TypeInfoNamed
	%2457 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %2454 to %Type_Info_Named*
	%2458 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 86
	%2459 = bitcast %Type_Info* %2458 to %Type_Info*
	%2460 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %2457, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$4a8, i64 0, i32 0), i64 14}, %..string* %2460
	%2461 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %2457, i64 0, i32 1
	store %Type_Info* %2459, %Type_Info** %2461
	%2462 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %2454, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %2462
	%2463 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 86
	%2464 = getelementptr inbounds %Type_Info, %Type_Info* %2463, i64 0, i32 2
	%2465 = getelementptr inbounds %Type_Info, %Type_Info* %2463, i64 0, i32 0
	store i64 8, i64* %2465
	%2466 = getelementptr inbounds %Type_Info, %Type_Info* %2463, i64 0, i32 1
	store i64 8, i64* %2466
	; TypeInfoProc
	%2467 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %2464 to %Type_Info_Procedure*
	%2468 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %2467, i64 0, i32 0
	%2469 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %2467, i64 0, i32 1
	%2470 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %2467, i64 0, i32 2
	%2471 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %2467, i64 0, i32 3
	%2472 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 87
	%2473 = bitcast %Type_Info* %2472 to %Type_Info*
	store %Type_Info* %2473, %Type_Info** %2468
	%2474 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 88
	%2475 = bitcast %Type_Info* %2474 to %Type_Info*
	store %Type_Info* %2475, %Type_Info** %2469
	store i1 false, i1* %2470
	store i64 1, i64* %2471
	%2476 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %2464, i64 0, i32 2 ; UnionTagPtr
	store i8 10, i8* %2476
	%2477 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 87
	%2478 = getelementptr inbounds %Type_Info, %Type_Info* %2477, i64 0, i32 2
	%2479 = getelementptr inbounds %Type_Info, %Type_Info* %2477, i64 0, i32 0
	store i64 104, i64* %2479
	%2480 = getelementptr inbounds %Type_Info, %Type_Info* %2477, i64 0, i32 1
	store i64 8, i64* %2480
	; TypeInfoTuple
	%2481 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %2478 to %Type_Info_Tuple*
	%2482 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 83
	%2483 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 47
	%2484 = getelementptr inbounds %Type_Info*, %Type_Info** %2482, i64 0
	%2485 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 76
	store %Type_Info* %2485, %Type_Info** %2484
	%2486 = getelementptr inbounds %..string, %..string* %2483, i64 0
	store %..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$4a9, i64 0, i32 0), i64 14}, %..string* %2486
	%2487 = getelementptr inbounds %Type_Info*, %Type_Info** %2482, i64 1
	%2488 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 73
	store %Type_Info* %2488, %Type_Info** %2487
	%2489 = getelementptr inbounds %..string, %..string* %2483, i64 1
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$4aa, i64 0, i32 0), i64 4}, %..string* %2489
	%2490 = getelementptr inbounds %Type_Info*, %Type_Info** %2482, i64 2
	%2491 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	store %Type_Info* %2491, %Type_Info** %2490
	%2492 = getelementptr inbounds %..string, %..string* %2483, i64 2
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$4ab, i64 0, i32 0), i64 4}, %..string* %2492
	%2493 = getelementptr inbounds %Type_Info*, %Type_Info** %2482, i64 3
	%2494 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	store %Type_Info* %2494, %Type_Info** %2493
	%2495 = getelementptr inbounds %..string, %..string* %2483, i64 3
	store %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$4ac, i64 0, i32 0), i64 9}, %..string* %2495
	%2496 = getelementptr inbounds %Type_Info*, %Type_Info** %2482, i64 4
	%2497 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 76
	store %Type_Info* %2497, %Type_Info** %2496
	%2498 = getelementptr inbounds %..string, %..string* %2483, i64 4
	store %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$4ad, i64 0, i32 0), i64 10}, %..string* %2498
	%2499 = getelementptr inbounds %Type_Info*, %Type_Info** %2482, i64 5
	%2500 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	store %Type_Info* %2500, %Type_Info** %2499
	%2501 = getelementptr inbounds %..string, %..string* %2483, i64 5
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$4ae, i64 0, i32 0), i64 8}, %..string* %2501
	%2502 = getelementptr inbounds %Type_Info*, %Type_Info** %2482, i64 6
	%2503 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 61
	store %Type_Info* %2503, %Type_Info** %2502
	%2504 = getelementptr inbounds %..string, %..string* %2483, i64 6
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$4af, i64 0, i32 0), i64 5}, %..string* %2504
	%2505 = getelementptr inbounds %Type_Info*, %Type_Info** %2482, i64 7
	%2506 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 81
	store %Type_Info* %2506, %Type_Info** %2505
	%2507 = getelementptr inbounds %..string, %..string* %2483, i64 7
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$4b0, i64 0, i32 0), i64 8}, %..string* %2507
	%2508 = getelementptr inbounds %Type_Info_Tuple, %Type_Info_Tuple* %2481, i64 0, i32 0
	%2509 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %2508, i64 0, i32 0
	store %Type_Info** %2482, %Type_Info*** %2509
	%2510 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %2508, i64 0, i32 1
	store i64 8, i64* %2510
	%2511 = getelementptr inbounds %Type_Info_Tuple, %Type_Info_Tuple* %2481, i64 0, i32 1
	%2512 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %2511, i64 0, i32 0
	store %..string* %2483, %..string** %2512
	%2513 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %2511, i64 0, i32 1
	store i64 8, i64* %2513
	%2514 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %2478, i64 0, i32 2 ; UnionTagPtr
	store i8 15, i8* %2514
	%2515 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 88
	%2516 = getelementptr inbounds %Type_Info, %Type_Info* %2515, i64 0, i32 2
	%2517 = getelementptr inbounds %Type_Info, %Type_Info* %2515, i64 0, i32 0
	store i64 8, i64* %2517
	%2518 = getelementptr inbounds %Type_Info, %Type_Info* %2515, i64 0, i32 1
	store i64 8, i64* %2518
	; TypeInfoTuple
	%2519 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %2516 to %Type_Info_Tuple*
	%2520 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 91
	%2521 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 55
	%2522 = getelementptr inbounds %Type_Info*, %Type_Info** %2520, i64 0
	%2523 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 76
	store %Type_Info* %2523, %Type_Info** %2522
	%2524 = getelementptr inbounds %Type_Info_Tuple, %Type_Info_Tuple* %2519, i64 0, i32 0
	%2525 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %2524, i64 0, i32 0
	store %Type_Info** %2520, %Type_Info*** %2525
	%2526 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %2524, i64 0, i32 1
	store i64 1, i64* %2526
	%2527 = getelementptr inbounds %Type_Info_Tuple, %Type_Info_Tuple* %2519, i64 0, i32 1
	%2528 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %2527, i64 0, i32 0
	store %..string* %2521, %..string** %2528
	%2529 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %2527, i64 0, i32 1
	store i64 1, i64* %2529
	%2530 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %2516, i64 0, i32 2 ; UnionTagPtr
	store i8 15, i8* %2530
	%2531 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 89
	%2532 = getelementptr inbounds %Type_Info, %Type_Info* %2531, i64 0, i32 2
	%2533 = getelementptr inbounds %Type_Info, %Type_Info* %2531, i64 0, i32 0
	store i64 16, i64* %2533
	%2534 = getelementptr inbounds %Type_Info, %Type_Info* %2531, i64 0, i32 1
	store i64 8, i64* %2534
	; TypeInfoNamed
	%2535 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %2532 to %Type_Info_Named*
	%2536 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 90
	%2537 = bitcast %Type_Info* %2536 to %Type_Info*
	%2538 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %2535, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$4b1, i64 0, i32 0), i64 9}, %..string* %2538
	%2539 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %2535, i64 0, i32 1
	store %Type_Info* %2537, %Type_Info** %2539
	%2540 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %2532, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %2540
	%2541 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 90
	%2542 = getelementptr inbounds %Type_Info, %Type_Info* %2541, i64 0, i32 2
	%2543 = getelementptr inbounds %Type_Info, %Type_Info* %2541, i64 0, i32 0
	store i64 16, i64* %2543
	%2544 = getelementptr inbounds %Type_Info, %Type_Info* %2541, i64 0, i32 1
	store i64 8, i64* %2544
	; TypeInfoStruct
	%2545 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %2542 to %Type_Info_Struct*
	%2546 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %2545, i64 0, i32 4
	store i1 false, i1* %2546
	%2547 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %2545, i64 0, i32 5
	store i1 true, i1* %2547
	%2548 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %2545, i64 0, i32 6
	store i1 false, i1* %2548
	%2549 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %2545, i64 0, i32 7
	store i1 false, i1* %2549
	%2550 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 92
	%2551 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 56
	%2552 = getelementptr inbounds [450 x i64], [450 x i64]* @__$type_info_offsets_data, i64 0, i32 47
	%2553 = getelementptr inbounds [450 x i1], [450 x i1]* @__$type_info_usings_data, i64 0, i32 47
	%2554 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 85
	%2555 = bitcast %Type_Info* %2554 to %Type_Info*
	%2556 = getelementptr inbounds %Type_Info*, %Type_Info** %2550, i64 0
	%2557 = getelementptr inbounds i64, i64* %2552, i64 0
	%2558 = getelementptr inbounds i1, i1* %2553, i64 0
	%2559 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 85
	store %Type_Info* %2559, %Type_Info** %2556
	%2560 = getelementptr inbounds %..string, %..string* %2551, i64 0
	store %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$4b2, i64 0, i32 0), i64 9}, %..string* %2560
	store i64 0, i64* %2557
	store i1 false, i1* %2558
	%2561 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 76
	%2562 = bitcast %Type_Info* %2561 to %Type_Info*
	%2563 = getelementptr inbounds %Type_Info*, %Type_Info** %2550, i64 1
	%2564 = getelementptr inbounds i64, i64* %2552, i64 1
	%2565 = getelementptr inbounds i1, i1* %2553, i64 1
	%2566 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 76
	store %Type_Info* %2566, %Type_Info** %2563
	%2567 = getelementptr inbounds %..string, %..string* %2551, i64 1
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$4b3, i64 0, i32 0), i64 4}, %..string* %2567
	store i64 8, i64* %2564
	store i1 false, i1* %2565
	%2568 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %2545, i64 0, i32 0
	%2569 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %2568, i64 0, i32 0
	store %Type_Info** %2550, %Type_Info*** %2569
	%2570 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %2568, i64 0, i32 1
	store i64 2, i64* %2570
	%2571 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %2545, i64 0, i32 1
	%2572 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %2571, i64 0, i32 0
	store %..string* %2551, %..string** %2572
	%2573 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %2571, i64 0, i32 1
	store i64 2, i64* %2573
	%2574 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %2545, i64 0, i32 2
	%2575 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %2574, i64 0, i32 0
	store i64* %2552, i64** %2575
	%2576 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %2574, i64 0, i32 1
	store i64 2, i64* %2576
	%2577 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %2545, i64 0, i32 3
	%2578 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %2577, i64 0, i32 0
	store i1* %2553, i1** %2578
	%2579 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %2577, i64 0, i32 1
	store i64 2, i64* %2579
	%2580 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %2542, i64 0, i32 2 ; UnionTagPtr
	store i8 16, i8* %2580
	%2581 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 91
	%2582 = getelementptr inbounds %Type_Info, %Type_Info* %2581, i64 0, i32 2
	%2583 = getelementptr inbounds %Type_Info, %Type_Info* %2581, i64 0, i32 0
	store i64 64, i64* %2583
	%2584 = getelementptr inbounds %Type_Info, %Type_Info* %2581, i64 0, i32 1
	store i64 8, i64* %2584
	; TypeInfoNamed
	%2585 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %2582 to %Type_Info_Named*
	%2586 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 92
	%2587 = bitcast %Type_Info* %2586 to %Type_Info*
	%2588 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %2585, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$4b4, i64 0, i32 0), i64 7}, %..string* %2588
	%2589 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %2585, i64 0, i32 1
	store %Type_Info* %2587, %Type_Info** %2589
	%2590 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %2582, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %2590
	%2591 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 92
	%2592 = getelementptr inbounds %Type_Info, %Type_Info* %2591, i64 0, i32 2
	%2593 = getelementptr inbounds %Type_Info, %Type_Info* %2591, i64 0, i32 0
	store i64 64, i64* %2593
	%2594 = getelementptr inbounds %Type_Info, %Type_Info* %2591, i64 0, i32 1
	store i64 8, i64* %2594
	; TypeInfoStruct
	%2595 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %2592 to %Type_Info_Struct*
	%2596 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %2595, i64 0, i32 4
	store i1 false, i1* %2596
	%2597 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %2595, i64 0, i32 5
	store i1 true, i1* %2597
	%2598 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %2595, i64 0, i32 6
	store i1 false, i1* %2598
	%2599 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %2595, i64 0, i32 7
	store i1 false, i1* %2599
	%2600 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 94
	%2601 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 58
	%2602 = getelementptr inbounds [450 x i64], [450 x i64]* @__$type_info_offsets_data, i64 0, i32 49
	%2603 = getelementptr inbounds [450 x i1], [450 x i1]* @__$type_info_usings_data, i64 0, i32 49
	%2604 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 89
	%2605 = bitcast %Type_Info* %2604 to %Type_Info*
	%2606 = getelementptr inbounds %Type_Info*, %Type_Info** %2600, i64 0
	%2607 = getelementptr inbounds i64, i64* %2602, i64 0
	%2608 = getelementptr inbounds i1, i1* %2603, i64 0
	%2609 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 89
	store %Type_Info* %2609, %Type_Info** %2606
	%2610 = getelementptr inbounds %..string, %..string* %2601, i64 0
	store %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$4b5, i64 0, i32 0), i64 9}, %..string* %2610
	store i64 0, i64* %2607
	store i1 false, i1* %2608
	%2611 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%2612 = bitcast %Type_Info* %2611 to %Type_Info*
	%2613 = getelementptr inbounds %Type_Info*, %Type_Info** %2600, i64 1
	%2614 = getelementptr inbounds i64, i64* %2602, i64 1
	%2615 = getelementptr inbounds i1, i1* %2603, i64 1
	%2616 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	store %Type_Info* %2616, %Type_Info** %2613
	%2617 = getelementptr inbounds %..string, %..string* %2601, i64 1
	store %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$4b6, i64 0, i32 0), i64 9}, %..string* %2617
	store i64 16, i64* %2614
	store i1 false, i1* %2615
	%2618 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 75
	%2619 = bitcast %Type_Info* %2618 to %Type_Info*
	%2620 = getelementptr inbounds %Type_Info*, %Type_Info** %2600, i64 2
	%2621 = getelementptr inbounds i64, i64* %2602, i64 2
	%2622 = getelementptr inbounds i1, i1* %2603, i64 2
	%2623 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 75
	store %Type_Info* %2623, %Type_Info** %2620
	%2624 = getelementptr inbounds %..string, %..string* %2601, i64 2
	store %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$4b7, i64 0, i32 0), i64 9}, %..string* %2624
	store i64 24, i64* %2621
	store i1 false, i1* %2622
	%2625 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%2626 = bitcast %Type_Info* %2625 to %Type_Info*
	%2627 = getelementptr inbounds %Type_Info*, %Type_Info** %2600, i64 3
	%2628 = getelementptr inbounds i64, i64* %2602, i64 3
	%2629 = getelementptr inbounds i1, i1* %2603, i64 3
	%2630 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	store %Type_Info* %2630, %Type_Info** %2627
	%2631 = getelementptr inbounds %..string, %..string* %2601, i64 3
	store %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$4b8, i64 0, i32 0), i64 10}, %..string* %2631
	store i64 40, i64* %2628
	store i1 false, i1* %2629
	%2632 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 75
	%2633 = bitcast %Type_Info* %2632 to %Type_Info*
	%2634 = getelementptr inbounds %Type_Info*, %Type_Info** %2600, i64 4
	%2635 = getelementptr inbounds i64, i64* %2602, i64 4
	%2636 = getelementptr inbounds i1, i1* %2603, i64 4
	%2637 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 75
	store %Type_Info* %2637, %Type_Info** %2634
	%2638 = getelementptr inbounds %..string, %..string* %2601, i64 4
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$4b9, i64 0, i32 0), i64 7}, %..string* %2638
	store i64 48, i64* %2635
	store i1 false, i1* %2636
	%2639 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %2595, i64 0, i32 0
	%2640 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %2639, i64 0, i32 0
	store %Type_Info** %2600, %Type_Info*** %2640
	%2641 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %2639, i64 0, i32 1
	store i64 5, i64* %2641
	%2642 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %2595, i64 0, i32 1
	%2643 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %2642, i64 0, i32 0
	store %..string* %2601, %..string** %2643
	%2644 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %2642, i64 0, i32 1
	store i64 5, i64* %2644
	%2645 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %2595, i64 0, i32 2
	%2646 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %2645, i64 0, i32 0
	store i64* %2602, i64** %2646
	%2647 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %2645, i64 0, i32 1
	store i64 5, i64* %2647
	%2648 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %2595, i64 0, i32 3
	%2649 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %2648, i64 0, i32 0
	store i1* %2603, i1** %2649
	%2650 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %2648, i64 0, i32 1
	store i64 5, i64* %2650
	%2651 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %2592, i64 0, i32 2 ; UnionTagPtr
	store i8 16, i8* %2651
	%2652 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 93
	%2653 = getelementptr inbounds %Type_Info, %Type_Info* %2652, i64 0, i32 2
	%2654 = getelementptr inbounds %Type_Info, %Type_Info* %2652, i64 0, i32 0
	store i64 32, i64* %2654
	%2655 = getelementptr inbounds %Type_Info, %Type_Info* %2652, i64 0, i32 1
	store i64 8, i64* %2655
	; TypeInfoNamed
	%2656 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %2653 to %Type_Info_Named*
	%2657 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 94
	%2658 = bitcast %Type_Info* %2657 to %Type_Info*
	%2659 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %2656, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$4ba, i64 0, i32 0), i64 9}, %..string* %2659
	%2660 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %2656, i64 0, i32 1
	store %Type_Info* %2658, %Type_Info** %2660
	%2661 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %2653, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %2661
	%2662 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 94
	%2663 = getelementptr inbounds %Type_Info, %Type_Info* %2662, i64 0, i32 2
	%2664 = getelementptr inbounds %Type_Info, %Type_Info* %2662, i64 0, i32 0
	store i64 32, i64* %2664
	%2665 = getelementptr inbounds %Type_Info, %Type_Info* %2662, i64 0, i32 1
	store i64 8, i64* %2665
	; TypeInfoStruct
	%2666 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %2663 to %Type_Info_Struct*
	%2667 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %2666, i64 0, i32 4
	store i1 false, i1* %2667
	%2668 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %2666, i64 0, i32 5
	store i1 true, i1* %2668
	%2669 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %2666, i64 0, i32 6
	store i1 false, i1* %2669
	%2670 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %2666, i64 0, i32 7
	store i1 false, i1* %2670
	%2671 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 99
	%2672 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 63
	%2673 = getelementptr inbounds [450 x i64], [450 x i64]* @__$type_info_offsets_data, i64 0, i32 54
	%2674 = getelementptr inbounds [450 x i1], [450 x i1]* @__$type_info_usings_data, i64 0, i32 54
	%2675 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 62
	%2676 = bitcast %Type_Info* %2675 to %Type_Info*
	%2677 = getelementptr inbounds %Type_Info*, %Type_Info** %2671, i64 0
	%2678 = getelementptr inbounds i64, i64* %2673, i64 0
	%2679 = getelementptr inbounds i1, i1* %2674, i64 0
	%2680 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 62
	store %Type_Info* %2680, %Type_Info** %2677
	%2681 = getelementptr inbounds %..string, %..string* %2672, i64 0
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$4bb, i64 0, i32 0), i64 4}, %..string* %2681
	store i64 0, i64* %2678
	store i1 false, i1* %2679
	%2682 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%2683 = bitcast %Type_Info* %2682 to %Type_Info*
	%2684 = getelementptr inbounds %Type_Info*, %Type_Info** %2671, i64 1
	%2685 = getelementptr inbounds i64, i64* %2673, i64 1
	%2686 = getelementptr inbounds i1, i1* %2674, i64 1
	%2687 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	store %Type_Info* %2687, %Type_Info** %2684
	%2688 = getelementptr inbounds %..string, %..string* %2672, i64 1
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$4bc, i64 0, i32 0), i64 3}, %..string* %2688
	store i64 16, i64* %2685
	store i1 false, i1* %2686
	%2689 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %2666, i64 0, i32 0
	%2690 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %2689, i64 0, i32 0
	store %Type_Info** %2671, %Type_Info*** %2690
	%2691 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %2689, i64 0, i32 1
	store i64 2, i64* %2691
	%2692 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %2666, i64 0, i32 1
	%2693 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %2692, i64 0, i32 0
	store %..string* %2672, %..string** %2693
	%2694 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %2692, i64 0, i32 1
	store i64 2, i64* %2694
	%2695 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %2666, i64 0, i32 2
	%2696 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %2695, i64 0, i32 0
	store i64* %2673, i64** %2696
	%2697 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %2695, i64 0, i32 1
	store i64 2, i64* %2697
	%2698 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %2666, i64 0, i32 3
	%2699 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %2698, i64 0, i32 0
	store i1* %2674, i1** %2699
	%2700 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %2698, i64 0, i32 1
	store i64 2, i64* %2700
	%2701 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %2663, i64 0, i32 2 ; UnionTagPtr
	store i8 16, i8* %2701
	%2702 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 95
	%2703 = getelementptr inbounds %Type_Info, %Type_Info* %2702, i64 0, i32 2
	%2704 = getelementptr inbounds %Type_Info, %Type_Info* %2702, i64 0, i32 0
	store i64 24, i64* %2704
	%2705 = getelementptr inbounds %Type_Info, %Type_Info* %2702, i64 0, i32 1
	store i64 8, i64* %2705
	; TypeInfoNamed
	%2706 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %2703 to %Type_Info_Named*
	%2707 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 96
	%2708 = bitcast %Type_Info* %2707 to %Type_Info*
	%2709 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %2706, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__str$4bd, i64 0, i32 0), i64 17}, %..string* %2709
	%2710 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %2706, i64 0, i32 1
	store %Type_Info* %2708, %Type_Info** %2710
	%2711 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %2703, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %2711
	%2712 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 96
	%2713 = getelementptr inbounds %Type_Info, %Type_Info* %2712, i64 0, i32 2
	%2714 = getelementptr inbounds %Type_Info, %Type_Info* %2712, i64 0, i32 0
	store i64 24, i64* %2714
	%2715 = getelementptr inbounds %Type_Info, %Type_Info* %2712, i64 0, i32 1
	store i64 8, i64* %2715
	; TypeInfoStruct
	%2716 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %2713 to %Type_Info_Struct*
	%2717 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %2716, i64 0, i32 4
	store i1 false, i1* %2717
	%2718 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %2716, i64 0, i32 5
	store i1 true, i1* %2718
	%2719 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %2716, i64 0, i32 6
	store i1 false, i1* %2719
	%2720 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %2716, i64 0, i32 7
	store i1 false, i1* %2720
	%2721 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 101
	%2722 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 65
	%2723 = getelementptr inbounds [450 x i64], [450 x i64]* @__$type_info_offsets_data, i64 0, i32 56
	%2724 = getelementptr inbounds [450 x i1], [450 x i1]* @__$type_info_usings_data, i64 0, i32 56
	%2725 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%2726 = bitcast %Type_Info* %2725 to %Type_Info*
	%2727 = getelementptr inbounds %Type_Info*, %Type_Info** %2721, i64 0
	%2728 = getelementptr inbounds i64, i64* %2723, i64 0
	%2729 = getelementptr inbounds i1, i1* %2724, i64 0
	%2730 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	store %Type_Info* %2730, %Type_Info** %2727
	%2731 = getelementptr inbounds %..string, %..string* %2722, i64 0
	store %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$4be, i64 0, i32 0), i64 10}, %..string* %2731
	store i64 0, i64* %2728
	store i1 false, i1* %2729
	%2732 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%2733 = bitcast %Type_Info* %2732 to %Type_Info*
	%2734 = getelementptr inbounds %Type_Info*, %Type_Info** %2721, i64 1
	%2735 = getelementptr inbounds i64, i64* %2723, i64 1
	%2736 = getelementptr inbounds i1, i1* %2724, i64 1
	%2737 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	store %Type_Info* %2737, %Type_Info** %2734
	%2738 = getelementptr inbounds %..string, %..string* %2722, i64 1
	store %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$4bf, i64 0, i32 0), i64 10}, %..string* %2738
	store i64 8, i64* %2735
	store i1 false, i1* %2736
	%2739 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%2740 = bitcast %Type_Info* %2739 to %Type_Info*
	%2741 = getelementptr inbounds %Type_Info*, %Type_Info** %2721, i64 2
	%2742 = getelementptr inbounds i64, i64* %2723, i64 2
	%2743 = getelementptr inbounds i1, i1* %2724, i64 2
	%2744 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	store %Type_Info* %2744, %Type_Info** %2741
	%2745 = getelementptr inbounds %..string, %..string* %2722, i64 2
	store %..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$4c0, i64 0, i32 0), i64 11}, %..string* %2745
	store i64 16, i64* %2742
	store i1 false, i1* %2743
	%2746 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %2716, i64 0, i32 0
	%2747 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %2746, i64 0, i32 0
	store %Type_Info** %2721, %Type_Info*** %2747
	%2748 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %2746, i64 0, i32 1
	store i64 3, i64* %2748
	%2749 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %2716, i64 0, i32 1
	%2750 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %2749, i64 0, i32 0
	store %..string* %2722, %..string** %2750
	%2751 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %2749, i64 0, i32 1
	store i64 3, i64* %2751
	%2752 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %2716, i64 0, i32 2
	%2753 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %2752, i64 0, i32 0
	store i64* %2723, i64** %2753
	%2754 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %2752, i64 0, i32 1
	store i64 3, i64* %2754
	%2755 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %2716, i64 0, i32 3
	%2756 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %2755, i64 0, i32 0
	store i1* %2724, i1** %2756
	%2757 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %2755, i64 0, i32 1
	store i64 3, i64* %2757
	%2758 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %2713, i64 0, i32 2 ; UnionTagPtr
	store i8 16, i8* %2758
	%2759 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 97
	%2760 = getelementptr inbounds %Type_Info, %Type_Info* %2759, i64 0, i32 2
	%2761 = getelementptr inbounds %Type_Info, %Type_Info* %2759, i64 0, i32 0
	store i64 40, i64* %2761
	%2762 = getelementptr inbounds %Type_Info, %Type_Info* %2759, i64 0, i32 1
	store i64 8, i64* %2762
	; TypeInfoNamed
	%2763 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %2760 to %Type_Info_Named*
	%2764 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 98
	%2765 = bitcast %Type_Info* %2764 to %Type_Info*
	%2766 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %2763, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__str$4c1, i64 0, i32 0), i64 18}, %..string* %2766
	%2767 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %2763, i64 0, i32 1
	store %Type_Info* %2765, %Type_Info** %2767
	%2768 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %2760, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %2768
	%2769 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 98
	%2770 = getelementptr inbounds %Type_Info, %Type_Info* %2769, i64 0, i32 2
	%2771 = getelementptr inbounds %Type_Info, %Type_Info* %2769, i64 0, i32 0
	store i64 40, i64* %2771
	%2772 = getelementptr inbounds %Type_Info, %Type_Info* %2769, i64 0, i32 1
	store i64 8, i64* %2772
	; TypeInfoStruct
	%2773 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %2770 to %Type_Info_Struct*
	%2774 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %2773, i64 0, i32 4
	store i1 false, i1* %2774
	%2775 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %2773, i64 0, i32 5
	store i1 true, i1* %2775
	%2776 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %2773, i64 0, i32 6
	store i1 false, i1* %2776
	%2777 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %2773, i64 0, i32 7
	store i1 false, i1* %2777
	%2778 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 104
	%2779 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 68
	%2780 = getelementptr inbounds [450 x i64], [450 x i64]* @__$type_info_offsets_data, i64 0, i32 59
	%2781 = getelementptr inbounds [450 x i1], [450 x i1]* @__$type_info_usings_data, i64 0, i32 59
	%2782 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 93
	%2783 = bitcast %Type_Info* %2782 to %Type_Info*
	%2784 = getelementptr inbounds %Type_Info*, %Type_Info** %2778, i64 0
	%2785 = getelementptr inbounds i64, i64* %2780, i64 0
	%2786 = getelementptr inbounds i1, i1* %2781, i64 0
	%2787 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 93
	store %Type_Info* %2787, %Type_Info** %2784
	%2788 = getelementptr inbounds %..string, %..string* %2779, i64 0
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$4c2, i64 0, i32 0), i64 3}, %..string* %2788
	store i64 0, i64* %2785
	store i1 false, i1* %2786
	%2789 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%2790 = bitcast %Type_Info* %2789 to %Type_Info*
	%2791 = getelementptr inbounds %Type_Info*, %Type_Info** %2778, i64 1
	%2792 = getelementptr inbounds i64, i64* %2780, i64 1
	%2793 = getelementptr inbounds i1, i1* %2781, i64 1
	%2794 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	store %Type_Info* %2794, %Type_Info** %2791
	%2795 = getelementptr inbounds %..string, %..string* %2779, i64 1
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$4c3, i64 0, i32 0), i64 4}, %..string* %2795
	store i64 32, i64* %2792
	store i1 false, i1* %2793
	%2796 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %2773, i64 0, i32 0
	%2797 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %2796, i64 0, i32 0
	store %Type_Info** %2778, %Type_Info*** %2797
	%2798 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %2796, i64 0, i32 1
	store i64 2, i64* %2798
	%2799 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %2773, i64 0, i32 1
	%2800 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %2799, i64 0, i32 0
	store %..string* %2779, %..string** %2800
	%2801 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %2799, i64 0, i32 1
	store i64 2, i64* %2801
	%2802 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %2773, i64 0, i32 2
	%2803 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %2802, i64 0, i32 0
	store i64* %2780, i64** %2803
	%2804 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %2802, i64 0, i32 1
	store i64 2, i64* %2804
	%2805 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %2773, i64 0, i32 3
	%2806 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %2805, i64 0, i32 0
	store i1* %2781, i1** %2806
	%2807 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %2805, i64 0, i32 1
	store i64 2, i64* %2807
	%2808 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %2770, i64 0, i32 2 ; UnionTagPtr
	store i8 16, i8* %2808
	%2809 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 99
	%2810 = getelementptr inbounds %Type_Info, %Type_Info* %2809, i64 0, i32 2
	%2811 = getelementptr inbounds %Type_Info, %Type_Info* %2809, i64 0, i32 0
	store i64 48, i64* %2811
	%2812 = getelementptr inbounds %Type_Info, %Type_Info* %2809, i64 0, i32 1
	store i64 8, i64* %2812
	; TypeInfoNamed
	%2813 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %2810 to %Type_Info_Named*
	%2814 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 100
	%2815 = bitcast %Type_Info* %2814 to %Type_Info*
	%2816 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %2813, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$4c4, i64 0, i32 0), i64 12}, %..string* %2816
	%2817 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %2813, i64 0, i32 1
	store %Type_Info* %2815, %Type_Info** %2817
	%2818 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %2810, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %2818
	%2819 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 100
	%2820 = getelementptr inbounds %Type_Info, %Type_Info* %2819, i64 0, i32 2
	%2821 = getelementptr inbounds %Type_Info, %Type_Info* %2819, i64 0, i32 0
	store i64 48, i64* %2821
	%2822 = getelementptr inbounds %Type_Info, %Type_Info* %2819, i64 0, i32 1
	store i64 8, i64* %2822
	; TypeInfoStruct
	%2823 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %2820 to %Type_Info_Struct*
	%2824 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %2823, i64 0, i32 4
	store i1 false, i1* %2824
	%2825 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %2823, i64 0, i32 5
	store i1 true, i1* %2825
	%2826 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %2823, i64 0, i32 6
	store i1 false, i1* %2826
	%2827 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %2823, i64 0, i32 7
	store i1 false, i1* %2827
	%2828 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 106
	%2829 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 70
	%2830 = getelementptr inbounds [450 x i64], [450 x i64]* @__$type_info_offsets_data, i64 0, i32 61
	%2831 = getelementptr inbounds [450 x i1], [450 x i1]* @__$type_info_usings_data, i64 0, i32 61
	%2832 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 101
	%2833 = bitcast %Type_Info* %2832 to %Type_Info*
	%2834 = getelementptr inbounds %Type_Info*, %Type_Info** %2828, i64 0
	%2835 = getelementptr inbounds i64, i64* %2830, i64 0
	%2836 = getelementptr inbounds i1, i1* %2831, i64 0
	%2837 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 101
	store %Type_Info* %2837, %Type_Info** %2834
	%2838 = getelementptr inbounds %..string, %..string* %2829, i64 0
	store %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$4c5, i64 0, i32 0), i64 1}, %..string* %2838
	store i64 0, i64* %2835
	store i1 false, i1* %2836
	%2839 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 13
	%2840 = bitcast %Type_Info* %2839 to %Type_Info*
	%2841 = getelementptr inbounds %Type_Info*, %Type_Info** %2828, i64 1
	%2842 = getelementptr inbounds i64, i64* %2830, i64 1
	%2843 = getelementptr inbounds i1, i1* %2831, i64 1
	%2844 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 13
	store %Type_Info* %2844, %Type_Info** %2841
	%2845 = getelementptr inbounds %..string, %..string* %2829, i64 1
	store %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$4c6, i64 0, i32 0), i64 13}, %..string* %2845
	store i64 8, i64* %2842
	store i1 false, i1* %2843
	%2846 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%2847 = bitcast %Type_Info* %2846 to %Type_Info*
	%2848 = getelementptr inbounds %Type_Info*, %Type_Info** %2828, i64 2
	%2849 = getelementptr inbounds i64, i64* %2830, i64 2
	%2850 = getelementptr inbounds i1, i1* %2831, i64 2
	%2851 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	store %Type_Info* %2851, %Type_Info** %2848
	%2852 = getelementptr inbounds %..string, %..string* %2829, i64 2
	store %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$4c7, i64 0, i32 0), i64 10}, %..string* %2852
	store i64 16, i64* %2849
	store i1 false, i1* %2850
	%2853 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%2854 = bitcast %Type_Info* %2853 to %Type_Info*
	%2855 = getelementptr inbounds %Type_Info*, %Type_Info** %2828, i64 3
	%2856 = getelementptr inbounds i64, i64* %2830, i64 3
	%2857 = getelementptr inbounds i1, i1* %2831, i64 3
	%2858 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	store %Type_Info* %2858, %Type_Info** %2855
	%2859 = getelementptr inbounds %..string, %..string* %2829, i64 3
	store %..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$4c8, i64 0, i32 0), i64 11}, %..string* %2859
	store i64 24, i64* %2856
	store i1 false, i1* %2857
	%2860 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 42
	%2861 = bitcast %Type_Info* %2860 to %Type_Info*
	%2862 = getelementptr inbounds %Type_Info*, %Type_Info** %2828, i64 4
	%2863 = getelementptr inbounds i64, i64* %2830, i64 4
	%2864 = getelementptr inbounds i1, i1* %2831, i64 4
	%2865 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 42
	store %Type_Info* %2865, %Type_Info** %2862
	%2866 = getelementptr inbounds %..string, %..string* %2829, i64 4
	store %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$4c9, i64 0, i32 0), i64 12}, %..string* %2866
	store i64 32, i64* %2863
	store i1 false, i1* %2864
	%2867 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%2868 = bitcast %Type_Info* %2867 to %Type_Info*
	%2869 = getelementptr inbounds %Type_Info*, %Type_Info** %2828, i64 5
	%2870 = getelementptr inbounds i64, i64* %2830, i64 5
	%2871 = getelementptr inbounds i1, i1* %2831, i64 5
	%2872 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	store %Type_Info* %2872, %Type_Info** %2869
	%2873 = getelementptr inbounds %..string, %..string* %2829, i64 5
	store %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$4ca, i64 0, i32 0), i64 10}, %..string* %2873
	store i64 40, i64* %2870
	store i1 false, i1* %2871
	%2874 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %2823, i64 0, i32 0
	%2875 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %2874, i64 0, i32 0
	store %Type_Info** %2828, %Type_Info*** %2875
	%2876 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %2874, i64 0, i32 1
	store i64 6, i64* %2876
	%2877 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %2823, i64 0, i32 1
	%2878 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %2877, i64 0, i32 0
	store %..string* %2829, %..string** %2878
	%2879 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %2877, i64 0, i32 1
	store i64 6, i64* %2879
	%2880 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %2823, i64 0, i32 2
	%2881 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %2880, i64 0, i32 0
	store i64* %2830, i64** %2881
	%2882 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %2880, i64 0, i32 1
	store i64 6, i64* %2882
	%2883 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %2823, i64 0, i32 3
	%2884 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %2883, i64 0, i32 0
	store i1* %2831, i1** %2884
	%2885 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %2883, i64 0, i32 1
	store i64 6, i64* %2885
	%2886 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %2820, i64 0, i32 2 ; UnionTagPtr
	store i8 16, i8* %2886
	%2887 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 101
	%2888 = getelementptr inbounds %Type_Info, %Type_Info* %2887, i64 0, i32 2
	%2889 = getelementptr inbounds %Type_Info, %Type_Info* %2887, i64 0, i32 0
	store i64 8, i64* %2889
	%2890 = getelementptr inbounds %Type_Info, %Type_Info* %2887, i64 0, i32 1
	store i64 8, i64* %2890
	; TypeInfoPointer
	%2891 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %2888 to %Type_Info_Pointer*
	%2892 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 102
	%2893 = bitcast %Type_Info* %2892 to %Type_Info*
	%2894 = getelementptr inbounds %Type_Info_Pointer, %Type_Info_Pointer* %2891, i64 0, i32 0
	store %Type_Info* %2893, %Type_Info** %2894
	%2895 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %2888, i64 0, i32 2 ; UnionTagPtr
	store i8 9, i8* %2895
	%2896 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 102
	%2897 = getelementptr inbounds %Type_Info, %Type_Info* %2896, i64 0, i32 2
	%2898 = getelementptr inbounds %Type_Info, %Type_Info* %2896, i64 0, i32 0
	store i64 80, i64* %2898
	%2899 = getelementptr inbounds %Type_Info, %Type_Info* %2896, i64 0, i32 1
	store i64 8, i64* %2899
	; TypeInfoNamed
	%2900 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %2897 to %Type_Info_Named*
	%2901 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 103
	%2902 = bitcast %Type_Info* %2901 to %Type_Info*
	%2903 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %2900, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$4cb, i64 0, i32 0), i64 3}, %..string* %2903
	%2904 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %2900, i64 0, i32 1
	store %Type_Info* %2902, %Type_Info** %2904
	%2905 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %2897, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %2905
	%2906 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 103
	%2907 = getelementptr inbounds %Type_Info, %Type_Info* %2906, i64 0, i32 2
	%2908 = getelementptr inbounds %Type_Info, %Type_Info* %2906, i64 0, i32 0
	store i64 80, i64* %2908
	%2909 = getelementptr inbounds %Type_Info, %Type_Info* %2906, i64 0, i32 1
	store i64 8, i64* %2909
	; TypeInfoStruct
	%2910 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %2907 to %Type_Info_Struct*
	%2911 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %2910, i64 0, i32 4
	store i1 false, i1* %2911
	%2912 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %2910, i64 0, i32 5
	store i1 true, i1* %2912
	%2913 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %2910, i64 0, i32 6
	store i1 false, i1* %2913
	%2914 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %2910, i64 0, i32 7
	store i1 false, i1* %2914
	%2915 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 112
	%2916 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 76
	%2917 = getelementptr inbounds [450 x i64], [450 x i64]* @__$type_info_offsets_data, i64 0, i32 67
	%2918 = getelementptr inbounds [450 x i1], [450 x i1]* @__$type_info_usings_data, i64 0, i32 67
	%2919 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 104
	%2920 = bitcast %Type_Info* %2919 to %Type_Info*
	%2921 = getelementptr inbounds %Type_Info*, %Type_Info** %2915, i64 0
	%2922 = getelementptr inbounds i64, i64* %2917, i64 0
	%2923 = getelementptr inbounds i1, i1* %2918, i64 0
	%2924 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 104
	store %Type_Info* %2924, %Type_Info** %2921
	%2925 = getelementptr inbounds %..string, %..string* %2916, i64 0
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$4cc, i64 0, i32 0), i64 6}, %..string* %2925
	store i64 0, i64* %2922
	store i1 false, i1* %2923
	%2926 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 106
	%2927 = bitcast %Type_Info* %2926 to %Type_Info*
	%2928 = getelementptr inbounds %Type_Info*, %Type_Info** %2915, i64 1
	%2929 = getelementptr inbounds i64, i64* %2917, i64 1
	%2930 = getelementptr inbounds i1, i1* %2918, i64 1
	%2931 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 106
	store %Type_Info* %2931, %Type_Info** %2928
	%2932 = getelementptr inbounds %..string, %..string* %2916, i64 1
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$4cd, i64 0, i32 0), i64 7}, %..string* %2932
	store i64 40, i64* %2929
	store i1 false, i1* %2930
	%2933 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %2910, i64 0, i32 0
	%2934 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %2933, i64 0, i32 0
	store %Type_Info** %2915, %Type_Info*** %2934
	%2935 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %2933, i64 0, i32 1
	store i64 2, i64* %2935
	%2936 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %2910, i64 0, i32 1
	%2937 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %2936, i64 0, i32 0
	store %..string* %2916, %..string** %2937
	%2938 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %2936, i64 0, i32 1
	store i64 2, i64* %2938
	%2939 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %2910, i64 0, i32 2
	%2940 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %2939, i64 0, i32 0
	store i64* %2917, i64** %2940
	%2941 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %2939, i64 0, i32 1
	store i64 2, i64* %2941
	%2942 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %2910, i64 0, i32 3
	%2943 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %2942, i64 0, i32 0
	store i1* %2918, i1** %2943
	%2944 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %2942, i64 0, i32 1
	store i64 2, i64* %2944
	%2945 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %2907, i64 0, i32 2 ; UnionTagPtr
	store i8 16, i8* %2945
	%2946 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 104
	%2947 = getelementptr inbounds %Type_Info, %Type_Info* %2946, i64 0, i32 2
	%2948 = getelementptr inbounds %Type_Info, %Type_Info* %2946, i64 0, i32 0
	store i64 40, i64* %2948
	%2949 = getelementptr inbounds %Type_Info, %Type_Info* %2946, i64 0, i32 1
	store i64 8, i64* %2949
	; TypeInfoDynamicArray
	%2950 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %2947 to %Type_Info_Dynamic_Array*
	%2951 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%2952 = bitcast %Type_Info* %2951 to %Type_Info*
	%2953 = getelementptr inbounds %Type_Info_Dynamic_Array, %Type_Info_Dynamic_Array* %2950, i64 0, i32 0
	store %Type_Info* %2952, %Type_Info** %2953
	%2954 = getelementptr inbounds %Type_Info_Dynamic_Array, %Type_Info_Dynamic_Array* %2950, i64 0, i32 1
	store i64 8, i64* %2954
	%2955 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %2947, i64 0, i32 2 ; UnionTagPtr
	store i8 12, i8* %2955
	%2956 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 105
	%2957 = getelementptr inbounds %Type_Info, %Type_Info* %2956, i64 0, i32 2
	%2958 = getelementptr inbounds %Type_Info, %Type_Info* %2956, i64 0, i32 0
	store i64 8, i64* %2958
	%2959 = getelementptr inbounds %Type_Info, %Type_Info* %2956, i64 0, i32 1
	store i64 8, i64* %2959
	; TypeInfoPointer
	%2960 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %2957 to %Type_Info_Pointer*
	%2961 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%2962 = bitcast %Type_Info* %2961 to %Type_Info*
	%2963 = getelementptr inbounds %Type_Info_Pointer, %Type_Info_Pointer* %2960, i64 0, i32 0
	store %Type_Info* %2962, %Type_Info** %2963
	%2964 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %2957, i64 0, i32 2 ; UnionTagPtr
	store i8 9, i8* %2964
	%2965 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 106
	%2966 = getelementptr inbounds %Type_Info, %Type_Info* %2965, i64 0, i32 2
	%2967 = getelementptr inbounds %Type_Info, %Type_Info* %2965, i64 0, i32 0
	store i64 40, i64* %2967
	%2968 = getelementptr inbounds %Type_Info, %Type_Info* %2965, i64 0, i32 1
	store i64 8, i64* %2968
	; TypeInfoNamed
	%2969 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %2966 to %Type_Info_Named*
	%2970 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 107
	%2971 = bitcast %Type_Info* %2970 to %Type_Info*
	%2972 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %2969, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$4ce, i64 0, i32 0), i64 13}, %..string* %2972
	%2973 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %2969, i64 0, i32 1
	store %Type_Info* %2971, %Type_Info** %2973
	%2974 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %2966, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %2974
	%2975 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 107
	%2976 = getelementptr inbounds %Type_Info, %Type_Info* %2975, i64 0, i32 2
	%2977 = getelementptr inbounds %Type_Info, %Type_Info* %2975, i64 0, i32 0
	store i64 40, i64* %2977
	%2978 = getelementptr inbounds %Type_Info, %Type_Info* %2975, i64 0, i32 1
	store i64 8, i64* %2978
	; TypeInfoStruct
	%2979 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %2976 to %Type_Info_Struct*
	%2980 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %2979, i64 0, i32 4
	store i1 false, i1* %2980
	%2981 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %2979, i64 0, i32 5
	store i1 true, i1* %2981
	%2982 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %2979, i64 0, i32 6
	store i1 false, i1* %2982
	%2983 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %2979, i64 0, i32 7
	store i1 false, i1* %2983
	%2984 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 114
	%2985 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 78
	%2986 = getelementptr inbounds [450 x i64], [450 x i64]* @__$type_info_offsets_data, i64 0, i32 69
	%2987 = getelementptr inbounds [450 x i1], [450 x i1]* @__$type_info_usings_data, i64 0, i32 69
	%2988 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 76
	%2989 = bitcast %Type_Info* %2988 to %Type_Info*
	%2990 = getelementptr inbounds %Type_Info*, %Type_Info** %2984, i64 0
	%2991 = getelementptr inbounds i64, i64* %2986, i64 0
	%2992 = getelementptr inbounds i1, i1* %2987, i64 0
	%2993 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 76
	store %Type_Info* %2993, %Type_Info** %2990
	%2994 = getelementptr inbounds %..string, %..string* %2985, i64 0
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$4cf, i64 0, i32 0), i64 4}, %..string* %2994
	store i64 0, i64* %2991
	store i1 false, i1* %2992
	%2995 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%2996 = bitcast %Type_Info* %2995 to %Type_Info*
	%2997 = getelementptr inbounds %Type_Info*, %Type_Info** %2984, i64 1
	%2998 = getelementptr inbounds i64, i64* %2986, i64 1
	%2999 = getelementptr inbounds i1, i1* %2987, i64 1
	%3000 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	store %Type_Info* %3000, %Type_Info** %2997
	%3001 = getelementptr inbounds %..string, %..string* %2985, i64 1
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$4d0, i64 0, i32 0), i64 3}, %..string* %3001
	store i64 8, i64* %2998
	store i1 false, i1* %2999
	%3002 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%3003 = bitcast %Type_Info* %3002 to %Type_Info*
	%3004 = getelementptr inbounds %Type_Info*, %Type_Info** %2984, i64 2
	%3005 = getelementptr inbounds i64, i64* %2986, i64 2
	%3006 = getelementptr inbounds i1, i1* %2987, i64 2
	%3007 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	store %Type_Info* %3007, %Type_Info** %3004
	%3008 = getelementptr inbounds %..string, %..string* %2985, i64 2
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$4d1, i64 0, i32 0), i64 3}, %..string* %3008
	store i64 16, i64* %3005
	store i1 false, i1* %3006
	%3009 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 89
	%3010 = bitcast %Type_Info* %3009 to %Type_Info*
	%3011 = getelementptr inbounds %Type_Info*, %Type_Info** %2984, i64 3
	%3012 = getelementptr inbounds i64, i64* %2986, i64 3
	%3013 = getelementptr inbounds i1, i1* %2987, i64 3
	%3014 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 89
	store %Type_Info* %3014, %Type_Info** %3011
	%3015 = getelementptr inbounds %..string, %..string* %2985, i64 3
	store %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$4d2, i64 0, i32 0), i64 9}, %..string* %3015
	store i64 24, i64* %3012
	store i1 false, i1* %3013
	%3016 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %2979, i64 0, i32 0
	%3017 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %3016, i64 0, i32 0
	store %Type_Info** %2984, %Type_Info*** %3017
	%3018 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %3016, i64 0, i32 1
	store i64 4, i64* %3018
	%3019 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %2979, i64 0, i32 1
	%3020 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %3019, i64 0, i32 0
	store %..string* %2985, %..string** %3020
	%3021 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %3019, i64 0, i32 1
	store i64 4, i64* %3021
	%3022 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %2979, i64 0, i32 2
	%3023 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %3022, i64 0, i32 0
	store i64* %2986, i64** %3023
	%3024 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %3022, i64 0, i32 1
	store i64 4, i64* %3024
	%3025 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %2979, i64 0, i32 3
	%3026 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %3025, i64 0, i32 0
	store i1* %2987, i1** %3026
	%3027 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %3025, i64 0, i32 1
	store i64 4, i64* %3027
	%3028 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %2976, i64 0, i32 2 ; UnionTagPtr
	store i8 16, i8* %3028
	%3029 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 108
	%3030 = getelementptr inbounds %Type_Info, %Type_Info* %3029, i64 0, i32 2
	%3031 = getelementptr inbounds %Type_Info, %Type_Info* %3029, i64 0, i32 0
	store i64 32, i64* %3031
	%3032 = getelementptr inbounds %Type_Info, %Type_Info* %3029, i64 0, i32 1
	store i64 8, i64* %3032
	; TypeInfoNamed
	%3033 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %3030 to %Type_Info_Named*
	%3034 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 109
	%3035 = bitcast %Type_Info* %3034 to %Type_Info*
	%3036 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %3033, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$4d3, i64 0, i32 0), i64 6}, %..string* %3036
	%3037 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %3033, i64 0, i32 1
	store %Type_Info* %3035, %Type_Info** %3037
	%3038 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %3030, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %3038
	%3039 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 109
	%3040 = getelementptr inbounds %Type_Info, %Type_Info* %3039, i64 0, i32 2
	%3041 = getelementptr inbounds %Type_Info, %Type_Info* %3039, i64 0, i32 0
	store i64 32, i64* %3041
	%3042 = getelementptr inbounds %Type_Info, %Type_Info* %3039, i64 0, i32 1
	store i64 8, i64* %3042
	; TypeInfoStruct
	%3043 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %3040 to %Type_Info_Struct*
	%3044 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %3043, i64 0, i32 4
	store i1 false, i1* %3044
	%3045 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %3043, i64 0, i32 5
	store i1 false, i1* %3045
	%3046 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %3043, i64 0, i32 6
	store i1 false, i1* %3046
	%3047 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %3043, i64 0, i32 7
	store i1 false, i1* %3047
	%3048 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 118
	%3049 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 82
	%3050 = getelementptr inbounds [450 x i64], [450 x i64]* @__$type_info_offsets_data, i64 0, i32 73
	%3051 = getelementptr inbounds [450 x i1], [450 x i1]* @__$type_info_usings_data, i64 0, i32 73
	%3052 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 110
	%3053 = bitcast %Type_Info* %3052 to %Type_Info*
	%3054 = getelementptr inbounds %Type_Info*, %Type_Info** %3048, i64 0
	%3055 = getelementptr inbounds i64, i64* %3050, i64 0
	%3056 = getelementptr inbounds i1, i1* %3051, i64 0
	%3057 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 110
	store %Type_Info* %3057, %Type_Info** %3054
	%3058 = getelementptr inbounds %..string, %..string* %3049, i64 0
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$4d4, i64 0, i32 0), i64 8}, %..string* %3058
	store i64 0, i64* %3055
	store i1 false, i1* %3056
	%3059 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 110
	%3060 = bitcast %Type_Info* %3059 to %Type_Info*
	%3061 = getelementptr inbounds %Type_Info*, %Type_Info** %3048, i64 1
	%3062 = getelementptr inbounds i64, i64* %3050, i64 1
	%3063 = getelementptr inbounds i1, i1* %3051, i64 1
	%3064 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 110
	store %Type_Info* %3064, %Type_Info** %3061
	%3065 = getelementptr inbounds %..string, %..string* %3049, i64 1
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$4d5, i64 0, i32 0), i64 5}, %..string* %3065
	store i64 8, i64* %3062
	store i1 false, i1* %3063
	%3066 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 112
	%3067 = bitcast %Type_Info* %3066 to %Type_Info*
	%3068 = getelementptr inbounds %Type_Info*, %Type_Info** %3048, i64 2
	%3069 = getelementptr inbounds i64, i64* %3050, i64 2
	%3070 = getelementptr inbounds i1, i1* %3051, i64 2
	%3071 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 112
	store %Type_Info* %3071, %Type_Info** %3068
	%3072 = getelementptr inbounds %..string, %..string* %3049, i64 2
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$4d6, i64 0, i32 0), i64 6}, %..string* %3072
	store i64 16, i64* %3069
	store i1 false, i1* %3070
	%3073 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %3043, i64 0, i32 0
	%3074 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %3073, i64 0, i32 0
	store %Type_Info** %3048, %Type_Info*** %3074
	%3075 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %3073, i64 0, i32 1
	store i64 3, i64* %3075
	%3076 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %3043, i64 0, i32 1
	%3077 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %3076, i64 0, i32 0
	store %..string* %3049, %..string** %3077
	%3078 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %3076, i64 0, i32 1
	store i64 3, i64* %3078
	%3079 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %3043, i64 0, i32 2
	%3080 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %3079, i64 0, i32 0
	store i64* %3050, i64** %3080
	%3081 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %3079, i64 0, i32 1
	store i64 3, i64* %3081
	%3082 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %3043, i64 0, i32 3
	%3083 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %3082, i64 0, i32 0
	store i1* %3051, i1** %3083
	%3084 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %3082, i64 0, i32 1
	store i64 3, i64* %3084
	%3085 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %3040, i64 0, i32 2 ; UnionTagPtr
	store i8 16, i8* %3085
	%3086 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 110
	%3087 = getelementptr inbounds %Type_Info, %Type_Info* %3086, i64 0, i32 2
	%3088 = getelementptr inbounds %Type_Info, %Type_Info* %3086, i64 0, i32 0
	store i64 8, i64* %3088
	%3089 = getelementptr inbounds %Type_Info, %Type_Info* %3086, i64 0, i32 1
	store i64 8, i64* %3089
	; TypeInfoNamed
	%3090 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %3087 to %Type_Info_Named*
	%3091 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 111
	%3092 = bitcast %Type_Info* %3091 to %Type_Info*
	%3093 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %3090, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$4d7, i64 0, i32 0), i64 7}, %..string* %3093
	%3094 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %3090, i64 0, i32 1
	store %Type_Info* %3092, %Type_Info** %3094
	%3095 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %3087, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %3095
	%3096 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 111
	%3097 = getelementptr inbounds %Type_Info, %Type_Info* %3096, i64 0, i32 2
	%3098 = getelementptr inbounds %Type_Info, %Type_Info* %3096, i64 0, i32 0
	store i64 8, i64* %3098
	%3099 = getelementptr inbounds %Type_Info, %Type_Info* %3096, i64 0, i32 1
	store i64 8, i64* %3099
	; TypeInfoVector
	%3100 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %3097 to %Type_Info_Vector*
	%3101 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 64
	%3102 = bitcast %Type_Info* %3101 to %Type_Info*
	%3103 = getelementptr inbounds %Type_Info_Vector, %Type_Info_Vector* %3100, i64 0, i32 0
	store %Type_Info* %3102, %Type_Info** %3103
	%3104 = getelementptr inbounds %Type_Info_Vector, %Type_Info_Vector* %3100, i64 0, i32 1
	store i64 4, i64* %3104
	%3105 = getelementptr inbounds %Type_Info_Vector, %Type_Info_Vector* %3100, i64 0, i32 2
	store i64 2, i64* %3105
	%3106 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %3097, i64 0, i32 2 ; UnionTagPtr
	store i8 14, i8* %3106
	%3107 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 112
	%3108 = getelementptr inbounds %Type_Info, %Type_Info* %3107, i64 0, i32 2
	%3109 = getelementptr inbounds %Type_Info, %Type_Info* %3107, i64 0, i32 0
	store i64 12, i64* %3109
	%3110 = getelementptr inbounds %Type_Info, %Type_Info* %3107, i64 0, i32 1
	store i64 4, i64* %3110
	; TypeInfoNamed
	%3111 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %3108 to %Type_Info_Named*
	%3112 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 113
	%3113 = bitcast %Type_Info* %3112 to %Type_Info*
	%3114 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %3111, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$4d8, i64 0, i32 0), i64 6}, %..string* %3114
	%3115 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %3111, i64 0, i32 1
	store %Type_Info* %3113, %Type_Info** %3115
	%3116 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %3108, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %3116
	%3117 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 113
	%3118 = getelementptr inbounds %Type_Info, %Type_Info* %3117, i64 0, i32 2
	%3119 = getelementptr inbounds %Type_Info, %Type_Info* %3117, i64 0, i32 0
	store i64 12, i64* %3119
	%3120 = getelementptr inbounds %Type_Info, %Type_Info* %3117, i64 0, i32 1
	store i64 4, i64* %3120
	; TypeInfoStruct
	%3121 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %3118 to %Type_Info_Struct*
	%3122 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %3121, i64 0, i32 4
	store i1 false, i1* %3122
	%3123 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %3121, i64 0, i32 5
	store i1 false, i1* %3123
	%3124 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %3121, i64 0, i32 6
	store i1 false, i1* %3124
	%3125 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %3121, i64 0, i32 7
	store i1 false, i1* %3125
	%3126 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 121
	%3127 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 85
	%3128 = getelementptr inbounds [450 x i64], [450 x i64]* @__$type_info_offsets_data, i64 0, i32 76
	%3129 = getelementptr inbounds [450 x i1], [450 x i1]* @__$type_info_usings_data, i64 0, i32 76
	%3130 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	%3131 = bitcast %Type_Info* %3130 to %Type_Info*
	%3132 = getelementptr inbounds %Type_Info*, %Type_Info** %3126, i64 0
	%3133 = getelementptr inbounds i64, i64* %3128, i64 0
	%3134 = getelementptr inbounds i1, i1* %3129, i64 0
	%3135 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	store %Type_Info* %3135, %Type_Info** %3132
	%3136 = getelementptr inbounds %..string, %..string* %3127, i64 0
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$4d9, i64 0, i32 0), i64 5}, %..string* %3136
	store i64 0, i64* %3133
	store i1 false, i1* %3134
	%3137 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	%3138 = bitcast %Type_Info* %3137 to %Type_Info*
	%3139 = getelementptr inbounds %Type_Info*, %Type_Info** %3126, i64 1
	%3140 = getelementptr inbounds i64, i64* %3128, i64 1
	%3141 = getelementptr inbounds i1, i1* %3129, i64 1
	%3142 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	store %Type_Info* %3142, %Type_Info** %3139
	%3143 = getelementptr inbounds %..string, %..string* %3127, i64 1
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$4da, i64 0, i32 0), i64 5}, %..string* %3143
	store i64 4, i64* %3140
	store i1 false, i1* %3141
	%3144 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	%3145 = bitcast %Type_Info* %3144 to %Type_Info*
	%3146 = getelementptr inbounds %Type_Info*, %Type_Info** %3126, i64 2
	%3147 = getelementptr inbounds i64, i64* %3128, i64 2
	%3148 = getelementptr inbounds i1, i1* %3129, i64 2
	%3149 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	store %Type_Info* %3149, %Type_Info** %3146
	%3150 = getelementptr inbounds %..string, %..string* %3127, i64 2
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$4db, i64 0, i32 0), i64 6}, %..string* %3150
	store i64 8, i64* %3147
	store i1 false, i1* %3148
	%3151 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %3121, i64 0, i32 0
	%3152 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %3151, i64 0, i32 0
	store %Type_Info** %3126, %Type_Info*** %3152
	%3153 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %3151, i64 0, i32 1
	store i64 3, i64* %3153
	%3154 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %3121, i64 0, i32 1
	%3155 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %3154, i64 0, i32 0
	store %..string* %3127, %..string** %3155
	%3156 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %3154, i64 0, i32 1
	store i64 3, i64* %3156
	%3157 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %3121, i64 0, i32 2
	%3158 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %3157, i64 0, i32 0
	store i64* %3128, i64** %3158
	%3159 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %3157, i64 0, i32 1
	store i64 3, i64* %3159
	%3160 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %3121, i64 0, i32 3
	%3161 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %3160, i64 0, i32 0
	store i1* %3129, i1** %3161
	%3162 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %3160, i64 0, i32 1
	store i64 3, i64* %3162
	%3163 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %3118, i64 0, i32 2 ; UnionTagPtr
	store i8 16, i8* %3163
	%3164 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 114
	%3165 = getelementptr inbounds %Type_Info, %Type_Info* %3164, i64 0, i32 2
	%3166 = getelementptr inbounds %Type_Info, %Type_Info* %3164, i64 0, i32 0
	store i64 40, i64* %3166
	%3167 = getelementptr inbounds %Type_Info, %Type_Info* %3164, i64 0, i32 1
	store i64 8, i64* %3167
	; TypeInfoNamed
	%3168 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %3165 to %Type_Info_Named*
	%3169 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 115
	%3170 = bitcast %Type_Info* %3169 to %Type_Info*
	%3171 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %3168, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$4dc, i64 0, i32 0), i64 13}, %..string* %3171
	%3172 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %3168, i64 0, i32 1
	store %Type_Info* %3170, %Type_Info** %3172
	%3173 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %3165, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %3173
	%3174 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 115
	%3175 = getelementptr inbounds %Type_Info, %Type_Info* %3174, i64 0, i32 2
	%3176 = getelementptr inbounds %Type_Info, %Type_Info* %3174, i64 0, i32 0
	store i64 40, i64* %3176
	%3177 = getelementptr inbounds %Type_Info, %Type_Info* %3174, i64 0, i32 1
	store i64 8, i64* %3177
	; TypeInfoDynamicArray
	%3178 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %3175 to %Type_Info_Dynamic_Array*
	%3179 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	%3180 = bitcast %Type_Info* %3179 to %Type_Info*
	%3181 = getelementptr inbounds %Type_Info_Dynamic_Array, %Type_Info_Dynamic_Array* %3178, i64 0, i32 0
	store %Type_Info* %3180, %Type_Info** %3181
	%3182 = getelementptr inbounds %Type_Info_Dynamic_Array, %Type_Info_Dynamic_Array* %3178, i64 0, i32 1
	store i64 1, i64* %3182
	%3183 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %3175, i64 0, i32 2 ; UnionTagPtr
	store i8 12, i8* %3183
	%3184 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%3185 = getelementptr inbounds %Type_Info, %Type_Info* %3184, i64 0, i32 2
	%3186 = getelementptr inbounds %Type_Info, %Type_Info* %3184, i64 0, i32 0
	store i64 8, i64* %3186
	%3187 = getelementptr inbounds %Type_Info, %Type_Info* %3184, i64 0, i32 1
	store i64 8, i64* %3187
	; TypeInfoPointer
	%3188 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %3185 to %Type_Info_Pointer*
	%3189 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	%3190 = bitcast %Type_Info* %3189 to %Type_Info*
	%3191 = getelementptr inbounds %Type_Info_Pointer, %Type_Info_Pointer* %3188, i64 0, i32 0
	store %Type_Info* %3190, %Type_Info** %3191
	%3192 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %3185, i64 0, i32 2 ; UnionTagPtr
	store i8 9, i8* %3192
	%3193 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 116
	%3194 = getelementptr inbounds %Type_Info, %Type_Info* %3193, i64 0, i32 2
	%3195 = getelementptr inbounds %Type_Info, %Type_Info* %3193, i64 0, i32 0
	store i64 64, i64* %3195
	%3196 = getelementptr inbounds %Type_Info, %Type_Info* %3193, i64 0, i32 1
	store i64 8, i64* %3196
	; TypeInfoNamed
	%3197 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %3194 to %Type_Info_Named*
	%3198 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 117
	%3199 = bitcast %Type_Info* %3198 to %Type_Info*
	%3200 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %3197, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$4dd, i64 0, i32 0), i64 8}, %..string* %3200
	%3201 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %3197, i64 0, i32 1
	store %Type_Info* %3199, %Type_Info** %3201
	%3202 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %3194, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %3202
	%3203 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 117
	%3204 = getelementptr inbounds %Type_Info, %Type_Info* %3203, i64 0, i32 2
	%3205 = getelementptr inbounds %Type_Info, %Type_Info* %3203, i64 0, i32 0
	store i64 64, i64* %3205
	%3206 = getelementptr inbounds %Type_Info, %Type_Info* %3203, i64 0, i32 1
	store i64 8, i64* %3206
	; TypeInfoStruct
	%3207 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %3204 to %Type_Info_Struct*
	%3208 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %3207, i64 0, i32 4
	store i1 false, i1* %3208
	%3209 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %3207, i64 0, i32 5
	store i1 false, i1* %3209
	%3210 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %3207, i64 0, i32 6
	store i1 false, i1* %3210
	%3211 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %3207, i64 0, i32 7
	store i1 false, i1* %3211
	%3212 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 124
	%3213 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 88
	%3214 = getelementptr inbounds [450 x i64], [450 x i64]* @__$type_info_offsets_data, i64 0, i32 79
	%3215 = getelementptr inbounds [450 x i1], [450 x i1]* @__$type_info_usings_data, i64 0, i32 79
	%3216 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 13
	%3217 = bitcast %Type_Info* %3216 to %Type_Info*
	%3218 = getelementptr inbounds %Type_Info*, %Type_Info** %3212, i64 0
	%3219 = getelementptr inbounds i64, i64* %3214, i64 0
	%3220 = getelementptr inbounds i1, i1* %3215, i64 0
	%3221 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 13
	store %Type_Info* %3221, %Type_Info** %3218
	%3222 = getelementptr inbounds %..string, %..string* %3213, i64 0
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$4de, i64 0, i32 0), i64 5}, %..string* %3222
	store i64 48, i64* %3219
	store i1 false, i1* %3220
	%3223 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 13
	%3224 = bitcast %Type_Info* %3223 to %Type_Info*
	%3225 = getelementptr inbounds %Type_Info*, %Type_Info** %3212, i64 1
	%3226 = getelementptr inbounds i64, i64* %3214, i64 1
	%3227 = getelementptr inbounds i1, i1* %3215, i64 1
	%3228 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 13
	store %Type_Info* %3228, %Type_Info** %3225
	%3229 = getelementptr inbounds %..string, %..string* %3213, i64 1
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$4df, i64 0, i32 0), i64 4}, %..string* %3229
	store i64 49, i64* %3226
	store i1 false, i1* %3227
	%3230 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 13
	%3231 = bitcast %Type_Info* %3230 to %Type_Info*
	%3232 = getelementptr inbounds %Type_Info*, %Type_Info** %3212, i64 2
	%3233 = getelementptr inbounds i64, i64* %3214, i64 2
	%3234 = getelementptr inbounds i1, i1* %3215, i64 2
	%3235 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 13
	store %Type_Info* %3235, %Type_Info** %3232
	%3236 = getelementptr inbounds %..string, %..string* %3213, i64 2
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$4e0, i64 0, i32 0), i64 5}, %..string* %3236
	store i64 50, i64* %3233
	store i1 false, i1* %3234
	%3237 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 13
	%3238 = bitcast %Type_Info* %3237 to %Type_Info*
	%3239 = getelementptr inbounds %Type_Info*, %Type_Info** %3212, i64 3
	%3240 = getelementptr inbounds i64, i64* %3214, i64 3
	%3241 = getelementptr inbounds i1, i1* %3215, i64 3
	%3242 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 13
	store %Type_Info* %3242, %Type_Info** %3239
	%3243 = getelementptr inbounds %..string, %..string* %3213, i64 3
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$4e1, i64 0, i32 0), i64 4}, %..string* %3243
	store i64 51, i64* %3240
	store i1 false, i1* %3241
	%3244 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 13
	%3245 = bitcast %Type_Info* %3244 to %Type_Info*
	%3246 = getelementptr inbounds %Type_Info*, %Type_Info** %3212, i64 4
	%3247 = getelementptr inbounds i64, i64* %3214, i64 4
	%3248 = getelementptr inbounds i1, i1* %3215, i64 4
	%3249 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 13
	store %Type_Info* %3249, %Type_Info** %3246
	%3250 = getelementptr inbounds %..string, %..string* %3213, i64 4
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$4e2, i64 0, i32 0), i64 4}, %..string* %3250
	store i64 52, i64* %3247
	store i1 false, i1* %3248
	%3251 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 13
	%3252 = bitcast %Type_Info* %3251 to %Type_Info*
	%3253 = getelementptr inbounds %Type_Info*, %Type_Info** %3212, i64 5
	%3254 = getelementptr inbounds i64, i64* %3214, i64 5
	%3255 = getelementptr inbounds i1, i1* %3215, i64 5
	%3256 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 13
	store %Type_Info* %3256, %Type_Info** %3253
	%3257 = getelementptr inbounds %..string, %..string* %3213, i64 5
	store %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$4e3, i64 0, i32 0), i64 9}, %..string* %3257
	store i64 53, i64* %3254
	store i1 false, i1* %3255
	%3258 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 13
	%3259 = bitcast %Type_Info* %3258 to %Type_Info*
	%3260 = getelementptr inbounds %Type_Info*, %Type_Info** %3212, i64 6
	%3261 = getelementptr inbounds i64, i64* %3214, i64 6
	%3262 = getelementptr inbounds i1, i1* %3215, i64 6
	%3263 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 13
	store %Type_Info* %3263, %Type_Info** %3260
	%3264 = getelementptr inbounds %..string, %..string* %3213, i64 6
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$4e4, i64 0, i32 0), i64 8}, %..string* %3264
	store i64 54, i64* %3261
	store i1 false, i1* %3262
	%3265 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%3266 = bitcast %Type_Info* %3265 to %Type_Info*
	%3267 = getelementptr inbounds %Type_Info*, %Type_Info** %3212, i64 7
	%3268 = getelementptr inbounds i64, i64* %3214, i64 7
	%3269 = getelementptr inbounds i1, i1* %3215, i64 7
	%3270 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	store %Type_Info* %3270, %Type_Info** %3267
	%3271 = getelementptr inbounds %..string, %..string* %3213, i64 7
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$4e5, i64 0, i32 0), i64 5}, %..string* %3271
	store i64 16, i64* %3268
	store i1 false, i1* %3269
	%3272 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%3273 = bitcast %Type_Info* %3272 to %Type_Info*
	%3274 = getelementptr inbounds %Type_Info*, %Type_Info** %3212, i64 8
	%3275 = getelementptr inbounds i64, i64* %3214, i64 8
	%3276 = getelementptr inbounds i1, i1* %3215, i64 8
	%3277 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	store %Type_Info* %3277, %Type_Info** %3274
	%3278 = getelementptr inbounds %..string, %..string* %3213, i64 8
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$4e6, i64 0, i32 0), i64 4}, %..string* %3278
	store i64 24, i64* %3275
	store i1 false, i1* %3276
	%3279 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%3280 = bitcast %Type_Info* %3279 to %Type_Info*
	%3281 = getelementptr inbounds %Type_Info*, %Type_Info** %3212, i64 9
	%3282 = getelementptr inbounds i64, i64* %3214, i64 9
	%3283 = getelementptr inbounds i1, i1* %3215, i64 9
	%3284 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	store %Type_Info* %3284, %Type_Info** %3281
	%3285 = getelementptr inbounds %..string, %..string* %3213, i64 9
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$4e7, i64 0, i32 0), i64 6}, %..string* %3285
	store i64 32, i64* %3282
	store i1 false, i1* %3283
	%3286 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 13
	%3287 = bitcast %Type_Info* %3286 to %Type_Info*
	%3288 = getelementptr inbounds %Type_Info*, %Type_Info** %3212, i64 10
	%3289 = getelementptr inbounds i64, i64* %3214, i64 10
	%3290 = getelementptr inbounds i1, i1* %3215, i64 10
	%3291 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 13
	store %Type_Info* %3291, %Type_Info** %3288
	%3292 = getelementptr inbounds %..string, %..string* %3213, i64 10
	store %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$4e8, i64 0, i32 0), i64 9}, %..string* %3292
	store i64 55, i64* %3289
	store i1 false, i1* %3290
	%3293 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 13
	%3294 = bitcast %Type_Info* %3293 to %Type_Info*
	%3295 = getelementptr inbounds %Type_Info*, %Type_Info** %3212, i64 11
	%3296 = getelementptr inbounds i64, i64* %3214, i64 11
	%3297 = getelementptr inbounds i1, i1* %3215, i64 11
	%3298 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 13
	store %Type_Info* %3298, %Type_Info** %3295
	%3299 = getelementptr inbounds %..string, %..string* %3213, i64 11
	store %..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$4e9, i64 0, i32 0), i64 14}, %..string* %3299
	store i64 56, i64* %3296
	store i1 false, i1* %3297
	%3300 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 118
	%3301 = bitcast %Type_Info* %3300 to %Type_Info*
	%3302 = getelementptr inbounds %Type_Info*, %Type_Info** %3212, i64 12
	%3303 = getelementptr inbounds i64, i64* %3214, i64 12
	%3304 = getelementptr inbounds i1, i1* %3215, i64 12
	%3305 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 118
	store %Type_Info* %3305, %Type_Info** %3302
	%3306 = getelementptr inbounds %..string, %..string* %3213, i64 12
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$4ea, i64 0, i32 0), i64 3}, %..string* %3306
	store i64 40, i64* %3303
	store i1 false, i1* %3304
	%3307 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 75
	%3308 = bitcast %Type_Info* %3307 to %Type_Info*
	%3309 = getelementptr inbounds %Type_Info*, %Type_Info** %3212, i64 13
	%3310 = getelementptr inbounds i64, i64* %3214, i64 13
	%3311 = getelementptr inbounds i1, i1* %3215, i64 13
	%3312 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 75
	store %Type_Info* %3312, %Type_Info** %3309
	%3313 = getelementptr inbounds %..string, %..string* %3213, i64 13
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$4eb, i64 0, i32 0), i64 3}, %..string* %3313
	store i64 0, i64* %3310
	store i1 false, i1* %3311
	%3314 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %3207, i64 0, i32 0
	%3315 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %3314, i64 0, i32 0
	store %Type_Info** %3212, %Type_Info*** %3315
	%3316 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %3314, i64 0, i32 1
	store i64 14, i64* %3316
	%3317 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %3207, i64 0, i32 1
	%3318 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %3317, i64 0, i32 0
	store %..string* %3213, %..string** %3318
	%3319 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %3317, i64 0, i32 1
	store i64 14, i64* %3319
	%3320 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %3207, i64 0, i32 2
	%3321 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %3320, i64 0, i32 0
	store i64* %3214, i64** %3321
	%3322 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %3320, i64 0, i32 1
	store i64 14, i64* %3322
	%3323 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %3207, i64 0, i32 3
	%3324 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %3323, i64 0, i32 0
	store i1* %3215, i1** %3324
	%3325 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %3323, i64 0, i32 1
	store i64 14, i64* %3325
	%3326 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %3204, i64 0, i32 2 ; UnionTagPtr
	store i8 16, i8* %3326
	%3327 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 118
	%3328 = getelementptr inbounds %Type_Info, %Type_Info* %3327, i64 0, i32 2
	%3329 = getelementptr inbounds %Type_Info, %Type_Info* %3327, i64 0, i32 0
	store i64 8, i64* %3329
	%3330 = getelementptr inbounds %Type_Info, %Type_Info* %3327, i64 0, i32 1
	store i64 8, i64* %3330
	; TypeInfoPointer
	%3331 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %3328 to %Type_Info_Pointer*
	%3332 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 114
	%3333 = bitcast %Type_Info* %3332 to %Type_Info*
	%3334 = getelementptr inbounds %Type_Info_Pointer, %Type_Info_Pointer* %3331, i64 0, i32 0
	store %Type_Info* %3333, %Type_Info** %3334
	%3335 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %3328, i64 0, i32 2 ; UnionTagPtr
	store i8 9, i8* %3335
	%3336 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 119
	%3337 = getelementptr inbounds %Type_Info, %Type_Info* %3336, i64 0, i32 2
	%3338 = getelementptr inbounds %Type_Info, %Type_Info* %3336, i64 0, i32 0
	store i64 2, i64* %3338
	%3339 = getelementptr inbounds %Type_Info, %Type_Info* %3336, i64 0, i32 1
	store i64 1, i64* %3339
	; TypeInfoNamed
	%3340 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %3337 to %Type_Info_Named*
	%3341 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 120
	%3342 = bitcast %Type_Info* %3341 to %Type_Info*
	%3343 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %3340, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$4ec, i64 0, i32 0), i64 12}, %..string* %3343
	%3344 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %3340, i64 0, i32 1
	store %Type_Info* %3342, %Type_Info** %3344
	%3345 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %3337, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %3345
	%3346 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 120
	%3347 = getelementptr inbounds %Type_Info, %Type_Info* %3346, i64 0, i32 2
	%3348 = getelementptr inbounds %Type_Info, %Type_Info* %3346, i64 0, i32 0
	store i64 2, i64* %3348
	%3349 = getelementptr inbounds %Type_Info, %Type_Info* %3346, i64 0, i32 1
	store i64 1, i64* %3349
	; TypeInfoStruct
	%3350 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %3347 to %Type_Info_Struct*
	%3351 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %3350, i64 0, i32 4
	store i1 false, i1* %3351
	%3352 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %3350, i64 0, i32 5
	store i1 false, i1* %3352
	%3353 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %3350, i64 0, i32 6
	store i1 false, i1* %3353
	%3354 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %3350, i64 0, i32 7
	store i1 false, i1* %3354
	%3355 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 138
	%3356 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 102
	%3357 = getelementptr inbounds [450 x i64], [450 x i64]* @__$type_info_offsets_data, i64 0, i32 93
	%3358 = getelementptr inbounds [450 x i1], [450 x i1]* @__$type_info_usings_data, i64 0, i32 93
	%3359 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	%3360 = bitcast %Type_Info* %3359 to %Type_Info*
	%3361 = getelementptr inbounds %Type_Info*, %Type_Info** %3355, i64 0
	%3362 = getelementptr inbounds i64, i64* %3357, i64 0
	%3363 = getelementptr inbounds i1, i1* %3358, i64 0
	%3364 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	store %Type_Info* %3364, %Type_Info** %3361
	%3365 = getelementptr inbounds %..string, %..string* %3356, i64 0
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$4ed, i64 0, i32 0), i64 2}, %..string* %3365
	store i64 0, i64* %3362
	store i1 false, i1* %3363
	%3366 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	%3367 = bitcast %Type_Info* %3366 to %Type_Info*
	%3368 = getelementptr inbounds %Type_Info*, %Type_Info** %3355, i64 1
	%3369 = getelementptr inbounds i64, i64* %3357, i64 1
	%3370 = getelementptr inbounds i1, i1* %3358, i64 1
	%3371 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	store %Type_Info* %3371, %Type_Info** %3368
	%3372 = getelementptr inbounds %..string, %..string* %3356, i64 1
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$4ee, i64 0, i32 0), i64 2}, %..string* %3372
	store i64 1, i64* %3369
	store i1 false, i1* %3370
	%3373 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %3350, i64 0, i32 0
	%3374 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %3373, i64 0, i32 0
	store %Type_Info** %3355, %Type_Info*** %3374
	%3375 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %3373, i64 0, i32 1
	store i64 2, i64* %3375
	%3376 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %3350, i64 0, i32 1
	%3377 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %3376, i64 0, i32 0
	store %..string* %3356, %..string** %3377
	%3378 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %3376, i64 0, i32 1
	store i64 2, i64* %3378
	%3379 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %3350, i64 0, i32 2
	%3380 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %3379, i64 0, i32 0
	store i64* %3357, i64** %3380
	%3381 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %3379, i64 0, i32 1
	store i64 2, i64* %3381
	%3382 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %3350, i64 0, i32 3
	%3383 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %3382, i64 0, i32 0
	store i1* %3358, i1** %3383
	%3384 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %3382, i64 0, i32 1
	store i64 2, i64* %3384
	%3385 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %3347, i64 0, i32 2 ; UnionTagPtr
	store i8 16, i8* %3385
	%3386 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 121
	%3387 = getelementptr inbounds %Type_Info, %Type_Info* %3386, i64 0, i32 2
	%3388 = getelementptr inbounds %Type_Info, %Type_Info* %3386, i64 0, i32 0
	store i64 16, i64* %3388
	%3389 = getelementptr inbounds %Type_Info, %Type_Info* %3386, i64 0, i32 1
	store i64 8, i64* %3389
	; TypeInfoNamed
	%3390 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %3387 to %Type_Info_Named*
	%3391 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 122
	%3392 = bitcast %Type_Info* %3391 to %Type_Info*
	%3393 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %3390, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$4ef, i64 0, i32 0), i64 3}, %..string* %3393
	%3394 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %3390, i64 0, i32 1
	store %Type_Info* %3392, %Type_Info** %3394
	%3395 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %3387, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %3395
	%3396 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 122
	%3397 = getelementptr inbounds %Type_Info, %Type_Info* %3396, i64 0, i32 2
	%3398 = getelementptr inbounds %Type_Info, %Type_Info* %3396, i64 0, i32 0
	store i64 16, i64* %3398
	%3399 = getelementptr inbounds %Type_Info, %Type_Info* %3396, i64 0, i32 1
	store i64 8, i64* %3399
	; TypeInfoStruct
	%3400 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %3397 to %Type_Info_Struct*
	%3401 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %3400, i64 0, i32 4
	store i1 false, i1* %3401
	%3402 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %3400, i64 0, i32 5
	store i1 true, i1* %3402
	%3403 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %3400, i64 0, i32 6
	store i1 false, i1* %3403
	%3404 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %3400, i64 0, i32 7
	store i1 false, i1* %3404
	%3405 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 140
	%3406 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 104
	%3407 = getelementptr inbounds [450 x i64], [450 x i64]* @__$type_info_offsets_data, i64 0, i32 95
	%3408 = getelementptr inbounds [450 x i1], [450 x i1]* @__$type_info_usings_data, i64 0, i32 95
	%3409 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 76
	%3410 = bitcast %Type_Info* %3409 to %Type_Info*
	%3411 = getelementptr inbounds %Type_Info*, %Type_Info** %3405, i64 0
	%3412 = getelementptr inbounds i64, i64* %3407, i64 0
	%3413 = getelementptr inbounds i1, i1* %3408, i64 0
	%3414 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 76
	store %Type_Info* %3414, %Type_Info** %3411
	%3415 = getelementptr inbounds %..string, %..string* %3406, i64 0
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$4f0, i64 0, i32 0), i64 4}, %..string* %3415
	store i64 0, i64* %3412
	store i1 false, i1* %3413
	%3416 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%3417 = bitcast %Type_Info* %3416 to %Type_Info*
	%3418 = getelementptr inbounds %Type_Info*, %Type_Info** %3405, i64 1
	%3419 = getelementptr inbounds i64, i64* %3407, i64 1
	%3420 = getelementptr inbounds i1, i1* %3408, i64 1
	%3421 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	store %Type_Info* %3421, %Type_Info** %3418
	%3422 = getelementptr inbounds %..string, %..string* %3406, i64 1
	store %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$4f1, i64 0, i32 0), i64 9}, %..string* %3422
	store i64 8, i64* %3419
	store i1 false, i1* %3420
	%3423 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %3400, i64 0, i32 0
	%3424 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %3423, i64 0, i32 0
	store %Type_Info** %3405, %Type_Info*** %3424
	%3425 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %3423, i64 0, i32 1
	store i64 2, i64* %3425
	%3426 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %3400, i64 0, i32 1
	%3427 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %3426, i64 0, i32 0
	store %..string* %3406, %..string** %3427
	%3428 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %3426, i64 0, i32 1
	store i64 2, i64* %3428
	%3429 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %3400, i64 0, i32 2
	%3430 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %3429, i64 0, i32 0
	store i64* %3407, i64** %3430
	%3431 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %3429, i64 0, i32 1
	store i64 2, i64* %3431
	%3432 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %3400, i64 0, i32 3
	%3433 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %3432, i64 0, i32 0
	store i1* %3408, i1** %3433
	%3434 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %3432, i64 0, i32 1
	store i64 2, i64* %3434
	%3435 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %3397, i64 0, i32 2 ; UnionTagPtr
	store i8 16, i8* %3435
	%3436 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 7
	%3437 = getelementptr inbounds %Type_Info, %Type_Info* %3436, i64 0, i32 2
	%3438 = getelementptr inbounds %Type_Info, %Type_Info* %3436, i64 0, i32 0
	store i64 8, i64* %3438
	%3439 = getelementptr inbounds %Type_Info, %Type_Info* %3436, i64 0, i32 1
	store i64 8, i64* %3439
	; TypeInfoPointer
	%3440 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %3437 to %Type_Info_Pointer*
	%3441 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 8
	%3442 = bitcast %Type_Info* %3441 to %Type_Info*
	%3443 = getelementptr inbounds %Type_Info_Pointer, %Type_Info_Pointer* %3440, i64 0, i32 0
	store %Type_Info* %3442, %Type_Info** %3443
	%3444 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %3437, i64 0, i32 2 ; UnionTagPtr
	store i8 9, i8* %3444
	%3445 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 123
	%3446 = getelementptr inbounds %Type_Info, %Type_Info* %3445, i64 0, i32 2
	%3447 = getelementptr inbounds %Type_Info, %Type_Info* %3445, i64 0, i32 0
	store i64 16, i64* %3447
	%3448 = getelementptr inbounds %Type_Info, %Type_Info* %3445, i64 0, i32 1
	store i64 8, i64* %3448
	; TypeInfoNamed
	%3449 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %3446 to %Type_Info_Named*
	%3450 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 124
	%3451 = bitcast %Type_Info* %3450 to %Type_Info*
	%3452 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %3449, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$4f2, i64 0, i32 0), i64 6}, %..string* %3452
	%3453 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %3449, i64 0, i32 1
	store %Type_Info* %3451, %Type_Info** %3453
	%3454 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %3446, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %3454
	%3455 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 124
	%3456 = getelementptr inbounds %Type_Info, %Type_Info* %3455, i64 0, i32 2
	%3457 = getelementptr inbounds %Type_Info, %Type_Info* %3455, i64 0, i32 0
	store i64 16, i64* %3457
	%3458 = getelementptr inbounds %Type_Info, %Type_Info* %3455, i64 0, i32 1
	store i64 8, i64* %3458
	; TypeInfoStruct
	%3459 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %3456 to %Type_Info_Struct*
	%3460 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %3459, i64 0, i32 4
	store i1 false, i1* %3460
	%3461 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %3459, i64 0, i32 5
	store i1 true, i1* %3461
	%3462 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %3459, i64 0, i32 6
	store i1 false, i1* %3462
	%3463 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %3459, i64 0, i32 7
	store i1 false, i1* %3463
	%3464 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 142
	%3465 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 106
	%3466 = getelementptr inbounds [450 x i64], [450 x i64]* @__$type_info_offsets_data, i64 0, i32 97
	%3467 = getelementptr inbounds [450 x i1], [450 x i1]* @__$type_info_usings_data, i64 0, i32 97
	%3468 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%3469 = bitcast %Type_Info* %3468 to %Type_Info*
	%3470 = getelementptr inbounds %Type_Info*, %Type_Info** %3464, i64 0
	%3471 = getelementptr inbounds i64, i64* %3466, i64 0
	%3472 = getelementptr inbounds i1, i1* %3467, i64 0
	%3473 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	store %Type_Info* %3473, %Type_Info** %3470
	%3474 = getelementptr inbounds %..string, %..string* %3465, i64 0
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$4f3, i64 0, i32 0), i64 4}, %..string* %3474
	store i64 0, i64* %3471
	store i1 false, i1* %3472
	%3475 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%3476 = bitcast %Type_Info* %3475 to %Type_Info*
	%3477 = getelementptr inbounds %Type_Info*, %Type_Info** %3464, i64 1
	%3478 = getelementptr inbounds i64, i64* %3466, i64 1
	%3479 = getelementptr inbounds i1, i1* %3467, i64 1
	%3480 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	store %Type_Info* %3480, %Type_Info** %3477
	%3481 = getelementptr inbounds %..string, %..string* %3465, i64 1
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$4f4, i64 0, i32 0), i64 3}, %..string* %3481
	store i64 8, i64* %3478
	store i1 false, i1* %3479
	%3482 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %3459, i64 0, i32 0
	%3483 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %3482, i64 0, i32 0
	store %Type_Info** %3464, %Type_Info*** %3483
	%3484 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %3482, i64 0, i32 1
	store i64 2, i64* %3484
	%3485 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %3459, i64 0, i32 1
	%3486 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %3485, i64 0, i32 0
	store %..string* %3465, %..string** %3486
	%3487 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %3485, i64 0, i32 1
	store i64 2, i64* %3487
	%3488 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %3459, i64 0, i32 2
	%3489 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %3488, i64 0, i32 0
	store i64* %3466, i64** %3489
	%3490 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %3488, i64 0, i32 1
	store i64 2, i64* %3490
	%3491 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %3459, i64 0, i32 3
	%3492 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %3491, i64 0, i32 0
	store i1* %3467, i1** %3492
	%3493 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %3491, i64 0, i32 1
	store i64 2, i64* %3493
	%3494 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %3456, i64 0, i32 2 ; UnionTagPtr
	store i8 16, i8* %3494
	%3495 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%3496 = getelementptr inbounds %Type_Info, %Type_Info* %3495, i64 0, i32 2
	%3497 = getelementptr inbounds %Type_Info, %Type_Info* %3495, i64 0, i32 0
	store i64 8, i64* %3497
	%3498 = getelementptr inbounds %Type_Info, %Type_Info* %3495, i64 0, i32 1
	store i64 8, i64* %3498
	; TypeInfoPointer
	%3499 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %3496 to %Type_Info_Pointer*
	%3500 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	%3501 = bitcast %Type_Info* %3500 to %Type_Info*
	%3502 = getelementptr inbounds %Type_Info_Pointer, %Type_Info_Pointer* %3499, i64 0, i32 0
	store %Type_Info* %3501, %Type_Info** %3502
	%3503 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %3496, i64 0, i32 2 ; UnionTagPtr
	store i8 9, i8* %3503
	%3504 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 125
	%3505 = getelementptr inbounds %Type_Info, %Type_Info* %3504, i64 0, i32 2
	%3506 = getelementptr inbounds %Type_Info, %Type_Info* %3504, i64 0, i32 0
	store i64 16, i64* %3506
	%3507 = getelementptr inbounds %Type_Info, %Type_Info* %3504, i64 0, i32 1
	store i64 8, i64* %3507
	; TypeInfoNamed
	%3508 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %3505 to %Type_Info_Named*
	%3509 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 126
	%3510 = bitcast %Type_Info* %3509 to %Type_Info*
	%3511 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %3508, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$4f5, i64 0, i32 0), i64 5}, %..string* %3511
	%3512 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %3508, i64 0, i32 1
	store %Type_Info* %3510, %Type_Info** %3512
	%3513 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %3505, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %3513
	%3514 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 126
	%3515 = getelementptr inbounds %Type_Info, %Type_Info* %3514, i64 0, i32 2
	%3516 = getelementptr inbounds %Type_Info, %Type_Info* %3514, i64 0, i32 0
	store i64 16, i64* %3516
	%3517 = getelementptr inbounds %Type_Info, %Type_Info* %3514, i64 0, i32 1
	store i64 8, i64* %3517
	; TypeInfoStruct
	%3518 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %3515 to %Type_Info_Struct*
	%3519 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %3518, i64 0, i32 4
	store i1 false, i1* %3519
	%3520 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %3518, i64 0, i32 5
	store i1 true, i1* %3520
	%3521 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %3518, i64 0, i32 6
	store i1 false, i1* %3521
	%3522 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %3518, i64 0, i32 7
	store i1 false, i1* %3522
	%3523 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 144
	%3524 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 108
	%3525 = getelementptr inbounds [450 x i64], [450 x i64]* @__$type_info_offsets_data, i64 0, i32 99
	%3526 = getelementptr inbounds [450 x i1], [450 x i1]* @__$type_info_usings_data, i64 0, i32 99
	%3527 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 76
	%3528 = bitcast %Type_Info* %3527 to %Type_Info*
	%3529 = getelementptr inbounds %Type_Info*, %Type_Info** %3523, i64 0
	%3530 = getelementptr inbounds i64, i64* %3525, i64 0
	%3531 = getelementptr inbounds i1, i1* %3526, i64 0
	%3532 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 76
	store %Type_Info* %3532, %Type_Info** %3529
	%3533 = getelementptr inbounds %..string, %..string* %3524, i64 0
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$4f6, i64 0, i32 0), i64 4}, %..string* %3533
	store i64 0, i64* %3530
	store i1 false, i1* %3531
	%3534 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%3535 = bitcast %Type_Info* %3534 to %Type_Info*
	%3536 = getelementptr inbounds %Type_Info*, %Type_Info** %3523, i64 1
	%3537 = getelementptr inbounds i64, i64* %3525, i64 1
	%3538 = getelementptr inbounds i1, i1* %3526, i64 1
	%3539 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	store %Type_Info* %3539, %Type_Info** %3536
	%3540 = getelementptr inbounds %..string, %..string* %3524, i64 1
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$4f7, i64 0, i32 0), i64 3}, %..string* %3540
	store i64 8, i64* %3537
	store i1 false, i1* %3538
	%3541 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %3518, i64 0, i32 0
	%3542 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %3541, i64 0, i32 0
	store %Type_Info** %3523, %Type_Info*** %3542
	%3543 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %3541, i64 0, i32 1
	store i64 2, i64* %3543
	%3544 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %3518, i64 0, i32 1
	%3545 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %3544, i64 0, i32 0
	store %..string* %3524, %..string** %3545
	%3546 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %3544, i64 0, i32 1
	store i64 2, i64* %3546
	%3547 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %3518, i64 0, i32 2
	%3548 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %3547, i64 0, i32 0
	store i64* %3525, i64** %3548
	%3549 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %3547, i64 0, i32 1
	store i64 2, i64* %3549
	%3550 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %3518, i64 0, i32 3
	%3551 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %3550, i64 0, i32 0
	store i1* %3526, i1** %3551
	%3552 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %3550, i64 0, i32 1
	store i64 2, i64* %3552
	%3553 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %3515, i64 0, i32 2 ; UnionTagPtr
	store i8 16, i8* %3553
	%3554 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 127
	%3555 = getelementptr inbounds %Type_Info, %Type_Info* %3554, i64 0, i32 2
	%3556 = getelementptr inbounds %Type_Info, %Type_Info* %3554, i64 0, i32 0
	store i64 16, i64* %3556
	%3557 = getelementptr inbounds %Type_Info, %Type_Info* %3554, i64 0, i32 1
	store i64 8, i64* %3557
	; TypeInfoNamed
	%3558 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %3555 to %Type_Info_Named*
	%3559 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 128
	%3560 = bitcast %Type_Info* %3559 to %Type_Info*
	%3561 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %3558, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$4f8, i64 0, i32 0), i64 7}, %..string* %3561
	%3562 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %3558, i64 0, i32 1
	store %Type_Info* %3560, %Type_Info** %3562
	%3563 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %3555, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %3563
	%3564 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 128
	%3565 = getelementptr inbounds %Type_Info, %Type_Info* %3564, i64 0, i32 2
	%3566 = getelementptr inbounds %Type_Info, %Type_Info* %3564, i64 0, i32 0
	store i64 16, i64* %3566
	%3567 = getelementptr inbounds %Type_Info, %Type_Info* %3564, i64 0, i32 1
	store i64 8, i64* %3567
	; TypeInfoVector
	%3568 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %3565 to %Type_Info_Vector*
	%3569 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 64
	%3570 = bitcast %Type_Info* %3569 to %Type_Info*
	%3571 = getelementptr inbounds %Type_Info_Vector, %Type_Info_Vector* %3568, i64 0, i32 0
	store %Type_Info* %3570, %Type_Info** %3571
	%3572 = getelementptr inbounds %Type_Info_Vector, %Type_Info_Vector* %3568, i64 0, i32 1
	store i64 4, i64* %3572
	%3573 = getelementptr inbounds %Type_Info_Vector, %Type_Info_Vector* %3568, i64 0, i32 2
	store i64 3, i64* %3573
	%3574 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %3565, i64 0, i32 2 ; UnionTagPtr
	store i8 14, i8* %3574
	%3575 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 129
	%3576 = getelementptr inbounds %Type_Info, %Type_Info* %3575, i64 0, i32 2
	%3577 = getelementptr inbounds %Type_Info, %Type_Info* %3575, i64 0, i32 0
	store i64 16, i64* %3577
	%3578 = getelementptr inbounds %Type_Info, %Type_Info* %3575, i64 0, i32 1
	store i64 16, i64* %3578
	; TypeInfoNamed
	%3579 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %3576 to %Type_Info_Named*
	%3580 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 130
	%3581 = bitcast %Type_Info* %3580 to %Type_Info*
	%3582 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %3579, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$4f9, i64 0, i32 0), i64 7}, %..string* %3582
	%3583 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %3579, i64 0, i32 1
	store %Type_Info* %3581, %Type_Info** %3583
	%3584 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %3576, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %3584
	%3585 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 130
	%3586 = getelementptr inbounds %Type_Info, %Type_Info* %3585, i64 0, i32 2
	%3587 = getelementptr inbounds %Type_Info, %Type_Info* %3585, i64 0, i32 0
	store i64 16, i64* %3587
	%3588 = getelementptr inbounds %Type_Info, %Type_Info* %3585, i64 0, i32 1
	store i64 16, i64* %3588
	; TypeInfoVector
	%3589 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %3586 to %Type_Info_Vector*
	%3590 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 64
	%3591 = bitcast %Type_Info* %3590 to %Type_Info*
	%3592 = getelementptr inbounds %Type_Info_Vector, %Type_Info_Vector* %3589, i64 0, i32 0
	store %Type_Info* %3591, %Type_Info** %3592
	%3593 = getelementptr inbounds %Type_Info_Vector, %Type_Info_Vector* %3589, i64 0, i32 1
	store i64 4, i64* %3593
	%3594 = getelementptr inbounds %Type_Info_Vector, %Type_Info_Vector* %3589, i64 0, i32 2
	store i64 4, i64* %3594
	%3595 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %3586, i64 0, i32 2 ; UnionTagPtr
	store i8 14, i8* %3595
	%3596 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 131
	%3597 = getelementptr inbounds %Type_Info, %Type_Info* %3596, i64 0, i32 2
	%3598 = getelementptr inbounds %Type_Info, %Type_Info* %3596, i64 0, i32 0
	store i64 8, i64* %3598
	%3599 = getelementptr inbounds %Type_Info, %Type_Info* %3596, i64 0, i32 1
	store i64 8, i64* %3599
	; TypeInfoNamed
	%3600 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %3597 to %Type_Info_Named*
	%3601 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 76
	%3602 = bitcast %Type_Info* %3601 to %Type_Info*
	%3603 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %3600, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$4fa, i64 0, i32 0), i64 13}, %..string* %3603
	%3604 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %3600, i64 0, i32 1
	store %Type_Info* %3602, %Type_Info** %3604
	%3605 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %3597, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %3605
	%3606 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 132
	%3607 = getelementptr inbounds %Type_Info, %Type_Info* %3606, i64 0, i32 2
	%3608 = getelementptr inbounds %Type_Info, %Type_Info* %3606, i64 0, i32 0
	store i64 8, i64* %3608
	%3609 = getelementptr inbounds %Type_Info, %Type_Info* %3606, i64 0, i32 1
	store i64 8, i64* %3609
	; TypeInfoNamed
	%3610 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %3607 to %Type_Info_Named*
	%3611 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 76
	%3612 = bitcast %Type_Info* %3611 to %Type_Info*
	%3613 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %3610, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$4fb, i64 0, i32 0), i64 14}, %..string* %3613
	%3614 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %3610, i64 0, i32 1
	store %Type_Info* %3612, %Type_Info** %3614
	%3615 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %3607, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %3615
	%3616 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 133
	%3617 = getelementptr inbounds %Type_Info, %Type_Info* %3616, i64 0, i32 2
	%3618 = getelementptr inbounds %Type_Info, %Type_Info* %3616, i64 0, i32 0
	store i64 8, i64* %3618
	%3619 = getelementptr inbounds %Type_Info, %Type_Info* %3616, i64 0, i32 1
	store i64 8, i64* %3619
	; TypeInfoNamed
	%3620 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %3617 to %Type_Info_Named*
	%3621 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 76
	%3622 = bitcast %Type_Info* %3621 to %Type_Info*
	%3623 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %3620, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$4fc, i64 0, i32 0), i64 13}, %..string* %3623
	%3624 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %3620, i64 0, i32 1
	store %Type_Info* %3622, %Type_Info** %3624
	%3625 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %3617, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %3625
	%3626 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 134
	%3627 = getelementptr inbounds %Type_Info, %Type_Info* %3626, i64 0, i32 2
	%3628 = getelementptr inbounds %Type_Info, %Type_Info* %3626, i64 0, i32 0
	store i64 24, i64* %3628
	%3629 = getelementptr inbounds %Type_Info, %Type_Info* %3626, i64 0, i32 1
	store i64 4, i64* %3629
	; TypeInfoNamed
	%3630 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %3627 to %Type_Info_Named*
	%3631 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 135
	%3632 = bitcast %Type_Info* %3631 to %Type_Info*
	%3633 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %3630, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$4fd, i64 0, i32 0), i64 8}, %..string* %3633
	%3634 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %3630, i64 0, i32 1
	store %Type_Info* %3632, %Type_Info** %3634
	%3635 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %3627, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %3635
	%3636 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 135
	%3637 = getelementptr inbounds %Type_Info, %Type_Info* %3636, i64 0, i32 2
	%3638 = getelementptr inbounds %Type_Info, %Type_Info* %3636, i64 0, i32 0
	store i64 24, i64* %3638
	%3639 = getelementptr inbounds %Type_Info, %Type_Info* %3636, i64 0, i32 1
	store i64 4, i64* %3639
	; TypeInfoStruct
	%3640 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %3637 to %Type_Info_Struct*
	%3641 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %3640, i64 0, i32 4
	store i1 false, i1* %3641
	%3642 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %3640, i64 0, i32 5
	store i1 true, i1* %3642
	%3643 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %3640, i64 0, i32 6
	store i1 false, i1* %3643
	%3644 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %3640, i64 0, i32 7
	store i1 false, i1* %3644
	%3645 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 146
	%3646 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 110
	%3647 = getelementptr inbounds [450 x i64], [450 x i64]* @__$type_info_offsets_data, i64 0, i32 101
	%3648 = getelementptr inbounds [450 x i1], [450 x i1]* @__$type_info_usings_data, i64 0, i32 101
	%3649 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	%3650 = bitcast %Type_Info* %3649 to %Type_Info*
	%3651 = getelementptr inbounds %Type_Info*, %Type_Info** %3645, i64 0
	%3652 = getelementptr inbounds i64, i64* %3647, i64 0
	%3653 = getelementptr inbounds i1, i1* %3648, i64 0
	%3654 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	store %Type_Info* %3654, %Type_Info** %3651
	%3655 = getelementptr inbounds %..string, %..string* %3646, i64 0
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$4fe, i64 0, i32 0), i64 5}, %..string* %3655
	store i64 0, i64* %3652
	store i1 false, i1* %3653
	%3656 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	%3657 = bitcast %Type_Info* %3656 to %Type_Info*
	%3658 = getelementptr inbounds %Type_Info*, %Type_Info** %3645, i64 1
	%3659 = getelementptr inbounds i64, i64* %3647, i64 1
	%3660 = getelementptr inbounds i1, i1* %3648, i64 1
	%3661 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	store %Type_Info* %3661, %Type_Info** %3658
	%3662 = getelementptr inbounds %..string, %..string* %3646, i64 1
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$4ff, i64 0, i32 0), i64 6}, %..string* %3662
	store i64 4, i64* %3659
	store i1 false, i1* %3660
	%3663 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	%3664 = bitcast %Type_Info* %3663 to %Type_Info*
	%3665 = getelementptr inbounds %Type_Info*, %Type_Info** %3645, i64 2
	%3666 = getelementptr inbounds i64, i64* %3647, i64 2
	%3667 = getelementptr inbounds i1, i1* %3648, i64 2
	%3668 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	store %Type_Info* %3668, %Type_Info** %3665
	%3669 = getelementptr inbounds %..string, %..string* %3646, i64 2
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$500, i64 0, i32 0), i64 8}, %..string* %3669
	store i64 8, i64* %3666
	store i1 false, i1* %3667
	%3670 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	%3671 = bitcast %Type_Info* %3670 to %Type_Info*
	%3672 = getelementptr inbounds %Type_Info*, %Type_Info** %3645, i64 3
	%3673 = getelementptr inbounds i64, i64* %3647, i64 3
	%3674 = getelementptr inbounds i1, i1* %3648, i64 3
	%3675 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	store %Type_Info* %3675, %Type_Info** %3672
	%3676 = getelementptr inbounds %..string, %..string* %3646, i64 3
	store %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$501, i64 0, i32 0), i64 10}, %..string* %3676
	store i64 12, i64* %3673
	store i1 false, i1* %3674
	%3677 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	%3678 = bitcast %Type_Info* %3677 to %Type_Info*
	%3679 = getelementptr inbounds %Type_Info*, %Type_Info** %3645, i64 4
	%3680 = getelementptr inbounds i64, i64* %3647, i64 4
	%3681 = getelementptr inbounds i1, i1* %3648, i64 4
	%3682 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	store %Type_Info* %3682, %Type_Info** %3679
	%3683 = getelementptr inbounds %..string, %..string* %3646, i64 4
	store %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$502, i64 0, i32 0), i64 9}, %..string* %3683
	store i64 16, i64* %3680
	store i1 false, i1* %3681
	%3684 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	%3685 = bitcast %Type_Info* %3684 to %Type_Info*
	%3686 = getelementptr inbounds %Type_Info*, %Type_Info** %3645, i64 5
	%3687 = getelementptr inbounds i64, i64* %3647, i64 5
	%3688 = getelementptr inbounds i1, i1* %3648, i64 5
	%3689 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	store %Type_Info* %3689, %Type_Info** %3686
	%3690 = getelementptr inbounds %..string, %..string* %3646, i64 5
	store %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$503, i64 0, i32 0), i64 12}, %..string* %3690
	store i64 20, i64* %3687
	store i1 false, i1* %3688
	%3691 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %3640, i64 0, i32 0
	%3692 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %3691, i64 0, i32 0
	store %Type_Info** %3645, %Type_Info*** %3692
	%3693 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %3691, i64 0, i32 1
	store i64 6, i64* %3693
	%3694 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %3640, i64 0, i32 1
	%3695 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %3694, i64 0, i32 0
	store %..string* %3646, %..string** %3695
	%3696 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %3694, i64 0, i32 1
	store i64 6, i64* %3696
	%3697 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %3640, i64 0, i32 2
	%3698 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %3697, i64 0, i32 0
	store i64* %3647, i64** %3698
	%3699 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %3697, i64 0, i32 1
	store i64 6, i64* %3699
	%3700 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %3640, i64 0, i32 3
	%3701 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %3700, i64 0, i32 0
	store i1* %3648, i1** %3701
	%3702 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %3700, i64 0, i32 1
	store i64 6, i64* %3702
	%3703 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %3637, i64 0, i32 2 ; UnionTagPtr
	store i8 16, i8* %3703
	%3704 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 136
	%3705 = getelementptr inbounds %Type_Info, %Type_Info* %3704, i64 0, i32 2
	%3706 = getelementptr inbounds %Type_Info, %Type_Info* %3704, i64 0, i32 0
	store i64 32, i64* %3706
	%3707 = getelementptr inbounds %Type_Info, %Type_Info* %3704, i64 0, i32 1
	store i64 8, i64* %3707
	; TypeInfoNamed
	%3708 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %3705 to %Type_Info_Named*
	%3709 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 137
	%3710 = bitcast %Type_Info* %3709 to %Type_Info*
	%3711 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %3708, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$504, i64 0, i32 0), i64 10}, %..string* %3711
	%3712 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %3708, i64 0, i32 1
	store %Type_Info* %3710, %Type_Info** %3712
	%3713 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %3705, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %3713
	%3714 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 137
	%3715 = getelementptr inbounds %Type_Info, %Type_Info* %3714, i64 0, i32 2
	%3716 = getelementptr inbounds %Type_Info, %Type_Info* %3714, i64 0, i32 0
	store i64 32, i64* %3716
	%3717 = getelementptr inbounds %Type_Info, %Type_Info* %3714, i64 0, i32 1
	store i64 8, i64* %3717
	; TypeInfoStruct
	%3718 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %3715 to %Type_Info_Struct*
	%3719 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %3718, i64 0, i32 4
	store i1 false, i1* %3719
	%3720 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %3718, i64 0, i32 5
	store i1 true, i1* %3720
	%3721 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %3718, i64 0, i32 6
	store i1 false, i1* %3721
	%3722 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %3718, i64 0, i32 7
	store i1 false, i1* %3722
	%3723 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 152
	%3724 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 116
	%3725 = getelementptr inbounds [450 x i64], [450 x i64]* @__$type_info_offsets_data, i64 0, i32 107
	%3726 = getelementptr inbounds [450 x i1], [450 x i1]* @__$type_info_usings_data, i64 0, i32 107
	%3727 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 138
	%3728 = bitcast %Type_Info* %3727 to %Type_Info*
	%3729 = getelementptr inbounds %Type_Info*, %Type_Info** %3723, i64 0
	%3730 = getelementptr inbounds i64, i64* %3725, i64 0
	%3731 = getelementptr inbounds i1, i1* %3726, i64 0
	%3732 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 138
	store %Type_Info* %3732, %Type_Info** %3729
	%3733 = getelementptr inbounds %..string, %..string* %3724, i64 0
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$505, i64 0, i32 0), i64 3}, %..string* %3733
	store i64 0, i64* %3730
	store i1 false, i1* %3731
	%3734 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 138
	%3735 = bitcast %Type_Info* %3734 to %Type_Info*
	%3736 = getelementptr inbounds %Type_Info*, %Type_Info** %3723, i64 1
	%3737 = getelementptr inbounds i64, i64* %3725, i64 1
	%3738 = getelementptr inbounds i1, i1* %3726, i64 1
	%3739 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 138
	store %Type_Info* %3739, %Type_Info** %3736
	%3740 = getelementptr inbounds %..string, %..string* %3724, i64 1
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$506, i64 0, i32 0), i64 5}, %..string* %3740
	store i64 8, i64* %3737
	store i1 false, i1* %3738
	%3741 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 138
	%3742 = bitcast %Type_Info* %3741 to %Type_Info*
	%3743 = getelementptr inbounds %Type_Info*, %Type_Info** %3723, i64 2
	%3744 = getelementptr inbounds i64, i64* %3725, i64 2
	%3745 = getelementptr inbounds i1, i1* %3726, i64 2
	%3746 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 138
	store %Type_Info* %3746, %Type_Info** %3743
	%3747 = getelementptr inbounds %..string, %..string* %3724, i64 2
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$507, i64 0, i32 0), i64 4}, %..string* %3747
	store i64 16, i64* %3744
	store i1 false, i1* %3745
	%3748 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	%3749 = bitcast %Type_Info* %3748 to %Type_Info*
	%3750 = getelementptr inbounds %Type_Info*, %Type_Info** %3723, i64 3
	%3751 = getelementptr inbounds i64, i64* %3725, i64 3
	%3752 = getelementptr inbounds i1, i1* %3726, i64 3
	%3753 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	store %Type_Info* %3753, %Type_Info** %3750
	%3754 = getelementptr inbounds %..string, %..string* %3724, i64 3
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$508, i64 0, i32 0), i64 4}, %..string* %3754
	store i64 24, i64* %3751
	store i1 false, i1* %3752
	%3755 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %3718, i64 0, i32 0
	%3756 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %3755, i64 0, i32 0
	store %Type_Info** %3723, %Type_Info*** %3756
	%3757 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %3755, i64 0, i32 1
	store i64 4, i64* %3757
	%3758 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %3718, i64 0, i32 1
	%3759 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %3758, i64 0, i32 0
	store %..string* %3724, %..string** %3759
	%3760 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %3758, i64 0, i32 1
	store i64 4, i64* %3760
	%3761 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %3718, i64 0, i32 2
	%3762 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %3761, i64 0, i32 0
	store i64* %3725, i64** %3762
	%3763 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %3761, i64 0, i32 1
	store i64 4, i64* %3763
	%3764 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %3718, i64 0, i32 3
	%3765 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %3764, i64 0, i32 0
	store i1* %3726, i1** %3765
	%3766 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %3764, i64 0, i32 1
	store i64 4, i64* %3766
	%3767 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %3715, i64 0, i32 2 ; UnionTagPtr
	store i8 16, i8* %3767
	%3768 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 138
	%3769 = getelementptr inbounds %Type_Info, %Type_Info* %3768, i64 0, i32 2
	%3770 = getelementptr inbounds %Type_Info, %Type_Info* %3768, i64 0, i32 0
	store i64 8, i64* %3770
	%3771 = getelementptr inbounds %Type_Info, %Type_Info* %3768, i64 0, i32 1
	store i64 8, i64* %3771
	; TypeInfoPointer
	%3772 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %3769 to %Type_Info_Pointer*
	%3773 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 59
	%3774 = bitcast %Type_Info* %3773 to %Type_Info*
	%3775 = getelementptr inbounds %Type_Info_Pointer, %Type_Info_Pointer* %3772, i64 0, i32 0
	store %Type_Info* %3774, %Type_Info** %3775
	%3776 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %3769, i64 0, i32 2 ; UnionTagPtr
	store i8 9, i8* %3776
	%3777 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 139
	%3778 = getelementptr inbounds %Type_Info, %Type_Info* %3777, i64 0, i32 2
	%3779 = getelementptr inbounds %Type_Info, %Type_Info* %3777, i64 0, i32 0
	store i64 16, i64* %3779
	%3780 = getelementptr inbounds %Type_Info, %Type_Info* %3777, i64 0, i32 1
	store i64 8, i64* %3780
	; TypeInfoNamed
	%3781 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %3778 to %Type_Info_Named*
	%3782 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 140
	%3783 = bitcast %Type_Info* %3782 to %Type_Info*
	%3784 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %3781, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$509, i64 0, i32 0), i64 5}, %..string* %3784
	%3785 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %3781, i64 0, i32 1
	store %Type_Info* %3783, %Type_Info** %3785
	%3786 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %3778, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %3786
	%3787 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 140
	%3788 = getelementptr inbounds %Type_Info, %Type_Info* %3787, i64 0, i32 2
	%3789 = getelementptr inbounds %Type_Info, %Type_Info* %3787, i64 0, i32 0
	store i64 16, i64* %3789
	%3790 = getelementptr inbounds %Type_Info, %Type_Info* %3787, i64 0, i32 1
	store i64 8, i64* %3790
	; TypeInfoStruct
	%3791 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %3788 to %Type_Info_Struct*
	%3792 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %3791, i64 0, i32 4
	store i1 false, i1* %3792
	%3793 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %3791, i64 0, i32 5
	store i1 true, i1* %3793
	%3794 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %3791, i64 0, i32 6
	store i1 false, i1* %3794
	%3795 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %3791, i64 0, i32 7
	store i1 false, i1* %3795
	%3796 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 156
	%3797 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 120
	%3798 = getelementptr inbounds [450 x i64], [450 x i64]* @__$type_info_offsets_data, i64 0, i32 111
	%3799 = getelementptr inbounds [450 x i1], [450 x i1]* @__$type_info_usings_data, i64 0, i32 111
	%3800 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	%3801 = bitcast %Type_Info* %3800 to %Type_Info*
	%3802 = getelementptr inbounds %Type_Info*, %Type_Info** %3796, i64 0
	%3803 = getelementptr inbounds i64, i64* %3798, i64 0
	%3804 = getelementptr inbounds i1, i1* %3799, i64 0
	%3805 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	store %Type_Info* %3805, %Type_Info** %3802
	%3806 = getelementptr inbounds %..string, %..string* %3797, i64 0
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$50a, i64 0, i32 0), i64 5}, %..string* %3806
	store i64 0, i64* %3803
	store i1 false, i1* %3804
	%3807 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	%3808 = bitcast %Type_Info* %3807 to %Type_Info*
	%3809 = getelementptr inbounds %Type_Info*, %Type_Info** %3796, i64 1
	%3810 = getelementptr inbounds i64, i64* %3798, i64 1
	%3811 = getelementptr inbounds i1, i1* %3799, i64 1
	%3812 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	store %Type_Info* %3812, %Type_Info** %3809
	%3813 = getelementptr inbounds %..string, %..string* %3797, i64 1
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$50b, i64 0, i32 0), i64 6}, %..string* %3813
	store i64 4, i64* %3810
	store i1 false, i1* %3811
	%3814 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%3815 = bitcast %Type_Info* %3814 to %Type_Info*
	%3816 = getelementptr inbounds %Type_Info*, %Type_Info** %3796, i64 2
	%3817 = getelementptr inbounds i64, i64* %3798, i64 2
	%3818 = getelementptr inbounds i1, i1* %3799, i64 2
	%3819 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	store %Type_Info* %3819, %Type_Info** %3816
	%3820 = getelementptr inbounds %..string, %..string* %3797, i64 2
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$50c, i64 0, i32 0), i64 6}, %..string* %3820
	store i64 8, i64* %3817
	store i1 false, i1* %3818
	%3821 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %3791, i64 0, i32 0
	%3822 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %3821, i64 0, i32 0
	store %Type_Info** %3796, %Type_Info*** %3822
	%3823 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %3821, i64 0, i32 1
	store i64 3, i64* %3823
	%3824 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %3791, i64 0, i32 1
	%3825 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %3824, i64 0, i32 0
	store %..string* %3797, %..string** %3825
	%3826 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %3824, i64 0, i32 1
	store i64 3, i64* %3826
	%3827 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %3791, i64 0, i32 2
	%3828 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %3827, i64 0, i32 0
	store i64* %3798, i64** %3828
	%3829 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %3827, i64 0, i32 1
	store i64 3, i64* %3829
	%3830 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %3791, i64 0, i32 3
	%3831 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %3830, i64 0, i32 0
	store i1* %3799, i1** %3831
	%3832 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %3830, i64 0, i32 1
	store i64 3, i64* %3832
	%3833 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %3788, i64 0, i32 2 ; UnionTagPtr
	store i8 16, i8* %3833
	%3834 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%3835 = getelementptr inbounds %Type_Info, %Type_Info* %3834, i64 0, i32 2
	%3836 = getelementptr inbounds %Type_Info, %Type_Info* %3834, i64 0, i32 0
	store i64 8, i64* %3836
	%3837 = getelementptr inbounds %Type_Info, %Type_Info* %3834, i64 0, i32 1
	store i64 8, i64* %3837
	; TypeInfoPointer
	%3838 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %3835 to %Type_Info_Pointer*
	%3839 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	%3840 = bitcast %Type_Info* %3839 to %Type_Info*
	%3841 = getelementptr inbounds %Type_Info_Pointer, %Type_Info_Pointer* %3838, i64 0, i32 0
	store %Type_Info* %3840, %Type_Info** %3841
	%3842 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %3835, i64 0, i32 2 ; UnionTagPtr
	store i8 9, i8* %3842
	%3843 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 141
	%3844 = getelementptr inbounds %Type_Info, %Type_Info* %3843, i64 0, i32 2
	%3845 = getelementptr inbounds %Type_Info, %Type_Info* %3843, i64 0, i32 0
	store i64 8, i64* %3845
	%3846 = getelementptr inbounds %Type_Info, %Type_Info* %3843, i64 0, i32 1
	store i64 8, i64* %3846
	; TypeInfoNamed
	%3847 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %3844 to %Type_Info_Named*
	%3848 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 142
	%3849 = bitcast %Type_Info* %3848 to %Type_Info*
	%3850 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %3847, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$50d, i64 0, i32 0), i64 19}, %..string* %3850
	%3851 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %3847, i64 0, i32 1
	store %Type_Info* %3849, %Type_Info** %3851
	%3852 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %3844, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %3852
	%3853 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 142
	%3854 = getelementptr inbounds %Type_Info, %Type_Info* %3853, i64 0, i32 2
	%3855 = getelementptr inbounds %Type_Info, %Type_Info* %3853, i64 0, i32 0
	store i64 8, i64* %3855
	%3856 = getelementptr inbounds %Type_Info, %Type_Info* %3853, i64 0, i32 1
	store i64 8, i64* %3856
	; TypeInfoProc
	%3857 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %3854 to %Type_Info_Procedure*
	%3858 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %3857, i64 0, i32 0
	%3859 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %3857, i64 0, i32 1
	%3860 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %3857, i64 0, i32 2
	%3861 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %3857, i64 0, i32 3
	%3862 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 143
	%3863 = bitcast %Type_Info* %3862 to %Type_Info*
	store %Type_Info* %3863, %Type_Info** %3858
	store i1 false, i1* %3860
	store i64 3, i64* %3861
	%3864 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %3854, i64 0, i32 2 ; UnionTagPtr
	store i8 10, i8* %3864
	%3865 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 143
	%3866 = getelementptr inbounds %Type_Info, %Type_Info* %3865, i64 0, i32 2
	%3867 = getelementptr inbounds %Type_Info, %Type_Info* %3865, i64 0, i32 0
	store i64 16, i64* %3867
	%3868 = getelementptr inbounds %Type_Info, %Type_Info* %3865, i64 0, i32 1
	store i64 8, i64* %3868
	; TypeInfoTuple
	%3869 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %3866 to %Type_Info_Tuple*
	%3870 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 159
	%3871 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 123
	%3872 = getelementptr inbounds %Type_Info*, %Type_Info** %3870, i64 0
	%3873 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 131
	store %Type_Info* %3873, %Type_Info** %3872
	%3874 = getelementptr inbounds %..string, %..string* %3871, i64 0
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$50e, i64 0, i32 0), i64 6}, %..string* %3874
	%3875 = getelementptr inbounds %Type_Info*, %Type_Info** %3870, i64 1
	%3876 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	store %Type_Info* %3876, %Type_Info** %3875
	%3877 = getelementptr inbounds %..string, %..string* %3871, i64 1
	store %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$50f, i64 0, i32 0), i64 9}, %..string* %3877
	%3878 = getelementptr inbounds %Type_Info_Tuple, %Type_Info_Tuple* %3869, i64 0, i32 0
	%3879 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %3878, i64 0, i32 0
	store %Type_Info** %3870, %Type_Info*** %3879
	%3880 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %3878, i64 0, i32 1
	store i64 2, i64* %3880
	%3881 = getelementptr inbounds %Type_Info_Tuple, %Type_Info_Tuple* %3869, i64 0, i32 1
	%3882 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %3881, i64 0, i32 0
	store %..string* %3871, %..string** %3882
	%3883 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %3881, i64 0, i32 1
	store i64 2, i64* %3883
	%3884 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %3866, i64 0, i32 2 ; UnionTagPtr
	store i8 15, i8* %3884
	%3885 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 144
	%3886 = getelementptr inbounds %Type_Info, %Type_Info* %3885, i64 0, i32 2
	%3887 = getelementptr inbounds %Type_Info, %Type_Info* %3885, i64 0, i32 0
	store i64 8, i64* %3887
	%3888 = getelementptr inbounds %Type_Info, %Type_Info* %3885, i64 0, i32 1
	store i64 8, i64* %3888
	; TypeInfoNamed
	%3889 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %3886 to %Type_Info_Named*
	%3890 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 145
	%3891 = bitcast %Type_Info* %3890 to %Type_Info*
	%3892 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %3889, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$510, i64 0, i32 0), i64 19}, %..string* %3892
	%3893 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %3889, i64 0, i32 1
	store %Type_Info* %3891, %Type_Info** %3893
	%3894 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %3886, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %3894
	%3895 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 145
	%3896 = getelementptr inbounds %Type_Info, %Type_Info* %3895, i64 0, i32 2
	%3897 = getelementptr inbounds %Type_Info, %Type_Info* %3895, i64 0, i32 0
	store i64 8, i64* %3897
	%3898 = getelementptr inbounds %Type_Info, %Type_Info* %3895, i64 0, i32 1
	store i64 8, i64* %3898
	; TypeInfoProc
	%3899 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %3896 to %Type_Info_Procedure*
	%3900 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %3899, i64 0, i32 0
	%3901 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %3899, i64 0, i32 1
	%3902 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %3899, i64 0, i32 2
	%3903 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %3899, i64 0, i32 3
	%3904 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 146
	%3905 = bitcast %Type_Info* %3904 to %Type_Info*
	store %Type_Info* %3905, %Type_Info** %3900
	store i1 false, i1* %3902
	store i64 3, i64* %3903
	%3906 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %3896, i64 0, i32 2 ; UnionTagPtr
	store i8 10, i8* %3906
	%3907 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 146
	%3908 = getelementptr inbounds %Type_Info, %Type_Info* %3907, i64 0, i32 2
	%3909 = getelementptr inbounds %Type_Info, %Type_Info* %3907, i64 0, i32 0
	store i64 8, i64* %3909
	%3910 = getelementptr inbounds %Type_Info, %Type_Info* %3907, i64 0, i32 1
	store i64 8, i64* %3910
	; TypeInfoTuple
	%3911 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %3908 to %Type_Info_Tuple*
	%3912 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 161
	%3913 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 125
	%3914 = getelementptr inbounds %Type_Info*, %Type_Info** %3912, i64 0
	%3915 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 131
	store %Type_Info* %3915, %Type_Info** %3914
	%3916 = getelementptr inbounds %..string, %..string* %3913, i64 0
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$511, i64 0, i32 0), i64 6}, %..string* %3916
	%3917 = getelementptr inbounds %Type_Info_Tuple, %Type_Info_Tuple* %3911, i64 0, i32 0
	%3918 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %3917, i64 0, i32 0
	store %Type_Info** %3912, %Type_Info*** %3918
	%3919 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %3917, i64 0, i32 1
	store i64 1, i64* %3919
	%3920 = getelementptr inbounds %Type_Info_Tuple, %Type_Info_Tuple* %3911, i64 0, i32 1
	%3921 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %3920, i64 0, i32 0
	store %..string* %3913, %..string** %3921
	%3922 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %3920, i64 0, i32 1
	store i64 1, i64* %3922
	%3923 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %3908, i64 0, i32 2 ; UnionTagPtr
	store i8 15, i8* %3923
	%3924 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 147
	%3925 = getelementptr inbounds %Type_Info, %Type_Info* %3924, i64 0, i32 2
	%3926 = getelementptr inbounds %Type_Info, %Type_Info* %3924, i64 0, i32 0
	store i64 8, i64* %3926
	%3927 = getelementptr inbounds %Type_Info, %Type_Info* %3924, i64 0, i32 1
	store i64 8, i64* %3927
	; TypeInfoNamed
	%3928 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %3925 to %Type_Info_Named*
	%3929 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 142
	%3930 = bitcast %Type_Info* %3929 to %Type_Info*
	%3931 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %3928, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__str$512, i64 0, i32 0), i64 17}, %..string* %3931
	%3932 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %3928, i64 0, i32 1
	store %Type_Info* %3930, %Type_Info** %3932
	%3933 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %3925, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %3933
	%3934 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 142
	%3935 = getelementptr inbounds %Type_Info, %Type_Info* %3934, i64 0, i32 2
	%3936 = getelementptr inbounds %Type_Info, %Type_Info* %3934, i64 0, i32 0
	store i64 8, i64* %3936
	%3937 = getelementptr inbounds %Type_Info, %Type_Info* %3934, i64 0, i32 1
	store i64 8, i64* %3937
	; TypeInfoProc
	%3938 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %3935 to %Type_Info_Procedure*
	%3939 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %3938, i64 0, i32 0
	%3940 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %3938, i64 0, i32 1
	%3941 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %3938, i64 0, i32 2
	%3942 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %3938, i64 0, i32 3
	%3943 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 143
	%3944 = bitcast %Type_Info* %3943 to %Type_Info*
	store %Type_Info* %3944, %Type_Info** %3939
	store i1 false, i1* %3941
	store i64 3, i64* %3942
	%3945 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %3935, i64 0, i32 2 ; UnionTagPtr
	store i8 10, i8* %3945
	%3946 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 143
	%3947 = getelementptr inbounds %Type_Info, %Type_Info* %3946, i64 0, i32 2
	%3948 = getelementptr inbounds %Type_Info, %Type_Info* %3946, i64 0, i32 0
	store i64 16, i64* %3948
	%3949 = getelementptr inbounds %Type_Info, %Type_Info* %3946, i64 0, i32 1
	store i64 8, i64* %3949
	; TypeInfoTuple
	%3950 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %3947 to %Type_Info_Tuple*
	%3951 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 162
	%3952 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 126
	%3953 = getelementptr inbounds %Type_Info*, %Type_Info** %3951, i64 0
	%3954 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 131
	store %Type_Info* %3954, %Type_Info** %3953
	%3955 = getelementptr inbounds %..string, %..string* %3952, i64 0
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$513, i64 0, i32 0), i64 6}, %..string* %3955
	%3956 = getelementptr inbounds %Type_Info*, %Type_Info** %3951, i64 1
	%3957 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	store %Type_Info* %3957, %Type_Info** %3956
	%3958 = getelementptr inbounds %..string, %..string* %3952, i64 1
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$514, i64 0, i32 0), i64 7}, %..string* %3958
	%3959 = getelementptr inbounds %Type_Info_Tuple, %Type_Info_Tuple* %3950, i64 0, i32 0
	%3960 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %3959, i64 0, i32 0
	store %Type_Info** %3951, %Type_Info*** %3960
	%3961 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %3959, i64 0, i32 1
	store i64 2, i64* %3961
	%3962 = getelementptr inbounds %Type_Info_Tuple, %Type_Info_Tuple* %3950, i64 0, i32 1
	%3963 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %3962, i64 0, i32 0
	store %..string* %3952, %..string** %3963
	%3964 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %3962, i64 0, i32 1
	store i64 2, i64* %3964
	%3965 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %3947, i64 0, i32 2 ; UnionTagPtr
	store i8 15, i8* %3965
	%3966 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 148
	%3967 = getelementptr inbounds %Type_Info, %Type_Info* %3966, i64 0, i32 2
	%3968 = getelementptr inbounds %Type_Info, %Type_Info* %3966, i64 0, i32 0
	store i64 8, i64* %3968
	%3969 = getelementptr inbounds %Type_Info, %Type_Info* %3966, i64 0, i32 1
	store i64 8, i64* %3969
	; TypeInfoNamed
	%3970 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %3967 to %Type_Info_Named*
	%3971 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 145
	%3972 = bitcast %Type_Info* %3971 to %Type_Info*
	%3973 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %3970, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__str$515, i64 0, i32 0), i64 17}, %..string* %3973
	%3974 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %3970, i64 0, i32 1
	store %Type_Info* %3972, %Type_Info** %3974
	%3975 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %3967, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %3975
	%3976 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 145
	%3977 = getelementptr inbounds %Type_Info, %Type_Info* %3976, i64 0, i32 2
	%3978 = getelementptr inbounds %Type_Info, %Type_Info* %3976, i64 0, i32 0
	store i64 8, i64* %3978
	%3979 = getelementptr inbounds %Type_Info, %Type_Info* %3976, i64 0, i32 1
	store i64 8, i64* %3979
	; TypeInfoProc
	%3980 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %3977 to %Type_Info_Procedure*
	%3981 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %3980, i64 0, i32 0
	%3982 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %3980, i64 0, i32 1
	%3983 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %3980, i64 0, i32 2
	%3984 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %3980, i64 0, i32 3
	%3985 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 146
	%3986 = bitcast %Type_Info* %3985 to %Type_Info*
	store %Type_Info* %3986, %Type_Info** %3981
	store i1 false, i1* %3983
	store i64 3, i64* %3984
	%3987 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %3977, i64 0, i32 2 ; UnionTagPtr
	store i8 10, i8* %3987
	%3988 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 146
	%3989 = getelementptr inbounds %Type_Info, %Type_Info* %3988, i64 0, i32 2
	%3990 = getelementptr inbounds %Type_Info, %Type_Info* %3988, i64 0, i32 0
	store i64 8, i64* %3990
	%3991 = getelementptr inbounds %Type_Info, %Type_Info* %3988, i64 0, i32 1
	store i64 8, i64* %3991
	; TypeInfoTuple
	%3992 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %3989 to %Type_Info_Tuple*
	%3993 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 164
	%3994 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 128
	%3995 = getelementptr inbounds %Type_Info*, %Type_Info** %3993, i64 0
	%3996 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 131
	store %Type_Info* %3996, %Type_Info** %3995
	%3997 = getelementptr inbounds %..string, %..string* %3994, i64 0
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$516, i64 0, i32 0), i64 6}, %..string* %3997
	%3998 = getelementptr inbounds %Type_Info_Tuple, %Type_Info_Tuple* %3992, i64 0, i32 0
	%3999 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %3998, i64 0, i32 0
	store %Type_Info** %3993, %Type_Info*** %3999
	%4000 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %3998, i64 0, i32 1
	store i64 1, i64* %4000
	%4001 = getelementptr inbounds %Type_Info_Tuple, %Type_Info_Tuple* %3992, i64 0, i32 1
	%4002 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %4001, i64 0, i32 0
	store %..string* %3994, %..string** %4002
	%4003 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %4001, i64 0, i32 1
	store i64 1, i64* %4003
	%4004 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %3989, i64 0, i32 2 ; UnionTagPtr
	store i8 15, i8* %4004
	%4005 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 149
	%4006 = getelementptr inbounds %Type_Info, %Type_Info* %4005, i64 0, i32 2
	%4007 = getelementptr inbounds %Type_Info, %Type_Info* %4005, i64 0, i32 0
	store i64 8, i64* %4007
	%4008 = getelementptr inbounds %Type_Info, %Type_Info* %4005, i64 0, i32 1
	store i64 8, i64* %4008
	; TypeInfoNamed
	%4009 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %4006 to %Type_Info_Named*
	%4010 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 150
	%4011 = bitcast %Type_Info* %4010 to %Type_Info*
	%4012 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %4009, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$517, i64 0, i32 0), i64 16}, %..string* %4012
	%4013 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %4009, i64 0, i32 1
	store %Type_Info* %4011, %Type_Info** %4013
	%4014 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %4006, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %4014
	%4015 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 150
	%4016 = getelementptr inbounds %Type_Info, %Type_Info* %4015, i64 0, i32 2
	%4017 = getelementptr inbounds %Type_Info, %Type_Info* %4015, i64 0, i32 0
	store i64 8, i64* %4017
	%4018 = getelementptr inbounds %Type_Info, %Type_Info* %4015, i64 0, i32 1
	store i64 8, i64* %4018
	; TypeInfoProc
	%4019 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %4016 to %Type_Info_Procedure*
	%4020 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %4019, i64 0, i32 0
	%4021 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %4019, i64 0, i32 1
	%4022 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %4019, i64 0, i32 2
	%4023 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %4019, i64 0, i32 3
	%4024 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 151
	%4025 = bitcast %Type_Info* %4024 to %Type_Info*
	store %Type_Info* %4025, %Type_Info** %4020
	store i1 false, i1* %4022
	store i64 3, i64* %4023
	%4026 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %4016, i64 0, i32 2 ; UnionTagPtr
	store i8 10, i8* %4026
	%4027 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 151
	%4028 = getelementptr inbounds %Type_Info, %Type_Info* %4027, i64 0, i32 2
	%4029 = getelementptr inbounds %Type_Info, %Type_Info* %4027, i64 0, i32 0
	store i64 16, i64* %4029
	%4030 = getelementptr inbounds %Type_Info, %Type_Info* %4027, i64 0, i32 1
	store i64 8, i64* %4030
	; TypeInfoTuple
	%4031 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %4028 to %Type_Info_Tuple*
	%4032 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 165
	%4033 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 129
	%4034 = getelementptr inbounds %Type_Info*, %Type_Info** %4032, i64 0
	%4035 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 131
	store %Type_Info* %4035, %Type_Info** %4034
	%4036 = getelementptr inbounds %..string, %..string* %4033, i64 0
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$518, i64 0, i32 0), i64 6}, %..string* %4036
	%4037 = getelementptr inbounds %Type_Info*, %Type_Info** %4032, i64 1
	%4038 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	store %Type_Info* %4038, %Type_Info** %4037
	%4039 = getelementptr inbounds %..string, %..string* %4033, i64 1
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$519, i64 0, i32 0), i64 5}, %..string* %4039
	%4040 = getelementptr inbounds %Type_Info*, %Type_Info** %4032, i64 2
	%4041 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	store %Type_Info* %4041, %Type_Info** %4040
	%4042 = getelementptr inbounds %..string, %..string* %4033, i64 2
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$51a, i64 0, i32 0), i64 6}, %..string* %4042
	%4043 = getelementptr inbounds %Type_Info_Tuple, %Type_Info_Tuple* %4031, i64 0, i32 0
	%4044 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %4043, i64 0, i32 0
	store %Type_Info** %4032, %Type_Info*** %4044
	%4045 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %4043, i64 0, i32 1
	store i64 3, i64* %4045
	%4046 = getelementptr inbounds %Type_Info_Tuple, %Type_Info_Tuple* %4031, i64 0, i32 1
	%4047 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %4046, i64 0, i32 0
	store %..string* %4033, %..string** %4047
	%4048 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %4046, i64 0, i32 1
	store i64 3, i64* %4048
	%4049 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %4028, i64 0, i32 2 ; UnionTagPtr
	store i8 15, i8* %4049
	%4050 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 152
	%4051 = getelementptr inbounds %Type_Info, %Type_Info* %4050, i64 0, i32 2
	%4052 = getelementptr inbounds %Type_Info, %Type_Info* %4050, i64 0, i32 0
	store i64 8, i64* %4052
	%4053 = getelementptr inbounds %Type_Info, %Type_Info* %4050, i64 0, i32 1
	store i64 8, i64* %4053
	; TypeInfoNamed
	%4054 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %4051 to %Type_Info_Named*
	%4055 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 150
	%4056 = bitcast %Type_Info* %4055 to %Type_Info*
	%4057 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %4054, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$51b, i64 0, i32 0), i64 15}, %..string* %4057
	%4058 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %4054, i64 0, i32 1
	store %Type_Info* %4056, %Type_Info** %4058
	%4059 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %4051, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %4059
	%4060 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 150
	%4061 = getelementptr inbounds %Type_Info, %Type_Info* %4060, i64 0, i32 2
	%4062 = getelementptr inbounds %Type_Info, %Type_Info* %4060, i64 0, i32 0
	store i64 8, i64* %4062
	%4063 = getelementptr inbounds %Type_Info, %Type_Info* %4060, i64 0, i32 1
	store i64 8, i64* %4063
	; TypeInfoProc
	%4064 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %4061 to %Type_Info_Procedure*
	%4065 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %4064, i64 0, i32 0
	%4066 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %4064, i64 0, i32 1
	%4067 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %4064, i64 0, i32 2
	%4068 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %4064, i64 0, i32 3
	%4069 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 151
	%4070 = bitcast %Type_Info* %4069 to %Type_Info*
	store %Type_Info* %4070, %Type_Info** %4065
	store i1 false, i1* %4067
	store i64 3, i64* %4068
	%4071 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %4061, i64 0, i32 2 ; UnionTagPtr
	store i8 10, i8* %4071
	%4072 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 151
	%4073 = getelementptr inbounds %Type_Info, %Type_Info* %4072, i64 0, i32 2
	%4074 = getelementptr inbounds %Type_Info, %Type_Info* %4072, i64 0, i32 0
	store i64 16, i64* %4074
	%4075 = getelementptr inbounds %Type_Info, %Type_Info* %4072, i64 0, i32 1
	store i64 8, i64* %4075
	; TypeInfoTuple
	%4076 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %4073 to %Type_Info_Tuple*
	%4077 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 168
	%4078 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 132
	%4079 = getelementptr inbounds %Type_Info*, %Type_Info** %4077, i64 0
	%4080 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 131
	store %Type_Info* %4080, %Type_Info** %4079
	%4081 = getelementptr inbounds %..string, %..string* %4078, i64 0
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$51c, i64 0, i32 0), i64 6}, %..string* %4081
	%4082 = getelementptr inbounds %Type_Info*, %Type_Info** %4077, i64 1
	%4083 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	store %Type_Info* %4083, %Type_Info** %4082
	%4084 = getelementptr inbounds %..string, %..string* %4078, i64 1
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$51d, i64 0, i32 0), i64 4}, %..string* %4084
	%4085 = getelementptr inbounds %Type_Info*, %Type_Info** %4077, i64 2
	%4086 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	store %Type_Info* %4086, %Type_Info** %4085
	%4087 = getelementptr inbounds %..string, %..string* %4078, i64 2
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$51e, i64 0, i32 0), i64 4}, %..string* %4087
	%4088 = getelementptr inbounds %Type_Info_Tuple, %Type_Info_Tuple* %4076, i64 0, i32 0
	%4089 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %4088, i64 0, i32 0
	store %Type_Info** %4077, %Type_Info*** %4089
	%4090 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %4088, i64 0, i32 1
	store i64 3, i64* %4090
	%4091 = getelementptr inbounds %Type_Info_Tuple, %Type_Info_Tuple* %4076, i64 0, i32 1
	%4092 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %4091, i64 0, i32 0
	store %..string* %4078, %..string** %4092
	%4093 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %4091, i64 0, i32 1
	store i64 3, i64* %4093
	%4094 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %4073, i64 0, i32 2 ; UnionTagPtr
	store i8 15, i8* %4094
	%4095 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 153
	%4096 = getelementptr inbounds %Type_Info, %Type_Info* %4095, i64 0, i32 2
	%4097 = getelementptr inbounds %Type_Info, %Type_Info* %4095, i64 0, i32 0
	store i64 8, i64* %4097
	%4098 = getelementptr inbounds %Type_Info, %Type_Info* %4095, i64 0, i32 1
	store i64 8, i64* %4098
	; TypeInfoNamed
	%4099 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %4096 to %Type_Info_Named*
	%4100 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 150
	%4101 = bitcast %Type_Info* %4100 to %Type_Info*
	%4102 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %4099, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$51f, i64 0, i32 0), i64 21}, %..string* %4102
	%4103 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %4099, i64 0, i32 1
	store %Type_Info* %4101, %Type_Info** %4103
	%4104 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %4096, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %4104
	%4105 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 150
	%4106 = getelementptr inbounds %Type_Info, %Type_Info* %4105, i64 0, i32 2
	%4107 = getelementptr inbounds %Type_Info, %Type_Info* %4105, i64 0, i32 0
	store i64 8, i64* %4107
	%4108 = getelementptr inbounds %Type_Info, %Type_Info* %4105, i64 0, i32 1
	store i64 8, i64* %4108
	; TypeInfoProc
	%4109 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %4106 to %Type_Info_Procedure*
	%4110 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %4109, i64 0, i32 0
	%4111 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %4109, i64 0, i32 1
	%4112 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %4109, i64 0, i32 2
	%4113 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %4109, i64 0, i32 3
	%4114 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 151
	%4115 = bitcast %Type_Info* %4114 to %Type_Info*
	store %Type_Info* %4115, %Type_Info** %4110
	store i1 false, i1* %4112
	store i64 3, i64* %4113
	%4116 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %4106, i64 0, i32 2 ; UnionTagPtr
	store i8 10, i8* %4116
	%4117 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 151
	%4118 = getelementptr inbounds %Type_Info, %Type_Info* %4117, i64 0, i32 2
	%4119 = getelementptr inbounds %Type_Info, %Type_Info* %4117, i64 0, i32 0
	store i64 16, i64* %4119
	%4120 = getelementptr inbounds %Type_Info, %Type_Info* %4117, i64 0, i32 1
	store i64 8, i64* %4120
	; TypeInfoTuple
	%4121 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %4118 to %Type_Info_Tuple*
	%4122 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 171
	%4123 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 135
	%4124 = getelementptr inbounds %Type_Info*, %Type_Info** %4122, i64 0
	%4125 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 131
	store %Type_Info* %4125, %Type_Info** %4124
	%4126 = getelementptr inbounds %..string, %..string* %4123, i64 0
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$520, i64 0, i32 0), i64 6}, %..string* %4126
	%4127 = getelementptr inbounds %Type_Info*, %Type_Info** %4122, i64 1
	%4128 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	store %Type_Info* %4128, %Type_Info** %4127
	%4129 = getelementptr inbounds %..string, %..string* %4123, i64 1
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$521, i64 0, i32 0), i64 5}, %..string* %4129
	%4130 = getelementptr inbounds %Type_Info*, %Type_Info** %4122, i64 2
	%4131 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	store %Type_Info* %4131, %Type_Info** %4130
	%4132 = getelementptr inbounds %..string, %..string* %4123, i64 2
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$522, i64 0, i32 0), i64 6}, %..string* %4132
	%4133 = getelementptr inbounds %Type_Info_Tuple, %Type_Info_Tuple* %4121, i64 0, i32 0
	%4134 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %4133, i64 0, i32 0
	store %Type_Info** %4122, %Type_Info*** %4134
	%4135 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %4133, i64 0, i32 1
	store i64 3, i64* %4135
	%4136 = getelementptr inbounds %Type_Info_Tuple, %Type_Info_Tuple* %4121, i64 0, i32 1
	%4137 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %4136, i64 0, i32 0
	store %..string* %4123, %..string** %4137
	%4138 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %4136, i64 0, i32 1
	store i64 3, i64* %4138
	%4139 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %4118, i64 0, i32 2 ; UnionTagPtr
	store i8 15, i8* %4139
	%4140 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 154
	%4141 = getelementptr inbounds %Type_Info, %Type_Info* %4140, i64 0, i32 2
	%4142 = getelementptr inbounds %Type_Info, %Type_Info* %4140, i64 0, i32 0
	store i64 8, i64* %4142
	%4143 = getelementptr inbounds %Type_Info, %Type_Info* %4140, i64 0, i32 1
	store i64 8, i64* %4143
	; TypeInfoNamed
	%4144 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %4141 to %Type_Info_Named*
	%4145 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 155
	%4146 = bitcast %Type_Info* %4145 to %Type_Info*
	%4147 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %4144, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$523, i64 0, i32 0), i64 9}, %..string* %4147
	%4148 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %4144, i64 0, i32 1
	store %Type_Info* %4146, %Type_Info** %4148
	%4149 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %4141, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %4149
	%4150 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 155
	%4151 = getelementptr inbounds %Type_Info, %Type_Info* %4150, i64 0, i32 2
	%4152 = getelementptr inbounds %Type_Info, %Type_Info* %4150, i64 0, i32 0
	store i64 8, i64* %4152
	%4153 = getelementptr inbounds %Type_Info, %Type_Info* %4150, i64 0, i32 1
	store i64 8, i64* %4153
	; TypeInfoProc
	%4154 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %4151 to %Type_Info_Procedure*
	%4155 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %4154, i64 0, i32 0
	%4156 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %4154, i64 0, i32 1
	%4157 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %4154, i64 0, i32 2
	%4158 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %4154, i64 0, i32 3
	%4159 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 156
	%4160 = bitcast %Type_Info* %4159 to %Type_Info*
	store %Type_Info* %4160, %Type_Info** %4155
	store i1 false, i1* %4157
	store i64 3, i64* %4158
	%4161 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %4151, i64 0, i32 2 ; UnionTagPtr
	store i8 10, i8* %4161
	%4162 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 156
	%4163 = getelementptr inbounds %Type_Info, %Type_Info* %4162, i64 0, i32 2
	%4164 = getelementptr inbounds %Type_Info, %Type_Info* %4162, i64 0, i32 0
	store i64 24, i64* %4164
	%4165 = getelementptr inbounds %Type_Info, %Type_Info* %4162, i64 0, i32 1
	store i64 8, i64* %4165
	; TypeInfoTuple
	%4166 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %4163 to %Type_Info_Tuple*
	%4167 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 174
	%4168 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 138
	%4169 = getelementptr inbounds %Type_Info*, %Type_Info** %4167, i64 0
	%4170 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 131
	store %Type_Info* %4170, %Type_Info** %4169
	%4171 = getelementptr inbounds %..string, %..string* %4168, i64 0
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$524, i64 0, i32 0), i64 6}, %..string* %4171
	%4172 = getelementptr inbounds %Type_Info*, %Type_Info** %4167, i64 1
	%4173 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	store %Type_Info* %4173, %Type_Info** %4172
	%4174 = getelementptr inbounds %..string, %..string* %4168, i64 1
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$525, i64 0, i32 0), i64 5}, %..string* %4174
	%4175 = getelementptr inbounds %Type_Info*, %Type_Info** %4167, i64 2
	%4176 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 157
	store %Type_Info* %4176, %Type_Info** %4175
	%4177 = getelementptr inbounds %..string, %..string* %4168, i64 2
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$526, i64 0, i32 0), i64 5}, %..string* %4177
	%4178 = getelementptr inbounds %Type_Info_Tuple, %Type_Info_Tuple* %4166, i64 0, i32 0
	%4179 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %4178, i64 0, i32 0
	store %Type_Info** %4167, %Type_Info*** %4179
	%4180 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %4178, i64 0, i32 1
	store i64 3, i64* %4180
	%4181 = getelementptr inbounds %Type_Info_Tuple, %Type_Info_Tuple* %4166, i64 0, i32 1
	%4182 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %4181, i64 0, i32 0
	store %..string* %4168, %..string** %4182
	%4183 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %4181, i64 0, i32 1
	store i64 3, i64* %4183
	%4184 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %4163, i64 0, i32 2 ; UnionTagPtr
	store i8 15, i8* %4184
	%4185 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 157
	%4186 = getelementptr inbounds %Type_Info, %Type_Info* %4185, i64 0, i32 2
	%4187 = getelementptr inbounds %Type_Info, %Type_Info* %4185, i64 0, i32 0
	store i64 8, i64* %4187
	%4188 = getelementptr inbounds %Type_Info, %Type_Info* %4185, i64 0, i32 1
	store i64 8, i64* %4188
	; TypeInfoPointer
	%4189 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %4186 to %Type_Info_Pointer*
	%4190 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%4191 = bitcast %Type_Info* %4190 to %Type_Info*
	%4192 = getelementptr inbounds %Type_Info_Pointer, %Type_Info_Pointer* %4189, i64 0, i32 0
	store %Type_Info* %4191, %Type_Info** %4192
	%4193 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %4186, i64 0, i32 2 ; UnionTagPtr
	store i8 9, i8* %4193
	%4194 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%4195 = getelementptr inbounds %Type_Info, %Type_Info* %4194, i64 0, i32 2
	%4196 = getelementptr inbounds %Type_Info, %Type_Info* %4194, i64 0, i32 0
	store i64 8, i64* %4196
	%4197 = getelementptr inbounds %Type_Info, %Type_Info* %4194, i64 0, i32 1
	store i64 8, i64* %4197
	; TypeInfoPointer
	%4198 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %4195 to %Type_Info_Pointer*
	%4199 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	%4200 = bitcast %Type_Info* %4199 to %Type_Info*
	%4201 = getelementptr inbounds %Type_Info_Pointer, %Type_Info_Pointer* %4198, i64 0, i32 0
	store %Type_Info* %4200, %Type_Info** %4201
	%4202 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %4195, i64 0, i32 2 ; UnionTagPtr
	store i8 9, i8* %4202
	%4203 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 158
	%4204 = getelementptr inbounds %Type_Info, %Type_Info* %4203, i64 0, i32 2
	%4205 = getelementptr inbounds %Type_Info, %Type_Info* %4203, i64 0, i32 0
	store i64 8, i64* %4205
	%4206 = getelementptr inbounds %Type_Info, %Type_Info* %4203, i64 0, i32 1
	store i64 8, i64* %4206
	; TypeInfoNamed
	%4207 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %4204 to %Type_Info_Named*
	%4208 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 145
	%4209 = bitcast %Type_Info* %4208 to %Type_Info*
	%4210 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %4207, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$527, i64 0, i32 0), i64 12}, %..string* %4210
	%4211 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %4207, i64 0, i32 1
	store %Type_Info* %4209, %Type_Info** %4211
	%4212 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %4204, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %4212
	%4213 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 145
	%4214 = getelementptr inbounds %Type_Info, %Type_Info* %4213, i64 0, i32 2
	%4215 = getelementptr inbounds %Type_Info, %Type_Info* %4213, i64 0, i32 0
	store i64 8, i64* %4215
	%4216 = getelementptr inbounds %Type_Info, %Type_Info* %4213, i64 0, i32 1
	store i64 8, i64* %4216
	; TypeInfoProc
	%4217 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %4214 to %Type_Info_Procedure*
	%4218 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %4217, i64 0, i32 0
	%4219 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %4217, i64 0, i32 1
	%4220 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %4217, i64 0, i32 2
	%4221 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %4217, i64 0, i32 3
	%4222 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 146
	%4223 = bitcast %Type_Info* %4222 to %Type_Info*
	store %Type_Info* %4223, %Type_Info** %4218
	store i1 false, i1* %4220
	store i64 3, i64* %4221
	%4224 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %4214, i64 0, i32 2 ; UnionTagPtr
	store i8 10, i8* %4224
	%4225 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 146
	%4226 = getelementptr inbounds %Type_Info, %Type_Info* %4225, i64 0, i32 2
	%4227 = getelementptr inbounds %Type_Info, %Type_Info* %4225, i64 0, i32 0
	store i64 8, i64* %4227
	%4228 = getelementptr inbounds %Type_Info, %Type_Info* %4225, i64 0, i32 1
	store i64 8, i64* %4228
	; TypeInfoTuple
	%4229 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %4226 to %Type_Info_Tuple*
	%4230 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 177
	%4231 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 141
	%4232 = getelementptr inbounds %Type_Info*, %Type_Info** %4230, i64 0
	%4233 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 131
	store %Type_Info* %4233, %Type_Info** %4232
	%4234 = getelementptr inbounds %..string, %..string* %4231, i64 0
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$528, i64 0, i32 0), i64 6}, %..string* %4234
	%4235 = getelementptr inbounds %Type_Info_Tuple, %Type_Info_Tuple* %4229, i64 0, i32 0
	%4236 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %4235, i64 0, i32 0
	store %Type_Info** %4230, %Type_Info*** %4236
	%4237 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %4235, i64 0, i32 1
	store i64 1, i64* %4237
	%4238 = getelementptr inbounds %Type_Info_Tuple, %Type_Info_Tuple* %4229, i64 0, i32 1
	%4239 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %4238, i64 0, i32 0
	store %..string* %4231, %..string** %4239
	%4240 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %4238, i64 0, i32 1
	store i64 1, i64* %4240
	%4241 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %4226, i64 0, i32 2 ; UnionTagPtr
	store i8 15, i8* %4241
	%4242 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 159
	%4243 = getelementptr inbounds %Type_Info, %Type_Info* %4242, i64 0, i32 2
	%4244 = getelementptr inbounds %Type_Info, %Type_Info* %4242, i64 0, i32 0
	store i64 8, i64* %4244
	%4245 = getelementptr inbounds %Type_Info, %Type_Info* %4242, i64 0, i32 1
	store i64 8, i64* %4245
	; TypeInfoNamed
	%4246 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %4243 to %Type_Info_Named*
	%4247 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 160
	%4248 = bitcast %Type_Info* %4247 to %Type_Info*
	%4249 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %4246, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$529, i64 0, i32 0), i64 8}, %..string* %4249
	%4250 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %4246, i64 0, i32 1
	store %Type_Info* %4248, %Type_Info** %4250
	%4251 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %4243, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %4251
	%4252 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 160
	%4253 = getelementptr inbounds %Type_Info, %Type_Info* %4252, i64 0, i32 2
	%4254 = getelementptr inbounds %Type_Info, %Type_Info* %4252, i64 0, i32 0
	store i64 8, i64* %4254
	%4255 = getelementptr inbounds %Type_Info, %Type_Info* %4252, i64 0, i32 1
	store i64 8, i64* %4255
	; TypeInfoProc
	%4256 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %4253 to %Type_Info_Procedure*
	%4257 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %4256, i64 0, i32 0
	%4258 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %4256, i64 0, i32 1
	%4259 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %4256, i64 0, i32 2
	%4260 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %4256, i64 0, i32 3
	%4261 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 161
	%4262 = bitcast %Type_Info* %4261 to %Type_Info*
	store %Type_Info* %4262, %Type_Info** %4257
	store i1 false, i1* %4259
	store i64 3, i64* %4260
	%4263 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %4253, i64 0, i32 2 ; UnionTagPtr
	store i8 10, i8* %4263
	%4264 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 161
	%4265 = getelementptr inbounds %Type_Info, %Type_Info* %4264, i64 0, i32 2
	%4266 = getelementptr inbounds %Type_Info, %Type_Info* %4264, i64 0, i32 0
	store i64 24, i64* %4266
	%4267 = getelementptr inbounds %Type_Info, %Type_Info* %4264, i64 0, i32 1
	store i64 8, i64* %4267
	; TypeInfoTuple
	%4268 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %4265 to %Type_Info_Tuple*
	%4269 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 178
	%4270 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 142
	%4271 = getelementptr inbounds %Type_Info*, %Type_Info** %4269, i64 0
	%4272 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 131
	store %Type_Info* %4272, %Type_Info** %4271
	%4273 = getelementptr inbounds %..string, %..string* %4270, i64 0
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$52a, i64 0, i32 0), i64 6}, %..string* %4273
	%4274 = getelementptr inbounds %Type_Info*, %Type_Info** %4269, i64 1
	%4275 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	store %Type_Info* %4275, %Type_Info** %4274
	%4276 = getelementptr inbounds %..string, %..string* %4270, i64 1
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$52b, i64 0, i32 0), i64 3}, %..string* %4276
	%4277 = getelementptr inbounds %Type_Info*, %Type_Info** %4269, i64 2
	%4278 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	store %Type_Info* %4278, %Type_Info** %4277
	%4279 = getelementptr inbounds %..string, %..string* %4270, i64 2
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$52c, i64 0, i32 0), i64 8}, %..string* %4279
	%4280 = getelementptr inbounds %Type_Info*, %Type_Info** %4269, i64 3
	%4281 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	store %Type_Info* %4281, %Type_Info** %4280
	%4282 = getelementptr inbounds %..string, %..string* %4270, i64 3
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$52d, i64 0, i32 0), i64 6}, %..string* %4282
	%4283 = getelementptr inbounds %Type_Info*, %Type_Info** %4269, i64 4
	%4284 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	store %Type_Info* %4284, %Type_Info** %4283
	%4285 = getelementptr inbounds %..string, %..string* %4270, i64 4
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$52e, i64 0, i32 0), i64 4}, %..string* %4285
	%4286 = getelementptr inbounds %Type_Info_Tuple, %Type_Info_Tuple* %4268, i64 0, i32 0
	%4287 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %4286, i64 0, i32 0
	store %Type_Info** %4269, %Type_Info*** %4287
	%4288 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %4286, i64 0, i32 1
	store i64 5, i64* %4288
	%4289 = getelementptr inbounds %Type_Info_Tuple, %Type_Info_Tuple* %4268, i64 0, i32 1
	%4290 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %4289, i64 0, i32 0
	store %..string* %4270, %..string** %4290
	%4291 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %4289, i64 0, i32 1
	store i64 5, i64* %4291
	%4292 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %4265, i64 0, i32 2 ; UnionTagPtr
	store i8 15, i8* %4292
	%4293 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 162
	%4294 = getelementptr inbounds %Type_Info, %Type_Info* %4293, i64 0, i32 2
	%4295 = getelementptr inbounds %Type_Info, %Type_Info* %4293, i64 0, i32 0
	store i64 8, i64* %4295
	%4296 = getelementptr inbounds %Type_Info, %Type_Info* %4293, i64 0, i32 1
	store i64 8, i64* %4296
	; TypeInfoNamed
	%4297 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %4294 to %Type_Info_Named*
	%4298 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 163
	%4299 = bitcast %Type_Info* %4298 to %Type_Info*
	%4300 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %4297, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__str$52f, i64 0, i32 0), i64 17}, %..string* %4300
	%4301 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %4297, i64 0, i32 1
	store %Type_Info* %4299, %Type_Info** %4301
	%4302 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %4294, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %4302
	%4303 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 163
	%4304 = getelementptr inbounds %Type_Info, %Type_Info* %4303, i64 0, i32 2
	%4305 = getelementptr inbounds %Type_Info, %Type_Info* %4303, i64 0, i32 0
	store i64 8, i64* %4305
	%4306 = getelementptr inbounds %Type_Info, %Type_Info* %4303, i64 0, i32 1
	store i64 8, i64* %4306
	; TypeInfoProc
	%4307 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %4304 to %Type_Info_Procedure*
	%4308 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %4307, i64 0, i32 0
	%4309 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %4307, i64 0, i32 1
	%4310 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %4307, i64 0, i32 2
	%4311 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %4307, i64 0, i32 3
	%4312 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 164
	%4313 = bitcast %Type_Info* %4312 to %Type_Info*
	store %Type_Info* %4313, %Type_Info** %4308
	store i1 false, i1* %4310
	store i64 3, i64* %4311
	%4314 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %4304, i64 0, i32 2 ; UnionTagPtr
	store i8 10, i8* %4314
	%4315 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 164
	%4316 = getelementptr inbounds %Type_Info, %Type_Info* %4315, i64 0, i32 2
	%4317 = getelementptr inbounds %Type_Info, %Type_Info* %4315, i64 0, i32 0
	store i64 24, i64* %4317
	%4318 = getelementptr inbounds %Type_Info, %Type_Info* %4315, i64 0, i32 1
	store i64 8, i64* %4318
	; TypeInfoTuple
	%4319 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %4316 to %Type_Info_Tuple*
	%4320 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 183
	%4321 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 147
	%4322 = getelementptr inbounds %Type_Info*, %Type_Info** %4320, i64 0
	%4323 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 131
	store %Type_Info* %4323, %Type_Info** %4322
	%4324 = getelementptr inbounds %..string, %..string* %4321, i64 0
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$530, i64 0, i32 0), i64 6}, %..string* %4324
	%4325 = getelementptr inbounds %Type_Info*, %Type_Info** %4320, i64 1
	%4326 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	store %Type_Info* %4326, %Type_Info** %4325
	%4327 = getelementptr inbounds %..string, %..string* %4321, i64 1
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$531, i64 0, i32 0), i64 6}, %..string* %4327
	%4328 = getelementptr inbounds %Type_Info*, %Type_Info** %4320, i64 2
	%4329 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	store %Type_Info* %4329, %Type_Info** %4328
	%4330 = getelementptr inbounds %..string, %..string* %4321, i64 2
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$532, i64 0, i32 0), i64 6}, %..string* %4330
	%4331 = getelementptr inbounds %Type_Info*, %Type_Info** %4320, i64 3
	%4332 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	store %Type_Info* %4332, %Type_Info** %4331
	%4333 = getelementptr inbounds %..string, %..string* %4321, i64 3
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$533, i64 0, i32 0), i64 4}, %..string* %4333
	%4334 = getelementptr inbounds %Type_Info_Tuple, %Type_Info_Tuple* %4319, i64 0, i32 0
	%4335 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %4334, i64 0, i32 0
	store %Type_Info** %4320, %Type_Info*** %4335
	%4336 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %4334, i64 0, i32 1
	store i64 4, i64* %4336
	%4337 = getelementptr inbounds %Type_Info_Tuple, %Type_Info_Tuple* %4319, i64 0, i32 1
	%4338 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %4337, i64 0, i32 0
	store %..string* %4321, %..string** %4338
	%4339 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %4337, i64 0, i32 1
	store i64 4, i64* %4339
	%4340 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %4316, i64 0, i32 2 ; UnionTagPtr
	store i8 15, i8* %4340
	%4341 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 165
	%4342 = getelementptr inbounds %Type_Info, %Type_Info* %4341, i64 0, i32 2
	%4343 = getelementptr inbounds %Type_Info, %Type_Info* %4341, i64 0, i32 0
	store i64 8, i64* %4343
	%4344 = getelementptr inbounds %Type_Info, %Type_Info* %4341, i64 0, i32 1
	store i64 8, i64* %4344
	; TypeInfoNamed
	%4345 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %4342 to %Type_Info_Named*
	%4346 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 166
	%4347 = bitcast %Type_Info* %4346 to %Type_Info*
	%4348 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %4345, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$534, i64 0, i32 0), i64 15}, %..string* %4348
	%4349 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %4345, i64 0, i32 1
	store %Type_Info* %4347, %Type_Info** %4349
	%4350 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %4342, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %4350
	%4351 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 166
	%4352 = getelementptr inbounds %Type_Info, %Type_Info* %4351, i64 0, i32 2
	%4353 = getelementptr inbounds %Type_Info, %Type_Info* %4351, i64 0, i32 0
	store i64 8, i64* %4353
	%4354 = getelementptr inbounds %Type_Info, %Type_Info* %4351, i64 0, i32 1
	store i64 8, i64* %4354
	; TypeInfoProc
	%4355 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %4352 to %Type_Info_Procedure*
	%4356 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %4355, i64 0, i32 0
	%4357 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %4355, i64 0, i32 1
	%4358 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %4355, i64 0, i32 2
	%4359 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %4355, i64 0, i32 3
	%4360 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 167
	%4361 = bitcast %Type_Info* %4360 to %Type_Info*
	store %Type_Info* %4361, %Type_Info** %4356
	store i1 false, i1* %4358
	store i64 3, i64* %4359
	%4362 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %4352, i64 0, i32 2 ; UnionTagPtr
	store i8 10, i8* %4362
	%4363 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 167
	%4364 = getelementptr inbounds %Type_Info, %Type_Info* %4363, i64 0, i32 2
	%4365 = getelementptr inbounds %Type_Info, %Type_Info* %4363, i64 0, i32 0
	store i64 24, i64* %4365
	%4366 = getelementptr inbounds %Type_Info, %Type_Info* %4363, i64 0, i32 1
	store i64 8, i64* %4366
	; TypeInfoTuple
	%4367 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %4364 to %Type_Info_Tuple*
	%4368 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 187
	%4369 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 151
	%4370 = getelementptr inbounds %Type_Info*, %Type_Info** %4368, i64 0
	%4371 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 131
	store %Type_Info* %4371, %Type_Info** %4370
	%4372 = getelementptr inbounds %..string, %..string* %4369, i64 0
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$535, i64 0, i32 0), i64 6}, %..string* %4372
	%4373 = getelementptr inbounds %Type_Info*, %Type_Info** %4368, i64 1
	%4374 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 65
	store %Type_Info* %4374, %Type_Info** %4373
	%4375 = getelementptr inbounds %..string, %..string* %4369, i64 1
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$536, i64 0, i32 0), i64 4}, %..string* %4375
	%4376 = getelementptr inbounds %Type_Info*, %Type_Info** %4368, i64 2
	%4377 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 65
	store %Type_Info* %4377, %Type_Info** %4376
	%4378 = getelementptr inbounds %..string, %..string* %4369, i64 2
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$537, i64 0, i32 0), i64 4}, %..string* %4378
	%4379 = getelementptr inbounds %Type_Info_Tuple, %Type_Info_Tuple* %4367, i64 0, i32 0
	%4380 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %4379, i64 0, i32 0
	store %Type_Info** %4368, %Type_Info*** %4380
	%4381 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %4379, i64 0, i32 1
	store i64 3, i64* %4381
	%4382 = getelementptr inbounds %Type_Info_Tuple, %Type_Info_Tuple* %4367, i64 0, i32 1
	%4383 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %4382, i64 0, i32 0
	store %..string* %4369, %..string** %4383
	%4384 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %4382, i64 0, i32 1
	store i64 3, i64* %4384
	%4385 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %4364, i64 0, i32 2 ; UnionTagPtr
	store i8 15, i8* %4385
	%4386 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 168
	%4387 = getelementptr inbounds %Type_Info, %Type_Info* %4386, i64 0, i32 2
	%4388 = getelementptr inbounds %Type_Info, %Type_Info* %4386, i64 0, i32 0
	store i64 8, i64* %4388
	%4389 = getelementptr inbounds %Type_Info, %Type_Info* %4386, i64 0, i32 1
	store i64 8, i64* %4389
	; TypeInfoNamed
	%4390 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %4387 to %Type_Info_Named*
	%4391 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 166
	%4392 = bitcast %Type_Info* %4391 to %Type_Info*
	%4393 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %4390, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$538, i64 0, i32 0), i64 11}, %..string* %4393
	%4394 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %4390, i64 0, i32 1
	store %Type_Info* %4392, %Type_Info** %4394
	%4395 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %4387, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %4395
	%4396 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 166
	%4397 = getelementptr inbounds %Type_Info, %Type_Info* %4396, i64 0, i32 2
	%4398 = getelementptr inbounds %Type_Info, %Type_Info* %4396, i64 0, i32 0
	store i64 8, i64* %4398
	%4399 = getelementptr inbounds %Type_Info, %Type_Info* %4396, i64 0, i32 1
	store i64 8, i64* %4399
	; TypeInfoProc
	%4400 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %4397 to %Type_Info_Procedure*
	%4401 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %4400, i64 0, i32 0
	%4402 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %4400, i64 0, i32 1
	%4403 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %4400, i64 0, i32 2
	%4404 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %4400, i64 0, i32 3
	%4405 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 167
	%4406 = bitcast %Type_Info* %4405 to %Type_Info*
	store %Type_Info* %4406, %Type_Info** %4401
	store i1 false, i1* %4403
	store i64 3, i64* %4404
	%4407 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %4397, i64 0, i32 2 ; UnionTagPtr
	store i8 10, i8* %4407
	%4408 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 167
	%4409 = getelementptr inbounds %Type_Info, %Type_Info* %4408, i64 0, i32 2
	%4410 = getelementptr inbounds %Type_Info, %Type_Info* %4408, i64 0, i32 0
	store i64 24, i64* %4410
	%4411 = getelementptr inbounds %Type_Info, %Type_Info* %4408, i64 0, i32 1
	store i64 8, i64* %4411
	; TypeInfoTuple
	%4412 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %4409 to %Type_Info_Tuple*
	%4413 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 190
	%4414 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 154
	%4415 = getelementptr inbounds %Type_Info*, %Type_Info** %4413, i64 0
	%4416 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 131
	store %Type_Info* %4416, %Type_Info** %4415
	%4417 = getelementptr inbounds %..string, %..string* %4414, i64 0
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$539, i64 0, i32 0), i64 6}, %..string* %4417
	%4418 = getelementptr inbounds %Type_Info*, %Type_Info** %4413, i64 1
	%4419 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 65
	store %Type_Info* %4419, %Type_Info** %4418
	%4420 = getelementptr inbounds %..string, %..string* %4414, i64 1
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$53a, i64 0, i32 0), i64 7}, %..string* %4420
	%4421 = getelementptr inbounds %Type_Info*, %Type_Info** %4413, i64 2
	%4422 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 65
	store %Type_Info* %4422, %Type_Info** %4421
	%4423 = getelementptr inbounds %..string, %..string* %4414, i64 2
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$53b, i64 0, i32 0), i64 7}, %..string* %4423
	%4424 = getelementptr inbounds %Type_Info_Tuple, %Type_Info_Tuple* %4412, i64 0, i32 0
	%4425 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %4424, i64 0, i32 0
	store %Type_Info** %4413, %Type_Info*** %4425
	%4426 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %4424, i64 0, i32 1
	store i64 3, i64* %4426
	%4427 = getelementptr inbounds %Type_Info_Tuple, %Type_Info_Tuple* %4412, i64 0, i32 1
	%4428 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %4427, i64 0, i32 0
	store %..string* %4414, %..string** %4428
	%4429 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %4427, i64 0, i32 1
	store i64 3, i64* %4429
	%4430 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %4409, i64 0, i32 2 ; UnionTagPtr
	store i8 15, i8* %4430
	%4431 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 169
	%4432 = getelementptr inbounds %Type_Info, %Type_Info* %4431, i64 0, i32 2
	%4433 = getelementptr inbounds %Type_Info, %Type_Info* %4431, i64 0, i32 0
	store i64 8, i64* %4433
	%4434 = getelementptr inbounds %Type_Info, %Type_Info* %4431, i64 0, i32 1
	store i64 8, i64* %4434
	; TypeInfoNamed
	%4435 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %4432 to %Type_Info_Named*
	%4436 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 170
	%4437 = bitcast %Type_Info* %4436 to %Type_Info*
	%4438 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %4435, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$53c, i64 0, i32 0), i64 9}, %..string* %4438
	%4439 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %4435, i64 0, i32 1
	store %Type_Info* %4437, %Type_Info** %4439
	%4440 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %4432, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %4440
	%4441 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 170
	%4442 = getelementptr inbounds %Type_Info, %Type_Info* %4441, i64 0, i32 2
	%4443 = getelementptr inbounds %Type_Info, %Type_Info* %4441, i64 0, i32 0
	store i64 8, i64* %4443
	%4444 = getelementptr inbounds %Type_Info, %Type_Info* %4441, i64 0, i32 1
	store i64 8, i64* %4444
	; TypeInfoProc
	%4445 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %4442 to %Type_Info_Procedure*
	%4446 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %4445, i64 0, i32 0
	%4447 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %4445, i64 0, i32 1
	%4448 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %4445, i64 0, i32 2
	%4449 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %4445, i64 0, i32 3
	%4450 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 171
	%4451 = bitcast %Type_Info* %4450 to %Type_Info*
	store %Type_Info* %4451, %Type_Info** %4446
	store i1 false, i1* %4448
	store i64 3, i64* %4449
	%4452 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %4442, i64 0, i32 2 ; UnionTagPtr
	store i8 10, i8* %4452
	%4453 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 171
	%4454 = getelementptr inbounds %Type_Info, %Type_Info* %4453, i64 0, i32 2
	%4455 = getelementptr inbounds %Type_Info, %Type_Info* %4453, i64 0, i32 0
	store i64 16, i64* %4455
	%4456 = getelementptr inbounds %Type_Info, %Type_Info* %4453, i64 0, i32 1
	store i64 8, i64* %4456
	; TypeInfoTuple
	%4457 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %4454 to %Type_Info_Tuple*
	%4458 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 193
	%4459 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 157
	%4460 = getelementptr inbounds %Type_Info*, %Type_Info** %4458, i64 0
	%4461 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 131
	store %Type_Info* %4461, %Type_Info** %4460
	%4462 = getelementptr inbounds %..string, %..string* %4459, i64 0
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$53d, i64 0, i32 0), i64 6}, %..string* %4462
	%4463 = getelementptr inbounds %Type_Info*, %Type_Info** %4458, i64 1
	%4464 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	store %Type_Info* %4464, %Type_Info** %4463
	%4465 = getelementptr inbounds %..string, %..string* %4459, i64 1
	store %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$53e, i64 0, i32 0), i64 9}, %..string* %4465
	%4466 = getelementptr inbounds %Type_Info_Tuple, %Type_Info_Tuple* %4457, i64 0, i32 0
	%4467 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %4466, i64 0, i32 0
	store %Type_Info** %4458, %Type_Info*** %4467
	%4468 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %4466, i64 0, i32 1
	store i64 2, i64* %4468
	%4469 = getelementptr inbounds %Type_Info_Tuple, %Type_Info_Tuple* %4457, i64 0, i32 1
	%4470 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %4469, i64 0, i32 0
	store %..string* %4459, %..string** %4470
	%4471 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %4469, i64 0, i32 1
	store i64 2, i64* %4471
	%4472 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %4454, i64 0, i32 2 ; UnionTagPtr
	store i8 15, i8* %4472
	%4473 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 172
	%4474 = getelementptr inbounds %Type_Info, %Type_Info* %4473, i64 0, i32 2
	%4475 = getelementptr inbounds %Type_Info, %Type_Info* %4473, i64 0, i32 0
	store i64 8, i64* %4475
	%4476 = getelementptr inbounds %Type_Info, %Type_Info* %4473, i64 0, i32 1
	store i64 8, i64* %4476
	; TypeInfoNamed
	%4477 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %4474 to %Type_Info_Named*
	%4478 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 173
	%4479 = bitcast %Type_Info* %4478 to %Type_Info*
	%4480 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %4477, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$53f, i64 0, i32 0), i64 14}, %..string* %4480
	%4481 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %4477, i64 0, i32 1
	store %Type_Info* %4479, %Type_Info** %4481
	%4482 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %4474, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %4482
	%4483 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 173
	%4484 = getelementptr inbounds %Type_Info, %Type_Info* %4483, i64 0, i32 2
	%4485 = getelementptr inbounds %Type_Info, %Type_Info* %4483, i64 0, i32 0
	store i64 8, i64* %4485
	%4486 = getelementptr inbounds %Type_Info, %Type_Info* %4483, i64 0, i32 1
	store i64 8, i64* %4486
	; TypeInfoProc
	%4487 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %4484 to %Type_Info_Procedure*
	%4488 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %4487, i64 0, i32 0
	%4489 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %4487, i64 0, i32 1
	%4490 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %4487, i64 0, i32 2
	%4491 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %4487, i64 0, i32 3
	%4492 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 174
	%4493 = bitcast %Type_Info* %4492 to %Type_Info*
	store %Type_Info* %4493, %Type_Info** %4488
	store i1 false, i1* %4490
	store i64 3, i64* %4491
	%4494 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %4484, i64 0, i32 2 ; UnionTagPtr
	store i8 10, i8* %4494
	%4495 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 174
	%4496 = getelementptr inbounds %Type_Info, %Type_Info* %4495, i64 0, i32 2
	%4497 = getelementptr inbounds %Type_Info, %Type_Info* %4495, i64 0, i32 0
	store i64 16, i64* %4497
	%4498 = getelementptr inbounds %Type_Info, %Type_Info* %4495, i64 0, i32 1
	store i64 8, i64* %4498
	; TypeInfoTuple
	%4499 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %4496 to %Type_Info_Tuple*
	%4500 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 195
	%4501 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 159
	%4502 = getelementptr inbounds %Type_Info*, %Type_Info** %4500, i64 0
	%4503 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 131
	store %Type_Info* %4503, %Type_Info** %4502
	%4504 = getelementptr inbounds %..string, %..string* %4501, i64 0
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$540, i64 0, i32 0), i64 6}, %..string* %4504
	%4505 = getelementptr inbounds %Type_Info*, %Type_Info** %4500, i64 1
	%4506 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	store %Type_Info* %4506, %Type_Info** %4505
	%4507 = getelementptr inbounds %..string, %..string* %4501, i64 1
	store %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$541, i64 0, i32 0), i64 9}, %..string* %4507
	%4508 = getelementptr inbounds %Type_Info*, %Type_Info** %4500, i64 2
	%4509 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	store %Type_Info* %4509, %Type_Info** %4508
	%4510 = getelementptr inbounds %..string, %..string* %4501, i64 2
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$542, i64 0, i32 0), i64 4}, %..string* %4510
	%4511 = getelementptr inbounds %Type_Info_Tuple, %Type_Info_Tuple* %4499, i64 0, i32 0
	%4512 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %4511, i64 0, i32 0
	store %Type_Info** %4500, %Type_Info*** %4512
	%4513 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %4511, i64 0, i32 1
	store i64 3, i64* %4513
	%4514 = getelementptr inbounds %Type_Info_Tuple, %Type_Info_Tuple* %4499, i64 0, i32 1
	%4515 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %4514, i64 0, i32 0
	store %..string* %4501, %..string** %4515
	%4516 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %4514, i64 0, i32 1
	store i64 3, i64* %4516
	%4517 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %4496, i64 0, i32 2 ; UnionTagPtr
	store i8 15, i8* %4517
	%4518 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 175
	%4519 = getelementptr inbounds %Type_Info, %Type_Info* %4518, i64 0, i32 2
	%4520 = getelementptr inbounds %Type_Info, %Type_Info* %4518, i64 0, i32 0
	store i64 8, i64* %4520
	%4521 = getelementptr inbounds %Type_Info, %Type_Info* %4518, i64 0, i32 1
	store i64 8, i64* %4521
	; TypeInfoNamed
	%4522 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %4519 to %Type_Info_Named*
	%4523 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 142
	%4524 = bitcast %Type_Info* %4523 to %Type_Info*
	%4525 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %4522, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__str$543, i64 0, i32 0), i64 17}, %..string* %4525
	%4526 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %4522, i64 0, i32 1
	store %Type_Info* %4524, %Type_Info** %4526
	%4527 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %4519, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %4527
	%4528 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 142
	%4529 = getelementptr inbounds %Type_Info, %Type_Info* %4528, i64 0, i32 2
	%4530 = getelementptr inbounds %Type_Info, %Type_Info* %4528, i64 0, i32 0
	store i64 8, i64* %4530
	%4531 = getelementptr inbounds %Type_Info, %Type_Info* %4528, i64 0, i32 1
	store i64 8, i64* %4531
	; TypeInfoProc
	%4532 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %4529 to %Type_Info_Procedure*
	%4533 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %4532, i64 0, i32 0
	%4534 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %4532, i64 0, i32 1
	%4535 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %4532, i64 0, i32 2
	%4536 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %4532, i64 0, i32 3
	%4537 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 143
	%4538 = bitcast %Type_Info* %4537 to %Type_Info*
	store %Type_Info* %4538, %Type_Info** %4533
	store i1 false, i1* %4535
	store i64 3, i64* %4536
	%4539 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %4529, i64 0, i32 2 ; UnionTagPtr
	store i8 10, i8* %4539
	%4540 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 143
	%4541 = getelementptr inbounds %Type_Info, %Type_Info* %4540, i64 0, i32 2
	%4542 = getelementptr inbounds %Type_Info, %Type_Info* %4540, i64 0, i32 0
	store i64 16, i64* %4542
	%4543 = getelementptr inbounds %Type_Info, %Type_Info* %4540, i64 0, i32 1
	store i64 8, i64* %4543
	; TypeInfoTuple
	%4544 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %4541 to %Type_Info_Tuple*
	%4545 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 198
	%4546 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 162
	%4547 = getelementptr inbounds %Type_Info*, %Type_Info** %4545, i64 0
	%4548 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 131
	store %Type_Info* %4548, %Type_Info** %4547
	%4549 = getelementptr inbounds %..string, %..string* %4546, i64 0
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$544, i64 0, i32 0), i64 6}, %..string* %4549
	%4550 = getelementptr inbounds %Type_Info*, %Type_Info** %4545, i64 1
	%4551 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	store %Type_Info* %4551, %Type_Info** %4550
	%4552 = getelementptr inbounds %..string, %..string* %4546, i64 1
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$545, i64 0, i32 0), i64 7}, %..string* %4552
	%4553 = getelementptr inbounds %Type_Info_Tuple, %Type_Info_Tuple* %4544, i64 0, i32 0
	%4554 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %4553, i64 0, i32 0
	store %Type_Info** %4545, %Type_Info*** %4554
	%4555 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %4553, i64 0, i32 1
	store i64 2, i64* %4555
	%4556 = getelementptr inbounds %Type_Info_Tuple, %Type_Info_Tuple* %4544, i64 0, i32 1
	%4557 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %4556, i64 0, i32 0
	store %..string* %4546, %..string** %4557
	%4558 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %4556, i64 0, i32 1
	store i64 2, i64* %4558
	%4559 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %4541, i64 0, i32 2 ; UnionTagPtr
	store i8 15, i8* %4559
	%4560 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 176
	%4561 = getelementptr inbounds %Type_Info, %Type_Info* %4560, i64 0, i32 2
	%4562 = getelementptr inbounds %Type_Info, %Type_Info* %4560, i64 0, i32 0
	store i64 8, i64* %4562
	%4563 = getelementptr inbounds %Type_Info, %Type_Info* %4560, i64 0, i32 1
	store i64 8, i64* %4563
	; TypeInfoNamed
	%4564 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %4561 to %Type_Info_Named*
	%4565 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 177
	%4566 = bitcast %Type_Info* %4565 to %Type_Info*
	%4567 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %4564, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$546, i64 0, i32 0), i64 13}, %..string* %4567
	%4568 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %4564, i64 0, i32 1
	store %Type_Info* %4566, %Type_Info** %4568
	%4569 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %4561, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %4569
	%4570 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 177
	%4571 = getelementptr inbounds %Type_Info, %Type_Info* %4570, i64 0, i32 2
	%4572 = getelementptr inbounds %Type_Info, %Type_Info* %4570, i64 0, i32 0
	store i64 8, i64* %4572
	%4573 = getelementptr inbounds %Type_Info, %Type_Info* %4570, i64 0, i32 1
	store i64 8, i64* %4573
	; TypeInfoProc
	%4574 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %4571 to %Type_Info_Procedure*
	%4575 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %4574, i64 0, i32 0
	%4576 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %4574, i64 0, i32 1
	%4577 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %4574, i64 0, i32 2
	%4578 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %4574, i64 0, i32 3
	%4579 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 178
	%4580 = bitcast %Type_Info* %4579 to %Type_Info*
	store %Type_Info* %4580, %Type_Info** %4575
	store i1 false, i1* %4577
	store i64 3, i64* %4578
	%4581 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %4571, i64 0, i32 2 ; UnionTagPtr
	store i8 10, i8* %4581
	%4582 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 178
	%4583 = getelementptr inbounds %Type_Info, %Type_Info* %4582, i64 0, i32 2
	%4584 = getelementptr inbounds %Type_Info, %Type_Info* %4582, i64 0, i32 0
	store i64 8, i64* %4584
	%4585 = getelementptr inbounds %Type_Info, %Type_Info* %4582, i64 0, i32 1
	store i64 4, i64* %4585
	; TypeInfoTuple
	%4586 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %4583 to %Type_Info_Tuple*
	%4587 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 200
	%4588 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 164
	%4589 = getelementptr inbounds %Type_Info*, %Type_Info** %4587, i64 0
	%4590 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	store %Type_Info* %4590, %Type_Info** %4589
	%4591 = getelementptr inbounds %..string, %..string* %4588, i64 0
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$547, i64 0, i32 0), i64 3}, %..string* %4591
	%4592 = getelementptr inbounds %Type_Info*, %Type_Info** %4587, i64 1
	%4593 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	store %Type_Info* %4593, %Type_Info** %4592
	%4594 = getelementptr inbounds %..string, %..string* %4588, i64 1
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$548, i64 0, i32 0), i64 5}, %..string* %4594
	%4595 = getelementptr inbounds %Type_Info_Tuple, %Type_Info_Tuple* %4586, i64 0, i32 0
	%4596 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %4595, i64 0, i32 0
	store %Type_Info** %4587, %Type_Info*** %4596
	%4597 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %4595, i64 0, i32 1
	store i64 2, i64* %4597
	%4598 = getelementptr inbounds %Type_Info_Tuple, %Type_Info_Tuple* %4586, i64 0, i32 1
	%4599 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %4598, i64 0, i32 0
	store %..string* %4588, %..string** %4599
	%4600 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %4598, i64 0, i32 1
	store i64 2, i64* %4600
	%4601 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %4583, i64 0, i32 2 ; UnionTagPtr
	store i8 15, i8* %4601
	%4602 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 179
	%4603 = getelementptr inbounds %Type_Info, %Type_Info* %4602, i64 0, i32 2
	%4604 = getelementptr inbounds %Type_Info, %Type_Info* %4602, i64 0, i32 0
	store i64 8, i64* %4604
	%4605 = getelementptr inbounds %Type_Info, %Type_Info* %4602, i64 0, i32 1
	store i64 8, i64* %4605
	; TypeInfoNamed
	%4606 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %4603 to %Type_Info_Named*
	%4607 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 180
	%4608 = bitcast %Type_Info* %4607 to %Type_Info*
	%4609 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %4606, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$549, i64 0, i32 0), i64 10}, %..string* %4609
	%4610 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %4606, i64 0, i32 1
	store %Type_Info* %4608, %Type_Info** %4610
	%4611 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %4603, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %4611
	%4612 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 180
	%4613 = getelementptr inbounds %Type_Info, %Type_Info* %4612, i64 0, i32 2
	%4614 = getelementptr inbounds %Type_Info, %Type_Info* %4612, i64 0, i32 0
	store i64 8, i64* %4614
	%4615 = getelementptr inbounds %Type_Info, %Type_Info* %4612, i64 0, i32 1
	store i64 8, i64* %4615
	; TypeInfoProc
	%4616 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %4613 to %Type_Info_Procedure*
	%4617 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %4616, i64 0, i32 0
	%4618 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %4616, i64 0, i32 1
	%4619 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %4616, i64 0, i32 2
	%4620 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %4616, i64 0, i32 3
	%4621 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 181
	%4622 = bitcast %Type_Info* %4621 to %Type_Info*
	store %Type_Info* %4622, %Type_Info** %4617
	store i1 false, i1* %4619
	store i64 3, i64* %4620
	%4623 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %4613, i64 0, i32 2 ; UnionTagPtr
	store i8 10, i8* %4623
	%4624 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 181
	%4625 = getelementptr inbounds %Type_Info, %Type_Info* %4624, i64 0, i32 2
	%4626 = getelementptr inbounds %Type_Info, %Type_Info* %4624, i64 0, i32 0
	store i64 16, i64* %4626
	%4627 = getelementptr inbounds %Type_Info, %Type_Info* %4624, i64 0, i32 1
	store i64 8, i64* %4627
	; TypeInfoTuple
	%4628 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %4625 to %Type_Info_Tuple*
	%4629 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 202
	%4630 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 166
	%4631 = getelementptr inbounds %Type_Info*, %Type_Info** %4629, i64 0
	%4632 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	store %Type_Info* %4632, %Type_Info** %4631
	%4633 = getelementptr inbounds %..string, %..string* %4630, i64 0
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$54a, i64 0, i32 0), i64 5}, %..string* %4633
	%4634 = getelementptr inbounds %Type_Info*, %Type_Info** %4629, i64 1
	%4635 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	store %Type_Info* %4635, %Type_Info** %4634
	%4636 = getelementptr inbounds %..string, %..string* %4630, i64 1
	store %..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$54b, i64 0, i32 0), i64 11}, %..string* %4636
	%4637 = getelementptr inbounds %Type_Info_Tuple, %Type_Info_Tuple* %4628, i64 0, i32 0
	%4638 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %4637, i64 0, i32 0
	store %Type_Info** %4629, %Type_Info*** %4638
	%4639 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %4637, i64 0, i32 1
	store i64 2, i64* %4639
	%4640 = getelementptr inbounds %Type_Info_Tuple, %Type_Info_Tuple* %4628, i64 0, i32 1
	%4641 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %4640, i64 0, i32 0
	store %..string* %4630, %..string** %4641
	%4642 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %4640, i64 0, i32 1
	store i64 2, i64* %4642
	%4643 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %4625, i64 0, i32 2 ; UnionTagPtr
	store i8 15, i8* %4643
	%4644 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%4645 = getelementptr inbounds %Type_Info, %Type_Info* %4644, i64 0, i32 2
	%4646 = getelementptr inbounds %Type_Info, %Type_Info* %4644, i64 0, i32 0
	store i64 8, i64* %4646
	%4647 = getelementptr inbounds %Type_Info, %Type_Info* %4644, i64 0, i32 1
	store i64 8, i64* %4647
	; TypeInfoPointer
	%4648 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %4645 to %Type_Info_Pointer*
	%4649 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	%4650 = bitcast %Type_Info* %4649 to %Type_Info*
	%4651 = getelementptr inbounds %Type_Info_Pointer, %Type_Info_Pointer* %4648, i64 0, i32 0
	store %Type_Info* %4650, %Type_Info** %4651
	%4652 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %4645, i64 0, i32 2 ; UnionTagPtr
	store i8 9, i8* %4652
	%4653 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 182
	%4654 = getelementptr inbounds %Type_Info, %Type_Info* %4653, i64 0, i32 2
	%4655 = getelementptr inbounds %Type_Info, %Type_Info* %4653, i64 0, i32 0
	store i64 48, i64* %4655
	%4656 = getelementptr inbounds %Type_Info, %Type_Info* %4653, i64 0, i32 1
	store i64 8, i64* %4656
	; TypeInfoNamed
	%4657 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %4654 to %Type_Info_Named*
	%4658 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 183
	%4659 = bitcast %Type_Info* %4658 to %Type_Info*
	%4660 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %4657, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$54c, i64 0, i32 0), i64 13}, %..string* %4660
	%4661 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %4657, i64 0, i32 1
	store %Type_Info* %4659, %Type_Info** %4661
	%4662 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %4654, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %4662
	%4663 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 183
	%4664 = getelementptr inbounds %Type_Info, %Type_Info* %4663, i64 0, i32 2
	%4665 = getelementptr inbounds %Type_Info, %Type_Info* %4663, i64 0, i32 0
	store i64 48, i64* %4665
	%4666 = getelementptr inbounds %Type_Info, %Type_Info* %4663, i64 0, i32 1
	store i64 8, i64* %4666
	; TypeInfoStruct
	%4667 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %4664 to %Type_Info_Struct*
	%4668 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %4667, i64 0, i32 4
	store i1 false, i1* %4668
	%4669 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %4667, i64 0, i32 5
	store i1 false, i1* %4669
	%4670 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %4667, i64 0, i32 6
	store i1 false, i1* %4670
	%4671 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %4667, i64 0, i32 7
	store i1 false, i1* %4671
	%4672 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 204
	%4673 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 168
	%4674 = getelementptr inbounds [450 x i64], [450 x i64]* @__$type_info_offsets_data, i64 0, i32 114
	%4675 = getelementptr inbounds [450 x i1], [450 x i1]* @__$type_info_usings_data, i64 0, i32 114
	%4676 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 65
	%4677 = bitcast %Type_Info* %4676 to %Type_Info*
	%4678 = getelementptr inbounds %Type_Info*, %Type_Info** %4672, i64 0
	%4679 = getelementptr inbounds i64, i64* %4674, i64 0
	%4680 = getelementptr inbounds i1, i1* %4675, i64 0
	%4681 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 65
	store %Type_Info* %4681, %Type_Info** %4678
	%4682 = getelementptr inbounds %..string, %..string* %4673, i64 0
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$54d, i64 0, i32 0), i64 2}, %..string* %4682
	store i64 0, i64* %4679
	store i1 false, i1* %4680
	%4683 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 65
	%4684 = bitcast %Type_Info* %4683 to %Type_Info*
	%4685 = getelementptr inbounds %Type_Info*, %Type_Info** %4672, i64 1
	%4686 = getelementptr inbounds i64, i64* %4674, i64 1
	%4687 = getelementptr inbounds i1, i1* %4675, i64 1
	%4688 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 65
	store %Type_Info* %4688, %Type_Info** %4685
	%4689 = getelementptr inbounds %..string, %..string* %4673, i64 1
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$54e, i64 0, i32 0), i64 6}, %..string* %4689
	store i64 8, i64* %4686
	store i1 false, i1* %4687
	%4690 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 65
	%4691 = bitcast %Type_Info* %4690 to %Type_Info*
	%4692 = getelementptr inbounds %Type_Info*, %Type_Info** %4672, i64 2
	%4693 = getelementptr inbounds i64, i64* %4674, i64 2
	%4694 = getelementptr inbounds i1, i1* %4675, i64 2
	%4695 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 65
	store %Type_Info* %4695, %Type_Info** %4692
	%4696 = getelementptr inbounds %..string, %..string* %4673, i64 2
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$54f, i64 0, i32 0), i64 7}, %..string* %4696
	store i64 16, i64* %4693
	store i1 false, i1* %4694
	%4697 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 65
	%4698 = bitcast %Type_Info* %4697 to %Type_Info*
	%4699 = getelementptr inbounds %Type_Info*, %Type_Info** %4672, i64 3
	%4700 = getelementptr inbounds i64, i64* %4674, i64 3
	%4701 = getelementptr inbounds i1, i1* %4675, i64 3
	%4702 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 65
	store %Type_Info* %4702, %Type_Info** %4699
	%4703 = getelementptr inbounds %..string, %..string* %4673, i64 3
	store %..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$550, i64 0, i32 0), i64 15}, %..string* %4703
	store i64 24, i64* %4700
	store i1 false, i1* %4701
	%4704 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%4705 = bitcast %Type_Info* %4704 to %Type_Info*
	%4706 = getelementptr inbounds %Type_Info*, %Type_Info** %4672, i64 4
	%4707 = getelementptr inbounds i64, i64* %4674, i64 4
	%4708 = getelementptr inbounds i1, i1* %4675, i64 4
	%4709 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	store %Type_Info* %4709, %Type_Info** %4706
	%4710 = getelementptr inbounds %..string, %..string* %4673, i64 4
	store %..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$551, i64 0, i32 0), i64 11}, %..string* %4710
	store i64 32, i64* %4707
	store i1 false, i1* %4708
	%4711 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%4712 = bitcast %Type_Info* %4711 to %Type_Info*
	%4713 = getelementptr inbounds %Type_Info*, %Type_Info** %4672, i64 5
	%4714 = getelementptr inbounds i64, i64* %4674, i64 5
	%4715 = getelementptr inbounds i1, i1* %4675, i64 5
	%4716 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	store %Type_Info* %4716, %Type_Info** %4713
	%4717 = getelementptr inbounds %..string, %..string* %4673, i64 5
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$552, i64 0, i32 0), i64 7}, %..string* %4717
	store i64 40, i64* %4714
	store i1 false, i1* %4715
	%4718 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %4667, i64 0, i32 0
	%4719 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %4718, i64 0, i32 0
	store %Type_Info** %4672, %Type_Info*** %4719
	%4720 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %4718, i64 0, i32 1
	store i64 6, i64* %4720
	%4721 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %4667, i64 0, i32 1
	%4722 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %4721, i64 0, i32 0
	store %..string* %4673, %..string** %4722
	%4723 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %4721, i64 0, i32 1
	store i64 6, i64* %4723
	%4724 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %4667, i64 0, i32 2
	%4725 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %4724, i64 0, i32 0
	store i64* %4674, i64** %4725
	%4726 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %4724, i64 0, i32 1
	store i64 6, i64* %4726
	%4727 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %4667, i64 0, i32 3
	%4728 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %4727, i64 0, i32 0
	store i1* %4675, i1** %4728
	%4729 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %4727, i64 0, i32 1
	store i64 6, i64* %4729
	%4730 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %4664, i64 0, i32 2 ; UnionTagPtr
	store i8 16, i8* %4730
	%4731 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 184
	%4732 = getelementptr inbounds %Type_Info, %Type_Info* %4731, i64 0, i32 2
	%4733 = getelementptr inbounds %Type_Info, %Type_Info* %4731, i64 0, i32 0
	store i64 56, i64* %4733
	%4734 = getelementptr inbounds %Type_Info, %Type_Info* %4731, i64 0, i32 1
	store i64 8, i64* %4734
	; TypeInfoNamed
	%4735 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %4732 to %Type_Info_Named*
	%4736 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 185
	%4737 = bitcast %Type_Info* %4736 to %Type_Info*
	%4738 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %4735, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$553, i64 0, i32 0), i64 13}, %..string* %4738
	%4739 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %4735, i64 0, i32 1
	store %Type_Info* %4737, %Type_Info** %4739
	%4740 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %4732, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %4740
	%4741 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 185
	%4742 = getelementptr inbounds %Type_Info, %Type_Info* %4741, i64 0, i32 2
	%4743 = getelementptr inbounds %Type_Info, %Type_Info* %4741, i64 0, i32 0
	store i64 56, i64* %4743
	%4744 = getelementptr inbounds %Type_Info, %Type_Info* %4741, i64 0, i32 1
	store i64 8, i64* %4744
	; TypeInfoStruct
	%4745 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %4742 to %Type_Info_Struct*
	%4746 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %4745, i64 0, i32 4
	store i1 false, i1* %4746
	%4747 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %4745, i64 0, i32 5
	store i1 false, i1* %4747
	%4748 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %4745, i64 0, i32 6
	store i1 false, i1* %4748
	%4749 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %4745, i64 0, i32 7
	store i1 false, i1* %4749
	%4750 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 210
	%4751 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 174
	%4752 = getelementptr inbounds [450 x i64], [450 x i64]* @__$type_info_offsets_data, i64 0, i32 120
	%4753 = getelementptr inbounds [450 x i1], [450 x i1]* @__$type_info_usings_data, i64 0, i32 120
	%4754 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 186
	%4755 = bitcast %Type_Info* %4754 to %Type_Info*
	%4756 = getelementptr inbounds %Type_Info*, %Type_Info** %4750, i64 0
	%4757 = getelementptr inbounds i64, i64* %4752, i64 0
	%4758 = getelementptr inbounds i1, i1* %4753, i64 0
	%4759 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 186
	store %Type_Info* %4759, %Type_Info** %4756
	%4760 = getelementptr inbounds %..string, %..string* %4751, i64 0
	store %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$554, i64 0, i32 0), i64 9}, %..string* %4760
	store i64 16, i64* %4757
	store i1 false, i1* %4758
	%4761 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 186
	%4762 = bitcast %Type_Info* %4761 to %Type_Info*
	%4763 = getelementptr inbounds %Type_Info*, %Type_Info** %4750, i64 1
	%4764 = getelementptr inbounds i64, i64* %4752, i64 1
	%4765 = getelementptr inbounds i1, i1* %4753, i64 1
	%4766 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 186
	store %Type_Info* %4766, %Type_Info** %4763
	%4767 = getelementptr inbounds %..string, %..string* %4751, i64 1
	store %..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$555, i64 0, i32 0), i64 11}, %..string* %4767
	store i64 24, i64* %4764
	store i1 false, i1* %4765
	%4768 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%4769 = bitcast %Type_Info* %4768 to %Type_Info*
	%4770 = getelementptr inbounds %Type_Info*, %Type_Info** %4750, i64 2
	%4771 = getelementptr inbounds i64, i64* %4752, i64 2
	%4772 = getelementptr inbounds i1, i1* %4753, i64 2
	%4773 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	store %Type_Info* %4773, %Type_Info** %4770
	%4774 = getelementptr inbounds %..string, %..string* %4751, i64 2
	store %..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$556, i64 0, i32 0), i64 11}, %..string* %4774
	store i64 0, i64* %4771
	store i1 false, i1* %4772
	%4775 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	%4776 = bitcast %Type_Info* %4775 to %Type_Info*
	%4777 = getelementptr inbounds %Type_Info*, %Type_Info** %4750, i64 3
	%4778 = getelementptr inbounds i64, i64* %4752, i64 3
	%4779 = getelementptr inbounds i1, i1* %4753, i64 3
	%4780 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	store %Type_Info* %4780, %Type_Info** %4777
	%4781 = getelementptr inbounds %..string, %..string* %4751, i64 3
	store %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$557, i64 0, i32 0), i64 12}, %..string* %4781
	store i64 32, i64* %4778
	store i1 false, i1* %4779
	%4782 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	%4783 = bitcast %Type_Info* %4782 to %Type_Info*
	%4784 = getelementptr inbounds %Type_Info*, %Type_Info** %4750, i64 4
	%4785 = getelementptr inbounds i64, i64* %4752, i64 4
	%4786 = getelementptr inbounds i1, i1* %4753, i64 4
	%4787 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	store %Type_Info* %4787, %Type_Info** %4784
	%4788 = getelementptr inbounds %..string, %..string* %4751, i64 4
	store %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$558, i64 0, i32 0), i64 13}, %..string* %4788
	store i64 36, i64* %4785
	store i1 false, i1* %4786
	%4789 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	%4790 = bitcast %Type_Info* %4789 to %Type_Info*
	%4791 = getelementptr inbounds %Type_Info*, %Type_Info** %4750, i64 5
	%4792 = getelementptr inbounds i64, i64* %4752, i64 5
	%4793 = getelementptr inbounds i1, i1* %4753, i64 5
	%4794 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	store %Type_Info* %4794, %Type_Info** %4791
	%4795 = getelementptr inbounds %..string, %..string* %4751, i64 5
	store %..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$559, i64 0, i32 0), i64 20}, %..string* %4795
	store i64 40, i64* %4792
	store i1 false, i1* %4793
	%4796 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	%4797 = bitcast %Type_Info* %4796 to %Type_Info*
	%4798 = getelementptr inbounds %Type_Info*, %Type_Info** %4750, i64 6
	%4799 = getelementptr inbounds i64, i64* %4752, i64 6
	%4800 = getelementptr inbounds i1, i1* %4753, i64 6
	%4801 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	store %Type_Info* %4801, %Type_Info** %4798
	%4802 = getelementptr inbounds %..string, %..string* %4751, i64 6
	store %..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$55a, i64 0, i32 0), i64 20}, %..string* %4802
	store i64 44, i64* %4799
	store i1 false, i1* %4800
	%4803 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 64
	%4804 = bitcast %Type_Info* %4803 to %Type_Info*
	%4805 = getelementptr inbounds %Type_Info*, %Type_Info** %4750, i64 7
	%4806 = getelementptr inbounds i64, i64* %4752, i64 7
	%4807 = getelementptr inbounds i1, i1* %4753, i64 7
	%4808 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 64
	store %Type_Info* %4808, %Type_Info** %4805
	%4809 = getelementptr inbounds %..string, %..string* %4751, i64 7
	store %..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$55b, i64 0, i32 0), i64 11}, %..string* %4809
	store i64 48, i64* %4806
	store i1 false, i1* %4807
	%4810 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %4745, i64 0, i32 0
	%4811 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %4810, i64 0, i32 0
	store %Type_Info** %4750, %Type_Info*** %4811
	%4812 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %4810, i64 0, i32 1
	store i64 8, i64* %4812
	%4813 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %4745, i64 0, i32 1
	%4814 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %4813, i64 0, i32 0
	store %..string* %4751, %..string** %4814
	%4815 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %4813, i64 0, i32 1
	store i64 8, i64* %4815
	%4816 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %4745, i64 0, i32 2
	%4817 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %4816, i64 0, i32 0
	store i64* %4752, i64** %4817
	%4818 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %4816, i64 0, i32 1
	store i64 8, i64* %4818
	%4819 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %4745, i64 0, i32 3
	%4820 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %4819, i64 0, i32 0
	store i1* %4753, i1** %4820
	%4821 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %4819, i64 0, i32 1
	store i64 8, i64* %4821
	%4822 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %4742, i64 0, i32 2 ; UnionTagPtr
	store i8 16, i8* %4822
	%4823 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 186
	%4824 = getelementptr inbounds %Type_Info, %Type_Info* %4823, i64 0, i32 2
	%4825 = getelementptr inbounds %Type_Info, %Type_Info* %4823, i64 0, i32 0
	store i64 8, i64* %4825
	%4826 = getelementptr inbounds %Type_Info, %Type_Info* %4823, i64 0, i32 1
	store i64 8, i64* %4826
	; TypeInfoProc
	%4827 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %4824 to %Type_Info_Procedure*
	%4828 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %4827, i64 0, i32 0
	%4829 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %4827, i64 0, i32 1
	%4830 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %4827, i64 0, i32 2
	%4831 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %4827, i64 0, i32 3
	store i1 false, i1* %4830
	store i64 1, i64* %4831
	%4832 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %4824, i64 0, i32 2 ; UnionTagPtr
	store i8 10, i8* %4832
	%4833 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 186
	%4834 = getelementptr inbounds %Type_Info, %Type_Info* %4833, i64 0, i32 2
	%4835 = getelementptr inbounds %Type_Info, %Type_Info* %4833, i64 0, i32 0
	store i64 8, i64* %4835
	%4836 = getelementptr inbounds %Type_Info, %Type_Info* %4833, i64 0, i32 1
	store i64 8, i64* %4836
	; TypeInfoProc
	%4837 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %4834 to %Type_Info_Procedure*
	%4838 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %4837, i64 0, i32 0
	%4839 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %4837, i64 0, i32 1
	%4840 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %4837, i64 0, i32 2
	%4841 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %4837, i64 0, i32 3
	store i1 false, i1* %4840
	store i64 1, i64* %4841
	%4842 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %4834, i64 0, i32 2 ; UnionTagPtr
	store i8 10, i8* %4842
	%4843 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 187
	%4844 = getelementptr inbounds %Type_Info, %Type_Info* %4843, i64 0, i32 2
	%4845 = getelementptr inbounds %Type_Info, %Type_Info* %4843, i64 0, i32 0
	store i64 32, i64* %4845
	%4846 = getelementptr inbounds %Type_Info, %Type_Info* %4843, i64 0, i32 1
	store i64 8, i64* %4846
	; TypeInfoNamed
	%4847 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %4844 to %Type_Info_Named*
	%4848 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 188
	%4849 = bitcast %Type_Info* %4848 to %Type_Info*
	%4850 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %4847, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$55c, i64 0, i32 0), i64 11}, %..string* %4850
	%4851 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %4847, i64 0, i32 1
	store %Type_Info* %4849, %Type_Info** %4851
	%4852 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %4844, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %4852
	%4853 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 188
	%4854 = getelementptr inbounds %Type_Info, %Type_Info* %4853, i64 0, i32 2
	%4855 = getelementptr inbounds %Type_Info, %Type_Info* %4853, i64 0, i32 0
	store i64 32, i64* %4855
	%4856 = getelementptr inbounds %Type_Info, %Type_Info* %4853, i64 0, i32 1
	store i64 8, i64* %4856
	; TypeInfoStruct
	%4857 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %4854 to %Type_Info_Struct*
	%4858 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %4857, i64 0, i32 4
	store i1 false, i1* %4858
	%4859 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %4857, i64 0, i32 5
	store i1 false, i1* %4859
	%4860 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %4857, i64 0, i32 6
	store i1 false, i1* %4860
	%4861 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %4857, i64 0, i32 7
	store i1 false, i1* %4861
	%4862 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 218
	%4863 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 182
	%4864 = getelementptr inbounds [450 x i64], [450 x i64]* @__$type_info_offsets_data, i64 0, i32 128
	%4865 = getelementptr inbounds [450 x i1], [450 x i1]* @__$type_info_usings_data, i64 0, i32 128
	%4866 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 112
	%4867 = bitcast %Type_Info* %4866 to %Type_Info*
	%4868 = getelementptr inbounds %Type_Info*, %Type_Info** %4862, i64 0
	%4869 = getelementptr inbounds i64, i64* %4864, i64 0
	%4870 = getelementptr inbounds i1, i1* %4865, i64 0
	%4871 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 112
	store %Type_Info* %4871, %Type_Info** %4868
	%4872 = getelementptr inbounds %..string, %..string* %4863, i64 0
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$55d, i64 0, i32 0), i64 6}, %..string* %4872
	store i64 0, i64* %4869
	store i1 true, i1* %4870
	%4873 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 110
	%4874 = bitcast %Type_Info* %4873 to %Type_Info*
	%4875 = getelementptr inbounds %Type_Info*, %Type_Info** %4862, i64 1
	%4876 = getelementptr inbounds i64, i64* %4864, i64 1
	%4877 = getelementptr inbounds i1, i1* %4865, i64 1
	%4878 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 110
	store %Type_Info* %4878, %Type_Info** %4875
	%4879 = getelementptr inbounds %..string, %..string* %4863, i64 1
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$55e, i64 0, i32 0), i64 8}, %..string* %4879
	store i64 16, i64* %4876
	store i1 false, i1* %4877
	%4880 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 110
	%4881 = bitcast %Type_Info* %4880 to %Type_Info*
	%4882 = getelementptr inbounds %Type_Info*, %Type_Info** %4862, i64 2
	%4883 = getelementptr inbounds i64, i64* %4864, i64 2
	%4884 = getelementptr inbounds i1, i1* %4865, i64 2
	%4885 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 110
	store %Type_Info* %4885, %Type_Info** %4882
	%4886 = getelementptr inbounds %..string, %..string* %4863, i64 2
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$55f, i64 0, i32 0), i64 5}, %..string* %4886
	store i64 24, i64* %4883
	store i1 false, i1* %4884
	%4887 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %4857, i64 0, i32 0
	%4888 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %4887, i64 0, i32 0
	store %Type_Info** %4862, %Type_Info*** %4888
	%4889 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %4887, i64 0, i32 1
	store i64 3, i64* %4889
	%4890 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %4857, i64 0, i32 1
	%4891 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %4890, i64 0, i32 0
	store %..string* %4863, %..string** %4891
	%4892 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %4890, i64 0, i32 1
	store i64 3, i64* %4892
	%4893 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %4857, i64 0, i32 2
	%4894 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %4893, i64 0, i32 0
	store i64* %4864, i64** %4894
	%4895 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %4893, i64 0, i32 1
	store i64 3, i64* %4895
	%4896 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %4857, i64 0, i32 3
	%4897 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %4896, i64 0, i32 0
	store i1* %4865, i1** %4897
	%4898 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %4896, i64 0, i32 1
	store i64 3, i64* %4898
	%4899 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %4854, i64 0, i32 2 ; UnionTagPtr
	store i8 16, i8* %4899
	%4900 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 189
	%4901 = getelementptr inbounds %Type_Info, %Type_Info* %4900, i64 0, i32 2
	%4902 = getelementptr inbounds %Type_Info, %Type_Info* %4900, i64 0, i32 0
	store i64 8, i64* %4902
	%4903 = getelementptr inbounds %Type_Info, %Type_Info* %4900, i64 0, i32 1
	store i64 8, i64* %4903
	; TypeInfoNamed
	%4904 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %4901 to %Type_Info_Named*
	%4905 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 42
	%4906 = bitcast %Type_Info* %4905 to %Type_Info*
	%4907 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %4904, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$560, i64 0, i32 0), i64 6}, %..string* %4907
	%4908 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %4904, i64 0, i32 1
	store %Type_Info* %4906, %Type_Info** %4908
	%4909 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %4901, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %4909
	%4910 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 190
	%4911 = getelementptr inbounds %Type_Info, %Type_Info* %4910, i64 0, i32 2
	%4912 = getelementptr inbounds %Type_Info, %Type_Info* %4910, i64 0, i32 0
	store i64 8, i64* %4912
	%4913 = getelementptr inbounds %Type_Info, %Type_Info* %4910, i64 0, i32 1
	store i64 8, i64* %4913
	; TypeInfoNamed
	%4914 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %4911 to %Type_Info_Named*
	%4915 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 61
	%4916 = bitcast %Type_Info* %4915 to %Type_Info*
	%4917 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %4914, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$561, i64 0, i32 0), i64 9}, %..string* %4917
	%4918 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %4914, i64 0, i32 1
	store %Type_Info* %4916, %Type_Info** %4918
	%4919 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %4911, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %4919
	%4920 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 191
	%4921 = getelementptr inbounds %Type_Info, %Type_Info* %4920, i64 0, i32 2
	%4922 = getelementptr inbounds %Type_Info, %Type_Info* %4920, i64 0, i32 0
	store i64 8, i64* %4922
	%4923 = getelementptr inbounds %Type_Info, %Type_Info* %4920, i64 0, i32 1
	store i64 8, i64* %4923
	; TypeInfoNamed
	%4924 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %4921 to %Type_Info_Named*
	%4925 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%4926 = bitcast %Type_Info* %4925 to %Type_Info*
	%4927 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %4924, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$562, i64 0, i32 0), i64 5}, %..string* %4927
	%4928 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %4924, i64 0, i32 1
	store %Type_Info* %4926, %Type_Info** %4928
	%4929 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %4921, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %4929
	%4930 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 192
	%4931 = getelementptr inbounds %Type_Info, %Type_Info* %4930, i64 0, i32 2
	%4932 = getelementptr inbounds %Type_Info, %Type_Info* %4930, i64 0, i32 0
	store i64 8, i64* %4932
	%4933 = getelementptr inbounds %Type_Info, %Type_Info* %4930, i64 0, i32 1
	store i64 8, i64* %4933
	; TypeInfoNamed
	%4934 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %4931 to %Type_Info_Named*
	%4935 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 193
	%4936 = bitcast %Type_Info* %4935 to %Type_Info*
	%4937 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %4934, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$563, i64 0, i32 0), i64 16}, %..string* %4937
	%4938 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %4934, i64 0, i32 1
	store %Type_Info* %4936, %Type_Info** %4938
	%4939 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %4931, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %4939
	%4940 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 193
	%4941 = getelementptr inbounds %Type_Info, %Type_Info* %4940, i64 0, i32 2
	%4942 = getelementptr inbounds %Type_Info, %Type_Info* %4940, i64 0, i32 0
	store i64 8, i64* %4942
	%4943 = getelementptr inbounds %Type_Info, %Type_Info* %4940, i64 0, i32 1
	store i64 8, i64* %4943
	; TypeInfoStruct
	%4944 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %4941 to %Type_Info_Struct*
	%4945 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %4944, i64 0, i32 4
	store i1 false, i1* %4945
	%4946 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %4944, i64 0, i32 5
	store i1 false, i1* %4946
	%4947 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %4944, i64 0, i32 6
	store i1 false, i1* %4947
	%4948 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %4944, i64 0, i32 7
	store i1 false, i1* %4948
	%4949 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 221
	%4950 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 185
	%4951 = getelementptr inbounds [450 x i64], [450 x i64]* @__$type_info_offsets_data, i64 0, i32 131
	%4952 = getelementptr inbounds [450 x i1], [450 x i1]* @__$type_info_usings_data, i64 0, i32 131
	%4953 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%4954 = bitcast %Type_Info* %4953 to %Type_Info*
	%4955 = getelementptr inbounds %Type_Info*, %Type_Info** %4949, i64 0
	%4956 = getelementptr inbounds i64, i64* %4951, i64 0
	%4957 = getelementptr inbounds i1, i1* %4952, i64 0
	%4958 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	store %Type_Info* %4958, %Type_Info** %4955
	%4959 = getelementptr inbounds %..string, %..string* %4950, i64 0
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$564, i64 0, i32 0), i64 4}, %..string* %4959
	store i64 0, i64* %4956
	store i1 false, i1* %4957
	%4960 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %4944, i64 0, i32 0
	%4961 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %4960, i64 0, i32 0
	store %Type_Info** %4949, %Type_Info*** %4961
	%4962 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %4960, i64 0, i32 1
	store i64 1, i64* %4962
	%4963 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %4944, i64 0, i32 1
	%4964 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %4963, i64 0, i32 0
	store %..string* %4950, %..string** %4964
	%4965 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %4963, i64 0, i32 1
	store i64 1, i64* %4965
	%4966 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %4944, i64 0, i32 2
	%4967 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %4966, i64 0, i32 0
	store i64* %4951, i64** %4967
	%4968 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %4966, i64 0, i32 1
	store i64 1, i64* %4968
	%4969 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %4944, i64 0, i32 3
	%4970 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %4969, i64 0, i32 0
	store i1* %4952, i1** %4970
	%4971 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %4969, i64 0, i32 1
	store i64 1, i64* %4971
	%4972 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %4941, i64 0, i32 2 ; UnionTagPtr
	store i8 16, i8* %4972
	%4973 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 194
	%4974 = getelementptr inbounds %Type_Info, %Type_Info* %4973, i64 0, i32 2
	%4975 = getelementptr inbounds %Type_Info, %Type_Info* %4973, i64 0, i32 0
	store i64 40, i64* %4975
	%4976 = getelementptr inbounds %Type_Info, %Type_Info* %4973, i64 0, i32 1
	store i64 8, i64* %4976
	; TypeInfoNamed
	%4977 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %4974 to %Type_Info_Named*
	%4978 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 115
	%4979 = bitcast %Type_Info* %4978 to %Type_Info*
	%4980 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %4977, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__str$565, i64 0, i32 0), i64 17}, %..string* %4980
	%4981 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %4977, i64 0, i32 1
	store %Type_Info* %4979, %Type_Info** %4981
	%4982 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %4974, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %4982
	%4983 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 115
	%4984 = getelementptr inbounds %Type_Info, %Type_Info* %4983, i64 0, i32 2
	%4985 = getelementptr inbounds %Type_Info, %Type_Info* %4983, i64 0, i32 0
	store i64 40, i64* %4985
	%4986 = getelementptr inbounds %Type_Info, %Type_Info* %4983, i64 0, i32 1
	store i64 8, i64* %4986
	; TypeInfoDynamicArray
	%4987 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %4984 to %Type_Info_Dynamic_Array*
	%4988 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	%4989 = bitcast %Type_Info* %4988 to %Type_Info*
	%4990 = getelementptr inbounds %Type_Info_Dynamic_Array, %Type_Info_Dynamic_Array* %4987, i64 0, i32 0
	store %Type_Info* %4989, %Type_Info** %4990
	%4991 = getelementptr inbounds %Type_Info_Dynamic_Array, %Type_Info_Dynamic_Array* %4987, i64 0, i32 1
	store i64 1, i64* %4991
	%4992 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %4984, i64 0, i32 2 ; UnionTagPtr
	store i8 12, i8* %4992
	%4993 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%4994 = getelementptr inbounds %Type_Info, %Type_Info* %4993, i64 0, i32 2
	%4995 = getelementptr inbounds %Type_Info, %Type_Info* %4993, i64 0, i32 0
	store i64 8, i64* %4995
	%4996 = getelementptr inbounds %Type_Info, %Type_Info* %4993, i64 0, i32 1
	store i64 8, i64* %4996
	; TypeInfoPointer
	%4997 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %4994 to %Type_Info_Pointer*
	%4998 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	%4999 = bitcast %Type_Info* %4998 to %Type_Info*
	%5000 = getelementptr inbounds %Type_Info_Pointer, %Type_Info_Pointer* %4997, i64 0, i32 0
	store %Type_Info* %4999, %Type_Info** %5000
	%5001 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %4994, i64 0, i32 2 ; UnionTagPtr
	store i8 9, i8* %5001
	%5002 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 195
	%5003 = getelementptr inbounds %Type_Info, %Type_Info* %5002, i64 0, i32 2
	%5004 = getelementptr inbounds %Type_Info, %Type_Info* %5002, i64 0, i32 0
	store i64 64, i64* %5004
	%5005 = getelementptr inbounds %Type_Info, %Type_Info* %5002, i64 0, i32 1
	store i64 8, i64* %5005
	; TypeInfoNamed
	%5006 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %5003 to %Type_Info_Named*
	%5007 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 196
	%5008 = bitcast %Type_Info* %5007 to %Type_Info*
	%5009 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %5006, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$566, i64 0, i32 0), i64 5}, %..string* %5009
	%5010 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %5006, i64 0, i32 1
	store %Type_Info* %5008, %Type_Info** %5010
	%5011 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %5003, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %5011
	%5012 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 196
	%5013 = getelementptr inbounds %Type_Info, %Type_Info* %5012, i64 0, i32 2
	%5014 = getelementptr inbounds %Type_Info, %Type_Info* %5012, i64 0, i32 0
	store i64 64, i64* %5014
	%5015 = getelementptr inbounds %Type_Info, %Type_Info* %5012, i64 0, i32 1
	store i64 8, i64* %5015
	; TypeInfoStruct
	%5016 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %5013 to %Type_Info_Struct*
	%5017 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %5016, i64 0, i32 4
	store i1 false, i1* %5017
	%5018 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %5016, i64 0, i32 5
	store i1 false, i1* %5018
	%5019 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %5016, i64 0, i32 6
	store i1 false, i1* %5019
	%5020 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %5016, i64 0, i32 7
	store i1 false, i1* %5020
	%5021 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 222
	%5022 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 186
	%5023 = getelementptr inbounds [450 x i64], [450 x i64]* @__$type_info_offsets_data, i64 0, i32 132
	%5024 = getelementptr inbounds [450 x i1], [450 x i1]* @__$type_info_usings_data, i64 0, i32 132
	%5025 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 89
	%5026 = bitcast %Type_Info* %5025 to %Type_Info*
	%5027 = getelementptr inbounds %Type_Info*, %Type_Info** %5021, i64 0
	%5028 = getelementptr inbounds i64, i64* %5023, i64 0
	%5029 = getelementptr inbounds i1, i1* %5024, i64 0
	%5030 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 89
	store %Type_Info* %5030, %Type_Info** %5027
	%5031 = getelementptr inbounds %..string, %..string* %5022, i64 0
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$567, i64 0, i32 0), i64 7}, %..string* %5031
	store i64 40, i64* %5028
	store i1 false, i1* %5029
	%5032 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 194
	%5033 = bitcast %Type_Info* %5032 to %Type_Info*
	%5034 = getelementptr inbounds %Type_Info*, %Type_Info** %5021, i64 1
	%5035 = getelementptr inbounds i64, i64* %5023, i64 1
	%5036 = getelementptr inbounds i1, i1* %5024, i64 1
	%5037 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 194
	store %Type_Info* %5037, %Type_Info** %5034
	%5038 = getelementptr inbounds %..string, %..string* %5022, i64 1
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$568, i64 0, i32 0), i64 6}, %..string* %5038
	store i64 0, i64* %5035
	store i1 false, i1* %5036
	%5039 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%5040 = bitcast %Type_Info* %5039 to %Type_Info*
	%5041 = getelementptr inbounds %Type_Info*, %Type_Info** %5021, i64 2
	%5042 = getelementptr inbounds i64, i64* %5023, i64 2
	%5043 = getelementptr inbounds i1, i1* %5024, i64 2
	%5044 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	store %Type_Info* %5044, %Type_Info** %5041
	%5045 = getelementptr inbounds %..string, %..string* %5022, i64 2
	store %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$569, i64 0, i32 0), i64 10}, %..string* %5045
	store i64 56, i64* %5042
	store i1 false, i1* %5043
	%5046 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %5016, i64 0, i32 0
	%5047 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %5046, i64 0, i32 0
	store %Type_Info** %5021, %Type_Info*** %5047
	%5048 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %5046, i64 0, i32 1
	store i64 3, i64* %5048
	%5049 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %5016, i64 0, i32 1
	%5050 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %5049, i64 0, i32 0
	store %..string* %5022, %..string** %5050
	%5051 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %5049, i64 0, i32 1
	store i64 3, i64* %5051
	%5052 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %5016, i64 0, i32 2
	%5053 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %5052, i64 0, i32 0
	store i64* %5023, i64** %5053
	%5054 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %5052, i64 0, i32 1
	store i64 3, i64* %5054
	%5055 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %5016, i64 0, i32 3
	%5056 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %5055, i64 0, i32 0
	store i1* %5024, i1** %5056
	%5057 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %5055, i64 0, i32 1
	store i64 3, i64* %5057
	%5058 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %5013, i64 0, i32 2 ; UnionTagPtr
	store i8 16, i8* %5058
	%5059 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 197
	%5060 = getelementptr inbounds %Type_Info, %Type_Info* %5059, i64 0, i32 2
	%5061 = getelementptr inbounds %Type_Info, %Type_Info* %5059, i64 0, i32 0
	store i64 16, i64* %5061
	%5062 = getelementptr inbounds %Type_Info, %Type_Info* %5059, i64 0, i32 1
	store i64 8, i64* %5062
	; TypeInfoNamed
	%5063 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %5060 to %Type_Info_Named*
	%5064 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 198
	%5065 = bitcast %Type_Info* %5064 to %Type_Info*
	%5066 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %5063, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$56a, i64 0, i32 0), i64 15}, %..string* %5066
	%5067 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %5063, i64 0, i32 1
	store %Type_Info* %5065, %Type_Info** %5067
	%5068 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %5060, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %5068
	%5069 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 198
	%5070 = getelementptr inbounds %Type_Info, %Type_Info* %5069, i64 0, i32 2
	%5071 = getelementptr inbounds %Type_Info, %Type_Info* %5069, i64 0, i32 0
	store i64 16, i64* %5071
	%5072 = getelementptr inbounds %Type_Info, %Type_Info* %5069, i64 0, i32 1
	store i64 8, i64* %5072
	; TypeInfoStruct
	%5073 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %5070 to %Type_Info_Struct*
	%5074 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %5073, i64 0, i32 4
	store i1 false, i1* %5074
	%5075 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %5073, i64 0, i32 5
	store i1 false, i1* %5075
	%5076 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %5073, i64 0, i32 6
	store i1 false, i1* %5076
	%5077 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %5073, i64 0, i32 7
	store i1 false, i1* %5077
	%5078 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 225
	%5079 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 189
	%5080 = getelementptr inbounds [450 x i64], [450 x i64]* @__$type_info_offsets_data, i64 0, i32 135
	%5081 = getelementptr inbounds [450 x i1], [450 x i1]* @__$type_info_usings_data, i64 0, i32 135
	%5082 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 199
	%5083 = bitcast %Type_Info* %5082 to %Type_Info*
	%5084 = getelementptr inbounds %Type_Info*, %Type_Info** %5078, i64 0
	%5085 = getelementptr inbounds i64, i64* %5080, i64 0
	%5086 = getelementptr inbounds i1, i1* %5081, i64 0
	%5087 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 199
	store %Type_Info* %5087, %Type_Info** %5084
	%5088 = getelementptr inbounds %..string, %..string* %5079, i64 0
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$56b, i64 0, i32 0), i64 5}, %..string* %5088
	store i64 0, i64* %5085
	store i1 false, i1* %5086
	%5089 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%5090 = bitcast %Type_Info* %5089 to %Type_Info*
	%5091 = getelementptr inbounds %Type_Info*, %Type_Info** %5078, i64 1
	%5092 = getelementptr inbounds i64, i64* %5080, i64 1
	%5093 = getelementptr inbounds i1, i1* %5081, i64 1
	%5094 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	store %Type_Info* %5094, %Type_Info** %5091
	%5095 = getelementptr inbounds %..string, %..string* %5079, i64 1
	store %..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$56c, i64 0, i32 0), i64 14}, %..string* %5095
	store i64 8, i64* %5092
	store i1 false, i1* %5093
	%5096 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %5073, i64 0, i32 0
	%5097 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %5096, i64 0, i32 0
	store %Type_Info** %5078, %Type_Info*** %5097
	%5098 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %5096, i64 0, i32 1
	store i64 2, i64* %5098
	%5099 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %5073, i64 0, i32 1
	%5100 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %5099, i64 0, i32 0
	store %..string* %5079, %..string** %5100
	%5101 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %5099, i64 0, i32 1
	store i64 2, i64* %5101
	%5102 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %5073, i64 0, i32 2
	%5103 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %5102, i64 0, i32 0
	store i64* %5080, i64** %5103
	%5104 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %5102, i64 0, i32 1
	store i64 2, i64* %5104
	%5105 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %5073, i64 0, i32 3
	%5106 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %5105, i64 0, i32 0
	store i1* %5081, i1** %5106
	%5107 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %5105, i64 0, i32 1
	store i64 2, i64* %5107
	%5108 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %5070, i64 0, i32 2 ; UnionTagPtr
	store i8 16, i8* %5108
	%5109 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 199
	%5110 = getelementptr inbounds %Type_Info, %Type_Info* %5109, i64 0, i32 2
	%5111 = getelementptr inbounds %Type_Info, %Type_Info* %5109, i64 0, i32 0
	store i64 8, i64* %5111
	%5112 = getelementptr inbounds %Type_Info, %Type_Info* %5109, i64 0, i32 1
	store i64 8, i64* %5112
	; TypeInfoPointer
	%5113 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %5110 to %Type_Info_Pointer*
	%5114 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 195
	%5115 = bitcast %Type_Info* %5114 to %Type_Info*
	%5116 = getelementptr inbounds %Type_Info_Pointer, %Type_Info_Pointer* %5113, i64 0, i32 0
	store %Type_Info* %5115, %Type_Info** %5116
	%5117 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %5110, i64 0, i32 2 ; UnionTagPtr
	store i8 9, i8* %5117
	%5118 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 200
	%5119 = getelementptr inbounds %Type_Info, %Type_Info* %5118, i64 0, i32 2
	%5120 = getelementptr inbounds %Type_Info, %Type_Info* %5118, i64 0, i32 0
	store i64 40, i64* %5120
	%5121 = getelementptr inbounds %Type_Info, %Type_Info* %5118, i64 0, i32 1
	store i64 8, i64* %5121
	; TypeInfoNamed
	%5122 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %5119 to %Type_Info_Named*
	%5123 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 201
	%5124 = bitcast %Type_Info* %5123 to %Type_Info*
	%5125 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %5122, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$56d, i64 0, i32 0), i64 12}, %..string* %5125
	%5126 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %5122, i64 0, i32 1
	store %Type_Info* %5124, %Type_Info** %5126
	%5127 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %5119, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %5127
	%5128 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 201
	%5129 = getelementptr inbounds %Type_Info, %Type_Info* %5128, i64 0, i32 2
	%5130 = getelementptr inbounds %Type_Info, %Type_Info* %5128, i64 0, i32 0
	store i64 40, i64* %5130
	%5131 = getelementptr inbounds %Type_Info, %Type_Info* %5128, i64 0, i32 1
	store i64 8, i64* %5131
	; TypeInfoStruct
	%5132 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %5129 to %Type_Info_Struct*
	%5133 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %5132, i64 0, i32 4
	store i1 false, i1* %5133
	%5134 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %5132, i64 0, i32 5
	store i1 false, i1* %5134
	%5135 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %5132, i64 0, i32 6
	store i1 false, i1* %5135
	%5136 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %5132, i64 0, i32 7
	store i1 false, i1* %5136
	%5137 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 227
	%5138 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 191
	%5139 = getelementptr inbounds [450 x i64], [450 x i64]* @__$type_info_offsets_data, i64 0, i32 137
	%5140 = getelementptr inbounds [450 x i1], [450 x i1]* @__$type_info_usings_data, i64 0, i32 137
	%5141 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 202
	%5142 = bitcast %Type_Info* %5141 to %Type_Info*
	%5143 = getelementptr inbounds %Type_Info*, %Type_Info** %5137, i64 0
	%5144 = getelementptr inbounds i64, i64* %5139, i64 0
	%5145 = getelementptr inbounds i1, i1* %5140, i64 0
	%5146 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 202
	store %Type_Info* %5146, %Type_Info** %5143
	%5147 = getelementptr inbounds %..string, %..string* %5138, i64 0
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$56e, i64 0, i32 0), i64 6}, %..string* %5147
	store i64 0, i64* %5144
	store i1 false, i1* %5145
	%5148 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%5149 = bitcast %Type_Info* %5148 to %Type_Info*
	%5150 = getelementptr inbounds %Type_Info*, %Type_Info** %5137, i64 1
	%5151 = getelementptr inbounds i64, i64* %5139, i64 1
	%5152 = getelementptr inbounds i1, i1* %5140, i64 1
	%5153 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	store %Type_Info* %5153, %Type_Info** %5150
	%5154 = getelementptr inbounds %..string, %..string* %5138, i64 1
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$56f, i64 0, i32 0), i64 5}, %..string* %5154
	store i64 16, i64* %5151
	store i1 false, i1* %5152
	%5155 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%5156 = bitcast %Type_Info* %5155 to %Type_Info*
	%5157 = getelementptr inbounds %Type_Info*, %Type_Info** %5137, i64 2
	%5158 = getelementptr inbounds i64, i64* %5139, i64 2
	%5159 = getelementptr inbounds i1, i1* %5140, i64 2
	%5160 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	store %Type_Info* %5160, %Type_Info** %5157
	%5161 = getelementptr inbounds %..string, %..string* %5138, i64 2
	store %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$570, i64 0, i32 0), i64 13}, %..string* %5161
	store i64 24, i64* %5158
	store i1 false, i1* %5159
	%5162 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 13
	%5163 = bitcast %Type_Info* %5162 to %Type_Info*
	%5164 = getelementptr inbounds %Type_Info*, %Type_Info** %5137, i64 3
	%5165 = getelementptr inbounds i64, i64* %5139, i64 3
	%5166 = getelementptr inbounds i1, i1* %5140, i64 3
	%5167 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 13
	store %Type_Info* %5167, %Type_Info** %5164
	%5168 = getelementptr inbounds %..string, %..string* %5138, i64 3
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$571, i64 0, i32 0), i64 3}, %..string* %5168
	store i64 32, i64* %5165
	store i1 false, i1* %5166
	%5169 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %5132, i64 0, i32 0
	%5170 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %5169, i64 0, i32 0
	store %Type_Info** %5137, %Type_Info*** %5170
	%5171 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %5169, i64 0, i32 1
	store i64 4, i64* %5171
	%5172 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %5132, i64 0, i32 1
	%5173 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %5172, i64 0, i32 0
	store %..string* %5138, %..string** %5173
	%5174 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %5172, i64 0, i32 1
	store i64 4, i64* %5174
	%5175 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %5132, i64 0, i32 2
	%5176 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %5175, i64 0, i32 0
	store i64* %5139, i64** %5176
	%5177 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %5175, i64 0, i32 1
	store i64 4, i64* %5177
	%5178 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %5132, i64 0, i32 3
	%5179 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %5178, i64 0, i32 0
	store i1* %5140, i1** %5179
	%5180 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %5178, i64 0, i32 1
	store i64 4, i64* %5180
	%5181 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %5129, i64 0, i32 2 ; UnionTagPtr
	store i8 16, i8* %5181
	%5182 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 202
	%5183 = getelementptr inbounds %Type_Info, %Type_Info* %5182, i64 0, i32 2
	%5184 = getelementptr inbounds %Type_Info, %Type_Info* %5182, i64 0, i32 0
	store i64 16, i64* %5184
	%5185 = getelementptr inbounds %Type_Info, %Type_Info* %5182, i64 0, i32 1
	store i64 8, i64* %5185
	; TypeInfoSlice
	%5186 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %5183 to %Type_Info_Slice*
	%5187 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	%5188 = bitcast %Type_Info* %5187 to %Type_Info*
	%5189 = getelementptr inbounds %Type_Info_Slice, %Type_Info_Slice* %5186, i64 0, i32 0
	store %Type_Info* %5188, %Type_Info** %5189
	%5190 = getelementptr inbounds %Type_Info_Slice, %Type_Info_Slice* %5186, i64 0, i32 1
	store i64 1, i64* %5190
	%5191 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %5183, i64 0, i32 2 ; UnionTagPtr
	store i8 13, i8* %5191
	%5192 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%5193 = getelementptr inbounds %Type_Info, %Type_Info* %5192, i64 0, i32 2
	%5194 = getelementptr inbounds %Type_Info, %Type_Info* %5192, i64 0, i32 0
	store i64 8, i64* %5194
	%5195 = getelementptr inbounds %Type_Info, %Type_Info* %5192, i64 0, i32 1
	store i64 8, i64* %5195
	; TypeInfoPointer
	%5196 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %5193 to %Type_Info_Pointer*
	%5197 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	%5198 = bitcast %Type_Info* %5197 to %Type_Info*
	%5199 = getelementptr inbounds %Type_Info_Pointer, %Type_Info_Pointer* %5196, i64 0, i32 0
	store %Type_Info* %5198, %Type_Info** %5199
	%5200 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %5193, i64 0, i32 2 ; UnionTagPtr
	store i8 9, i8* %5200
	%5201 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 203
	%5202 = getelementptr inbounds %Type_Info, %Type_Info* %5201, i64 0, i32 2
	%5203 = getelementptr inbounds %Type_Info, %Type_Info* %5201, i64 0, i32 0
	store i64 24, i64* %5203
	%5204 = getelementptr inbounds %Type_Info, %Type_Info* %5201, i64 0, i32 1
	store i64 8, i64* %5204
	; TypeInfoNamed
	%5205 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %5202 to %Type_Info_Named*
	%5206 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 204
	%5207 = bitcast %Type_Info* %5206 to %Type_Info*
	%5208 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %5205, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$572, i64 0, i32 0), i64 9}, %..string* %5208
	%5209 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %5205, i64 0, i32 1
	store %Type_Info* %5207, %Type_Info** %5209
	%5210 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %5202, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %5210
	%5211 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 204
	%5212 = getelementptr inbounds %Type_Info, %Type_Info* %5211, i64 0, i32 2
	%5213 = getelementptr inbounds %Type_Info, %Type_Info* %5211, i64 0, i32 0
	store i64 24, i64* %5213
	%5214 = getelementptr inbounds %Type_Info, %Type_Info* %5211, i64 0, i32 1
	store i64 8, i64* %5214
	; TypeInfoStruct
	%5215 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %5212 to %Type_Info_Struct*
	%5216 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %5215, i64 0, i32 4
	store i1 false, i1* %5216
	%5217 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %5215, i64 0, i32 5
	store i1 false, i1* %5217
	%5218 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %5215, i64 0, i32 6
	store i1 false, i1* %5218
	%5219 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %5215, i64 0, i32 7
	store i1 false, i1* %5219
	%5220 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 231
	%5221 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 195
	%5222 = getelementptr inbounds [450 x i64], [450 x i64]* @__$type_info_offsets_data, i64 0, i32 141
	%5223 = getelementptr inbounds [450 x i1], [450 x i1]* @__$type_info_usings_data, i64 0, i32 141
	%5224 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	%5225 = bitcast %Type_Info* %5224 to %Type_Info*
	%5226 = getelementptr inbounds %Type_Info*, %Type_Info** %5220, i64 0
	%5227 = getelementptr inbounds i64, i64* %5222, i64 0
	%5228 = getelementptr inbounds i1, i1* %5223, i64 0
	%5229 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %5229, %Type_Info** %5226
	%5230 = getelementptr inbounds %..string, %..string* %5221, i64 0
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$573, i64 0, i32 0), i64 8}, %..string* %5230
	store i64 0, i64* %5227
	store i1 false, i1* %5228
	%5231 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	%5232 = bitcast %Type_Info* %5231 to %Type_Info*
	%5233 = getelementptr inbounds %Type_Info*, %Type_Info** %5220, i64 1
	%5234 = getelementptr inbounds i64, i64* %5222, i64 1
	%5235 = getelementptr inbounds i1, i1* %5223, i64 1
	%5236 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	store %Type_Info* %5236, %Type_Info** %5233
	%5237 = getelementptr inbounds %..string, %..string* %5221, i64 1
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$574, i64 0, i32 0), i64 7}, %..string* %5237
	store i64 8, i64* %5234
	store i1 false, i1* %5235
	%5238 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%5239 = bitcast %Type_Info* %5238 to %Type_Info*
	%5240 = getelementptr inbounds %Type_Info*, %Type_Info** %5220, i64 2
	%5241 = getelementptr inbounds i64, i64* %5222, i64 2
	%5242 = getelementptr inbounds i1, i1* %5223, i64 2
	%5243 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	store %Type_Info* %5243, %Type_Info** %5240
	%5244 = getelementptr inbounds %..string, %..string* %5221, i64 2
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$575, i64 0, i32 0), i64 4}, %..string* %5244
	store i64 16, i64* %5241
	store i1 false, i1* %5242
	%5245 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %5215, i64 0, i32 0
	%5246 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %5245, i64 0, i32 0
	store %Type_Info** %5220, %Type_Info*** %5246
	%5247 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %5245, i64 0, i32 1
	store i64 3, i64* %5247
	%5248 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %5215, i64 0, i32 1
	%5249 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %5248, i64 0, i32 0
	store %..string* %5221, %..string** %5249
	%5250 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %5248, i64 0, i32 1
	store i64 3, i64* %5250
	%5251 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %5215, i64 0, i32 2
	%5252 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %5251, i64 0, i32 0
	store i64* %5222, i64** %5252
	%5253 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %5251, i64 0, i32 1
	store i64 3, i64* %5253
	%5254 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %5215, i64 0, i32 3
	%5255 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %5254, i64 0, i32 0
	store i1* %5223, i1** %5255
	%5256 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %5254, i64 0, i32 1
	store i64 3, i64* %5256
	%5257 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %5212, i64 0, i32 2 ; UnionTagPtr
	store i8 16, i8* %5257
	%5258 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 205
	%5259 = getelementptr inbounds %Type_Info, %Type_Info* %5258, i64 0, i32 2
	%5260 = getelementptr inbounds %Type_Info, %Type_Info* %5258, i64 0, i32 0
	store i64 8, i64* %5260
	%5261 = getelementptr inbounds %Type_Info, %Type_Info* %5258, i64 0, i32 1
	store i64 4, i64* %5261
	; TypeInfoNamed
	%5262 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %5259 to %Type_Info_Named*
	%5263 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 206
	%5264 = bitcast %Type_Info* %5263 to %Type_Info*
	%5265 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %5262, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$576, i64 0, i32 0), i64 4}, %..string* %5265
	%5266 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %5262, i64 0, i32 1
	store %Type_Info* %5264, %Type_Info** %5266
	%5267 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %5259, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %5267
	%5268 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 206
	%5269 = getelementptr inbounds %Type_Info, %Type_Info* %5268, i64 0, i32 2
	%5270 = getelementptr inbounds %Type_Info, %Type_Info* %5268, i64 0, i32 0
	store i64 8, i64* %5270
	%5271 = getelementptr inbounds %Type_Info, %Type_Info* %5268, i64 0, i32 1
	store i64 4, i64* %5271
	; TypeInfoArray
	%5272 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %5269 to %Type_Info_Array*
	%5273 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 64
	%5274 = bitcast %Type_Info* %5273 to %Type_Info*
	%5275 = getelementptr inbounds %Type_Info_Array, %Type_Info_Array* %5272, i64 0, i32 0
	store %Type_Info* %5274, %Type_Info** %5275
	%5276 = getelementptr inbounds %Type_Info_Array, %Type_Info_Array* %5272, i64 0, i32 1
	store i64 4, i64* %5276
	%5277 = getelementptr inbounds %Type_Info_Array, %Type_Info_Array* %5272, i64 0, i32 2
	store i64 2, i64* %5277
	%5278 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %5269, i64 0, i32 2 ; UnionTagPtr
	store i8 11, i8* %5278
	%5279 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 207
	%5280 = getelementptr inbounds %Type_Info, %Type_Info* %5279, i64 0, i32 2
	%5281 = getelementptr inbounds %Type_Info, %Type_Info* %5279, i64 0, i32 0
	store i64 8, i64* %5281
	%5282 = getelementptr inbounds %Type_Info, %Type_Info* %5279, i64 0, i32 1
	store i64 8, i64* %5282
	; TypeInfoPointer
	%5283 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %5280 to %Type_Info_Pointer*
	%5284 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 64
	%5285 = bitcast %Type_Info* %5284 to %Type_Info*
	%5286 = getelementptr inbounds %Type_Info_Pointer, %Type_Info_Pointer* %5283, i64 0, i32 0
	store %Type_Info* %5285, %Type_Info** %5286
	%5287 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %5280, i64 0, i32 2 ; UnionTagPtr
	store i8 9, i8* %5287
	%5288 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 208
	%5289 = getelementptr inbounds %Type_Info, %Type_Info* %5288, i64 0, i32 2
	%5290 = getelementptr inbounds %Type_Info, %Type_Info* %5288, i64 0, i32 0
	store i64 12, i64* %5290
	%5291 = getelementptr inbounds %Type_Info, %Type_Info* %5288, i64 0, i32 1
	store i64 4, i64* %5291
	; TypeInfoNamed
	%5292 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %5289 to %Type_Info_Named*
	%5293 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 209
	%5294 = bitcast %Type_Info* %5293 to %Type_Info*
	%5295 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %5292, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$577, i64 0, i32 0), i64 4}, %..string* %5295
	%5296 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %5292, i64 0, i32 1
	store %Type_Info* %5294, %Type_Info** %5296
	%5297 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %5289, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %5297
	%5298 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 209
	%5299 = getelementptr inbounds %Type_Info, %Type_Info* %5298, i64 0, i32 2
	%5300 = getelementptr inbounds %Type_Info, %Type_Info* %5298, i64 0, i32 0
	store i64 12, i64* %5300
	%5301 = getelementptr inbounds %Type_Info, %Type_Info* %5298, i64 0, i32 1
	store i64 4, i64* %5301
	; TypeInfoArray
	%5302 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %5299 to %Type_Info_Array*
	%5303 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 64
	%5304 = bitcast %Type_Info* %5303 to %Type_Info*
	%5305 = getelementptr inbounds %Type_Info_Array, %Type_Info_Array* %5302, i64 0, i32 0
	store %Type_Info* %5304, %Type_Info** %5305
	%5306 = getelementptr inbounds %Type_Info_Array, %Type_Info_Array* %5302, i64 0, i32 1
	store i64 4, i64* %5306
	%5307 = getelementptr inbounds %Type_Info_Array, %Type_Info_Array* %5302, i64 0, i32 2
	store i64 3, i64* %5307
	%5308 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %5299, i64 0, i32 2 ; UnionTagPtr
	store i8 11, i8* %5308
	%5309 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 207
	%5310 = getelementptr inbounds %Type_Info, %Type_Info* %5309, i64 0, i32 2
	%5311 = getelementptr inbounds %Type_Info, %Type_Info* %5309, i64 0, i32 0
	store i64 8, i64* %5311
	%5312 = getelementptr inbounds %Type_Info, %Type_Info* %5309, i64 0, i32 1
	store i64 8, i64* %5312
	; TypeInfoPointer
	%5313 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %5310 to %Type_Info_Pointer*
	%5314 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 64
	%5315 = bitcast %Type_Info* %5314 to %Type_Info*
	%5316 = getelementptr inbounds %Type_Info_Pointer, %Type_Info_Pointer* %5313, i64 0, i32 0
	store %Type_Info* %5315, %Type_Info** %5316
	%5317 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %5310, i64 0, i32 2 ; UnionTagPtr
	store i8 9, i8* %5317
	%5318 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 210
	%5319 = getelementptr inbounds %Type_Info, %Type_Info* %5318, i64 0, i32 2
	%5320 = getelementptr inbounds %Type_Info, %Type_Info* %5318, i64 0, i32 0
	store i64 16, i64* %5320
	%5321 = getelementptr inbounds %Type_Info, %Type_Info* %5318, i64 0, i32 1
	store i64 4, i64* %5321
	; TypeInfoNamed
	%5322 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %5319 to %Type_Info_Named*
	%5323 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 211
	%5324 = bitcast %Type_Info* %5323 to %Type_Info*
	%5325 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %5322, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$578, i64 0, i32 0), i64 4}, %..string* %5325
	%5326 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %5322, i64 0, i32 1
	store %Type_Info* %5324, %Type_Info** %5326
	%5327 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %5319, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %5327
	%5328 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 211
	%5329 = getelementptr inbounds %Type_Info, %Type_Info* %5328, i64 0, i32 2
	%5330 = getelementptr inbounds %Type_Info, %Type_Info* %5328, i64 0, i32 0
	store i64 16, i64* %5330
	%5331 = getelementptr inbounds %Type_Info, %Type_Info* %5328, i64 0, i32 1
	store i64 4, i64* %5331
	; TypeInfoArray
	%5332 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %5329 to %Type_Info_Array*
	%5333 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 64
	%5334 = bitcast %Type_Info* %5333 to %Type_Info*
	%5335 = getelementptr inbounds %Type_Info_Array, %Type_Info_Array* %5332, i64 0, i32 0
	store %Type_Info* %5334, %Type_Info** %5335
	%5336 = getelementptr inbounds %Type_Info_Array, %Type_Info_Array* %5332, i64 0, i32 1
	store i64 4, i64* %5336
	%5337 = getelementptr inbounds %Type_Info_Array, %Type_Info_Array* %5332, i64 0, i32 2
	store i64 4, i64* %5337
	%5338 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %5329, i64 0, i32 2 ; UnionTagPtr
	store i8 11, i8* %5338
	%5339 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 207
	%5340 = getelementptr inbounds %Type_Info, %Type_Info* %5339, i64 0, i32 2
	%5341 = getelementptr inbounds %Type_Info, %Type_Info* %5339, i64 0, i32 0
	store i64 8, i64* %5341
	%5342 = getelementptr inbounds %Type_Info, %Type_Info* %5339, i64 0, i32 1
	store i64 8, i64* %5342
	; TypeInfoPointer
	%5343 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %5340 to %Type_Info_Pointer*
	%5344 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 64
	%5345 = bitcast %Type_Info* %5344 to %Type_Info*
	%5346 = getelementptr inbounds %Type_Info_Pointer, %Type_Info_Pointer* %5343, i64 0, i32 0
	store %Type_Info* %5345, %Type_Info** %5346
	%5347 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %5340, i64 0, i32 2 ; UnionTagPtr
	store i8 9, i8* %5347
	%5348 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 212
	%5349 = getelementptr inbounds %Type_Info, %Type_Info* %5348, i64 0, i32 2
	%5350 = getelementptr inbounds %Type_Info, %Type_Info* %5348, i64 0, i32 0
	store i64 16, i64* %5350
	%5351 = getelementptr inbounds %Type_Info, %Type_Info* %5348, i64 0, i32 1
	store i64 4, i64* %5351
	; TypeInfoNamed
	%5352 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %5349 to %Type_Info_Named*
	%5353 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 213
	%5354 = bitcast %Type_Info* %5353 to %Type_Info*
	%5355 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %5352, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$579, i64 0, i32 0), i64 4}, %..string* %5355
	%5356 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %5352, i64 0, i32 1
	store %Type_Info* %5354, %Type_Info** %5356
	%5357 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %5349, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %5357
	%5358 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 213
	%5359 = getelementptr inbounds %Type_Info, %Type_Info* %5358, i64 0, i32 2
	%5360 = getelementptr inbounds %Type_Info, %Type_Info* %5358, i64 0, i32 0
	store i64 16, i64* %5360
	%5361 = getelementptr inbounds %Type_Info, %Type_Info* %5358, i64 0, i32 1
	store i64 4, i64* %5361
	; TypeInfoArray
	%5362 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %5359 to %Type_Info_Array*
	%5363 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 206
	%5364 = bitcast %Type_Info* %5363 to %Type_Info*
	%5365 = getelementptr inbounds %Type_Info_Array, %Type_Info_Array* %5362, i64 0, i32 0
	store %Type_Info* %5364, %Type_Info** %5365
	%5366 = getelementptr inbounds %Type_Info_Array, %Type_Info_Array* %5362, i64 0, i32 1
	store i64 8, i64* %5366
	%5367 = getelementptr inbounds %Type_Info_Array, %Type_Info_Array* %5362, i64 0, i32 2
	store i64 2, i64* %5367
	%5368 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %5359, i64 0, i32 2 ; UnionTagPtr
	store i8 11, i8* %5368
	%5369 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 206
	%5370 = getelementptr inbounds %Type_Info, %Type_Info* %5369, i64 0, i32 2
	%5371 = getelementptr inbounds %Type_Info, %Type_Info* %5369, i64 0, i32 0
	store i64 8, i64* %5371
	%5372 = getelementptr inbounds %Type_Info, %Type_Info* %5369, i64 0, i32 1
	store i64 4, i64* %5372
	; TypeInfoArray
	%5373 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %5370 to %Type_Info_Array*
	%5374 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 64
	%5375 = bitcast %Type_Info* %5374 to %Type_Info*
	%5376 = getelementptr inbounds %Type_Info_Array, %Type_Info_Array* %5373, i64 0, i32 0
	store %Type_Info* %5375, %Type_Info** %5376
	%5377 = getelementptr inbounds %Type_Info_Array, %Type_Info_Array* %5373, i64 0, i32 1
	store i64 4, i64* %5377
	%5378 = getelementptr inbounds %Type_Info_Array, %Type_Info_Array* %5373, i64 0, i32 2
	store i64 2, i64* %5378
	%5379 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %5370, i64 0, i32 2 ; UnionTagPtr
	store i8 11, i8* %5379
	%5380 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 207
	%5381 = getelementptr inbounds %Type_Info, %Type_Info* %5380, i64 0, i32 2
	%5382 = getelementptr inbounds %Type_Info, %Type_Info* %5380, i64 0, i32 0
	store i64 8, i64* %5382
	%5383 = getelementptr inbounds %Type_Info, %Type_Info* %5380, i64 0, i32 1
	store i64 8, i64* %5383
	; TypeInfoPointer
	%5384 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %5381 to %Type_Info_Pointer*
	%5385 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 64
	%5386 = bitcast %Type_Info* %5385 to %Type_Info*
	%5387 = getelementptr inbounds %Type_Info_Pointer, %Type_Info_Pointer* %5384, i64 0, i32 0
	store %Type_Info* %5386, %Type_Info** %5387
	%5388 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %5381, i64 0, i32 2 ; UnionTagPtr
	store i8 9, i8* %5388
	%5389 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 214
	%5390 = getelementptr inbounds %Type_Info, %Type_Info* %5389, i64 0, i32 2
	%5391 = getelementptr inbounds %Type_Info, %Type_Info* %5389, i64 0, i32 0
	store i64 8, i64* %5391
	%5392 = getelementptr inbounds %Type_Info, %Type_Info* %5389, i64 0, i32 1
	store i64 8, i64* %5392
	; TypeInfoPointer
	%5393 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %5390 to %Type_Info_Pointer*
	%5394 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 206
	%5395 = bitcast %Type_Info* %5394 to %Type_Info*
	%5396 = getelementptr inbounds %Type_Info_Pointer, %Type_Info_Pointer* %5393, i64 0, i32 0
	store %Type_Info* %5395, %Type_Info** %5396
	%5397 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %5390, i64 0, i32 2 ; UnionTagPtr
	store i8 9, i8* %5397
	%5398 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 215
	%5399 = getelementptr inbounds %Type_Info, %Type_Info* %5398, i64 0, i32 2
	%5400 = getelementptr inbounds %Type_Info, %Type_Info* %5398, i64 0, i32 0
	store i64 36, i64* %5400
	%5401 = getelementptr inbounds %Type_Info, %Type_Info* %5398, i64 0, i32 1
	store i64 4, i64* %5401
	; TypeInfoNamed
	%5402 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %5399 to %Type_Info_Named*
	%5403 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 216
	%5404 = bitcast %Type_Info* %5403 to %Type_Info*
	%5405 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %5402, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$57a, i64 0, i32 0), i64 4}, %..string* %5405
	%5406 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %5402, i64 0, i32 1
	store %Type_Info* %5404, %Type_Info** %5406
	%5407 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %5399, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %5407
	%5408 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 216
	%5409 = getelementptr inbounds %Type_Info, %Type_Info* %5408, i64 0, i32 2
	%5410 = getelementptr inbounds %Type_Info, %Type_Info* %5408, i64 0, i32 0
	store i64 36, i64* %5410
	%5411 = getelementptr inbounds %Type_Info, %Type_Info* %5408, i64 0, i32 1
	store i64 4, i64* %5411
	; TypeInfoArray
	%5412 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %5409 to %Type_Info_Array*
	%5413 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 209
	%5414 = bitcast %Type_Info* %5413 to %Type_Info*
	%5415 = getelementptr inbounds %Type_Info_Array, %Type_Info_Array* %5412, i64 0, i32 0
	store %Type_Info* %5414, %Type_Info** %5415
	%5416 = getelementptr inbounds %Type_Info_Array, %Type_Info_Array* %5412, i64 0, i32 1
	store i64 12, i64* %5416
	%5417 = getelementptr inbounds %Type_Info_Array, %Type_Info_Array* %5412, i64 0, i32 2
	store i64 3, i64* %5417
	%5418 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %5409, i64 0, i32 2 ; UnionTagPtr
	store i8 11, i8* %5418
	%5419 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 209
	%5420 = getelementptr inbounds %Type_Info, %Type_Info* %5419, i64 0, i32 2
	%5421 = getelementptr inbounds %Type_Info, %Type_Info* %5419, i64 0, i32 0
	store i64 12, i64* %5421
	%5422 = getelementptr inbounds %Type_Info, %Type_Info* %5419, i64 0, i32 1
	store i64 4, i64* %5422
	; TypeInfoArray
	%5423 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %5420 to %Type_Info_Array*
	%5424 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 64
	%5425 = bitcast %Type_Info* %5424 to %Type_Info*
	%5426 = getelementptr inbounds %Type_Info_Array, %Type_Info_Array* %5423, i64 0, i32 0
	store %Type_Info* %5425, %Type_Info** %5426
	%5427 = getelementptr inbounds %Type_Info_Array, %Type_Info_Array* %5423, i64 0, i32 1
	store i64 4, i64* %5427
	%5428 = getelementptr inbounds %Type_Info_Array, %Type_Info_Array* %5423, i64 0, i32 2
	store i64 3, i64* %5428
	%5429 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %5420, i64 0, i32 2 ; UnionTagPtr
	store i8 11, i8* %5429
	%5430 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 207
	%5431 = getelementptr inbounds %Type_Info, %Type_Info* %5430, i64 0, i32 2
	%5432 = getelementptr inbounds %Type_Info, %Type_Info* %5430, i64 0, i32 0
	store i64 8, i64* %5432
	%5433 = getelementptr inbounds %Type_Info, %Type_Info* %5430, i64 0, i32 1
	store i64 8, i64* %5433
	; TypeInfoPointer
	%5434 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %5431 to %Type_Info_Pointer*
	%5435 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 64
	%5436 = bitcast %Type_Info* %5435 to %Type_Info*
	%5437 = getelementptr inbounds %Type_Info_Pointer, %Type_Info_Pointer* %5434, i64 0, i32 0
	store %Type_Info* %5436, %Type_Info** %5437
	%5438 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %5431, i64 0, i32 2 ; UnionTagPtr
	store i8 9, i8* %5438
	%5439 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 217
	%5440 = getelementptr inbounds %Type_Info, %Type_Info* %5439, i64 0, i32 2
	%5441 = getelementptr inbounds %Type_Info, %Type_Info* %5439, i64 0, i32 0
	store i64 8, i64* %5441
	%5442 = getelementptr inbounds %Type_Info, %Type_Info* %5439, i64 0, i32 1
	store i64 8, i64* %5442
	; TypeInfoPointer
	%5443 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %5440 to %Type_Info_Pointer*
	%5444 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 209
	%5445 = bitcast %Type_Info* %5444 to %Type_Info*
	%5446 = getelementptr inbounds %Type_Info_Pointer, %Type_Info_Pointer* %5443, i64 0, i32 0
	store %Type_Info* %5445, %Type_Info** %5446
	%5447 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %5440, i64 0, i32 2 ; UnionTagPtr
	store i8 9, i8* %5447
	%5448 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 218
	%5449 = getelementptr inbounds %Type_Info, %Type_Info* %5448, i64 0, i32 2
	%5450 = getelementptr inbounds %Type_Info, %Type_Info* %5448, i64 0, i32 0
	store i64 64, i64* %5450
	%5451 = getelementptr inbounds %Type_Info, %Type_Info* %5448, i64 0, i32 1
	store i64 4, i64* %5451
	; TypeInfoNamed
	%5452 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %5449 to %Type_Info_Named*
	%5453 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 219
	%5454 = bitcast %Type_Info* %5453 to %Type_Info*
	%5455 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %5452, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$57b, i64 0, i32 0), i64 4}, %..string* %5455
	%5456 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %5452, i64 0, i32 1
	store %Type_Info* %5454, %Type_Info** %5456
	%5457 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %5449, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %5457
	%5458 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 219
	%5459 = getelementptr inbounds %Type_Info, %Type_Info* %5458, i64 0, i32 2
	%5460 = getelementptr inbounds %Type_Info, %Type_Info* %5458, i64 0, i32 0
	store i64 64, i64* %5460
	%5461 = getelementptr inbounds %Type_Info, %Type_Info* %5458, i64 0, i32 1
	store i64 4, i64* %5461
	; TypeInfoArray
	%5462 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %5459 to %Type_Info_Array*
	%5463 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 211
	%5464 = bitcast %Type_Info* %5463 to %Type_Info*
	%5465 = getelementptr inbounds %Type_Info_Array, %Type_Info_Array* %5462, i64 0, i32 0
	store %Type_Info* %5464, %Type_Info** %5465
	%5466 = getelementptr inbounds %Type_Info_Array, %Type_Info_Array* %5462, i64 0, i32 1
	store i64 16, i64* %5466
	%5467 = getelementptr inbounds %Type_Info_Array, %Type_Info_Array* %5462, i64 0, i32 2
	store i64 4, i64* %5467
	%5468 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %5459, i64 0, i32 2 ; UnionTagPtr
	store i8 11, i8* %5468
	%5469 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 211
	%5470 = getelementptr inbounds %Type_Info, %Type_Info* %5469, i64 0, i32 2
	%5471 = getelementptr inbounds %Type_Info, %Type_Info* %5469, i64 0, i32 0
	store i64 16, i64* %5471
	%5472 = getelementptr inbounds %Type_Info, %Type_Info* %5469, i64 0, i32 1
	store i64 4, i64* %5472
	; TypeInfoArray
	%5473 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %5470 to %Type_Info_Array*
	%5474 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 64
	%5475 = bitcast %Type_Info* %5474 to %Type_Info*
	%5476 = getelementptr inbounds %Type_Info_Array, %Type_Info_Array* %5473, i64 0, i32 0
	store %Type_Info* %5475, %Type_Info** %5476
	%5477 = getelementptr inbounds %Type_Info_Array, %Type_Info_Array* %5473, i64 0, i32 1
	store i64 4, i64* %5477
	%5478 = getelementptr inbounds %Type_Info_Array, %Type_Info_Array* %5473, i64 0, i32 2
	store i64 4, i64* %5478
	%5479 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %5470, i64 0, i32 2 ; UnionTagPtr
	store i8 11, i8* %5479
	%5480 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 207
	%5481 = getelementptr inbounds %Type_Info, %Type_Info* %5480, i64 0, i32 2
	%5482 = getelementptr inbounds %Type_Info, %Type_Info* %5480, i64 0, i32 0
	store i64 8, i64* %5482
	%5483 = getelementptr inbounds %Type_Info, %Type_Info* %5480, i64 0, i32 1
	store i64 8, i64* %5483
	; TypeInfoPointer
	%5484 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %5481 to %Type_Info_Pointer*
	%5485 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 64
	%5486 = bitcast %Type_Info* %5485 to %Type_Info*
	%5487 = getelementptr inbounds %Type_Info_Pointer, %Type_Info_Pointer* %5484, i64 0, i32 0
	store %Type_Info* %5486, %Type_Info** %5487
	%5488 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %5481, i64 0, i32 2 ; UnionTagPtr
	store i8 9, i8* %5488
	%5489 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 220
	%5490 = getelementptr inbounds %Type_Info, %Type_Info* %5489, i64 0, i32 2
	%5491 = getelementptr inbounds %Type_Info, %Type_Info* %5489, i64 0, i32 0
	store i64 8, i64* %5491
	%5492 = getelementptr inbounds %Type_Info, %Type_Info* %5489, i64 0, i32 1
	store i64 8, i64* %5492
	; TypeInfoPointer
	%5493 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %5490 to %Type_Info_Pointer*
	%5494 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 211
	%5495 = bitcast %Type_Info* %5494 to %Type_Info*
	%5496 = getelementptr inbounds %Type_Info_Pointer, %Type_Info_Pointer* %5493, i64 0, i32 0
	store %Type_Info* %5495, %Type_Info** %5496
	%5497 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %5490, i64 0, i32 2 ; UnionTagPtr
	store i8 9, i8* %5497
	%5498 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 221
	%5499 = getelementptr inbounds %Type_Info, %Type_Info* %5498, i64 0, i32 2
	%5500 = getelementptr inbounds %Type_Info, %Type_Info* %5498, i64 0, i32 0
	store i64 8, i64* %5500
	%5501 = getelementptr inbounds %Type_Info, %Type_Info* %5498, i64 0, i32 1
	store i64 4, i64* %5501
	; TypeInfoNamed
	%5502 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %5499 to %Type_Info_Named*
	%5503 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 79
	%5504 = bitcast %Type_Info* %5503 to %Type_Info*
	%5505 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %5502, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$57c, i64 0, i32 0), i64 7}, %..string* %5505
	%5506 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %5502, i64 0, i32 1
	store %Type_Info* %5504, %Type_Info** %5506
	%5507 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %5499, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %5507
	%5508 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 222
	%5509 = getelementptr inbounds %Type_Info, %Type_Info* %5508, i64 0, i32 2
	%5510 = getelementptr inbounds %Type_Info, %Type_Info* %5508, i64 0, i32 0
	store i64 8, i64* %5510
	%5511 = getelementptr inbounds %Type_Info, %Type_Info* %5508, i64 0, i32 1
	store i64 8, i64* %5511
	; TypeInfoNamed
	%5512 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %5509 to %Type_Info_Named*
	%5513 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 76
	%5514 = bitcast %Type_Info* %5513 to %Type_Info*
	%5515 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %5512, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$57d, i64 0, i32 0), i64 6}, %..string* %5515
	%5516 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %5512, i64 0, i32 1
	store %Type_Info* %5514, %Type_Info** %5516
	%5517 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %5509, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %5517
	%5518 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 223
	%5519 = getelementptr inbounds %Type_Info, %Type_Info* %5518, i64 0, i32 2
	%5520 = getelementptr inbounds %Type_Info, %Type_Info* %5518, i64 0, i32 0
	store i64 8, i64* %5520
	%5521 = getelementptr inbounds %Type_Info, %Type_Info* %5518, i64 0, i32 1
	store i64 8, i64* %5521
	; TypeInfoNamed
	%5522 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %5519 to %Type_Info_Named*
	%5523 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 224
	%5524 = bitcast %Type_Info* %5523 to %Type_Info*
	%5525 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %5522, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$57e, i64 0, i32 0), i64 12}, %..string* %5525
	%5526 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %5522, i64 0, i32 1
	store %Type_Info* %5524, %Type_Info** %5526
	%5527 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %5519, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %5527
	%5528 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 224
	%5529 = getelementptr inbounds %Type_Info, %Type_Info* %5528, i64 0, i32 2
	%5530 = getelementptr inbounds %Type_Info, %Type_Info* %5528, i64 0, i32 0
	store i64 8, i64* %5530
	%5531 = getelementptr inbounds %Type_Info, %Type_Info* %5528, i64 0, i32 1
	store i64 8, i64* %5531
	; TypeInfoProc
	%5532 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %5529 to %Type_Info_Procedure*
	%5533 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %5532, i64 0, i32 0
	%5534 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %5532, i64 0, i32 1
	%5535 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %5532, i64 0, i32 2
	%5536 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %5532, i64 0, i32 3
	%5537 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 225
	%5538 = bitcast %Type_Info* %5537 to %Type_Info*
	store %Type_Info* %5538, %Type_Info** %5533
	store i1 false, i1* %5535
	store i64 3, i64* %5536
	%5539 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %5529, i64 0, i32 2 ; UnionTagPtr
	store i8 10, i8* %5539
	%5540 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 225
	%5541 = getelementptr inbounds %Type_Info, %Type_Info* %5540, i64 0, i32 2
	%5542 = getelementptr inbounds %Type_Info, %Type_Info* %5540, i64 0, i32 0
	store i64 40, i64* %5542
	%5543 = getelementptr inbounds %Type_Info, %Type_Info* %5540, i64 0, i32 1
	store i64 8, i64* %5543
	; TypeInfoTuple
	%5544 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %5541 to %Type_Info_Tuple*
	%5545 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 234
	%5546 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 198
	%5547 = getelementptr inbounds %Type_Info*, %Type_Info** %5545, i64 0
	%5548 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	store %Type_Info* %5548, %Type_Info** %5547
	%5549 = getelementptr inbounds %..string, %..string* %5546, i64 0
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$57f, i64 0, i32 0), i64 6}, %..string* %5549
	%5550 = getelementptr inbounds %Type_Info*, %Type_Info** %5545, i64 1
	%5551 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	store %Type_Info* %5551, %Type_Info** %5550
	%5552 = getelementptr inbounds %..string, %..string* %5546, i64 1
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$580, i64 0, i32 0), i64 5}, %..string* %5552
	%5553 = getelementptr inbounds %Type_Info*, %Type_Info** %5545, i64 2
	%5554 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	store %Type_Info* %5554, %Type_Info** %5553
	%5555 = getelementptr inbounds %..string, %..string* %5546, i64 2
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$581, i64 0, i32 0), i64 2}, %..string* %5555
	%5556 = getelementptr inbounds %Type_Info*, %Type_Info** %5545, i64 3
	%5557 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	store %Type_Info* %5557, %Type_Info** %5556
	%5558 = getelementptr inbounds %..string, %..string* %5546, i64 3
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$582, i64 0, i32 0), i64 8}, %..string* %5558
	%5559 = getelementptr inbounds %Type_Info*, %Type_Info** %5545, i64 4
	%5560 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	store %Type_Info* %5560, %Type_Info** %5559
	%5561 = getelementptr inbounds %..string, %..string* %5546, i64 4
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$583, i64 0, i32 0), i64 6}, %..string* %5561
	%5562 = getelementptr inbounds %Type_Info*, %Type_Info** %5545, i64 5
	%5563 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	store %Type_Info* %5563, %Type_Info** %5562
	%5564 = getelementptr inbounds %..string, %..string* %5546, i64 5
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$584, i64 0, i32 0), i64 7}, %..string* %5564
	%5565 = getelementptr inbounds %Type_Info*, %Type_Info** %5545, i64 6
	%5566 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 76
	store %Type_Info* %5566, %Type_Info** %5565
	%5567 = getelementptr inbounds %..string, %..string* %5546, i64 6
	store %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$585, i64 0, i32 0), i64 9}, %..string* %5567
	%5568 = getelementptr inbounds %Type_Info_Tuple, %Type_Info_Tuple* %5544, i64 0, i32 0
	%5569 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %5568, i64 0, i32 0
	store %Type_Info** %5545, %Type_Info*** %5569
	%5570 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %5568, i64 0, i32 1
	store i64 7, i64* %5570
	%5571 = getelementptr inbounds %Type_Info_Tuple, %Type_Info_Tuple* %5544, i64 0, i32 1
	%5572 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %5571, i64 0, i32 0
	store %..string* %5546, %..string** %5572
	%5573 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %5571, i64 0, i32 1
	store i64 7, i64* %5573
	%5574 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %5541, i64 0, i32 2 ; UnionTagPtr
	store i8 15, i8* %5574
	%5575 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%5576 = getelementptr inbounds %Type_Info, %Type_Info* %5575, i64 0, i32 2
	%5577 = getelementptr inbounds %Type_Info, %Type_Info* %5575, i64 0, i32 0
	store i64 8, i64* %5577
	%5578 = getelementptr inbounds %Type_Info, %Type_Info* %5575, i64 0, i32 1
	store i64 8, i64* %5578
	; TypeInfoPointer
	%5579 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %5576 to %Type_Info_Pointer*
	%5580 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	%5581 = bitcast %Type_Info* %5580 to %Type_Info*
	%5582 = getelementptr inbounds %Type_Info_Pointer, %Type_Info_Pointer* %5579, i64 0, i32 0
	store %Type_Info* %5581, %Type_Info** %5582
	%5583 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %5576, i64 0, i32 2 ; UnionTagPtr
	store i8 9, i8* %5583
	%5584 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 226
	%5585 = getelementptr inbounds %Type_Info, %Type_Info* %5584, i64 0, i32 2
	%5586 = getelementptr inbounds %Type_Info, %Type_Info* %5584, i64 0, i32 0
	store i64 4, i64* %5586
	%5587 = getelementptr inbounds %Type_Info, %Type_Info* %5584, i64 0, i32 1
	store i64 4, i64* %5587
	; TypeInfoNamed
	%5588 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %5585 to %Type_Info_Named*
	%5589 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 227
	%5590 = bitcast %Type_Info* %5589 to %Type_Info*
	%5591 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %5588, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$586, i64 0, i32 0), i64 12}, %..string* %5591
	%5592 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %5588, i64 0, i32 1
	store %Type_Info* %5590, %Type_Info** %5592
	%5593 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %5585, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %5593
	%5594 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 227
	%5595 = getelementptr inbounds %Type_Info, %Type_Info* %5594, i64 0, i32 2
	%5596 = getelementptr inbounds %Type_Info, %Type_Info* %5594, i64 0, i32 0
	store i64 4, i64* %5596
	%5597 = getelementptr inbounds %Type_Info, %Type_Info* %5594, i64 0, i32 1
	store i64 4, i64* %5597
	; TypeInfoEnum
	%5598 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %5595 to %Type_Info_Enum*
	%5599 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	%5600 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %5598, i64 0, i32 0
	store %Type_Info* %5599, %Type_Info** %5600
	%5601 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 0
	%5602 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 0
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %20
	%5603 = bitcast %Type_Info_Enum_Value* %20 to i32*
	store i32 5126, i32* %5603
	%5604 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %20, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %5604
	%5605 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %20, align 8
	store %Type_Info_Enum_Value %5605, %Type_Info_Enum_Value* %5602
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$587, i64 0, i32 0), i64 5}, %..string* %5601
	%5606 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 1
	%5607 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 1
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %21
	%5608 = bitcast %Type_Info_Enum_Value* %21 to i32*
	store i32 35664, i32* %5608
	%5609 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %21, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %5609
	%5610 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %21, align 8
	store %Type_Info_Enum_Value %5610, %Type_Info_Enum_Value* %5607
	store %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$588, i64 0, i32 0), i64 10}, %..string* %5606
	%5611 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 2
	%5612 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 2
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %22
	%5613 = bitcast %Type_Info_Enum_Value* %22 to i32*
	store i32 35665, i32* %5613
	%5614 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %22, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %5614
	%5615 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %22, align 8
	store %Type_Info_Enum_Value %5615, %Type_Info_Enum_Value* %5612
	store %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$589, i64 0, i32 0), i64 10}, %..string* %5611
	%5616 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 3
	%5617 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 3
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %23
	%5618 = bitcast %Type_Info_Enum_Value* %23 to i32*
	store i32 35666, i32* %5618
	%5619 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %23, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %5619
	%5620 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %23, align 8
	store %Type_Info_Enum_Value %5620, %Type_Info_Enum_Value* %5617
	store %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$58a, i64 0, i32 0), i64 10}, %..string* %5616
	%5621 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 4
	%5622 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 4
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %24
	%5623 = bitcast %Type_Info_Enum_Value* %24 to i32*
	store i32 5130, i32* %5623
	%5624 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %24, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %5624
	%5625 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %24, align 8
	store %Type_Info_Enum_Value %5625, %Type_Info_Enum_Value* %5622
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$58b, i64 0, i32 0), i64 6}, %..string* %5621
	%5626 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 5
	%5627 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 5
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %25
	%5628 = bitcast %Type_Info_Enum_Value* %25 to i32*
	store i32 36860, i32* %5628
	%5629 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %25, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %5629
	%5630 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %25, align 8
	store %Type_Info_Enum_Value %5630, %Type_Info_Enum_Value* %5627
	store %..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$58c, i64 0, i32 0), i64 11}, %..string* %5626
	%5631 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 6
	%5632 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 6
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %26
	%5633 = bitcast %Type_Info_Enum_Value* %26 to i32*
	store i32 36861, i32* %5633
	%5634 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %26, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %5634
	%5635 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %26, align 8
	store %Type_Info_Enum_Value %5635, %Type_Info_Enum_Value* %5632
	store %..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$58d, i64 0, i32 0), i64 11}, %..string* %5631
	%5636 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 7
	%5637 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 7
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %27
	%5638 = bitcast %Type_Info_Enum_Value* %27 to i32*
	store i32 36862, i32* %5638
	%5639 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %27, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %5639
	%5640 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %27, align 8
	store %Type_Info_Enum_Value %5640, %Type_Info_Enum_Value* %5637
	store %..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$58e, i64 0, i32 0), i64 11}, %..string* %5636
	%5641 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 8
	%5642 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 8
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %28
	%5643 = bitcast %Type_Info_Enum_Value* %28 to i32*
	store i32 5124, i32* %5643
	%5644 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %28, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %5644
	%5645 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %28, align 8
	store %Type_Info_Enum_Value %5645, %Type_Info_Enum_Value* %5642
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$58f, i64 0, i32 0), i64 3}, %..string* %5641
	%5646 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 9
	%5647 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 9
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %29
	%5648 = bitcast %Type_Info_Enum_Value* %29 to i32*
	store i32 35667, i32* %5648
	%5649 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %29, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %5649
	%5650 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %29, align 8
	store %Type_Info_Enum_Value %5650, %Type_Info_Enum_Value* %5647
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$590, i64 0, i32 0), i64 8}, %..string* %5646
	%5651 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 10
	%5652 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 10
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %30
	%5653 = bitcast %Type_Info_Enum_Value* %30 to i32*
	store i32 35668, i32* %5653
	%5654 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %30, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %5654
	%5655 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %30, align 8
	store %Type_Info_Enum_Value %5655, %Type_Info_Enum_Value* %5652
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$591, i64 0, i32 0), i64 8}, %..string* %5651
	%5656 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 11
	%5657 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 11
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %31
	%5658 = bitcast %Type_Info_Enum_Value* %31 to i32*
	store i32 35669, i32* %5658
	%5659 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %31, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %5659
	%5660 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %31, align 8
	store %Type_Info_Enum_Value %5660, %Type_Info_Enum_Value* %5657
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$592, i64 0, i32 0), i64 8}, %..string* %5656
	%5661 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 12
	%5662 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 12
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %32
	%5663 = bitcast %Type_Info_Enum_Value* %32 to i32*
	store i32 5125, i32* %5663
	%5664 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %32, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %5664
	%5665 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %32, align 8
	store %Type_Info_Enum_Value %5665, %Type_Info_Enum_Value* %5662
	store %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$593, i64 0, i32 0), i64 12}, %..string* %5661
	%5666 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 13
	%5667 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 13
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %33
	%5668 = bitcast %Type_Info_Enum_Value* %33 to i32*
	store i32 36294, i32* %5668
	%5669 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %33, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %5669
	%5670 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %33, align 8
	store %Type_Info_Enum_Value %5670, %Type_Info_Enum_Value* %5667
	store %..string {i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__str$594, i64 0, i32 0), i64 17}, %..string* %5666
	%5671 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 14
	%5672 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 14
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %34
	%5673 = bitcast %Type_Info_Enum_Value* %34 to i32*
	store i32 36295, i32* %5673
	%5674 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %34, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %5674
	%5675 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %34, align 8
	store %Type_Info_Enum_Value %5675, %Type_Info_Enum_Value* %5672
	store %..string {i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__str$595, i64 0, i32 0), i64 17}, %..string* %5671
	%5676 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 15
	%5677 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 15
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %35
	%5678 = bitcast %Type_Info_Enum_Value* %35 to i32*
	store i32 36296, i32* %5678
	%5679 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %35, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %5679
	%5680 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %35, align 8
	store %Type_Info_Enum_Value %5680, %Type_Info_Enum_Value* %5677
	store %..string {i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__str$596, i64 0, i32 0), i64 17}, %..string* %5676
	%5681 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 16
	%5682 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 16
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %36
	%5683 = bitcast %Type_Info_Enum_Value* %36 to i32*
	store i32 35670, i32* %5683
	%5684 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %36, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %5684
	%5685 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %36, align 8
	store %Type_Info_Enum_Value %5685, %Type_Info_Enum_Value* %5682
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$597, i64 0, i32 0), i64 4}, %..string* %5681
	%5686 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 17
	%5687 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 17
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %37
	%5688 = bitcast %Type_Info_Enum_Value* %37 to i32*
	store i32 35671, i32* %5688
	%5689 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %37, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %5689
	%5690 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %37, align 8
	store %Type_Info_Enum_Value %5690, %Type_Info_Enum_Value* %5687
	store %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$598, i64 0, i32 0), i64 9}, %..string* %5686
	%5691 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 18
	%5692 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 18
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %38
	%5693 = bitcast %Type_Info_Enum_Value* %38 to i32*
	store i32 35672, i32* %5693
	%5694 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %38, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %5694
	%5695 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %38, align 8
	store %Type_Info_Enum_Value %5695, %Type_Info_Enum_Value* %5692
	store %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$599, i64 0, i32 0), i64 9}, %..string* %5691
	%5696 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 19
	%5697 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 19
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %39
	%5698 = bitcast %Type_Info_Enum_Value* %39 to i32*
	store i32 35673, i32* %5698
	%5699 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %39, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %5699
	%5700 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %39, align 8
	store %Type_Info_Enum_Value %5700, %Type_Info_Enum_Value* %5697
	store %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$59a, i64 0, i32 0), i64 9}, %..string* %5696
	%5701 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 20
	%5702 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 20
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %40
	%5703 = bitcast %Type_Info_Enum_Value* %40 to i32*
	store i32 35674, i32* %5703
	%5704 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %40, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %5704
	%5705 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %40, align 8
	store %Type_Info_Enum_Value %5705, %Type_Info_Enum_Value* %5702
	store %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$59b, i64 0, i32 0), i64 10}, %..string* %5701
	%5706 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 21
	%5707 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 21
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %41
	%5708 = bitcast %Type_Info_Enum_Value* %41 to i32*
	store i32 35675, i32* %5708
	%5709 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %41, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %5709
	%5710 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %41, align 8
	store %Type_Info_Enum_Value %5710, %Type_Info_Enum_Value* %5707
	store %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$59c, i64 0, i32 0), i64 10}, %..string* %5706
	%5711 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 22
	%5712 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 22
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %42
	%5713 = bitcast %Type_Info_Enum_Value* %42 to i32*
	store i32 35676, i32* %5713
	%5714 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %42, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %5714
	%5715 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %42, align 8
	store %Type_Info_Enum_Value %5715, %Type_Info_Enum_Value* %5712
	store %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$59d, i64 0, i32 0), i64 10}, %..string* %5711
	%5716 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 23
	%5717 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 23
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %43
	%5718 = bitcast %Type_Info_Enum_Value* %43 to i32*
	store i32 35685, i32* %5718
	%5719 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %43, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %5719
	%5720 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %43, align 8
	store %Type_Info_Enum_Value %5720, %Type_Info_Enum_Value* %5717
	store %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$59e, i64 0, i32 0), i64 12}, %..string* %5716
	%5721 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 24
	%5722 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 24
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %44
	%5723 = bitcast %Type_Info_Enum_Value* %44 to i32*
	store i32 35686, i32* %5723
	%5724 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %44, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %5724
	%5725 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %44, align 8
	store %Type_Info_Enum_Value %5725, %Type_Info_Enum_Value* %5722
	store %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$59f, i64 0, i32 0), i64 12}, %..string* %5721
	%5726 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 25
	%5727 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 25
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %45
	%5728 = bitcast %Type_Info_Enum_Value* %45 to i32*
	store i32 35687, i32* %5728
	%5729 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %45, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %5729
	%5730 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %45, align 8
	store %Type_Info_Enum_Value %5730, %Type_Info_Enum_Value* %5727
	store %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$5a0, i64 0, i32 0), i64 12}, %..string* %5726
	%5731 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 26
	%5732 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 26
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %46
	%5733 = bitcast %Type_Info_Enum_Value* %46 to i32*
	store i32 35688, i32* %5733
	%5734 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %46, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %5734
	%5735 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %46, align 8
	store %Type_Info_Enum_Value %5735, %Type_Info_Enum_Value* %5732
	store %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$5a1, i64 0, i32 0), i64 12}, %..string* %5731
	%5736 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 27
	%5737 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 27
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %47
	%5738 = bitcast %Type_Info_Enum_Value* %47 to i32*
	store i32 35689, i32* %5738
	%5739 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %47, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %5739
	%5740 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %47, align 8
	store %Type_Info_Enum_Value %5740, %Type_Info_Enum_Value* %5737
	store %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$5a2, i64 0, i32 0), i64 12}, %..string* %5736
	%5741 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 28
	%5742 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 28
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %48
	%5743 = bitcast %Type_Info_Enum_Value* %48 to i32*
	store i32 35690, i32* %5743
	%5744 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %48, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %5744
	%5745 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %48, align 8
	store %Type_Info_Enum_Value %5745, %Type_Info_Enum_Value* %5742
	store %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$5a3, i64 0, i32 0), i64 12}, %..string* %5741
	%5746 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 29
	%5747 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 29
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %49
	%5748 = bitcast %Type_Info_Enum_Value* %49 to i32*
	store i32 36678, i32* %5748
	%5749 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %49, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %5749
	%5750 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %49, align 8
	store %Type_Info_Enum_Value %5750, %Type_Info_Enum_Value* %5747
	store %..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$5a4, i64 0, i32 0), i64 11}, %..string* %5746
	%5751 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 30
	%5752 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 30
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %50
	%5753 = bitcast %Type_Info_Enum_Value* %50 to i32*
	store i32 36679, i32* %5753
	%5754 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %50, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %5754
	%5755 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %50, align 8
	store %Type_Info_Enum_Value %5755, %Type_Info_Enum_Value* %5752
	store %..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$5a5, i64 0, i32 0), i64 11}, %..string* %5751
	%5756 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 31
	%5757 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 31
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %51
	%5758 = bitcast %Type_Info_Enum_Value* %51 to i32*
	store i32 36680, i32* %5758
	%5759 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %51, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %5759
	%5760 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %51, align 8
	store %Type_Info_Enum_Value %5760, %Type_Info_Enum_Value* %5757
	store %..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$5a6, i64 0, i32 0), i64 11}, %..string* %5756
	%5761 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 32
	%5762 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 32
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %52
	%5763 = bitcast %Type_Info_Enum_Value* %52 to i32*
	store i32 36681, i32* %5763
	%5764 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %52, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %5764
	%5765 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %52, align 8
	store %Type_Info_Enum_Value %5765, %Type_Info_Enum_Value* %5762
	store %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$5a7, i64 0, i32 0), i64 13}, %..string* %5761
	%5766 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 33
	%5767 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 33
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %53
	%5768 = bitcast %Type_Info_Enum_Value* %53 to i32*
	store i32 36682, i32* %5768
	%5769 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %53, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %5769
	%5770 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %53, align 8
	store %Type_Info_Enum_Value %5770, %Type_Info_Enum_Value* %5767
	store %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$5a8, i64 0, i32 0), i64 13}, %..string* %5766
	%5771 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 34
	%5772 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 34
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %54
	%5773 = bitcast %Type_Info_Enum_Value* %54 to i32*
	store i32 36683, i32* %5773
	%5774 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %54, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %5774
	%5775 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %54, align 8
	store %Type_Info_Enum_Value %5775, %Type_Info_Enum_Value* %5772
	store %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$5a9, i64 0, i32 0), i64 13}, %..string* %5771
	%5776 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 35
	%5777 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 35
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %55
	%5778 = bitcast %Type_Info_Enum_Value* %55 to i32*
	store i32 36684, i32* %5778
	%5779 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %55, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %5779
	%5780 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %55, align 8
	store %Type_Info_Enum_Value %5780, %Type_Info_Enum_Value* %5777
	store %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$5aa, i64 0, i32 0), i64 13}, %..string* %5776
	%5781 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 36
	%5782 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 36
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %56
	%5783 = bitcast %Type_Info_Enum_Value* %56 to i32*
	store i32 36685, i32* %5783
	%5784 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %56, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %5784
	%5785 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %56, align 8
	store %Type_Info_Enum_Value %5785, %Type_Info_Enum_Value* %5782
	store %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$5ab, i64 0, i32 0), i64 13}, %..string* %5781
	%5786 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 37
	%5787 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 37
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %57
	%5788 = bitcast %Type_Info_Enum_Value* %57 to i32*
	store i32 36686, i32* %5788
	%5789 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %57, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %5789
	%5790 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %57, align 8
	store %Type_Info_Enum_Value %5790, %Type_Info_Enum_Value* %5787
	store %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$5ac, i64 0, i32 0), i64 13}, %..string* %5786
	%5791 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 38
	%5792 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 38
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %58
	%5793 = bitcast %Type_Info_Enum_Value* %58 to i32*
	store i32 35677, i32* %5793
	%5794 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %58, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %5794
	%5795 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %58, align 8
	store %Type_Info_Enum_Value %5795, %Type_Info_Enum_Value* %5792
	store %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$5ad, i64 0, i32 0), i64 10}, %..string* %5791
	%5796 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 39
	%5797 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 39
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %59
	%5798 = bitcast %Type_Info_Enum_Value* %59 to i32*
	store i32 35678, i32* %5798
	%5799 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %59, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %5799
	%5800 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %59, align 8
	store %Type_Info_Enum_Value %5800, %Type_Info_Enum_Value* %5797
	store %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$5ae, i64 0, i32 0), i64 10}, %..string* %5796
	%5801 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 40
	%5802 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 40
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %60
	%5803 = bitcast %Type_Info_Enum_Value* %60 to i32*
	store i32 35679, i32* %5803
	%5804 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %60, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %5804
	%5805 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %60, align 8
	store %Type_Info_Enum_Value %5805, %Type_Info_Enum_Value* %5802
	store %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$5af, i64 0, i32 0), i64 10}, %..string* %5801
	%5806 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 41
	%5807 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 41
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %61
	%5808 = bitcast %Type_Info_Enum_Value* %61 to i32*
	store i32 35680, i32* %5808
	%5809 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %61, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %5809
	%5810 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %61, align 8
	store %Type_Info_Enum_Value %5810, %Type_Info_Enum_Value* %5807
	store %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$5b0, i64 0, i32 0), i64 12}, %..string* %5806
	%5811 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 42
	%5812 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 42
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %62
	%5813 = bitcast %Type_Info_Enum_Value* %62 to i32*
	store i32 35681, i32* %5813
	%5814 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %62, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %5814
	%5815 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %62, align 8
	store %Type_Info_Enum_Value %5815, %Type_Info_Enum_Value* %5812
	store %..string {i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__str$5b1, i64 0, i32 0), i64 17}, %..string* %5811
	%5816 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 43
	%5817 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 43
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %63
	%5818 = bitcast %Type_Info_Enum_Value* %63 to i32*
	store i32 35682, i32* %5818
	%5819 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %63, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %5819
	%5820 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %63, align 8
	store %Type_Info_Enum_Value %5820, %Type_Info_Enum_Value* %5817
	store %..string {i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__str$5b2, i64 0, i32 0), i64 17}, %..string* %5816
	%5821 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 44
	%5822 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 44
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %64
	%5823 = bitcast %Type_Info_Enum_Value* %64 to i32*
	store i32 36288, i32* %5823
	%5824 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %64, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %5824
	%5825 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %64, align 8
	store %Type_Info_Enum_Value %5825, %Type_Info_Enum_Value* %5822
	store %..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$5b3, i64 0, i32 0), i64 16}, %..string* %5821
	%5826 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 45
	%5827 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 45
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %65
	%5828 = bitcast %Type_Info_Enum_Value* %65 to i32*
	store i32 36289, i32* %5828
	%5829 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %65, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %5829
	%5830 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %65, align 8
	store %Type_Info_Enum_Value %5830, %Type_Info_Enum_Value* %5827
	store %..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$5b4, i64 0, i32 0), i64 16}, %..string* %5826
	%5831 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 46
	%5832 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 46
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %66
	%5833 = bitcast %Type_Info_Enum_Value* %66 to i32*
	store i32 36291, i32* %5833
	%5834 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %66, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %5834
	%5835 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %66, align 8
	store %Type_Info_Enum_Value %5835, %Type_Info_Enum_Value* %5832
	store %..string {i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__str$5b5, i64 0, i32 0), i64 23}, %..string* %5831
	%5836 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 47
	%5837 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 47
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %67
	%5838 = bitcast %Type_Info_Enum_Value* %67 to i32*
	store i32 36292, i32* %5838
	%5839 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %67, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %5839
	%5840 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %67, align 8
	store %Type_Info_Enum_Value %5840, %Type_Info_Enum_Value* %5837
	store %..string {i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__str$5b6, i64 0, i32 0), i64 23}, %..string* %5836
	%5841 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 48
	%5842 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 48
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %68
	%5843 = bitcast %Type_Info_Enum_Value* %68 to i32*
	store i32 37128, i32* %5843
	%5844 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %68, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %5844
	%5845 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %68, align 8
	store %Type_Info_Enum_Value %5845, %Type_Info_Enum_Value* %5842
	store %..string {i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__str$5b7, i64 0, i32 0), i64 22}, %..string* %5841
	%5846 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 49
	%5847 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 49
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %69
	%5848 = bitcast %Type_Info_Enum_Value* %69 to i32*
	store i32 37131, i32* %5848
	%5849 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %69, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %5849
	%5850 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %69, align 8
	store %Type_Info_Enum_Value %5850, %Type_Info_Enum_Value* %5847
	store %..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$5b8, i64 0, i32 0), i64 28}, %..string* %5846
	%5851 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 50
	%5852 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 50
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %70
	%5853 = bitcast %Type_Info_Enum_Value* %70 to i32*
	store i32 36293, i32* %5853
	%5854 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %70, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %5854
	%5855 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %70, align 8
	store %Type_Info_Enum_Value %5855, %Type_Info_Enum_Value* %5852
	store %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$5b9, i64 0, i32 0), i64 19}, %..string* %5851
	%5856 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 51
	%5857 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 51
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %71
	%5858 = bitcast %Type_Info_Enum_Value* %71 to i32*
	store i32 36290, i32* %5858
	%5859 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %71, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %5859
	%5860 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %71, align 8
	store %Type_Info_Enum_Value %5860, %Type_Info_Enum_Value* %5857
	store %..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$5ba, i64 0, i32 0), i64 14}, %..string* %5856
	%5861 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 52
	%5862 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 52
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %72
	%5863 = bitcast %Type_Info_Enum_Value* %72 to i32*
	store i32 35683, i32* %5863
	%5864 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %72, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %5864
	%5865 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %72, align 8
	store %Type_Info_Enum_Value %5865, %Type_Info_Enum_Value* %5862
	store %..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$5bb, i64 0, i32 0), i64 15}, %..string* %5861
	%5866 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 53
	%5867 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 53
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %73
	%5868 = bitcast %Type_Info_Enum_Value* %73 to i32*
	store i32 35684, i32* %5868
	%5869 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %73, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %5869
	%5870 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %73, align 8
	store %Type_Info_Enum_Value %5870, %Type_Info_Enum_Value* %5867
	store %..string {i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__str$5bc, i64 0, i32 0), i64 22}, %..string* %5866
	%5871 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 54
	%5872 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 54
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %74
	%5873 = bitcast %Type_Info_Enum_Value* %74 to i32*
	store i32 36297, i32* %5873
	%5874 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %74, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %5874
	%5875 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %74, align 8
	store %Type_Info_Enum_Value %5875, %Type_Info_Enum_Value* %5872
	store %..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$5bd, i64 0, i32 0), i64 14}, %..string* %5871
	%5876 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 55
	%5877 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 55
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %75
	%5878 = bitcast %Type_Info_Enum_Value* %75 to i32*
	store i32 36298, i32* %5878
	%5879 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %75, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %5879
	%5880 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %75, align 8
	store %Type_Info_Enum_Value %5880, %Type_Info_Enum_Value* %5877
	store %..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$5be, i64 0, i32 0), i64 14}, %..string* %5876
	%5881 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 56
	%5882 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 56
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %76
	%5883 = bitcast %Type_Info_Enum_Value* %76 to i32*
	store i32 36299, i32* %5883
	%5884 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %76, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %5884
	%5885 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %76, align 8
	store %Type_Info_Enum_Value %5885, %Type_Info_Enum_Value* %5882
	store %..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$5bf, i64 0, i32 0), i64 14}, %..string* %5881
	%5886 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 57
	%5887 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 57
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %77
	%5888 = bitcast %Type_Info_Enum_Value* %77 to i32*
	store i32 36300, i32* %5888
	%5889 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %77, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %5889
	%5890 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %77, align 8
	store %Type_Info_Enum_Value %5890, %Type_Info_Enum_Value* %5887
	store %..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$5c0, i64 0, i32 0), i64 16}, %..string* %5886
	%5891 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 58
	%5892 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 58
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %78
	%5893 = bitcast %Type_Info_Enum_Value* %78 to i32*
	store i32 36302, i32* %5893
	%5894 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %78, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %5894
	%5895 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %78, align 8
	store %Type_Info_Enum_Value %5895, %Type_Info_Enum_Value* %5892
	store %..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$5c1, i64 0, i32 0), i64 20}, %..string* %5891
	%5896 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 59
	%5897 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 59
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %79
	%5898 = bitcast %Type_Info_Enum_Value* %79 to i32*
	store i32 36303, i32* %5898
	%5899 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %79, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %5899
	%5900 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %79, align 8
	store %Type_Info_Enum_Value %5900, %Type_Info_Enum_Value* %5897
	store %..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$5c2, i64 0, i32 0), i64 20}, %..string* %5896
	%5901 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 60
	%5902 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 60
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %80
	%5903 = bitcast %Type_Info_Enum_Value* %80 to i32*
	store i32 37129, i32* %5903
	%5904 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %80, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %5904
	%5905 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %80, align 8
	store %Type_Info_Enum_Value %5905, %Type_Info_Enum_Value* %5902
	store %..string {i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__str$5c3, i64 0, i32 0), i64 26}, %..string* %5901
	%5906 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 61
	%5907 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 61
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %81
	%5908 = bitcast %Type_Info_Enum_Value* %81 to i32*
	store i32 37132, i32* %5908
	%5909 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %81, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %5909
	%5910 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %81, align 8
	store %Type_Info_Enum_Value %5910, %Type_Info_Enum_Value* %5907
	store %..string {i8* getelementptr inbounds ([33 x i8], [33 x i8]* @__str$5c4, i64 0, i32 0), i64 32}, %..string* %5906
	%5911 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 62
	%5912 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 62
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %82
	%5913 = bitcast %Type_Info_Enum_Value* %82 to i32*
	store i32 36304, i32* %5913
	%5914 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %82, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %5914
	%5915 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %82, align 8
	store %Type_Info_Enum_Value %5915, %Type_Info_Enum_Value* %5912
	store %..string {i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__str$5c5, i64 0, i32 0), i64 18}, %..string* %5911
	%5916 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 63
	%5917 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 63
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %83
	%5918 = bitcast %Type_Info_Enum_Value* %83 to i32*
	store i32 36301, i32* %5918
	%5919 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %83, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %5919
	%5920 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %83, align 8
	store %Type_Info_Enum_Value %5920, %Type_Info_Enum_Value* %5917
	store %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$5c6, i64 0, i32 0), i64 19}, %..string* %5916
	%5921 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 64
	%5922 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 64
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %84
	%5923 = bitcast %Type_Info_Enum_Value* %84 to i32*
	store i32 36305, i32* %5923
	%5924 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %84, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %5924
	%5925 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %84, align 8
	store %Type_Info_Enum_Value %5925, %Type_Info_Enum_Value* %5922
	store %..string {i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__str$5c7, i64 0, i32 0), i64 23}, %..string* %5921
	%5926 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 65
	%5927 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 65
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %85
	%5928 = bitcast %Type_Info_Enum_Value* %85 to i32*
	store i32 36306, i32* %5928
	%5929 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %85, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %5929
	%5930 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %85, align 8
	store %Type_Info_Enum_Value %5930, %Type_Info_Enum_Value* %5927
	store %..string {i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__str$5c8, i64 0, i32 0), i64 23}, %..string* %5926
	%5931 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 66
	%5932 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 66
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %86
	%5933 = bitcast %Type_Info_Enum_Value* %86 to i32*
	store i32 36307, i32* %5933
	%5934 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %86, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %5934
	%5935 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %86, align 8
	store %Type_Info_Enum_Value %5935, %Type_Info_Enum_Value* %5932
	store %..string {i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__str$5c9, i64 0, i32 0), i64 23}, %..string* %5931
	%5936 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 67
	%5937 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 67
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %87
	%5938 = bitcast %Type_Info_Enum_Value* %87 to i32*
	store i32 36308, i32* %5938
	%5939 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %87, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %5939
	%5940 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %87, align 8
	store %Type_Info_Enum_Value %5940, %Type_Info_Enum_Value* %5937
	store %..string {i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__str$5ca, i64 0, i32 0), i64 25}, %..string* %5936
	%5941 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 68
	%5942 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 68
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %88
	%5943 = bitcast %Type_Info_Enum_Value* %88 to i32*
	store i32 36310, i32* %5943
	%5944 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %88, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %5944
	%5945 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %88, align 8
	store %Type_Info_Enum_Value %5945, %Type_Info_Enum_Value* %5942
	store %..string {i8* getelementptr inbounds ([30 x i8], [30 x i8]* @__str$5cb, i64 0, i32 0), i64 29}, %..string* %5941
	%5946 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 69
	%5947 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 69
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %89
	%5948 = bitcast %Type_Info_Enum_Value* %89 to i32*
	store i32 36311, i32* %5948
	%5949 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %89, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %5949
	%5950 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %89, align 8
	store %Type_Info_Enum_Value %5950, %Type_Info_Enum_Value* %5947
	store %..string {i8* getelementptr inbounds ([30 x i8], [30 x i8]* @__str$5cc, i64 0, i32 0), i64 29}, %..string* %5946
	%5951 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 70
	%5952 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 70
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %90
	%5953 = bitcast %Type_Info_Enum_Value* %90 to i32*
	store i32 37130, i32* %5953
	%5954 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %90, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %5954
	%5955 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %90, align 8
	store %Type_Info_Enum_Value %5955, %Type_Info_Enum_Value* %5952
	store %..string {i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__str$5cd, i64 0, i32 0), i64 35}, %..string* %5951
	%5956 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 71
	%5957 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 71
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %91
	%5958 = bitcast %Type_Info_Enum_Value* %91 to i32*
	store i32 37133, i32* %5958
	%5959 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %91, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %5959
	%5960 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %91, align 8
	store %Type_Info_Enum_Value %5960, %Type_Info_Enum_Value* %5957
	store %..string {i8* getelementptr inbounds ([42 x i8], [42 x i8]* @__str$5ce, i64 0, i32 0), i64 41}, %..string* %5956
	%5961 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 72
	%5962 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 72
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %92
	%5963 = bitcast %Type_Info_Enum_Value* %92 to i32*
	store i32 36312, i32* %5963
	%5964 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %92, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %5964
	%5965 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %92, align 8
	store %Type_Info_Enum_Value %5965, %Type_Info_Enum_Value* %5962
	store %..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$5cf, i64 0, i32 0), i64 27}, %..string* %5961
	%5966 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 73
	%5967 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 73
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %93
	%5968 = bitcast %Type_Info_Enum_Value* %93 to i32*
	store i32 36309, i32* %5968
	%5969 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %93, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %5969
	%5970 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %93, align 8
	store %Type_Info_Enum_Value %5970, %Type_Info_Enum_Value* %5967
	store %..string {i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__str$5d0, i64 0, i32 0), i64 28}, %..string* %5966
	%5971 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 74
	%5972 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 74
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %94
	%5973 = bitcast %Type_Info_Enum_Value* %94 to i32*
	store i32 36940, i32* %5973
	%5974 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %94, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %5974
	%5975 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %94, align 8
	store %Type_Info_Enum_Value %5975, %Type_Info_Enum_Value* %5972
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$5d1, i64 0, i32 0), i64 8}, %..string* %5971
	%5976 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 75
	%5977 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 75
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %95
	%5978 = bitcast %Type_Info_Enum_Value* %95 to i32*
	store i32 36941, i32* %5978
	%5979 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %95, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %5979
	%5980 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %95, align 8
	store %Type_Info_Enum_Value %5980, %Type_Info_Enum_Value* %5977
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$5d2, i64 0, i32 0), i64 8}, %..string* %5976
	%5981 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 76
	%5982 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 76
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %96
	%5983 = bitcast %Type_Info_Enum_Value* %96 to i32*
	store i32 36942, i32* %5983
	%5984 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %96, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %5984
	%5985 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %96, align 8
	store %Type_Info_Enum_Value %5985, %Type_Info_Enum_Value* %5982
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$5d3, i64 0, i32 0), i64 8}, %..string* %5981
	%5986 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 77
	%5987 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 77
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %97
	%5988 = bitcast %Type_Info_Enum_Value* %97 to i32*
	store i32 36943, i32* %5988
	%5989 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %97, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %5989
	%5990 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %97, align 8
	store %Type_Info_Enum_Value %5990, %Type_Info_Enum_Value* %5987
	store %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$5d4, i64 0, i32 0), i64 13}, %..string* %5986
	%5991 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 78
	%5992 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 78
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %98
	%5993 = bitcast %Type_Info_Enum_Value* %98 to i32*
	store i32 36944, i32* %5993
	%5994 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %98, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %5994
	%5995 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %98, align 8
	store %Type_Info_Enum_Value %5995, %Type_Info_Enum_Value* %5992
	store %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$5d5, i64 0, i32 0), i64 10}, %..string* %5991
	%5996 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 79
	%5997 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 79
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %99
	%5998 = bitcast %Type_Info_Enum_Value* %99 to i32*
	store i32 36945, i32* %5998
	%5999 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %99, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %5999
	%6000 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %99, align 8
	store %Type_Info_Enum_Value %6000, %Type_Info_Enum_Value* %5997
	store %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$5d6, i64 0, i32 0), i64 12}, %..string* %5996
	%6001 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 80
	%6002 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 80
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %100
	%6003 = bitcast %Type_Info_Enum_Value* %100 to i32*
	store i32 36946, i32* %6003
	%6004 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %100, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %6004
	%6005 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %100, align 8
	store %Type_Info_Enum_Value %6005, %Type_Info_Enum_Value* %6002
	store %..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$5d7, i64 0, i32 0), i64 14}, %..string* %6001
	%6006 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 81
	%6007 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 81
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %101
	%6008 = bitcast %Type_Info_Enum_Value* %101 to i32*
	store i32 36947, i32* %6008
	%6009 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %101, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %6009
	%6010 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %101, align 8
	store %Type_Info_Enum_Value %6010, %Type_Info_Enum_Value* %6007
	store %..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$5d8, i64 0, i32 0), i64 14}, %..string* %6006
	%6011 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 82
	%6012 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 82
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %102
	%6013 = bitcast %Type_Info_Enum_Value* %102 to i32*
	store i32 36948, i32* %6013
	%6014 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %102, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %6014
	%6015 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %102, align 8
	store %Type_Info_Enum_Value %6015, %Type_Info_Enum_Value* %6012
	store %..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$5d9, i64 0, i32 0), i64 20}, %..string* %6011
	%6016 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 83
	%6017 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 83
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %103
	%6018 = bitcast %Type_Info_Enum_Value* %103 to i32*
	store i32 36949, i32* %6018
	%6019 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %103, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %6019
	%6020 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %103, align 8
	store %Type_Info_Enum_Value %6020, %Type_Info_Enum_Value* %6017
	store %..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$5da, i64 0, i32 0), i64 20}, %..string* %6016
	%6021 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 84
	%6022 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 84
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %104
	%6023 = bitcast %Type_Info_Enum_Value* %104 to i32*
	store i32 36950, i32* %6023
	%6024 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %104, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %6024
	%6025 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %104, align 8
	store %Type_Info_Enum_Value %6025, %Type_Info_Enum_Value* %6022
	store %..string {i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__str$5db, i64 0, i32 0), i64 26}, %..string* %6021
	%6026 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 85
	%6027 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 85
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %105
	%6028 = bitcast %Type_Info_Enum_Value* %105 to i32*
	store i32 36951, i32* %6028
	%6029 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %105, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %6029
	%6030 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %105, align 8
	store %Type_Info_Enum_Value %6030, %Type_Info_Enum_Value* %6027
	store %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$5dc, i64 0, i32 0), i64 12}, %..string* %6026
	%6031 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 86
	%6032 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 86
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %106
	%6033 = bitcast %Type_Info_Enum_Value* %106 to i32*
	store i32 36952, i32* %6033
	%6034 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %106, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %6034
	%6035 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %106, align 8
	store %Type_Info_Enum_Value %6035, %Type_Info_Enum_Value* %6032
	store %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$5dd, i64 0, i32 0), i64 12}, %..string* %6031
	%6036 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 87
	%6037 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 87
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %107
	%6038 = bitcast %Type_Info_Enum_Value* %107 to i32*
	store i32 36953, i32* %6038
	%6039 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %107, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %6039
	%6040 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %107, align 8
	store %Type_Info_Enum_Value %6040, %Type_Info_Enum_Value* %6037
	store %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$5de, i64 0, i32 0), i64 12}, %..string* %6036
	%6041 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 88
	%6042 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 88
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %108
	%6043 = bitcast %Type_Info_Enum_Value* %108 to i32*
	store i32 36954, i32* %6043
	%6044 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %108, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %6044
	%6045 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %108, align 8
	store %Type_Info_Enum_Value %6045, %Type_Info_Enum_Value* %6042
	store %..string {i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__str$5df, i64 0, i32 0), i64 17}, %..string* %6041
	%6046 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 89
	%6047 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 89
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %109
	%6048 = bitcast %Type_Info_Enum_Value* %109 to i32*
	store i32 36955, i32* %6048
	%6049 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %109, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %6049
	%6050 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %109, align 8
	store %Type_Info_Enum_Value %6050, %Type_Info_Enum_Value* %6047
	store %..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$5e0, i64 0, i32 0), i64 14}, %..string* %6046
	%6051 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 90
	%6052 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 90
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %110
	%6053 = bitcast %Type_Info_Enum_Value* %110 to i32*
	store i32 36956, i32* %6053
	%6054 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %110, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %6054
	%6055 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %110, align 8
	store %Type_Info_Enum_Value %6055, %Type_Info_Enum_Value* %6052
	store %..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$5e1, i64 0, i32 0), i64 16}, %..string* %6051
	%6056 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 91
	%6057 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 91
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %111
	%6058 = bitcast %Type_Info_Enum_Value* %111 to i32*
	store i32 36957, i32* %6058
	%6059 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %111, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %6059
	%6060 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %111, align 8
	store %Type_Info_Enum_Value %6060, %Type_Info_Enum_Value* %6057
	store %..string {i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__str$5e2, i64 0, i32 0), i64 18}, %..string* %6056
	%6061 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 92
	%6062 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 92
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %112
	%6063 = bitcast %Type_Info_Enum_Value* %112 to i32*
	store i32 36958, i32* %6063
	%6064 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %112, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %6064
	%6065 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %112, align 8
	store %Type_Info_Enum_Value %6065, %Type_Info_Enum_Value* %6062
	store %..string {i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__str$5e3, i64 0, i32 0), i64 18}, %..string* %6061
	%6066 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 93
	%6067 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 93
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %113
	%6068 = bitcast %Type_Info_Enum_Value* %113 to i32*
	store i32 36959, i32* %6068
	%6069 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %113, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %6069
	%6070 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %113, align 8
	store %Type_Info_Enum_Value %6070, %Type_Info_Enum_Value* %6067
	store %..string {i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__str$5e4, i64 0, i32 0), i64 24}, %..string* %6066
	%6071 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 94
	%6072 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 94
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %114
	%6073 = bitcast %Type_Info_Enum_Value* %114 to i32*
	store i32 36960, i32* %6073
	%6074 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %114, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %6074
	%6075 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %114, align 8
	store %Type_Info_Enum_Value %6075, %Type_Info_Enum_Value* %6072
	store %..string {i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__str$5e5, i64 0, i32 0), i64 24}, %..string* %6071
	%6076 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 95
	%6077 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 95
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %115
	%6078 = bitcast %Type_Info_Enum_Value* %115 to i32*
	store i32 36961, i32* %6078
	%6079 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %115, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %6079
	%6080 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %115, align 8
	store %Type_Info_Enum_Value %6080, %Type_Info_Enum_Value* %6077
	store %..string {i8* getelementptr inbounds ([31 x i8], [31 x i8]* @__str$5e6, i64 0, i32 0), i64 30}, %..string* %6076
	%6081 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 96
	%6082 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 96
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %116
	%6083 = bitcast %Type_Info_Enum_Value* %116 to i32*
	store i32 36962, i32* %6083
	%6084 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %116, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %6084
	%6085 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %116, align 8
	store %Type_Info_Enum_Value %6085, %Type_Info_Enum_Value* %6082
	store %..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$5e7, i64 0, i32 0), i64 21}, %..string* %6081
	%6086 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 97
	%6087 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 97
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %117
	%6088 = bitcast %Type_Info_Enum_Value* %117 to i32*
	store i32 36963, i32* %6088
	%6089 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %117, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %6089
	%6090 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %117, align 8
	store %Type_Info_Enum_Value %6090, %Type_Info_Enum_Value* %6087
	store %..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$5e8, i64 0, i32 0), i64 21}, %..string* %6086
	%6091 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 98
	%6092 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 98
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %118
	%6093 = bitcast %Type_Info_Enum_Value* %118 to i32*
	store i32 36964, i32* %6093
	%6094 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %118, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %6094
	%6095 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %118, align 8
	store %Type_Info_Enum_Value %6095, %Type_Info_Enum_Value* %6092
	store %..string {i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__str$5e9, i64 0, i32 0), i64 21}, %..string* %6091
	%6096 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 99
	%6097 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 99
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %119
	%6098 = bitcast %Type_Info_Enum_Value* %119 to i32*
	store i32 36965, i32* %6098
	%6099 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %119, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %6099
	%6100 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %119, align 8
	store %Type_Info_Enum_Value %6100, %Type_Info_Enum_Value* %6097
	store %..string {i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__str$5ea, i64 0, i32 0), i64 26}, %..string* %6096
	%6101 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 100
	%6102 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 100
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %120
	%6103 = bitcast %Type_Info_Enum_Value* %120 to i32*
	store i32 36966, i32* %6103
	%6104 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %120, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %6104
	%6105 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %120, align 8
	store %Type_Info_Enum_Value %6105, %Type_Info_Enum_Value* %6102
	store %..string {i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__str$5eb, i64 0, i32 0), i64 23}, %..string* %6101
	%6106 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 101
	%6107 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 101
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %121
	%6108 = bitcast %Type_Info_Enum_Value* %121 to i32*
	store i32 36967, i32* %6108
	%6109 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %121, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %6109
	%6110 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %121, align 8
	store %Type_Info_Enum_Value %6110, %Type_Info_Enum_Value* %6107
	store %..string {i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__str$5ec, i64 0, i32 0), i64 25}, %..string* %6106
	%6111 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 102
	%6112 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 102
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %122
	%6113 = bitcast %Type_Info_Enum_Value* %122 to i32*
	store i32 36968, i32* %6113
	%6114 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %122, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %6114
	%6115 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %122, align 8
	store %Type_Info_Enum_Value %6115, %Type_Info_Enum_Value* %6112
	store %..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$5ed, i64 0, i32 0), i64 27}, %..string* %6111
	%6116 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 103
	%6117 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 103
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %123
	%6118 = bitcast %Type_Info_Enum_Value* %123 to i32*
	store i32 36969, i32* %6118
	%6119 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %123, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %6119
	%6120 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %123, align 8
	store %Type_Info_Enum_Value %6120, %Type_Info_Enum_Value* %6117
	store %..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$5ee, i64 0, i32 0), i64 27}, %..string* %6116
	%6121 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 104
	%6122 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 104
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %124
	%6123 = bitcast %Type_Info_Enum_Value* %124 to i32*
	store i32 36970, i32* %6123
	%6124 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %124, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %6124
	%6125 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %124, align 8
	store %Type_Info_Enum_Value %6125, %Type_Info_Enum_Value* %6122
	store %..string {i8* getelementptr inbounds ([34 x i8], [34 x i8]* @__str$5ef, i64 0, i32 0), i64 33}, %..string* %6121
	%6126 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 105
	%6127 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 105
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %125
	%6128 = bitcast %Type_Info_Enum_Value* %125 to i32*
	store i32 36971, i32* %6128
	%6129 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %125, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %6129
	%6130 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %125, align 8
	store %Type_Info_Enum_Value %6130, %Type_Info_Enum_Value* %6127
	store %..string {i8* getelementptr inbounds ([34 x i8], [34 x i8]* @__str$5f0, i64 0, i32 0), i64 33}, %..string* %6126
	%6131 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 106
	%6132 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 106
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %126
	%6133 = bitcast %Type_Info_Enum_Value* %126 to i32*
	store i32 36972, i32* %6133
	%6134 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %126, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %6134
	%6135 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %126, align 8
	store %Type_Info_Enum_Value %6135, %Type_Info_Enum_Value* %6132
	store %..string {i8* getelementptr inbounds ([40 x i8], [40 x i8]* @__str$5f1, i64 0, i32 0), i64 39}, %..string* %6131
	%6136 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 107
	%6137 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 107
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %127
	%6138 = bitcast %Type_Info_Enum_Value* %127 to i32*
	store i32 37595, i32* %6138
	%6139 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %127, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %6139
	%6140 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %127, align 8
	store %Type_Info_Enum_Value %6140, %Type_Info_Enum_Value* %6137
	store %..string {i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__str$5f2, i64 0, i32 0), i64 27}, %..string* %6136
	%6141 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %5598, i64 0, i32 1
	%6142 = getelementptr inbounds [108 x %..string], [108 x %..string]* @__$enum_names-e3, i64 0, i32 0
	%6143 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %6141, i64 0, i32 0
	store %..string* %6142, %..string** %6143
	%6144 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %6141, i64 0, i32 1
	store i64 108, i64* %6144
	%6145 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %5598, i64 0, i32 2
	%6146 = getelementptr inbounds [108 x %Type_Info_Enum_Value], [108 x %Type_Info_Enum_Value]* @__$enum_values-e3, i64 0, i32 0
	%6147 = getelementptr inbounds {%Type_Info_Enum_Value*, i64}, {%Type_Info_Enum_Value*, i64}* %6145, i64 0, i32 0
	store %Type_Info_Enum_Value* %6146, %Type_Info_Enum_Value** %6147
	%6148 = getelementptr inbounds {%Type_Info_Enum_Value*, i64}, {%Type_Info_Enum_Value*, i64}* %6145, i64 0, i32 1
	store i64 108, i64* %6148
	%6149 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %5595, i64 0, i32 2 ; UnionTagPtr
	store i8 18, i8* %6149
	%6150 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 228
	%6151 = getelementptr inbounds %Type_Info, %Type_Info* %6150, i64 0, i32 2
	%6152 = getelementptr inbounds %Type_Info, %Type_Info* %6150, i64 0, i32 0
	store i64 32, i64* %6152
	%6153 = getelementptr inbounds %Type_Info, %Type_Info* %6150, i64 0, i32 1
	store i64 8, i64* %6153
	; TypeInfoNamed
	%6154 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %6151 to %Type_Info_Named*
	%6155 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 229
	%6156 = bitcast %Type_Info* %6155 to %Type_Info*
	%6157 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %6154, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$5f3, i64 0, i32 0), i64 12}, %..string* %6157
	%6158 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %6154, i64 0, i32 1
	store %Type_Info* %6156, %Type_Info** %6158
	%6159 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %6151, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %6159
	%6160 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 229
	%6161 = getelementptr inbounds %Type_Info, %Type_Info* %6160, i64 0, i32 2
	%6162 = getelementptr inbounds %Type_Info, %Type_Info* %6160, i64 0, i32 0
	store i64 32, i64* %6162
	%6163 = getelementptr inbounds %Type_Info, %Type_Info* %6160, i64 0, i32 1
	store i64 8, i64* %6163
	; TypeInfoStruct
	%6164 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %6161 to %Type_Info_Struct*
	%6165 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %6164, i64 0, i32 4
	store i1 false, i1* %6165
	%6166 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %6164, i64 0, i32 5
	store i1 false, i1* %6166
	%6167 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %6164, i64 0, i32 6
	store i1 false, i1* %6167
	%6168 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %6164, i64 0, i32 7
	store i1 false, i1* %6168
	%6169 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 241
	%6170 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 205
	%6171 = getelementptr inbounds [450 x i64], [450 x i64]* @__$type_info_offsets_data, i64 0, i32 144
	%6172 = getelementptr inbounds [450 x i1], [450 x i1]* @__$type_info_usings_data, i64 0, i32 144
	%6173 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	%6174 = bitcast %Type_Info* %6173 to %Type_Info*
	%6175 = getelementptr inbounds %Type_Info*, %Type_Info** %6169, i64 0
	%6176 = getelementptr inbounds i64, i64* %6171, i64 0
	%6177 = getelementptr inbounds i1, i1* %6172, i64 0
	%6178 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	store %Type_Info* %6178, %Type_Info** %6175
	%6179 = getelementptr inbounds %..string, %..string* %6170, i64 0
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$5f4, i64 0, i32 0), i64 8}, %..string* %6179
	store i64 16, i64* %6176
	store i1 false, i1* %6177
	%6180 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	%6181 = bitcast %Type_Info* %6180 to %Type_Info*
	%6182 = getelementptr inbounds %Type_Info*, %Type_Info** %6169, i64 1
	%6183 = getelementptr inbounds i64, i64* %6171, i64 1
	%6184 = getelementptr inbounds i1, i1* %6172, i64 1
	%6185 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	store %Type_Info* %6185, %Type_Info** %6182
	%6186 = getelementptr inbounds %..string, %..string* %6170, i64 1
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$5f5, i64 0, i32 0), i64 4}, %..string* %6186
	store i64 20, i64* %6183
	store i1 false, i1* %6184
	%6187 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 226
	%6188 = bitcast %Type_Info* %6187 to %Type_Info*
	%6189 = getelementptr inbounds %Type_Info*, %Type_Info** %6169, i64 2
	%6190 = getelementptr inbounds i64, i64* %6171, i64 2
	%6191 = getelementptr inbounds i1, i1* %6172, i64 2
	%6192 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 226
	store %Type_Info* %6192, %Type_Info** %6189
	%6193 = getelementptr inbounds %..string, %..string* %6170, i64 2
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$5f6, i64 0, i32 0), i64 4}, %..string* %6193
	store i64 24, i64* %6190
	store i1 false, i1* %6191
	%6194 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	%6195 = bitcast %Type_Info* %6194 to %Type_Info*
	%6196 = getelementptr inbounds %Type_Info*, %Type_Info** %6169, i64 3
	%6197 = getelementptr inbounds i64, i64* %6171, i64 3
	%6198 = getelementptr inbounds i1, i1* %6172, i64 3
	%6199 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 3
	store %Type_Info* %6199, %Type_Info** %6196
	%6200 = getelementptr inbounds %..string, %..string* %6170, i64 3
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$5f7, i64 0, i32 0), i64 4}, %..string* %6200
	store i64 0, i64* %6197
	store i1 false, i1* %6198
	%6201 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %6164, i64 0, i32 0
	%6202 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %6201, i64 0, i32 0
	store %Type_Info** %6169, %Type_Info*** %6202
	%6203 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %6201, i64 0, i32 1
	store i64 4, i64* %6203
	%6204 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %6164, i64 0, i32 1
	%6205 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %6204, i64 0, i32 0
	store %..string* %6170, %..string** %6205
	%6206 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %6204, i64 0, i32 1
	store i64 4, i64* %6206
	%6207 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %6164, i64 0, i32 2
	%6208 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %6207, i64 0, i32 0
	store i64* %6171, i64** %6208
	%6209 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %6207, i64 0, i32 1
	store i64 4, i64* %6209
	%6210 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %6164, i64 0, i32 3
	%6211 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %6210, i64 0, i32 0
	store i1* %6172, i1** %6211
	%6212 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %6210, i64 0, i32 1
	store i64 4, i64* %6212
	%6213 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %6161, i64 0, i32 2 ; UnionTagPtr
	store i8 16, i8* %6213
	%6214 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 230
	%6215 = getelementptr inbounds %Type_Info, %Type_Info* %6214, i64 0, i32 2
	%6216 = getelementptr inbounds %Type_Info, %Type_Info* %6214, i64 0, i32 0
	store i64 24, i64* %6216
	%6217 = getelementptr inbounds %Type_Info, %Type_Info* %6214, i64 0, i32 1
	store i64 8, i64* %6217
	; TypeInfoNamed
	%6218 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %6215 to %Type_Info_Named*
	%6219 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 231
	%6220 = bitcast %Type_Info* %6219 to %Type_Info*
	%6221 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %6218, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$5f8, i64 0, i32 0), i64 12}, %..string* %6221
	%6222 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %6218, i64 0, i32 1
	store %Type_Info* %6220, %Type_Info** %6222
	%6223 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %6215, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %6223
	%6224 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 231
	%6225 = getelementptr inbounds %Type_Info, %Type_Info* %6224, i64 0, i32 2
	%6226 = getelementptr inbounds %Type_Info, %Type_Info* %6224, i64 0, i32 0
	store i64 24, i64* %6226
	%6227 = getelementptr inbounds %Type_Info, %Type_Info* %6224, i64 0, i32 1
	store i64 8, i64* %6227
	; TypeInfoStruct
	%6228 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %6225 to %Type_Info_Struct*
	%6229 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %6228, i64 0, i32 4
	store i1 false, i1* %6229
	%6230 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %6228, i64 0, i32 5
	store i1 true, i1* %6230
	%6231 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %6228, i64 0, i32 6
	store i1 false, i1* %6231
	%6232 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %6228, i64 0, i32 7
	store i1 false, i1* %6232
	%6233 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 245
	%6234 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 209
	%6235 = getelementptr inbounds [450 x i64], [450 x i64]* @__$type_info_offsets_data, i64 0, i32 148
	%6236 = getelementptr inbounds [450 x i1], [450 x i1]* @__$type_info_usings_data, i64 0, i32 148
	%6237 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 232
	%6238 = bitcast %Type_Info* %6237 to %Type_Info*
	%6239 = getelementptr inbounds %Type_Info*, %Type_Info** %6233, i64 0
	%6240 = getelementptr inbounds i64, i64* %6235, i64 0
	%6241 = getelementptr inbounds i1, i1* %6236, i64 0
	%6242 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 232
	store %Type_Info* %6242, %Type_Info** %6239
	%6243 = getelementptr inbounds %..string, %..string* %6234, i64 0
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$5f9, i64 0, i32 0), i64 4}, %..string* %6243
	store i64 0, i64* %6240
	store i1 false, i1* %6241
	%6244 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 235
	%6245 = bitcast %Type_Info* %6244 to %Type_Info*
	%6246 = getelementptr inbounds %Type_Info*, %Type_Info** %6233, i64 1
	%6247 = getelementptr inbounds i64, i64* %6235, i64 1
	%6248 = getelementptr inbounds i1, i1* %6236, i64 1
	%6249 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 235
	store %Type_Info* %6249, %Type_Info** %6246
	%6250 = getelementptr inbounds %..string, %..string* %6234, i64 1
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$5fa, i64 0, i32 0), i64 4}, %..string* %6250
	store i64 8, i64* %6247
	store i1 false, i1* %6248
	%6251 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 237
	%6252 = bitcast %Type_Info* %6251 to %Type_Info*
	%6253 = getelementptr inbounds %Type_Info*, %Type_Info** %6233, i64 2
	%6254 = getelementptr inbounds i64, i64* %6235, i64 2
	%6255 = getelementptr inbounds i1, i1* %6236, i64 2
	%6256 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 237
	store %Type_Info* %6256, %Type_Info** %6253
	%6257 = getelementptr inbounds %..string, %..string* %6234, i64 2
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$5fb, i64 0, i32 0), i64 3}, %..string* %6257
	store i64 16, i64* %6254
	store i1 false, i1* %6255
	%6258 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %6228, i64 0, i32 0
	%6259 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %6258, i64 0, i32 0
	store %Type_Info** %6233, %Type_Info*** %6259
	%6260 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %6258, i64 0, i32 1
	store i64 3, i64* %6260
	%6261 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %6228, i64 0, i32 1
	%6262 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %6261, i64 0, i32 0
	store %..string* %6234, %..string** %6262
	%6263 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %6261, i64 0, i32 1
	store i64 3, i64* %6263
	%6264 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %6228, i64 0, i32 2
	%6265 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %6264, i64 0, i32 0
	store i64* %6235, i64** %6265
	%6266 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %6264, i64 0, i32 1
	store i64 3, i64* %6266
	%6267 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %6228, i64 0, i32 3
	%6268 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %6267, i64 0, i32 0
	store i1* %6236, i1** %6268
	%6269 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %6267, i64 0, i32 1
	store i64 3, i64* %6269
	%6270 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %6225, i64 0, i32 2 ; UnionTagPtr
	store i8 16, i8* %6270
	%6271 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 232
	%6272 = getelementptr inbounds %Type_Info, %Type_Info* %6271, i64 0, i32 2
	%6273 = getelementptr inbounds %Type_Info, %Type_Info* %6271, i64 0, i32 0
	store i64 8, i64* %6273
	%6274 = getelementptr inbounds %Type_Info, %Type_Info* %6271, i64 0, i32 1
	store i64 8, i64* %6274
	; TypeInfoProc
	%6275 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %6272 to %Type_Info_Procedure*
	%6276 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %6275, i64 0, i32 0
	%6277 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %6275, i64 0, i32 1
	%6278 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %6275, i64 0, i32 2
	%6279 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %6275, i64 0, i32 3
	%6280 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 233
	%6281 = bitcast %Type_Info* %6280 to %Type_Info*
	store %Type_Info* %6281, %Type_Info** %6276
	%6282 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 234
	%6283 = bitcast %Type_Info* %6282 to %Type_Info*
	store %Type_Info* %6283, %Type_Info** %6277
	store i1 false, i1* %6278
	store i64 3, i64* %6279
	%6284 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %6272, i64 0, i32 2 ; UnionTagPtr
	store i8 10, i8* %6284
	%6285 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 233
	%6286 = getelementptr inbounds %Type_Info, %Type_Info* %6285, i64 0, i32 2
	%6287 = getelementptr inbounds %Type_Info, %Type_Info* %6285, i64 0, i32 0
	store i64 24, i64* %6287
	%6288 = getelementptr inbounds %Type_Info, %Type_Info* %6285, i64 0, i32 1
	store i64 8, i64* %6288
	; TypeInfoTuple
	%6289 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %6286 to %Type_Info_Tuple*
	%6290 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 248
	%6291 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 212
	%6292 = getelementptr inbounds %Type_Info*, %Type_Info** %6290, i64 0
	%6293 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 76
	store %Type_Info* %6293, %Type_Info** %6292
	%6294 = getelementptr inbounds %..string, %..string* %6291, i64 0
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$5fc, i64 0, i32 0), i64 4}, %..string* %6294
	%6295 = getelementptr inbounds %Type_Info*, %Type_Info** %6290, i64 1
	%6296 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	store %Type_Info* %6296, %Type_Info** %6295
	%6297 = getelementptr inbounds %..string, %..string* %6291, i64 1
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$5fd, i64 0, i32 0), i64 4}, %..string* %6297
	%6298 = getelementptr inbounds %Type_Info*, %Type_Info** %6290, i64 2
	%6299 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	store %Type_Info* %6299, %Type_Info** %6298
	%6300 = getelementptr inbounds %..string, %..string* %6291, i64 2
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$5fe, i64 0, i32 0), i64 4}, %..string* %6300
	%6301 = getelementptr inbounds %Type_Info_Tuple, %Type_Info_Tuple* %6289, i64 0, i32 0
	%6302 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %6301, i64 0, i32 0
	store %Type_Info** %6290, %Type_Info*** %6302
	%6303 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %6301, i64 0, i32 1
	store i64 3, i64* %6303
	%6304 = getelementptr inbounds %Type_Info_Tuple, %Type_Info_Tuple* %6289, i64 0, i32 1
	%6305 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %6304, i64 0, i32 0
	store %..string* %6291, %..string** %6305
	%6306 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %6304, i64 0, i32 1
	store i64 3, i64* %6306
	%6307 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %6286, i64 0, i32 2 ; UnionTagPtr
	store i8 15, i8* %6307
	%6308 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%6309 = getelementptr inbounds %Type_Info, %Type_Info* %6308, i64 0, i32 2
	%6310 = getelementptr inbounds %Type_Info, %Type_Info* %6308, i64 0, i32 0
	store i64 8, i64* %6310
	%6311 = getelementptr inbounds %Type_Info, %Type_Info* %6308, i64 0, i32 1
	store i64 8, i64* %6311
	; TypeInfoPointer
	%6312 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %6309 to %Type_Info_Pointer*
	%6313 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	%6314 = bitcast %Type_Info* %6313 to %Type_Info*
	%6315 = getelementptr inbounds %Type_Info_Pointer, %Type_Info_Pointer* %6312, i64 0, i32 0
	store %Type_Info* %6314, %Type_Info** %6315
	%6316 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %6309, i64 0, i32 2 ; UnionTagPtr
	store i8 9, i8* %6316
	%6317 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 234
	%6318 = getelementptr inbounds %Type_Info, %Type_Info* %6317, i64 0, i32 2
	%6319 = getelementptr inbounds %Type_Info, %Type_Info* %6317, i64 0, i32 0
	store i64 4, i64* %6319
	%6320 = getelementptr inbounds %Type_Info, %Type_Info* %6317, i64 0, i32 1
	store i64 4, i64* %6320
	; TypeInfoTuple
	%6321 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %6318 to %Type_Info_Tuple*
	%6322 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 251
	%6323 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 215
	%6324 = getelementptr inbounds %Type_Info*, %Type_Info** %6322, i64 0
	%6325 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	store %Type_Info* %6325, %Type_Info** %6324
	%6326 = getelementptr inbounds %Type_Info_Tuple, %Type_Info_Tuple* %6321, i64 0, i32 0
	%6327 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %6326, i64 0, i32 0
	store %Type_Info** %6322, %Type_Info*** %6327
	%6328 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %6326, i64 0, i32 1
	store i64 1, i64* %6328
	%6329 = getelementptr inbounds %Type_Info_Tuple, %Type_Info_Tuple* %6321, i64 0, i32 1
	%6330 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %6329, i64 0, i32 0
	store %..string* %6323, %..string** %6330
	%6331 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %6329, i64 0, i32 1
	store i64 1, i64* %6331
	%6332 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %6318, i64 0, i32 2 ; UnionTagPtr
	store i8 15, i8* %6332
	%6333 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 235
	%6334 = getelementptr inbounds %Type_Info, %Type_Info* %6333, i64 0, i32 2
	%6335 = getelementptr inbounds %Type_Info, %Type_Info* %6333, i64 0, i32 0
	store i64 8, i64* %6335
	%6336 = getelementptr inbounds %Type_Info, %Type_Info* %6333, i64 0, i32 1
	store i64 8, i64* %6336
	; TypeInfoProc
	%6337 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %6334 to %Type_Info_Procedure*
	%6338 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %6337, i64 0, i32 0
	%6339 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %6337, i64 0, i32 1
	%6340 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %6337, i64 0, i32 2
	%6341 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %6337, i64 0, i32 3
	%6342 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 236
	%6343 = bitcast %Type_Info* %6342 to %Type_Info*
	store %Type_Info* %6343, %Type_Info** %6338
	store i1 false, i1* %6340
	store i64 3, i64* %6341
	%6344 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %6334, i64 0, i32 2 ; UnionTagPtr
	store i8 10, i8* %6344
	%6345 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 236
	%6346 = getelementptr inbounds %Type_Info, %Type_Info* %6345, i64 0, i32 2
	%6347 = getelementptr inbounds %Type_Info, %Type_Info* %6345, i64 0, i32 0
	store i64 16, i64* %6347
	%6348 = getelementptr inbounds %Type_Info, %Type_Info* %6345, i64 0, i32 1
	store i64 8, i64* %6348
	; TypeInfoTuple
	%6349 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %6346 to %Type_Info_Tuple*
	%6350 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 252
	%6351 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 216
	%6352 = getelementptr inbounds %Type_Info*, %Type_Info** %6350, i64 0
	%6353 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 76
	store %Type_Info* %6353, %Type_Info** %6352
	%6354 = getelementptr inbounds %..string, %..string* %6351, i64 0
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$5ff, i64 0, i32 0), i64 4}, %..string* %6354
	%6355 = getelementptr inbounds %Type_Info*, %Type_Info** %6350, i64 1
	%6356 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	store %Type_Info* %6356, %Type_Info** %6355
	%6357 = getelementptr inbounds %..string, %..string* %6351, i64 1
	store %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$600, i64 0, i32 0), i64 1}, %..string* %6357
	%6358 = getelementptr inbounds %Type_Info_Tuple, %Type_Info_Tuple* %6349, i64 0, i32 0
	%6359 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %6358, i64 0, i32 0
	store %Type_Info** %6350, %Type_Info*** %6359
	%6360 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %6358, i64 0, i32 1
	store i64 2, i64* %6360
	%6361 = getelementptr inbounds %Type_Info_Tuple, %Type_Info_Tuple* %6349, i64 0, i32 1
	%6362 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %6361, i64 0, i32 0
	store %..string* %6351, %..string** %6362
	%6363 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %6361, i64 0, i32 1
	store i64 2, i64* %6363
	%6364 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %6346, i64 0, i32 2 ; UnionTagPtr
	store i8 15, i8* %6364
	%6365 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 237
	%6366 = getelementptr inbounds %Type_Info, %Type_Info* %6365, i64 0, i32 2
	%6367 = getelementptr inbounds %Type_Info, %Type_Info* %6365, i64 0, i32 0
	store i64 8, i64* %6367
	%6368 = getelementptr inbounds %Type_Info, %Type_Info* %6365, i64 0, i32 1
	store i64 8, i64* %6368
	; TypeInfoProc
	%6369 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %6366 to %Type_Info_Procedure*
	%6370 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %6369, i64 0, i32 0
	%6371 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %6369, i64 0, i32 1
	%6372 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %6369, i64 0, i32 2
	%6373 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %6369, i64 0, i32 3
	%6374 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 88
	%6375 = bitcast %Type_Info* %6374 to %Type_Info*
	store %Type_Info* %6375, %Type_Info** %6370
	%6376 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 234
	%6377 = bitcast %Type_Info* %6376 to %Type_Info*
	store %Type_Info* %6377, %Type_Info** %6371
	store i1 false, i1* %6372
	store i64 3, i64* %6373
	%6378 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %6366, i64 0, i32 2 ; UnionTagPtr
	store i8 10, i8* %6378
	%6379 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 88
	%6380 = getelementptr inbounds %Type_Info, %Type_Info* %6379, i64 0, i32 2
	%6381 = getelementptr inbounds %Type_Info, %Type_Info* %6379, i64 0, i32 0
	store i64 8, i64* %6381
	%6382 = getelementptr inbounds %Type_Info, %Type_Info* %6379, i64 0, i32 1
	store i64 8, i64* %6382
	; TypeInfoTuple
	%6383 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %6380 to %Type_Info_Tuple*
	%6384 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 254
	%6385 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 218
	%6386 = getelementptr inbounds %Type_Info*, %Type_Info** %6384, i64 0
	%6387 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 76
	store %Type_Info* %6387, %Type_Info** %6386
	%6388 = getelementptr inbounds %..string, %..string* %6385, i64 0
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$601, i64 0, i32 0), i64 4}, %..string* %6388
	%6389 = getelementptr inbounds %Type_Info_Tuple, %Type_Info_Tuple* %6383, i64 0, i32 0
	%6390 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %6389, i64 0, i32 0
	store %Type_Info** %6384, %Type_Info*** %6390
	%6391 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %6389, i64 0, i32 1
	store i64 1, i64* %6391
	%6392 = getelementptr inbounds %Type_Info_Tuple, %Type_Info_Tuple* %6383, i64 0, i32 1
	%6393 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %6392, i64 0, i32 0
	store %..string* %6385, %..string** %6393
	%6394 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %6392, i64 0, i32 1
	store i64 1, i64* %6394
	%6395 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %6380, i64 0, i32 2 ; UnionTagPtr
	store i8 15, i8* %6395
	%6396 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 234
	%6397 = getelementptr inbounds %Type_Info, %Type_Info* %6396, i64 0, i32 2
	%6398 = getelementptr inbounds %Type_Info, %Type_Info* %6396, i64 0, i32 0
	store i64 4, i64* %6398
	%6399 = getelementptr inbounds %Type_Info, %Type_Info* %6396, i64 0, i32 1
	store i64 4, i64* %6399
	; TypeInfoTuple
	%6400 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %6397 to %Type_Info_Tuple*
	%6401 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 255
	%6402 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 219
	%6403 = getelementptr inbounds %Type_Info*, %Type_Info** %6401, i64 0
	%6404 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	store %Type_Info* %6404, %Type_Info** %6403
	%6405 = getelementptr inbounds %Type_Info_Tuple, %Type_Info_Tuple* %6400, i64 0, i32 0
	%6406 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %6405, i64 0, i32 0
	store %Type_Info** %6401, %Type_Info*** %6406
	%6407 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %6405, i64 0, i32 1
	store i64 1, i64* %6407
	%6408 = getelementptr inbounds %Type_Info_Tuple, %Type_Info_Tuple* %6400, i64 0, i32 1
	%6409 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %6408, i64 0, i32 0
	store %..string* %6402, %..string** %6409
	%6410 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %6408, i64 0, i32 1
	store i64 1, i64* %6410
	%6411 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %6397, i64 0, i32 2 ; UnionTagPtr
	store i8 15, i8* %6411
	%6412 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 238
	%6413 = getelementptr inbounds %Type_Info, %Type_Info* %6412, i64 0, i32 2
	%6414 = getelementptr inbounds %Type_Info, %Type_Info* %6412, i64 0, i32 0
	store i64 8, i64* %6414
	%6415 = getelementptr inbounds %Type_Info, %Type_Info* %6412, i64 0, i32 1
	store i64 8, i64* %6415
	; TypeInfoNamed
	%6416 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %6413 to %Type_Info_Named*
	%6417 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 76
	%6418 = bitcast %Type_Info* %6417 to %Type_Info*
	%6419 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %6416, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$602, i64 0, i32 0), i64 6}, %..string* %6419
	%6420 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %6416, i64 0, i32 1
	store %Type_Info* %6418, %Type_Info** %6420
	%6421 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %6413, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %6421
	%6422 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 239
	%6423 = getelementptr inbounds %Type_Info, %Type_Info* %6422, i64 0, i32 2
	%6424 = getelementptr inbounds %Type_Info, %Type_Info* %6422, i64 0, i32 0
	store i64 8, i64* %6424
	%6425 = getelementptr inbounds %Type_Info, %Type_Info* %6422, i64 0, i32 1
	store i64 8, i64* %6425
	; TypeInfoNamed
	%6426 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %6423 to %Type_Info_Named*
	%6427 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 76
	%6428 = bitcast %Type_Info* %6427 to %Type_Info*
	%6429 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %6426, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$603, i64 0, i32 0), i64 4}, %..string* %6429
	%6430 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %6426, i64 0, i32 1
	store %Type_Info* %6428, %Type_Info** %6430
	%6431 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %6423, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %6431
	%6432 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 240
	%6433 = getelementptr inbounds %Type_Info, %Type_Info* %6432, i64 0, i32 2
	%6434 = getelementptr inbounds %Type_Info, %Type_Info* %6432, i64 0, i32 0
	store i64 8, i64* %6434
	%6435 = getelementptr inbounds %Type_Info, %Type_Info* %6432, i64 0, i32 1
	store i64 8, i64* %6435
	; TypeInfoNamed
	%6436 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %6433 to %Type_Info_Named*
	%6437 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 76
	%6438 = bitcast %Type_Info* %6437 to %Type_Info*
	%6439 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %6436, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$604, i64 0, i32 0), i64 3}, %..string* %6439
	%6440 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %6436, i64 0, i32 1
	store %Type_Info* %6438, %Type_Info** %6440
	%6441 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %6433, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %6441
	%6442 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 241
	%6443 = getelementptr inbounds %Type_Info, %Type_Info* %6442, i64 0, i32 2
	%6444 = getelementptr inbounds %Type_Info, %Type_Info* %6442, i64 0, i32 0
	store i64 8, i64* %6444
	%6445 = getelementptr inbounds %Type_Info, %Type_Info* %6442, i64 0, i32 1
	store i64 8, i64* %6445
	; TypeInfoNamed
	%6446 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %6443 to %Type_Info_Named*
	%6447 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 76
	%6448 = bitcast %Type_Info* %6447 to %Type_Info*
	%6449 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %6446, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$605, i64 0, i32 0), i64 9}, %..string* %6449
	%6450 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %6446, i64 0, i32 1
	store %Type_Info* %6448, %Type_Info** %6450
	%6451 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %6443, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %6451
	%6452 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 242
	%6453 = getelementptr inbounds %Type_Info, %Type_Info* %6452, i64 0, i32 2
	%6454 = getelementptr inbounds %Type_Info, %Type_Info* %6452, i64 0, i32 0
	store i64 8, i64* %6454
	%6455 = getelementptr inbounds %Type_Info, %Type_Info* %6452, i64 0, i32 1
	store i64 8, i64* %6455
	; TypeInfoNamed
	%6456 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %6453 to %Type_Info_Named*
	%6457 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 76
	%6458 = bitcast %Type_Info* %6457 to %Type_Info*
	%6459 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %6456, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$606, i64 0, i32 0), i64 5}, %..string* %6459
	%6460 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %6456, i64 0, i32 1
	store %Type_Info* %6458, %Type_Info** %6460
	%6461 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %6453, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %6461
	%6462 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 243
	%6463 = getelementptr inbounds %Type_Info, %Type_Info* %6462, i64 0, i32 2
	%6464 = getelementptr inbounds %Type_Info, %Type_Info* %6462, i64 0, i32 0
	store i64 8, i64* %6464
	%6465 = getelementptr inbounds %Type_Info, %Type_Info* %6462, i64 0, i32 1
	store i64 8, i64* %6465
	; TypeInfoNamed
	%6466 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %6463 to %Type_Info_Named*
	%6467 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 76
	%6468 = bitcast %Type_Info* %6467 to %Type_Info*
	%6469 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %6466, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$607, i64 0, i32 0), i64 7}, %..string* %6469
	%6470 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %6466, i64 0, i32 1
	store %Type_Info* %6468, %Type_Info** %6470
	%6471 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %6463, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %6471
	%6472 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 244
	%6473 = getelementptr inbounds %Type_Info, %Type_Info* %6472, i64 0, i32 2
	%6474 = getelementptr inbounds %Type_Info, %Type_Info* %6472, i64 0, i32 0
	store i64 8, i64* %6474
	%6475 = getelementptr inbounds %Type_Info, %Type_Info* %6472, i64 0, i32 1
	store i64 8, i64* %6475
	; TypeInfoNamed
	%6476 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %6473 to %Type_Info_Named*
	%6477 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 76
	%6478 = bitcast %Type_Info* %6477 to %Type_Info*
	%6479 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %6476, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$608, i64 0, i32 0), i64 5}, %..string* %6479
	%6480 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %6476, i64 0, i32 1
	store %Type_Info* %6478, %Type_Info** %6480
	%6481 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %6473, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %6481
	%6482 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 245
	%6483 = getelementptr inbounds %Type_Info, %Type_Info* %6482, i64 0, i32 2
	%6484 = getelementptr inbounds %Type_Info, %Type_Info* %6482, i64 0, i32 0
	store i64 8, i64* %6484
	%6485 = getelementptr inbounds %Type_Info, %Type_Info* %6482, i64 0, i32 1
	store i64 8, i64* %6485
	; TypeInfoNamed
	%6486 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %6483 to %Type_Info_Named*
	%6487 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 76
	%6488 = bitcast %Type_Info* %6487 to %Type_Info*
	%6489 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %6486, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$609, i64 0, i32 0), i64 6}, %..string* %6489
	%6490 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %6486, i64 0, i32 1
	store %Type_Info* %6488, %Type_Info** %6490
	%6491 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %6483, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %6491
	%6492 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 246
	%6493 = getelementptr inbounds %Type_Info, %Type_Info* %6492, i64 0, i32 2
	%6494 = getelementptr inbounds %Type_Info, %Type_Info* %6492, i64 0, i32 0
	store i64 8, i64* %6494
	%6495 = getelementptr inbounds %Type_Info, %Type_Info* %6492, i64 0, i32 1
	store i64 8, i64* %6495
	; TypeInfoNamed
	%6496 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %6493 to %Type_Info_Named*
	%6497 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 76
	%6498 = bitcast %Type_Info* %6497 to %Type_Info*
	%6499 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %6496, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$60a, i64 0, i32 0), i64 7}, %..string* %6499
	%6500 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %6496, i64 0, i32 1
	store %Type_Info* %6498, %Type_Info** %6500
	%6501 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %6493, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %6501
	%6502 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 247
	%6503 = getelementptr inbounds %Type_Info, %Type_Info* %6502, i64 0, i32 2
	%6504 = getelementptr inbounds %Type_Info, %Type_Info* %6502, i64 0, i32 0
	store i64 8, i64* %6504
	%6505 = getelementptr inbounds %Type_Info, %Type_Info* %6502, i64 0, i32 1
	store i64 8, i64* %6505
	; TypeInfoNamed
	%6506 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %6503 to %Type_Info_Named*
	%6507 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 76
	%6508 = bitcast %Type_Info* %6507 to %Type_Info*
	%6509 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %6506, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$60b, i64 0, i32 0), i64 7}, %..string* %6509
	%6510 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %6506, i64 0, i32 1
	store %Type_Info* %6508, %Type_Info** %6510
	%6511 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %6503, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %6511
	%6512 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 248
	%6513 = getelementptr inbounds %Type_Info, %Type_Info* %6512, i64 0, i32 2
	%6514 = getelementptr inbounds %Type_Info, %Type_Info* %6512, i64 0, i32 0
	store i64 8, i64* %6514
	%6515 = getelementptr inbounds %Type_Info, %Type_Info* %6512, i64 0, i32 1
	store i64 8, i64* %6515
	; TypeInfoNamed
	%6516 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %6513 to %Type_Info_Named*
	%6517 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 76
	%6518 = bitcast %Type_Info* %6517 to %Type_Info*
	%6519 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %6516, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$60c, i64 0, i32 0), i64 8}, %..string* %6519
	%6520 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %6516, i64 0, i32 1
	store %Type_Info* %6518, %Type_Info** %6520
	%6521 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %6513, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %6521
	%6522 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 249
	%6523 = getelementptr inbounds %Type_Info, %Type_Info* %6522, i64 0, i32 2
	%6524 = getelementptr inbounds %Type_Info, %Type_Info* %6522, i64 0, i32 0
	store i64 8, i64* %6524
	%6525 = getelementptr inbounds %Type_Info, %Type_Info* %6522, i64 0, i32 1
	store i64 8, i64* %6525
	; TypeInfoNamed
	%6526 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %6523 to %Type_Info_Named*
	%6527 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 76
	%6528 = bitcast %Type_Info* %6527 to %Type_Info*
	%6529 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %6526, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$60d, i64 0, i32 0), i64 9}, %..string* %6529
	%6530 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %6526, i64 0, i32 1
	store %Type_Info* %6528, %Type_Info** %6530
	%6531 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %6523, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %6531
	%6532 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 250
	%6533 = getelementptr inbounds %Type_Info, %Type_Info* %6532, i64 0, i32 2
	%6534 = getelementptr inbounds %Type_Info, %Type_Info* %6532, i64 0, i32 0
	store i64 8, i64* %6534
	%6535 = getelementptr inbounds %Type_Info, %Type_Info* %6532, i64 0, i32 1
	store i64 8, i64* %6535
	; TypeInfoNamed
	%6536 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %6533 to %Type_Info_Named*
	%6537 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 76
	%6538 = bitcast %Type_Info* %6537 to %Type_Info*
	%6539 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %6536, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$60e, i64 0, i32 0), i64 3}, %..string* %6539
	%6540 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %6536, i64 0, i32 1
	store %Type_Info* %6538, %Type_Info** %6540
	%6541 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %6533, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %6541
	%6542 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 251
	%6543 = getelementptr inbounds %Type_Info, %Type_Info* %6542, i64 0, i32 2
	%6544 = getelementptr inbounds %Type_Info, %Type_Info* %6542, i64 0, i32 0
	store i64 8, i64* %6544
	%6545 = getelementptr inbounds %Type_Info, %Type_Info* %6542, i64 0, i32 1
	store i64 8, i64* %6545
	; TypeInfoNamed
	%6546 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %6543 to %Type_Info_Named*
	%6547 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 63
	%6548 = bitcast %Type_Info* %6547 to %Type_Info*
	%6549 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %6546, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$60f, i64 0, i32 0), i64 6}, %..string* %6549
	%6550 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %6546, i64 0, i32 1
	store %Type_Info* %6548, %Type_Info** %6550
	%6551 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %6543, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %6551
	%6552 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 252
	%6553 = getelementptr inbounds %Type_Info, %Type_Info* %6552, i64 0, i32 2
	%6554 = getelementptr inbounds %Type_Info, %Type_Info* %6552, i64 0, i32 0
	store i64 8, i64* %6554
	%6555 = getelementptr inbounds %Type_Info, %Type_Info* %6552, i64 0, i32 1
	store i64 8, i64* %6555
	; TypeInfoNamed
	%6556 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %6553 to %Type_Info_Named*
	%6557 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%6558 = bitcast %Type_Info* %6557 to %Type_Info*
	%6559 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %6556, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$610, i64 0, i32 0), i64 6}, %..string* %6559
	%6560 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %6556, i64 0, i32 1
	store %Type_Info* %6558, %Type_Info** %6560
	%6561 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %6553, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %6561
	%6562 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 253
	%6563 = getelementptr inbounds %Type_Info, %Type_Info* %6562, i64 0, i32 2
	%6564 = getelementptr inbounds %Type_Info, %Type_Info* %6562, i64 0, i32 0
	store i64 8, i64* %6564
	%6565 = getelementptr inbounds %Type_Info, %Type_Info* %6562, i64 0, i32 1
	store i64 8, i64* %6565
	; TypeInfoNamed
	%6566 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %6563 to %Type_Info_Named*
	%6567 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%6568 = bitcast %Type_Info* %6567 to %Type_Info*
	%6569 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %6566, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$611, i64 0, i32 0), i64 7}, %..string* %6569
	%6570 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %6566, i64 0, i32 1
	store %Type_Info* %6568, %Type_Info** %6570
	%6571 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %6563, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %6571
	%6572 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 254
	%6573 = getelementptr inbounds %Type_Info, %Type_Info* %6572, i64 0, i32 2
	%6574 = getelementptr inbounds %Type_Info, %Type_Info* %6572, i64 0, i32 0
	store i64 8, i64* %6574
	%6575 = getelementptr inbounds %Type_Info, %Type_Info* %6572, i64 0, i32 1
	store i64 8, i64* %6575
	; TypeInfoNamed
	%6576 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %6573 to %Type_Info_Named*
	%6577 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 255
	%6578 = bitcast %Type_Info* %6577 to %Type_Info*
	%6579 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %6576, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$612, i64 0, i32 0), i64 8}, %..string* %6579
	%6580 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %6576, i64 0, i32 1
	store %Type_Info* %6578, %Type_Info** %6580
	%6581 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %6573, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %6581
	%6582 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 255
	%6583 = getelementptr inbounds %Type_Info, %Type_Info* %6582, i64 0, i32 2
	%6584 = getelementptr inbounds %Type_Info, %Type_Info* %6582, i64 0, i32 0
	store i64 8, i64* %6584
	%6585 = getelementptr inbounds %Type_Info, %Type_Info* %6582, i64 0, i32 1
	store i64 8, i64* %6585
	; TypeInfoProc
	%6586 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %6583 to %Type_Info_Procedure*
	%6587 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %6586, i64 0, i32 0
	%6588 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %6586, i64 0, i32 1
	%6589 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %6586, i64 0, i32 2
	%6590 = getelementptr inbounds %Type_Info_Procedure, %Type_Info_Procedure* %6586, i64 0, i32 3
	%6591 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 256
	%6592 = bitcast %Type_Info* %6591 to %Type_Info*
	store %Type_Info* %6592, %Type_Info** %6587
	%6593 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 257
	%6594 = bitcast %Type_Info* %6593 to %Type_Info*
	store %Type_Info* %6594, %Type_Info** %6588
	store i1 false, i1* %6589
	store i64 3, i64* %6590
	%6595 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %6583, i64 0, i32 2 ; UnionTagPtr
	store i8 10, i8* %6595
	%6596 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 256
	%6597 = getelementptr inbounds %Type_Info, %Type_Info* %6596, i64 0, i32 2
	%6598 = getelementptr inbounds %Type_Info, %Type_Info* %6596, i64 0, i32 0
	store i64 32, i64* %6598
	%6599 = getelementptr inbounds %Type_Info, %Type_Info* %6596, i64 0, i32 1
	store i64 8, i64* %6599
	; TypeInfoTuple
	%6600 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %6597 to %Type_Info_Tuple*
	%6601 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 256
	%6602 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 220
	%6603 = getelementptr inbounds %Type_Info*, %Type_Info** %6601, i64 0
	%6604 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 239
	store %Type_Info* %6604, %Type_Info** %6603
	%6605 = getelementptr inbounds %..string, %..string* %6602, i64 0
	store %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$613, i64 0, i32 0), i64 1}, %..string* %6605
	%6606 = getelementptr inbounds %Type_Info*, %Type_Info** %6601, i64 1
	%6607 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	store %Type_Info* %6607, %Type_Info** %6606
	%6608 = getelementptr inbounds %..string, %..string* %6602, i64 1
	store %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$614, i64 0, i32 0), i64 1}, %..string* %6608
	%6609 = getelementptr inbounds %Type_Info*, %Type_Info** %6601, i64 2
	%6610 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 251
	store %Type_Info* %6610, %Type_Info** %6609
	%6611 = getelementptr inbounds %..string, %..string* %6602, i64 2
	store %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$615, i64 0, i32 0), i64 1}, %..string* %6611
	%6612 = getelementptr inbounds %Type_Info*, %Type_Info** %6601, i64 3
	%6613 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 252
	store %Type_Info* %6613, %Type_Info** %6612
	%6614 = getelementptr inbounds %..string, %..string* %6602, i64 3
	store %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$616, i64 0, i32 0), i64 1}, %..string* %6614
	%6615 = getelementptr inbounds %Type_Info_Tuple, %Type_Info_Tuple* %6600, i64 0, i32 0
	%6616 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %6615, i64 0, i32 0
	store %Type_Info** %6601, %Type_Info*** %6616
	%6617 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %6615, i64 0, i32 1
	store i64 4, i64* %6617
	%6618 = getelementptr inbounds %Type_Info_Tuple, %Type_Info_Tuple* %6600, i64 0, i32 1
	%6619 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %6618, i64 0, i32 0
	store %..string* %6602, %..string** %6619
	%6620 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %6618, i64 0, i32 1
	store i64 4, i64* %6620
	%6621 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %6597, i64 0, i32 2 ; UnionTagPtr
	store i8 15, i8* %6621
	%6622 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 257
	%6623 = getelementptr inbounds %Type_Info, %Type_Info* %6622, i64 0, i32 2
	%6624 = getelementptr inbounds %Type_Info, %Type_Info* %6622, i64 0, i32 0
	store i64 8, i64* %6624
	%6625 = getelementptr inbounds %Type_Info, %Type_Info* %6622, i64 0, i32 1
	store i64 8, i64* %6625
	; TypeInfoTuple
	%6626 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %6623 to %Type_Info_Tuple*
	%6627 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 260
	%6628 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 224
	%6629 = getelementptr inbounds %Type_Info*, %Type_Info** %6627, i64 0
	%6630 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 253
	store %Type_Info* %6630, %Type_Info** %6629
	%6631 = getelementptr inbounds %Type_Info_Tuple, %Type_Info_Tuple* %6626, i64 0, i32 0
	%6632 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %6631, i64 0, i32 0
	store %Type_Info** %6627, %Type_Info*** %6632
	%6633 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %6631, i64 0, i32 1
	store i64 1, i64* %6633
	%6634 = getelementptr inbounds %Type_Info_Tuple, %Type_Info_Tuple* %6626, i64 0, i32 1
	%6635 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %6634, i64 0, i32 0
	store %..string* %6628, %..string** %6635
	%6636 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %6634, i64 0, i32 1
	store i64 1, i64* %6636
	%6637 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %6623, i64 0, i32 2 ; UnionTagPtr
	store i8 15, i8* %6637
	%6638 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 258
	%6639 = getelementptr inbounds %Type_Info, %Type_Info* %6638, i64 0, i32 2
	%6640 = getelementptr inbounds %Type_Info, %Type_Info* %6638, i64 0, i32 0
	store i64 8, i64* %6640
	%6641 = getelementptr inbounds %Type_Info, %Type_Info* %6638, i64 0, i32 1
	store i64 8, i64* %6641
	; TypeInfoNamed
	%6642 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %6639 to %Type_Info_Named*
	%6643 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%6644 = bitcast %Type_Info* %6643 to %Type_Info*
	%6645 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %6642, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$617, i64 0, i32 0), i64 8}, %..string* %6645
	%6646 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %6642, i64 0, i32 1
	store %Type_Info* %6644, %Type_Info** %6646
	%6647 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %6639, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %6647
	%6648 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 259
	%6649 = getelementptr inbounds %Type_Info, %Type_Info* %6648, i64 0, i32 2
	%6650 = getelementptr inbounds %Type_Info, %Type_Info* %6648, i64 0, i32 0
	store i64 4, i64* %6650
	%6651 = getelementptr inbounds %Type_Info, %Type_Info* %6648, i64 0, i32 1
	store i64 4, i64* %6651
	; TypeInfoNamed
	%6652 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %6649 to %Type_Info_Named*
	%6653 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	%6654 = bitcast %Type_Info* %6653 to %Type_Info*
	%6655 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %6652, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$618, i64 0, i32 0), i64 4}, %..string* %6655
	%6656 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %6652, i64 0, i32 1
	store %Type_Info* %6654, %Type_Info** %6656
	%6657 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %6649, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %6657
	%6658 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 260
	%6659 = getelementptr inbounds %Type_Info, %Type_Info* %6658, i64 0, i32 2
	%6660 = getelementptr inbounds %Type_Info, %Type_Info* %6658, i64 0, i32 0
	store i64 8, i64* %6660
	%6661 = getelementptr inbounds %Type_Info, %Type_Info* %6658, i64 0, i32 1
	store i64 4, i64* %6661
	; TypeInfoNamed
	%6662 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %6659 to %Type_Info_Named*
	%6663 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 261
	%6664 = bitcast %Type_Info* %6663 to %Type_Info*
	%6665 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %6662, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$619, i64 0, i32 0), i64 5}, %..string* %6665
	%6666 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %6662, i64 0, i32 1
	store %Type_Info* %6664, %Type_Info** %6666
	%6667 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %6659, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %6667
	%6668 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 261
	%6669 = getelementptr inbounds %Type_Info, %Type_Info* %6668, i64 0, i32 2
	%6670 = getelementptr inbounds %Type_Info, %Type_Info* %6668, i64 0, i32 0
	store i64 8, i64* %6670
	%6671 = getelementptr inbounds %Type_Info, %Type_Info* %6668, i64 0, i32 1
	store i64 4, i64* %6671
	; TypeInfoStruct
	%6672 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %6669 to %Type_Info_Struct*
	%6673 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %6672, i64 0, i32 4
	store i1 false, i1* %6673
	%6674 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %6672, i64 0, i32 5
	store i1 true, i1* %6674
	%6675 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %6672, i64 0, i32 6
	store i1 false, i1* %6675
	%6676 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %6672, i64 0, i32 7
	store i1 false, i1* %6676
	%6677 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 261
	%6678 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 225
	%6679 = getelementptr inbounds [450 x i64], [450 x i64]* @__$type_info_offsets_data, i64 0, i32 151
	%6680 = getelementptr inbounds [450 x i1], [450 x i1]* @__$type_info_usings_data, i64 0, i32 151
	%6681 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	%6682 = bitcast %Type_Info* %6681 to %Type_Info*
	%6683 = getelementptr inbounds %Type_Info*, %Type_Info** %6677, i64 0
	%6684 = getelementptr inbounds i64, i64* %6679, i64 0
	%6685 = getelementptr inbounds i1, i1* %6680, i64 0
	%6686 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	store %Type_Info* %6686, %Type_Info** %6683
	%6687 = getelementptr inbounds %..string, %..string* %6678, i64 0
	store %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$61a, i64 0, i32 0), i64 1}, %..string* %6687
	store i64 0, i64* %6684
	store i1 false, i1* %6685
	%6688 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	%6689 = bitcast %Type_Info* %6688 to %Type_Info*
	%6690 = getelementptr inbounds %Type_Info*, %Type_Info** %6677, i64 1
	%6691 = getelementptr inbounds i64, i64* %6679, i64 1
	%6692 = getelementptr inbounds i1, i1* %6680, i64 1
	%6693 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	store %Type_Info* %6693, %Type_Info** %6690
	%6694 = getelementptr inbounds %..string, %..string* %6678, i64 1
	store %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$61b, i64 0, i32 0), i64 1}, %..string* %6694
	store i64 4, i64* %6691
	store i1 false, i1* %6692
	%6695 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %6672, i64 0, i32 0
	%6696 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %6695, i64 0, i32 0
	store %Type_Info** %6677, %Type_Info*** %6696
	%6697 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %6695, i64 0, i32 1
	store i64 2, i64* %6697
	%6698 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %6672, i64 0, i32 1
	%6699 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %6698, i64 0, i32 0
	store %..string* %6678, %..string** %6699
	%6700 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %6698, i64 0, i32 1
	store i64 2, i64* %6700
	%6701 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %6672, i64 0, i32 2
	%6702 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %6701, i64 0, i32 0
	store i64* %6679, i64** %6702
	%6703 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %6701, i64 0, i32 1
	store i64 2, i64* %6703
	%6704 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %6672, i64 0, i32 3
	%6705 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %6704, i64 0, i32 0
	store i1* %6680, i1** %6705
	%6706 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %6704, i64 0, i32 1
	store i64 2, i64* %6706
	%6707 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %6669, i64 0, i32 2 ; UnionTagPtr
	store i8 16, i8* %6707
	%6708 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 262
	%6709 = getelementptr inbounds %Type_Info, %Type_Info* %6708, i64 0, i32 2
	%6710 = getelementptr inbounds %Type_Info, %Type_Info* %6708, i64 0, i32 0
	store i64 80, i64* %6710
	%6711 = getelementptr inbounds %Type_Info, %Type_Info* %6708, i64 0, i32 1
	store i64 8, i64* %6711
	; TypeInfoNamed
	%6712 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %6709 to %Type_Info_Named*
	%6713 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 263
	%6714 = bitcast %Type_Info* %6713 to %Type_Info*
	%6715 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %6712, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$61c, i64 0, i32 0), i64 14}, %..string* %6715
	%6716 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %6712, i64 0, i32 1
	store %Type_Info* %6714, %Type_Info** %6716
	%6717 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %6709, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %6717
	%6718 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 263
	%6719 = getelementptr inbounds %Type_Info, %Type_Info* %6718, i64 0, i32 2
	%6720 = getelementptr inbounds %Type_Info, %Type_Info* %6718, i64 0, i32 0
	store i64 80, i64* %6720
	%6721 = getelementptr inbounds %Type_Info, %Type_Info* %6718, i64 0, i32 1
	store i64 8, i64* %6721
	; TypeInfoStruct
	%6722 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %6719 to %Type_Info_Struct*
	%6723 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %6722, i64 0, i32 4
	store i1 false, i1* %6723
	%6724 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %6722, i64 0, i32 5
	store i1 true, i1* %6724
	%6725 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %6722, i64 0, i32 6
	store i1 false, i1* %6725
	%6726 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %6722, i64 0, i32 7
	store i1 false, i1* %6726
	%6727 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 263
	%6728 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 227
	%6729 = getelementptr inbounds [450 x i64], [450 x i64]* @__$type_info_offsets_data, i64 0, i32 153
	%6730 = getelementptr inbounds [450 x i1], [450 x i1]* @__$type_info_usings_data, i64 0, i32 153
	%6731 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	%6732 = bitcast %Type_Info* %6731 to %Type_Info*
	%6733 = getelementptr inbounds %Type_Info*, %Type_Info** %6727, i64 0
	%6734 = getelementptr inbounds i64, i64* %6729, i64 0
	%6735 = getelementptr inbounds i1, i1* %6730, i64 0
	%6736 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	store %Type_Info* %6736, %Type_Info** %6733
	%6737 = getelementptr inbounds %..string, %..string* %6728, i64 0
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$61d, i64 0, i32 0), i64 4}, %..string* %6737
	store i64 0, i64* %6734
	store i1 false, i1* %6735
	%6738 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	%6739 = bitcast %Type_Info* %6738 to %Type_Info*
	%6740 = getelementptr inbounds %Type_Info*, %Type_Info** %6727, i64 1
	%6741 = getelementptr inbounds i64, i64* %6729, i64 1
	%6742 = getelementptr inbounds i1, i1* %6730, i64 1
	%6743 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	store %Type_Info* %6743, %Type_Info** %6740
	%6744 = getelementptr inbounds %..string, %..string* %6728, i64 1
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$61e, i64 0, i32 0), i64 5}, %..string* %6744
	store i64 4, i64* %6741
	store i1 false, i1* %6742
	%6745 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 254
	%6746 = bitcast %Type_Info* %6745 to %Type_Info*
	%6747 = getelementptr inbounds %Type_Info*, %Type_Info** %6727, i64 2
	%6748 = getelementptr inbounds i64, i64* %6729, i64 2
	%6749 = getelementptr inbounds i1, i1* %6730, i64 2
	%6750 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 254
	store %Type_Info* %6750, %Type_Info** %6747
	%6751 = getelementptr inbounds %..string, %..string* %6728, i64 2
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$61f, i64 0, i32 0), i64 8}, %..string* %6751
	store i64 8, i64* %6748
	store i1 false, i1* %6749
	%6752 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	%6753 = bitcast %Type_Info* %6752 to %Type_Info*
	%6754 = getelementptr inbounds %Type_Info*, %Type_Info** %6727, i64 3
	%6755 = getelementptr inbounds i64, i64* %6729, i64 3
	%6756 = getelementptr inbounds i1, i1* %6730, i64 3
	%6757 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	store %Type_Info* %6757, %Type_Info** %6754
	%6758 = getelementptr inbounds %..string, %..string* %6728, i64 3
	store %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$620, i64 0, i32 0), i64 9}, %..string* %6758
	store i64 16, i64* %6755
	store i1 false, i1* %6756
	%6759 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	%6760 = bitcast %Type_Info* %6759 to %Type_Info*
	%6761 = getelementptr inbounds %Type_Info*, %Type_Info** %6727, i64 4
	%6762 = getelementptr inbounds i64, i64* %6729, i64 4
	%6763 = getelementptr inbounds i1, i1* %6730, i64 4
	%6764 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	store %Type_Info* %6764, %Type_Info** %6761
	%6765 = getelementptr inbounds %..string, %..string* %6728, i64 4
	store %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$621, i64 0, i32 0), i64 9}, %..string* %6765
	store i64 20, i64* %6762
	store i1 false, i1* %6763
	%6766 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 241
	%6767 = bitcast %Type_Info* %6766 to %Type_Info*
	%6768 = getelementptr inbounds %Type_Info*, %Type_Info** %6727, i64 5
	%6769 = getelementptr inbounds i64, i64* %6729, i64 5
	%6770 = getelementptr inbounds i1, i1* %6730, i64 5
	%6771 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 241
	store %Type_Info* %6771, %Type_Info** %6768
	%6772 = getelementptr inbounds %..string, %..string* %6728, i64 5
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$622, i64 0, i32 0), i64 8}, %..string* %6772
	store i64 24, i64* %6769
	store i1 false, i1* %6770
	%6773 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 242
	%6774 = bitcast %Type_Info* %6773 to %Type_Info*
	%6775 = getelementptr inbounds %Type_Info*, %Type_Info** %6727, i64 6
	%6776 = getelementptr inbounds i64, i64* %6729, i64 6
	%6777 = getelementptr inbounds i1, i1* %6730, i64 6
	%6778 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 242
	store %Type_Info* %6778, %Type_Info** %6775
	%6779 = getelementptr inbounds %..string, %..string* %6728, i64 6
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$623, i64 0, i32 0), i64 4}, %..string* %6779
	store i64 32, i64* %6776
	store i1 false, i1* %6777
	%6780 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 243
	%6781 = bitcast %Type_Info* %6780 to %Type_Info*
	%6782 = getelementptr inbounds %Type_Info*, %Type_Info** %6727, i64 7
	%6783 = getelementptr inbounds i64, i64* %6729, i64 7
	%6784 = getelementptr inbounds i1, i1* %6730, i64 7
	%6785 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 243
	store %Type_Info* %6785, %Type_Info** %6782
	%6786 = getelementptr inbounds %..string, %..string* %6728, i64 7
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$624, i64 0, i32 0), i64 6}, %..string* %6786
	store i64 40, i64* %6783
	store i1 false, i1* %6784
	%6787 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 245
	%6788 = bitcast %Type_Info* %6787 to %Type_Info*
	%6789 = getelementptr inbounds %Type_Info*, %Type_Info** %6727, i64 8
	%6790 = getelementptr inbounds i64, i64* %6729, i64 8
	%6791 = getelementptr inbounds i1, i1* %6730, i64 8
	%6792 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 245
	store %Type_Info* %6792, %Type_Info** %6789
	%6793 = getelementptr inbounds %..string, %..string* %6728, i64 8
	store %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$625, i64 0, i32 0), i64 10}, %..string* %6793
	store i64 48, i64* %6790
	store i1 false, i1* %6791
	%6794 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%6795 = bitcast %Type_Info* %6794 to %Type_Info*
	%6796 = getelementptr inbounds %Type_Info*, %Type_Info** %6727, i64 9
	%6797 = getelementptr inbounds i64, i64* %6729, i64 9
	%6798 = getelementptr inbounds i1, i1* %6730, i64 9
	%6799 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	store %Type_Info* %6799, %Type_Info** %6796
	%6800 = getelementptr inbounds %..string, %..string* %6728, i64 9
	store %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$626, i64 0, i32 0), i64 9}, %..string* %6800
	store i64 56, i64* %6797
	store i1 false, i1* %6798
	%6801 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%6802 = bitcast %Type_Info* %6801 to %Type_Info*
	%6803 = getelementptr inbounds %Type_Info*, %Type_Info** %6727, i64 10
	%6804 = getelementptr inbounds i64, i64* %6729, i64 10
	%6805 = getelementptr inbounds i1, i1* %6730, i64 10
	%6806 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	store %Type_Info* %6806, %Type_Info** %6803
	%6807 = getelementptr inbounds %..string, %..string* %6728, i64 10
	store %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$627, i64 0, i32 0), i64 10}, %..string* %6807
	store i64 64, i64* %6804
	store i1 false, i1* %6805
	%6808 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 242
	%6809 = bitcast %Type_Info* %6808 to %Type_Info*
	%6810 = getelementptr inbounds %Type_Info*, %Type_Info** %6727, i64 11
	%6811 = getelementptr inbounds i64, i64* %6729, i64 11
	%6812 = getelementptr inbounds i1, i1* %6730, i64 11
	%6813 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 242
	store %Type_Info* %6813, %Type_Info** %6810
	%6814 = getelementptr inbounds %..string, %..string* %6728, i64 11
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$628, i64 0, i32 0), i64 2}, %..string* %6814
	store i64 72, i64* %6811
	store i1 false, i1* %6812
	%6815 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %6722, i64 0, i32 0
	%6816 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %6815, i64 0, i32 0
	store %Type_Info** %6727, %Type_Info*** %6816
	%6817 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %6815, i64 0, i32 1
	store i64 12, i64* %6817
	%6818 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %6722, i64 0, i32 1
	%6819 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %6818, i64 0, i32 0
	store %..string* %6728, %..string** %6819
	%6820 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %6818, i64 0, i32 1
	store i64 12, i64* %6820
	%6821 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %6722, i64 0, i32 2
	%6822 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %6821, i64 0, i32 0
	store i64* %6729, i64** %6822
	%6823 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %6821, i64 0, i32 1
	store i64 12, i64* %6823
	%6824 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %6722, i64 0, i32 3
	%6825 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %6824, i64 0, i32 0
	store i1* %6730, i1** %6825
	%6826 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %6824, i64 0, i32 1
	store i64 12, i64* %6826
	%6827 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %6719, i64 0, i32 2 ; UnionTagPtr
	store i8 16, i8* %6827
	%6828 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%6829 = getelementptr inbounds %Type_Info, %Type_Info* %6828, i64 0, i32 2
	%6830 = getelementptr inbounds %Type_Info, %Type_Info* %6828, i64 0, i32 0
	store i64 8, i64* %6830
	%6831 = getelementptr inbounds %Type_Info, %Type_Info* %6828, i64 0, i32 1
	store i64 8, i64* %6831
	; TypeInfoPointer
	%6832 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %6829 to %Type_Info_Pointer*
	%6833 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	%6834 = bitcast %Type_Info* %6833 to %Type_Info*
	%6835 = getelementptr inbounds %Type_Info_Pointer, %Type_Info_Pointer* %6832, i64 0, i32 0
	store %Type_Info* %6834, %Type_Info** %6835
	%6836 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %6829, i64 0, i32 2 ; UnionTagPtr
	store i8 9, i8* %6836
	%6837 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 264
	%6838 = getelementptr inbounds %Type_Info, %Type_Info* %6837, i64 0, i32 2
	%6839 = getelementptr inbounds %Type_Info, %Type_Info* %6837, i64 0, i32 0
	store i64 80, i64* %6839
	%6840 = getelementptr inbounds %Type_Info, %Type_Info* %6837, i64 0, i32 1
	store i64 8, i64* %6840
	; TypeInfoNamed
	%6841 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %6838 to %Type_Info_Named*
	%6842 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 265
	%6843 = bitcast %Type_Info* %6842 to %Type_Info*
	%6844 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %6841, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$629, i64 0, i32 0), i64 14}, %..string* %6844
	%6845 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %6841, i64 0, i32 1
	store %Type_Info* %6843, %Type_Info** %6845
	%6846 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %6838, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %6846
	%6847 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 265
	%6848 = getelementptr inbounds %Type_Info, %Type_Info* %6847, i64 0, i32 2
	%6849 = getelementptr inbounds %Type_Info, %Type_Info* %6847, i64 0, i32 0
	store i64 80, i64* %6849
	%6850 = getelementptr inbounds %Type_Info, %Type_Info* %6847, i64 0, i32 1
	store i64 8, i64* %6850
	; TypeInfoStruct
	%6851 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %6848 to %Type_Info_Struct*
	%6852 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %6851, i64 0, i32 4
	store i1 false, i1* %6852
	%6853 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %6851, i64 0, i32 5
	store i1 true, i1* %6853
	%6854 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %6851, i64 0, i32 6
	store i1 false, i1* %6854
	%6855 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %6851, i64 0, i32 7
	store i1 false, i1* %6855
	%6856 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 275
	%6857 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 239
	%6858 = getelementptr inbounds [450 x i64], [450 x i64]* @__$type_info_offsets_data, i64 0, i32 165
	%6859 = getelementptr inbounds [450 x i1], [450 x i1]* @__$type_info_usings_data, i64 0, i32 165
	%6860 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	%6861 = bitcast %Type_Info* %6860 to %Type_Info*
	%6862 = getelementptr inbounds %Type_Info*, %Type_Info** %6856, i64 0
	%6863 = getelementptr inbounds i64, i64* %6858, i64 0
	%6864 = getelementptr inbounds i1, i1* %6859, i64 0
	%6865 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	store %Type_Info* %6865, %Type_Info** %6862
	%6866 = getelementptr inbounds %..string, %..string* %6857, i64 0
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$62a, i64 0, i32 0), i64 4}, %..string* %6866
	store i64 0, i64* %6863
	store i1 false, i1* %6864
	%6867 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	%6868 = bitcast %Type_Info* %6867 to %Type_Info*
	%6869 = getelementptr inbounds %Type_Info*, %Type_Info** %6856, i64 1
	%6870 = getelementptr inbounds i64, i64* %6858, i64 1
	%6871 = getelementptr inbounds i1, i1* %6859, i64 1
	%6872 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	store %Type_Info* %6872, %Type_Info** %6869
	%6873 = getelementptr inbounds %..string, %..string* %6857, i64 1
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$62b, i64 0, i32 0), i64 5}, %..string* %6873
	store i64 4, i64* %6870
	store i1 false, i1* %6871
	%6874 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 254
	%6875 = bitcast %Type_Info* %6874 to %Type_Info*
	%6876 = getelementptr inbounds %Type_Info*, %Type_Info** %6856, i64 2
	%6877 = getelementptr inbounds i64, i64* %6858, i64 2
	%6878 = getelementptr inbounds i1, i1* %6859, i64 2
	%6879 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 254
	store %Type_Info* %6879, %Type_Info** %6876
	%6880 = getelementptr inbounds %..string, %..string* %6857, i64 2
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$62c, i64 0, i32 0), i64 8}, %..string* %6880
	store i64 8, i64* %6877
	store i1 false, i1* %6878
	%6881 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	%6882 = bitcast %Type_Info* %6881 to %Type_Info*
	%6883 = getelementptr inbounds %Type_Info*, %Type_Info** %6856, i64 3
	%6884 = getelementptr inbounds i64, i64* %6858, i64 3
	%6885 = getelementptr inbounds i1, i1* %6859, i64 3
	%6886 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	store %Type_Info* %6886, %Type_Info** %6883
	%6887 = getelementptr inbounds %..string, %..string* %6857, i64 3
	store %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$62d, i64 0, i32 0), i64 9}, %..string* %6887
	store i64 16, i64* %6884
	store i1 false, i1* %6885
	%6888 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	%6889 = bitcast %Type_Info* %6888 to %Type_Info*
	%6890 = getelementptr inbounds %Type_Info*, %Type_Info** %6856, i64 4
	%6891 = getelementptr inbounds i64, i64* %6858, i64 4
	%6892 = getelementptr inbounds i1, i1* %6859, i64 4
	%6893 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	store %Type_Info* %6893, %Type_Info** %6890
	%6894 = getelementptr inbounds %..string, %..string* %6857, i64 4
	store %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$62e, i64 0, i32 0), i64 9}, %..string* %6894
	store i64 20, i64* %6891
	store i1 false, i1* %6892
	%6895 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 241
	%6896 = bitcast %Type_Info* %6895 to %Type_Info*
	%6897 = getelementptr inbounds %Type_Info*, %Type_Info** %6856, i64 5
	%6898 = getelementptr inbounds i64, i64* %6858, i64 5
	%6899 = getelementptr inbounds i1, i1* %6859, i64 5
	%6900 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 241
	store %Type_Info* %6900, %Type_Info** %6897
	%6901 = getelementptr inbounds %..string, %..string* %6857, i64 5
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$62f, i64 0, i32 0), i64 8}, %..string* %6901
	store i64 24, i64* %6898
	store i1 false, i1* %6899
	%6902 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 242
	%6903 = bitcast %Type_Info* %6902 to %Type_Info*
	%6904 = getelementptr inbounds %Type_Info*, %Type_Info** %6856, i64 6
	%6905 = getelementptr inbounds i64, i64* %6858, i64 6
	%6906 = getelementptr inbounds i1, i1* %6859, i64 6
	%6907 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 242
	store %Type_Info* %6907, %Type_Info** %6904
	%6908 = getelementptr inbounds %..string, %..string* %6857, i64 6
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$630, i64 0, i32 0), i64 4}, %..string* %6908
	store i64 32, i64* %6905
	store i1 false, i1* %6906
	%6909 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 243
	%6910 = bitcast %Type_Info* %6909 to %Type_Info*
	%6911 = getelementptr inbounds %Type_Info*, %Type_Info** %6856, i64 7
	%6912 = getelementptr inbounds i64, i64* %6858, i64 7
	%6913 = getelementptr inbounds i1, i1* %6859, i64 7
	%6914 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 243
	store %Type_Info* %6914, %Type_Info** %6911
	%6915 = getelementptr inbounds %..string, %..string* %6857, i64 7
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$631, i64 0, i32 0), i64 6}, %..string* %6915
	store i64 40, i64* %6912
	store i1 false, i1* %6913
	%6916 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 245
	%6917 = bitcast %Type_Info* %6916 to %Type_Info*
	%6918 = getelementptr inbounds %Type_Info*, %Type_Info** %6856, i64 8
	%6919 = getelementptr inbounds i64, i64* %6858, i64 8
	%6920 = getelementptr inbounds i1, i1* %6859, i64 8
	%6921 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 245
	store %Type_Info* %6921, %Type_Info** %6918
	%6922 = getelementptr inbounds %..string, %..string* %6857, i64 8
	store %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$632, i64 0, i32 0), i64 10}, %..string* %6922
	store i64 48, i64* %6919
	store i1 false, i1* %6920
	%6923 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 138
	%6924 = bitcast %Type_Info* %6923 to %Type_Info*
	%6925 = getelementptr inbounds %Type_Info*, %Type_Info** %6856, i64 9
	%6926 = getelementptr inbounds i64, i64* %6858, i64 9
	%6927 = getelementptr inbounds i1, i1* %6859, i64 9
	%6928 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 138
	store %Type_Info* %6928, %Type_Info** %6925
	%6929 = getelementptr inbounds %..string, %..string* %6857, i64 9
	store %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$633, i64 0, i32 0), i64 9}, %..string* %6929
	store i64 56, i64* %6926
	store i1 false, i1* %6927
	%6930 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 138
	%6931 = bitcast %Type_Info* %6930 to %Type_Info*
	%6932 = getelementptr inbounds %Type_Info*, %Type_Info** %6856, i64 10
	%6933 = getelementptr inbounds i64, i64* %6858, i64 10
	%6934 = getelementptr inbounds i1, i1* %6859, i64 10
	%6935 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 138
	store %Type_Info* %6935, %Type_Info** %6932
	%6936 = getelementptr inbounds %..string, %..string* %6857, i64 10
	store %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$634, i64 0, i32 0), i64 10}, %..string* %6936
	store i64 64, i64* %6933
	store i1 false, i1* %6934
	%6937 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 242
	%6938 = bitcast %Type_Info* %6937 to %Type_Info*
	%6939 = getelementptr inbounds %Type_Info*, %Type_Info** %6856, i64 11
	%6940 = getelementptr inbounds i64, i64* %6858, i64 11
	%6941 = getelementptr inbounds i1, i1* %6859, i64 11
	%6942 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 242
	store %Type_Info* %6942, %Type_Info** %6939
	%6943 = getelementptr inbounds %..string, %..string* %6857, i64 11
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$635, i64 0, i32 0), i64 2}, %..string* %6943
	store i64 72, i64* %6940
	store i1 false, i1* %6941
	%6944 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %6851, i64 0, i32 0
	%6945 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %6944, i64 0, i32 0
	store %Type_Info** %6856, %Type_Info*** %6945
	%6946 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %6944, i64 0, i32 1
	store i64 12, i64* %6946
	%6947 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %6851, i64 0, i32 1
	%6948 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %6947, i64 0, i32 0
	store %..string* %6857, %..string** %6948
	%6949 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %6947, i64 0, i32 1
	store i64 12, i64* %6949
	%6950 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %6851, i64 0, i32 2
	%6951 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %6950, i64 0, i32 0
	store i64* %6858, i64** %6951
	%6952 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %6950, i64 0, i32 1
	store i64 12, i64* %6952
	%6953 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %6851, i64 0, i32 3
	%6954 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %6953, i64 0, i32 0
	store i1* %6859, i1** %6954
	%6955 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %6953, i64 0, i32 1
	store i64 12, i64* %6955
	%6956 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %6848, i64 0, i32 2 ; UnionTagPtr
	store i8 16, i8* %6956
	%6957 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 138
	%6958 = getelementptr inbounds %Type_Info, %Type_Info* %6957, i64 0, i32 2
	%6959 = getelementptr inbounds %Type_Info, %Type_Info* %6957, i64 0, i32 0
	store i64 8, i64* %6959
	%6960 = getelementptr inbounds %Type_Info, %Type_Info* %6957, i64 0, i32 1
	store i64 8, i64* %6960
	; TypeInfoPointer
	%6961 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %6958 to %Type_Info_Pointer*
	%6962 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 59
	%6963 = bitcast %Type_Info* %6962 to %Type_Info*
	%6964 = getelementptr inbounds %Type_Info_Pointer, %Type_Info_Pointer* %6961, i64 0, i32 0
	store %Type_Info* %6963, %Type_Info** %6964
	%6965 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %6958, i64 0, i32 2 ; UnionTagPtr
	store i8 9, i8* %6965
	%6966 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 266
	%6967 = getelementptr inbounds %Type_Info, %Type_Info* %6966, i64 0, i32 2
	%6968 = getelementptr inbounds %Type_Info, %Type_Info* %6966, i64 0, i32 0
	store i64 48, i64* %6968
	%6969 = getelementptr inbounds %Type_Info, %Type_Info* %6966, i64 0, i32 1
	store i64 8, i64* %6969
	; TypeInfoNamed
	%6970 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %6967 to %Type_Info_Named*
	%6971 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 267
	%6972 = bitcast %Type_Info* %6971 to %Type_Info*
	%6973 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %6970, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$636, i64 0, i32 0), i64 3}, %..string* %6973
	%6974 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %6970, i64 0, i32 1
	store %Type_Info* %6972, %Type_Info** %6974
	%6975 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %6967, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %6975
	%6976 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 267
	%6977 = getelementptr inbounds %Type_Info, %Type_Info* %6976, i64 0, i32 2
	%6978 = getelementptr inbounds %Type_Info, %Type_Info* %6976, i64 0, i32 0
	store i64 48, i64* %6978
	%6979 = getelementptr inbounds %Type_Info, %Type_Info* %6976, i64 0, i32 1
	store i64 8, i64* %6979
	; TypeInfoStruct
	%6980 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %6977 to %Type_Info_Struct*
	%6981 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %6980, i64 0, i32 4
	store i1 false, i1* %6981
	%6982 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %6980, i64 0, i32 5
	store i1 true, i1* %6982
	%6983 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %6980, i64 0, i32 6
	store i1 false, i1* %6983
	%6984 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %6980, i64 0, i32 7
	store i1 false, i1* %6984
	%6985 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 287
	%6986 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 251
	%6987 = getelementptr inbounds [450 x i64], [450 x i64]* @__$type_info_offsets_data, i64 0, i32 177
	%6988 = getelementptr inbounds [450 x i1], [450 x i1]* @__$type_info_usings_data, i64 0, i32 177
	%6989 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 239
	%6990 = bitcast %Type_Info* %6989 to %Type_Info*
	%6991 = getelementptr inbounds %Type_Info*, %Type_Info** %6985, i64 0
	%6992 = getelementptr inbounds i64, i64* %6987, i64 0
	%6993 = getelementptr inbounds i1, i1* %6988, i64 0
	%6994 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 239
	store %Type_Info* %6994, %Type_Info** %6991
	%6995 = getelementptr inbounds %..string, %..string* %6986, i64 0
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$637, i64 0, i32 0), i64 4}, %..string* %6995
	store i64 0, i64* %6992
	store i1 false, i1* %6993
	%6996 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	%6997 = bitcast %Type_Info* %6996 to %Type_Info*
	%6998 = getelementptr inbounds %Type_Info*, %Type_Info** %6985, i64 1
	%6999 = getelementptr inbounds i64, i64* %6987, i64 1
	%7000 = getelementptr inbounds i1, i1* %6988, i64 1
	%7001 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	store %Type_Info* %7001, %Type_Info** %6998
	%7002 = getelementptr inbounds %..string, %..string* %6986, i64 1
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$638, i64 0, i32 0), i64 7}, %..string* %7002
	store i64 8, i64* %6999
	store i1 false, i1* %7000
	%7003 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 251
	%7004 = bitcast %Type_Info* %7003 to %Type_Info*
	%7005 = getelementptr inbounds %Type_Info*, %Type_Info** %6985, i64 2
	%7006 = getelementptr inbounds i64, i64* %6987, i64 2
	%7007 = getelementptr inbounds i1, i1* %6988, i64 2
	%7008 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 251
	store %Type_Info* %7008, %Type_Info** %7005
	%7009 = getelementptr inbounds %..string, %..string* %6986, i64 2
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$639, i64 0, i32 0), i64 6}, %..string* %7009
	store i64 16, i64* %7006
	store i1 false, i1* %7007
	%7010 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 252
	%7011 = bitcast %Type_Info* %7010 to %Type_Info*
	%7012 = getelementptr inbounds %Type_Info*, %Type_Info** %6985, i64 3
	%7013 = getelementptr inbounds i64, i64* %6987, i64 3
	%7014 = getelementptr inbounds i1, i1* %6988, i64 3
	%7015 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 252
	store %Type_Info* %7015, %Type_Info** %7012
	%7016 = getelementptr inbounds %..string, %..string* %6986, i64 3
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$63a, i64 0, i32 0), i64 6}, %..string* %7016
	store i64 24, i64* %7013
	store i1 false, i1* %7014
	%7017 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	%7018 = bitcast %Type_Info* %7017 to %Type_Info*
	%7019 = getelementptr inbounds %Type_Info*, %Type_Info** %6985, i64 4
	%7020 = getelementptr inbounds i64, i64* %6987, i64 4
	%7021 = getelementptr inbounds i1, i1* %6988, i64 4
	%7022 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	store %Type_Info* %7022, %Type_Info** %7019
	%7023 = getelementptr inbounds %..string, %..string* %6986, i64 4
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$63b, i64 0, i32 0), i64 4}, %..string* %7023
	store i64 32, i64* %7020
	store i1 false, i1* %7021
	%7024 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 260
	%7025 = bitcast %Type_Info* %7024 to %Type_Info*
	%7026 = getelementptr inbounds %Type_Info*, %Type_Info** %6985, i64 5
	%7027 = getelementptr inbounds i64, i64* %6987, i64 5
	%7028 = getelementptr inbounds i1, i1* %6988, i64 5
	%7029 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 260
	store %Type_Info* %7029, %Type_Info** %7026
	%7030 = getelementptr inbounds %..string, %..string* %6986, i64 5
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$63c, i64 0, i32 0), i64 2}, %..string* %7030
	store i64 36, i64* %7027
	store i1 false, i1* %7028
	%7031 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %6980, i64 0, i32 0
	%7032 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %7031, i64 0, i32 0
	store %Type_Info** %6985, %Type_Info*** %7032
	%7033 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %7031, i64 0, i32 1
	store i64 6, i64* %7033
	%7034 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %6980, i64 0, i32 1
	%7035 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %7034, i64 0, i32 0
	store %..string* %6986, %..string** %7035
	%7036 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %7034, i64 0, i32 1
	store i64 6, i64* %7036
	%7037 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %6980, i64 0, i32 2
	%7038 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %7037, i64 0, i32 0
	store i64* %6987, i64** %7038
	%7039 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %7037, i64 0, i32 1
	store i64 6, i64* %7039
	%7040 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %6980, i64 0, i32 3
	%7041 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %7040, i64 0, i32 0
	store i1* %6988, i1** %7041
	%7042 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %7040, i64 0, i32 1
	store i64 6, i64* %7042
	%7043 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %6977, i64 0, i32 2 ; UnionTagPtr
	store i8 16, i8* %7043
	%7044 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 268
	%7045 = getelementptr inbounds %Type_Info, %Type_Info* %7044, i64 0, i32 2
	%7046 = getelementptr inbounds %Type_Info, %Type_Info* %7044, i64 0, i32 0
	store i64 16, i64* %7046
	%7047 = getelementptr inbounds %Type_Info, %Type_Info* %7044, i64 0, i32 1
	store i64 4, i64* %7047
	; TypeInfoNamed
	%7048 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %7045 to %Type_Info_Named*
	%7049 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 269
	%7050 = bitcast %Type_Info* %7049 to %Type_Info*
	%7051 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %7048, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$63d, i64 0, i32 0), i64 4}, %..string* %7051
	%7052 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %7048, i64 0, i32 1
	store %Type_Info* %7050, %Type_Info** %7052
	%7053 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %7045, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %7053
	%7054 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 269
	%7055 = getelementptr inbounds %Type_Info, %Type_Info* %7054, i64 0, i32 2
	%7056 = getelementptr inbounds %Type_Info, %Type_Info* %7054, i64 0, i32 0
	store i64 16, i64* %7056
	%7057 = getelementptr inbounds %Type_Info, %Type_Info* %7054, i64 0, i32 1
	store i64 4, i64* %7057
	; TypeInfoStruct
	%7058 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %7055 to %Type_Info_Struct*
	%7059 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %7058, i64 0, i32 4
	store i1 false, i1* %7059
	%7060 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %7058, i64 0, i32 5
	store i1 true, i1* %7060
	%7061 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %7058, i64 0, i32 6
	store i1 false, i1* %7061
	%7062 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %7058, i64 0, i32 7
	store i1 false, i1* %7062
	%7063 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 293
	%7064 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 257
	%7065 = getelementptr inbounds [450 x i64], [450 x i64]* @__$type_info_offsets_data, i64 0, i32 183
	%7066 = getelementptr inbounds [450 x i1], [450 x i1]* @__$type_info_usings_data, i64 0, i32 183
	%7067 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	%7068 = bitcast %Type_Info* %7067 to %Type_Info*
	%7069 = getelementptr inbounds %Type_Info*, %Type_Info** %7063, i64 0
	%7070 = getelementptr inbounds i64, i64* %7065, i64 0
	%7071 = getelementptr inbounds i1, i1* %7066, i64 0
	%7072 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	store %Type_Info* %7072, %Type_Info** %7069
	%7073 = getelementptr inbounds %..string, %..string* %7064, i64 0
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$63e, i64 0, i32 0), i64 4}, %..string* %7073
	store i64 0, i64* %7070
	store i1 false, i1* %7071
	%7074 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	%7075 = bitcast %Type_Info* %7074 to %Type_Info*
	%7076 = getelementptr inbounds %Type_Info*, %Type_Info** %7063, i64 1
	%7077 = getelementptr inbounds i64, i64* %7065, i64 1
	%7078 = getelementptr inbounds i1, i1* %7066, i64 1
	%7079 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	store %Type_Info* %7079, %Type_Info** %7076
	%7080 = getelementptr inbounds %..string, %..string* %7064, i64 1
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$63f, i64 0, i32 0), i64 3}, %..string* %7080
	store i64 4, i64* %7077
	store i1 false, i1* %7078
	%7081 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	%7082 = bitcast %Type_Info* %7081 to %Type_Info*
	%7083 = getelementptr inbounds %Type_Info*, %Type_Info** %7063, i64 2
	%7084 = getelementptr inbounds i64, i64* %7065, i64 2
	%7085 = getelementptr inbounds i1, i1* %7066, i64 2
	%7086 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	store %Type_Info* %7086, %Type_Info** %7083
	%7087 = getelementptr inbounds %..string, %..string* %7064, i64 2
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$640, i64 0, i32 0), i64 5}, %..string* %7087
	store i64 8, i64* %7084
	store i1 false, i1* %7085
	%7088 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	%7089 = bitcast %Type_Info* %7088 to %Type_Info*
	%7090 = getelementptr inbounds %Type_Info*, %Type_Info** %7063, i64 3
	%7091 = getelementptr inbounds i64, i64* %7065, i64 3
	%7092 = getelementptr inbounds i1, i1* %7066, i64 3
	%7093 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	store %Type_Info* %7093, %Type_Info** %7090
	%7094 = getelementptr inbounds %..string, %..string* %7064, i64 3
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$641, i64 0, i32 0), i64 6}, %..string* %7094
	store i64 12, i64* %7091
	store i1 false, i1* %7092
	%7095 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %7058, i64 0, i32 0
	%7096 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %7095, i64 0, i32 0
	store %Type_Info** %7063, %Type_Info*** %7096
	%7097 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %7095, i64 0, i32 1
	store i64 4, i64* %7097
	%7098 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %7058, i64 0, i32 1
	%7099 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %7098, i64 0, i32 0
	store %..string* %7064, %..string** %7099
	%7100 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %7098, i64 0, i32 1
	store i64 4, i64* %7100
	%7101 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %7058, i64 0, i32 2
	%7102 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %7101, i64 0, i32 0
	store i64* %7065, i64** %7102
	%7103 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %7101, i64 0, i32 1
	store i64 4, i64* %7103
	%7104 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %7058, i64 0, i32 3
	%7105 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %7104, i64 0, i32 0
	store i1* %7066, i1** %7105
	%7106 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %7104, i64 0, i32 1
	store i64 4, i64* %7106
	%7107 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %7055, i64 0, i32 2 ; UnionTagPtr
	store i8 16, i8* %7107
	%7108 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 270
	%7109 = getelementptr inbounds %Type_Info, %Type_Info* %7108, i64 0, i32 2
	%7110 = getelementptr inbounds %Type_Info, %Type_Info* %7108, i64 0, i32 0
	store i64 8, i64* %7110
	%7111 = getelementptr inbounds %Type_Info, %Type_Info* %7108, i64 0, i32 1
	store i64 4, i64* %7111
	; TypeInfoNamed
	%7112 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %7109 to %Type_Info_Named*
	%7113 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 271
	%7114 = bitcast %Type_Info* %7113 to %Type_Info*
	%7115 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %7112, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$642, i64 0, i32 0), i64 8}, %..string* %7115
	%7116 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %7112, i64 0, i32 1
	store %Type_Info* %7114, %Type_Info** %7116
	%7117 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %7109, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %7117
	%7118 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 271
	%7119 = getelementptr inbounds %Type_Info, %Type_Info* %7118, i64 0, i32 2
	%7120 = getelementptr inbounds %Type_Info, %Type_Info* %7118, i64 0, i32 0
	store i64 8, i64* %7120
	%7121 = getelementptr inbounds %Type_Info, %Type_Info* %7118, i64 0, i32 1
	store i64 4, i64* %7121
	; TypeInfoStruct
	%7122 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %7119 to %Type_Info_Struct*
	%7123 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %7122, i64 0, i32 4
	store i1 false, i1* %7123
	%7124 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %7122, i64 0, i32 5
	store i1 true, i1* %7124
	%7125 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %7122, i64 0, i32 6
	store i1 false, i1* %7125
	%7126 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %7122, i64 0, i32 7
	store i1 false, i1* %7126
	%7127 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 297
	%7128 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 261
	%7129 = getelementptr inbounds [450 x i64], [450 x i64]* @__$type_info_offsets_data, i64 0, i32 187
	%7130 = getelementptr inbounds [450 x i1], [450 x i1]* @__$type_info_usings_data, i64 0, i32 187
	%7131 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	%7132 = bitcast %Type_Info* %7131 to %Type_Info*
	%7133 = getelementptr inbounds %Type_Info*, %Type_Info** %7127, i64 0
	%7134 = getelementptr inbounds i64, i64* %7129, i64 0
	%7135 = getelementptr inbounds i1, i1* %7130, i64 0
	%7136 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	store %Type_Info* %7136, %Type_Info** %7133
	%7137 = getelementptr inbounds %..string, %..string* %7128, i64 0
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$643, i64 0, i32 0), i64 2}, %..string* %7137
	store i64 0, i64* %7134
	store i1 false, i1* %7135
	%7138 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	%7139 = bitcast %Type_Info* %7138 to %Type_Info*
	%7140 = getelementptr inbounds %Type_Info*, %Type_Info** %7127, i64 1
	%7141 = getelementptr inbounds i64, i64* %7129, i64 1
	%7142 = getelementptr inbounds i1, i1* %7130, i64 1
	%7143 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	store %Type_Info* %7143, %Type_Info** %7140
	%7144 = getelementptr inbounds %..string, %..string* %7128, i64 1
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$644, i64 0, i32 0), i64 2}, %..string* %7144
	store i64 4, i64* %7141
	store i1 false, i1* %7142
	%7145 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %7122, i64 0, i32 0
	%7146 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %7145, i64 0, i32 0
	store %Type_Info** %7127, %Type_Info*** %7146
	%7147 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %7145, i64 0, i32 1
	store i64 2, i64* %7147
	%7148 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %7122, i64 0, i32 1
	%7149 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %7148, i64 0, i32 0
	store %..string* %7128, %..string** %7149
	%7150 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %7148, i64 0, i32 1
	store i64 2, i64* %7150
	%7151 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %7122, i64 0, i32 2
	%7152 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %7151, i64 0, i32 0
	store i64* %7129, i64** %7152
	%7153 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %7151, i64 0, i32 1
	store i64 2, i64* %7153
	%7154 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %7122, i64 0, i32 3
	%7155 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %7154, i64 0, i32 0
	store i1* %7130, i1** %7155
	%7156 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %7154, i64 0, i32 1
	store i64 2, i64* %7156
	%7157 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %7119, i64 0, i32 2 ; UnionTagPtr
	store i8 16, i8* %7157
	%7158 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 272
	%7159 = getelementptr inbounds %Type_Info, %Type_Info* %7158, i64 0, i32 2
	%7160 = getelementptr inbounds %Type_Info, %Type_Info* %7158, i64 0, i32 0
	store i64 16, i64* %7160
	%7161 = getelementptr inbounds %Type_Info, %Type_Info* %7158, i64 0, i32 1
	store i64 2, i64* %7161
	; TypeInfoNamed
	%7162 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %7159 to %Type_Info_Named*
	%7163 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 273
	%7164 = bitcast %Type_Info* %7163 to %Type_Info*
	%7165 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %7162, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$645, i64 0, i32 0), i64 10}, %..string* %7165
	%7166 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %7162, i64 0, i32 1
	store %Type_Info* %7164, %Type_Info** %7166
	%7167 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %7159, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %7167
	%7168 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 273
	%7169 = getelementptr inbounds %Type_Info, %Type_Info* %7168, i64 0, i32 2
	%7170 = getelementptr inbounds %Type_Info, %Type_Info* %7168, i64 0, i32 0
	store i64 16, i64* %7170
	%7171 = getelementptr inbounds %Type_Info, %Type_Info* %7168, i64 0, i32 1
	store i64 2, i64* %7171
	; TypeInfoStruct
	%7172 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %7169 to %Type_Info_Struct*
	%7173 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %7172, i64 0, i32 4
	store i1 false, i1* %7173
	%7174 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %7172, i64 0, i32 5
	store i1 true, i1* %7174
	%7175 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %7172, i64 0, i32 6
	store i1 false, i1* %7175
	%7176 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %7172, i64 0, i32 7
	store i1 false, i1* %7176
	%7177 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 299
	%7178 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 263
	%7179 = getelementptr inbounds [450 x i64], [450 x i64]* @__$type_info_offsets_data, i64 0, i32 189
	%7180 = getelementptr inbounds [450 x i1], [450 x i1]* @__$type_info_usings_data, i64 0, i32 189
	%7181 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 59
	%7182 = bitcast %Type_Info* %7181 to %Type_Info*
	%7183 = getelementptr inbounds %Type_Info*, %Type_Info** %7177, i64 0
	%7184 = getelementptr inbounds i64, i64* %7179, i64 0
	%7185 = getelementptr inbounds i1, i1* %7180, i64 0
	%7186 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 59
	store %Type_Info* %7186, %Type_Info** %7183
	%7187 = getelementptr inbounds %..string, %..string* %7178, i64 0
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$646, i64 0, i32 0), i64 4}, %..string* %7187
	store i64 0, i64* %7184
	store i1 false, i1* %7185
	%7188 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 59
	%7189 = bitcast %Type_Info* %7188 to %Type_Info*
	%7190 = getelementptr inbounds %Type_Info*, %Type_Info** %7177, i64 1
	%7191 = getelementptr inbounds i64, i64* %7179, i64 1
	%7192 = getelementptr inbounds i1, i1* %7180, i64 1
	%7193 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 59
	store %Type_Info* %7193, %Type_Info** %7190
	%7194 = getelementptr inbounds %..string, %..string* %7178, i64 1
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$647, i64 0, i32 0), i64 5}, %..string* %7194
	store i64 2, i64* %7191
	store i1 false, i1* %7192
	%7195 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 59
	%7196 = bitcast %Type_Info* %7195 to %Type_Info*
	%7197 = getelementptr inbounds %Type_Info*, %Type_Info** %7177, i64 2
	%7198 = getelementptr inbounds i64, i64* %7179, i64 2
	%7199 = getelementptr inbounds i1, i1* %7180, i64 2
	%7200 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 59
	store %Type_Info* %7200, %Type_Info** %7197
	%7201 = getelementptr inbounds %..string, %..string* %7178, i64 2
	store %..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$648, i64 0, i32 0), i64 11}, %..string* %7201
	store i64 4, i64* %7198
	store i1 false, i1* %7199
	%7202 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 59
	%7203 = bitcast %Type_Info* %7202 to %Type_Info*
	%7204 = getelementptr inbounds %Type_Info*, %Type_Info** %7177, i64 3
	%7205 = getelementptr inbounds i64, i64* %7179, i64 3
	%7206 = getelementptr inbounds i1, i1* %7180, i64 3
	%7207 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 59
	store %Type_Info* %7207, %Type_Info** %7204
	%7208 = getelementptr inbounds %..string, %..string* %7178, i64 3
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$649, i64 0, i32 0), i64 3}, %..string* %7208
	store i64 6, i64* %7205
	store i1 false, i1* %7206
	%7209 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 59
	%7210 = bitcast %Type_Info* %7209 to %Type_Info*
	%7211 = getelementptr inbounds %Type_Info*, %Type_Info** %7177, i64 4
	%7212 = getelementptr inbounds i64, i64* %7179, i64 4
	%7213 = getelementptr inbounds i1, i1* %7180, i64 4
	%7214 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 59
	store %Type_Info* %7214, %Type_Info** %7211
	%7215 = getelementptr inbounds %..string, %..string* %7178, i64 4
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$64a, i64 0, i32 0), i64 4}, %..string* %7215
	store i64 8, i64* %7212
	store i1 false, i1* %7213
	%7216 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 59
	%7217 = bitcast %Type_Info* %7216 to %Type_Info*
	%7218 = getelementptr inbounds %Type_Info*, %Type_Info** %7177, i64 5
	%7219 = getelementptr inbounds i64, i64* %7179, i64 5
	%7220 = getelementptr inbounds i1, i1* %7180, i64 5
	%7221 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 59
	store %Type_Info* %7221, %Type_Info** %7218
	%7222 = getelementptr inbounds %..string, %..string* %7178, i64 5
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$64b, i64 0, i32 0), i64 6}, %..string* %7222
	store i64 10, i64* %7219
	store i1 false, i1* %7220
	%7223 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 59
	%7224 = bitcast %Type_Info* %7223 to %Type_Info*
	%7225 = getelementptr inbounds %Type_Info*, %Type_Info** %7177, i64 6
	%7226 = getelementptr inbounds i64, i64* %7179, i64 6
	%7227 = getelementptr inbounds i1, i1* %7180, i64 6
	%7228 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 59
	store %Type_Info* %7228, %Type_Info** %7225
	%7229 = getelementptr inbounds %..string, %..string* %7178, i64 6
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$64c, i64 0, i32 0), i64 6}, %..string* %7229
	store i64 12, i64* %7226
	store i1 false, i1* %7227
	%7230 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 59
	%7231 = bitcast %Type_Info* %7230 to %Type_Info*
	%7232 = getelementptr inbounds %Type_Info*, %Type_Info** %7177, i64 7
	%7233 = getelementptr inbounds i64, i64* %7179, i64 7
	%7234 = getelementptr inbounds i1, i1* %7180, i64 7
	%7235 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 59
	store %Type_Info* %7235, %Type_Info** %7232
	%7236 = getelementptr inbounds %..string, %..string* %7178, i64 7
	store %..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$64d, i64 0, i32 0), i64 11}, %..string* %7236
	store i64 14, i64* %7233
	store i1 false, i1* %7234
	%7237 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %7172, i64 0, i32 0
	%7238 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %7237, i64 0, i32 0
	store %Type_Info** %7177, %Type_Info*** %7238
	%7239 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %7237, i64 0, i32 1
	store i64 8, i64* %7239
	%7240 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %7172, i64 0, i32 1
	%7241 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %7240, i64 0, i32 0
	store %..string* %7178, %..string** %7241
	%7242 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %7240, i64 0, i32 1
	store i64 8, i64* %7242
	%7243 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %7172, i64 0, i32 2
	%7244 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %7243, i64 0, i32 0
	store i64* %7179, i64** %7244
	%7245 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %7243, i64 0, i32 1
	store i64 8, i64* %7245
	%7246 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %7172, i64 0, i32 3
	%7247 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %7246, i64 0, i32 0
	store i1* %7180, i1** %7247
	%7248 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %7246, i64 0, i32 1
	store i64 8, i64* %7248
	%7249 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %7169, i64 0, i32 2 ; UnionTagPtr
	store i8 16, i8* %7249
	%7250 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 274
	%7251 = getelementptr inbounds %Type_Info, %Type_Info* %7250, i64 0, i32 2
	%7252 = getelementptr inbounds %Type_Info, %Type_Info* %7250, i64 0, i32 0
	store i64 52, i64* %7252
	%7253 = getelementptr inbounds %Type_Info, %Type_Info* %7250, i64 0, i32 1
	store i64 4, i64* %7253
	; TypeInfoNamed
	%7254 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %7251 to %Type_Info_Named*
	%7255 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 275
	%7256 = bitcast %Type_Info* %7255 to %Type_Info*
	%7257 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %7254, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__str$64e, i64 0, i32 0), i64 26}, %..string* %7257
	%7258 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %7254, i64 0, i32 1
	store %Type_Info* %7256, %Type_Info** %7258
	%7259 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %7251, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %7259
	%7260 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 275
	%7261 = getelementptr inbounds %Type_Info, %Type_Info* %7260, i64 0, i32 2
	%7262 = getelementptr inbounds %Type_Info, %Type_Info* %7260, i64 0, i32 0
	store i64 52, i64* %7262
	%7263 = getelementptr inbounds %Type_Info, %Type_Info* %7260, i64 0, i32 1
	store i64 4, i64* %7263
	; TypeInfoStruct
	%7264 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %7261 to %Type_Info_Struct*
	%7265 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %7264, i64 0, i32 4
	store i1 false, i1* %7265
	%7266 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %7264, i64 0, i32 5
	store i1 true, i1* %7266
	%7267 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %7264, i64 0, i32 6
	store i1 false, i1* %7267
	%7268 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %7264, i64 0, i32 7
	store i1 false, i1* %7268
	%7269 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 307
	%7270 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 271
	%7271 = getelementptr inbounds [450 x i64], [450 x i64]* @__$type_info_offsets_data, i64 0, i32 197
	%7272 = getelementptr inbounds [450 x i1], [450 x i1]* @__$type_info_usings_data, i64 0, i32 197
	%7273 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	%7274 = bitcast %Type_Info* %7273 to %Type_Info*
	%7275 = getelementptr inbounds %Type_Info*, %Type_Info** %7269, i64 0
	%7276 = getelementptr inbounds i64, i64* %7271, i64 0
	%7277 = getelementptr inbounds i1, i1* %7272, i64 0
	%7278 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	store %Type_Info* %7278, %Type_Info** %7275
	%7279 = getelementptr inbounds %..string, %..string* %7270, i64 0
	store %..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$64f, i64 0, i32 0), i64 15}, %..string* %7279
	store i64 0, i64* %7276
	store i1 false, i1* %7277
	%7280 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 270
	%7281 = bitcast %Type_Info* %7280 to %Type_Info*
	%7282 = getelementptr inbounds %Type_Info*, %Type_Info** %7269, i64 1
	%7283 = getelementptr inbounds i64, i64* %7271, i64 1
	%7284 = getelementptr inbounds i1, i1* %7272, i64 1
	%7285 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 270
	store %Type_Info* %7285, %Type_Info** %7282
	%7286 = getelementptr inbounds %..string, %..string* %7270, i64 1
	store %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$650, i64 0, i32 0), i64 13}, %..string* %7286
	store i64 4, i64* %7283
	store i1 false, i1* %7284
	%7287 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 270
	%7288 = bitcast %Type_Info* %7287 to %Type_Info*
	%7289 = getelementptr inbounds %Type_Info*, %Type_Info** %7269, i64 2
	%7290 = getelementptr inbounds i64, i64* %7271, i64 2
	%7291 = getelementptr inbounds i1, i1* %7272, i64 2
	%7292 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 270
	store %Type_Info* %7292, %Type_Info** %7289
	%7293 = getelementptr inbounds %..string, %..string* %7270, i64 2
	store %..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$651, i64 0, i32 0), i64 16}, %..string* %7293
	store i64 12, i64* %7290
	store i1 false, i1* %7291
	%7294 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 270
	%7295 = bitcast %Type_Info* %7294 to %Type_Info*
	%7296 = getelementptr inbounds %Type_Info*, %Type_Info** %7269, i64 3
	%7297 = getelementptr inbounds i64, i64* %7271, i64 3
	%7298 = getelementptr inbounds i1, i1* %7272, i64 3
	%7299 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 270
	store %Type_Info* %7299, %Type_Info** %7296
	%7300 = getelementptr inbounds %..string, %..string* %7270, i64 3
	store %..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$652, i64 0, i32 0), i64 15}, %..string* %7300
	store i64 20, i64* %7297
	store i1 false, i1* %7298
	%7301 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	%7302 = bitcast %Type_Info* %7301 to %Type_Info*
	%7303 = getelementptr inbounds %Type_Info*, %Type_Info** %7269, i64 4
	%7304 = getelementptr inbounds i64, i64* %7271, i64 4
	%7305 = getelementptr inbounds i1, i1* %7272, i64 4
	%7306 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	store %Type_Info* %7306, %Type_Info** %7303
	%7307 = getelementptr inbounds %..string, %..string* %7270, i64 4
	store %..string {i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__str$653, i64 0, i32 0), i64 20}, %..string* %7307
	store i64 28, i64* %7304
	store i1 false, i1* %7305
	%7308 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	%7309 = bitcast %Type_Info* %7308 to %Type_Info*
	%7310 = getelementptr inbounds %Type_Info*, %Type_Info** %7269, i64 5
	%7311 = getelementptr inbounds i64, i64* %7271, i64 5
	%7312 = getelementptr inbounds i1, i1* %7272, i64 5
	%7313 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	store %Type_Info* %7313, %Type_Info** %7310
	%7314 = getelementptr inbounds %..string, %..string* %7270, i64 5
	store %..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$654, i64 0, i32 0), i64 14}, %..string* %7314
	store i64 32, i64* %7311
	store i1 false, i1* %7312
	%7315 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	%7316 = bitcast %Type_Info* %7315 to %Type_Info*
	%7317 = getelementptr inbounds %Type_Info*, %Type_Info** %7269, i64 6
	%7318 = getelementptr inbounds i64, i64* %7271, i64 6
	%7319 = getelementptr inbounds i1, i1* %7272, i64 6
	%7320 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	store %Type_Info* %7320, %Type_Info** %7317
	%7321 = getelementptr inbounds %..string, %..string* %7270, i64 6
	store %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$655, i64 0, i32 0), i64 13}, %..string* %7321
	store i64 36, i64* %7318
	store i1 false, i1* %7319
	%7322 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	%7323 = bitcast %Type_Info* %7322 to %Type_Info*
	%7324 = getelementptr inbounds %Type_Info*, %Type_Info** %7269, i64 7
	%7325 = getelementptr inbounds i64, i64* %7271, i64 7
	%7326 = getelementptr inbounds i1, i1* %7272, i64 7
	%7327 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	store %Type_Info* %7327, %Type_Info** %7324
	%7328 = getelementptr inbounds %..string, %..string* %7270, i64 7
	store %..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$656, i64 0, i32 0), i64 15}, %..string* %7328
	store i64 40, i64* %7325
	store i1 false, i1* %7326
	%7329 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	%7330 = bitcast %Type_Info* %7329 to %Type_Info*
	%7331 = getelementptr inbounds %Type_Info*, %Type_Info** %7269, i64 8
	%7332 = getelementptr inbounds i64, i64* %7271, i64 8
	%7333 = getelementptr inbounds i1, i1* %7272, i64 8
	%7334 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	store %Type_Info* %7334, %Type_Info** %7331
	%7335 = getelementptr inbounds %..string, %..string* %7270, i64 8
	store %..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$657, i64 0, i32 0), i64 15}, %..string* %7335
	store i64 44, i64* %7332
	store i1 false, i1* %7333
	%7336 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	%7337 = bitcast %Type_Info* %7336 to %Type_Info*
	%7338 = getelementptr inbounds %Type_Info*, %Type_Info** %7269, i64 9
	%7339 = getelementptr inbounds i64, i64* %7271, i64 9
	%7340 = getelementptr inbounds i1, i1* %7272, i64 9
	%7341 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	store %Type_Info* %7341, %Type_Info** %7338
	%7342 = getelementptr inbounds %..string, %..string* %7270, i64 9
	store %..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$658, i64 0, i32 0), i64 14}, %..string* %7342
	store i64 48, i64* %7339
	store i1 false, i1* %7340
	%7343 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %7264, i64 0, i32 0
	%7344 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %7343, i64 0, i32 0
	store %Type_Info** %7269, %Type_Info*** %7344
	%7345 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %7343, i64 0, i32 1
	store i64 10, i64* %7345
	%7346 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %7264, i64 0, i32 1
	%7347 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %7346, i64 0, i32 0
	store %..string* %7270, %..string** %7347
	%7348 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %7346, i64 0, i32 1
	store i64 10, i64* %7348
	%7349 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %7264, i64 0, i32 2
	%7350 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %7349, i64 0, i32 0
	store i64* %7271, i64** %7350
	%7351 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %7349, i64 0, i32 1
	store i64 10, i64* %7351
	%7352 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %7264, i64 0, i32 3
	%7353 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %7352, i64 0, i32 0
	store i1* %7272, i1** %7353
	%7354 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %7352, i64 0, i32 1
	store i64 10, i64* %7354
	%7355 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %7261, i64 0, i32 2 ; UnionTagPtr
	store i8 16, i8* %7355
	%7356 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 276
	%7357 = getelementptr inbounds %Type_Info, %Type_Info* %7356, i64 0, i32 2
	%7358 = getelementptr inbounds %Type_Info, %Type_Info* %7356, i64 0, i32 0
	store i64 36, i64* %7358
	%7359 = getelementptr inbounds %Type_Info, %Type_Info* %7356, i64 0, i32 1
	store i64 4, i64* %7359
	; TypeInfoNamed
	%7360 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %7357 to %Type_Info_Named*
	%7361 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 277
	%7362 = bitcast %Type_Info* %7361 to %Type_Info*
	%7363 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %7360, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$659, i64 0, i32 0), i64 19}, %..string* %7363
	%7364 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %7360, i64 0, i32 1
	store %Type_Info* %7362, %Type_Info** %7364
	%7365 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %7357, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %7365
	%7366 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 277
	%7367 = getelementptr inbounds %Type_Info, %Type_Info* %7366, i64 0, i32 2
	%7368 = getelementptr inbounds %Type_Info, %Type_Info* %7366, i64 0, i32 0
	store i64 36, i64* %7368
	%7369 = getelementptr inbounds %Type_Info, %Type_Info* %7366, i64 0, i32 1
	store i64 4, i64* %7369
	; TypeInfoStruct
	%7370 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %7367 to %Type_Info_Struct*
	%7371 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %7370, i64 0, i32 4
	store i1 false, i1* %7371
	%7372 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %7370, i64 0, i32 5
	store i1 true, i1* %7372
	%7373 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %7370, i64 0, i32 6
	store i1 false, i1* %7373
	%7374 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %7370, i64 0, i32 7
	store i1 false, i1* %7374
	%7375 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 317
	%7376 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 281
	%7377 = getelementptr inbounds [450 x i64], [450 x i64]* @__$type_info_offsets_data, i64 0, i32 207
	%7378 = getelementptr inbounds [450 x i1], [450 x i1]* @__$type_info_usings_data, i64 0, i32 207
	%7379 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	%7380 = bitcast %Type_Info* %7379 to %Type_Info*
	%7381 = getelementptr inbounds %Type_Info*, %Type_Info** %7375, i64 0
	%7382 = getelementptr inbounds i64, i64* %7377, i64 0
	%7383 = getelementptr inbounds i1, i1* %7378, i64 0
	%7384 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	store %Type_Info* %7384, %Type_Info** %7381
	%7385 = getelementptr inbounds %..string, %..string* %7376, i64 0
	store %..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$65a, i64 0, i32 0), i64 15}, %..string* %7385
	store i64 0, i64* %7382
	store i1 false, i1* %7383
	%7386 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 270
	%7387 = bitcast %Type_Info* %7386 to %Type_Info*
	%7388 = getelementptr inbounds %Type_Info*, %Type_Info** %7375, i64 1
	%7389 = getelementptr inbounds i64, i64* %7377, i64 1
	%7390 = getelementptr inbounds i1, i1* %7378, i64 1
	%7391 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 270
	store %Type_Info* %7391, %Type_Info** %7388
	%7392 = getelementptr inbounds %..string, %..string* %7376, i64 1
	store %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$65b, i64 0, i32 0), i64 13}, %..string* %7392
	store i64 4, i64* %7389
	store i1 false, i1* %7390
	%7393 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 270
	%7394 = bitcast %Type_Info* %7393 to %Type_Info*
	%7395 = getelementptr inbounds %Type_Info*, %Type_Info** %7375, i64 2
	%7396 = getelementptr inbounds i64, i64* %7377, i64 2
	%7397 = getelementptr inbounds i1, i1* %7378, i64 2
	%7398 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 270
	store %Type_Info* %7398, %Type_Info** %7395
	%7399 = getelementptr inbounds %..string, %..string* %7376, i64 2
	store %..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$65c, i64 0, i32 0), i64 16}, %..string* %7399
	store i64 12, i64* %7396
	store i1 false, i1* %7397
	%7400 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 270
	%7401 = bitcast %Type_Info* %7400 to %Type_Info*
	%7402 = getelementptr inbounds %Type_Info*, %Type_Info** %7375, i64 3
	%7403 = getelementptr inbounds i64, i64* %7377, i64 3
	%7404 = getelementptr inbounds i1, i1* %7378, i64 3
	%7405 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 270
	store %Type_Info* %7405, %Type_Info** %7402
	%7406 = getelementptr inbounds %..string, %..string* %7376, i64 3
	store %..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$65d, i64 0, i32 0), i64 15}, %..string* %7406
	store i64 20, i64* %7403
	store i1 false, i1* %7404
	%7407 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	%7408 = bitcast %Type_Info* %7407 to %Type_Info*
	%7409 = getelementptr inbounds %Type_Info*, %Type_Info** %7375, i64 4
	%7410 = getelementptr inbounds i64, i64* %7377, i64 4
	%7411 = getelementptr inbounds i1, i1* %7378, i64 4
	%7412 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	store %Type_Info* %7412, %Type_Info** %7409
	%7413 = getelementptr inbounds %..string, %..string* %7376, i64 4
	store %..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$65e, i64 0, i32 0), i64 14}, %..string* %7413
	store i64 28, i64* %7410
	store i1 false, i1* %7411
	%7414 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	%7415 = bitcast %Type_Info* %7414 to %Type_Info*
	%7416 = getelementptr inbounds %Type_Info*, %Type_Info** %7375, i64 5
	%7417 = getelementptr inbounds i64, i64* %7377, i64 5
	%7418 = getelementptr inbounds i1, i1* %7378, i64 5
	%7419 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	store %Type_Info* %7419, %Type_Info** %7416
	%7420 = getelementptr inbounds %..string, %..string* %7376, i64 5
	store %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$65f, i64 0, i32 0), i64 13}, %..string* %7420
	store i64 32, i64* %7417
	store i1 false, i1* %7418
	%7421 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %7370, i64 0, i32 0
	%7422 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %7421, i64 0, i32 0
	store %Type_Info** %7375, %Type_Info*** %7422
	%7423 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %7421, i64 0, i32 1
	store i64 6, i64* %7423
	%7424 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %7370, i64 0, i32 1
	%7425 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %7424, i64 0, i32 0
	store %..string* %7376, %..string** %7425
	%7426 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %7424, i64 0, i32 1
	store i64 6, i64* %7426
	%7427 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %7370, i64 0, i32 2
	%7428 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %7427, i64 0, i32 0
	store i64* %7377, i64** %7428
	%7429 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %7427, i64 0, i32 1
	store i64 6, i64* %7429
	%7430 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %7370, i64 0, i32 3
	%7431 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %7430, i64 0, i32 0
	store i1* %7378, i1** %7431
	%7432 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %7430, i64 0, i32 1
	store i64 6, i64* %7432
	%7433 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %7367, i64 0, i32 2 ; UnionTagPtr
	store i8 16, i8* %7433
	%7434 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 278
	%7435 = getelementptr inbounds %Type_Info, %Type_Info* %7434, i64 0, i32 2
	%7436 = getelementptr inbounds %Type_Info, %Type_Info* %7434, i64 0, i32 0
	store i64 320, i64* %7436
	%7437 = getelementptr inbounds %Type_Info, %Type_Info* %7434, i64 0, i32 1
	store i64 4, i64* %7437
	; TypeInfoNamed
	%7438 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %7435 to %Type_Info_Named*
	%7439 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 279
	%7440 = bitcast %Type_Info* %7439 to %Type_Info*
	%7441 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %7438, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$660, i64 0, i32 0), i64 9}, %..string* %7441
	%7442 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %7438, i64 0, i32 1
	store %Type_Info* %7440, %Type_Info** %7442
	%7443 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %7435, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %7443
	%7444 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 279
	%7445 = getelementptr inbounds %Type_Info, %Type_Info* %7444, i64 0, i32 2
	%7446 = getelementptr inbounds %Type_Info, %Type_Info* %7444, i64 0, i32 0
	store i64 320, i64* %7446
	%7447 = getelementptr inbounds %Type_Info, %Type_Info* %7444, i64 0, i32 1
	store i64 4, i64* %7447
	; TypeInfoStruct
	%7448 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %7445 to %Type_Info_Struct*
	%7449 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %7448, i64 0, i32 4
	store i1 false, i1* %7449
	%7450 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %7448, i64 0, i32 5
	store i1 true, i1* %7450
	%7451 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %7448, i64 0, i32 6
	store i1 false, i1* %7451
	%7452 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %7448, i64 0, i32 7
	store i1 false, i1* %7452
	%7453 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 323
	%7454 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 287
	%7455 = getelementptr inbounds [450 x i64], [450 x i64]* @__$type_info_offsets_data, i64 0, i32 213
	%7456 = getelementptr inbounds [450 x i1], [450 x i1]* @__$type_info_usings_data, i64 0, i32 213
	%7457 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	%7458 = bitcast %Type_Info* %7457 to %Type_Info*
	%7459 = getelementptr inbounds %Type_Info*, %Type_Info** %7453, i64 0
	%7460 = getelementptr inbounds i64, i64* %7455, i64 0
	%7461 = getelementptr inbounds i1, i1* %7456, i64 0
	%7462 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	store %Type_Info* %7462, %Type_Info** %7459
	%7463 = getelementptr inbounds %..string, %..string* %7454, i64 0
	store %..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$661, i64 0, i32 0), i64 15}, %..string* %7463
	store i64 0, i64* %7460
	store i1 false, i1* %7461
	%7464 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 270
	%7465 = bitcast %Type_Info* %7464 to %Type_Info*
	%7466 = getelementptr inbounds %Type_Info*, %Type_Info** %7453, i64 1
	%7467 = getelementptr inbounds i64, i64* %7455, i64 1
	%7468 = getelementptr inbounds i1, i1* %7456, i64 1
	%7469 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 270
	store %Type_Info* %7469, %Type_Info** %7466
	%7470 = getelementptr inbounds %..string, %..string* %7454, i64 1
	store %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$662, i64 0, i32 0), i64 13}, %..string* %7470
	store i64 4, i64* %7467
	store i1 false, i1* %7468
	%7471 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 270
	%7472 = bitcast %Type_Info* %7471 to %Type_Info*
	%7473 = getelementptr inbounds %Type_Info*, %Type_Info** %7453, i64 2
	%7474 = getelementptr inbounds i64, i64* %7455, i64 2
	%7475 = getelementptr inbounds i1, i1* %7456, i64 2
	%7476 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 270
	store %Type_Info* %7476, %Type_Info** %7473
	%7477 = getelementptr inbounds %..string, %..string* %7454, i64 2
	store %..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$663, i64 0, i32 0), i64 16}, %..string* %7477
	store i64 12, i64* %7474
	store i1 false, i1* %7475
	%7478 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 270
	%7479 = bitcast %Type_Info* %7478 to %Type_Info*
	%7480 = getelementptr inbounds %Type_Info*, %Type_Info** %7453, i64 3
	%7481 = getelementptr inbounds i64, i64* %7455, i64 3
	%7482 = getelementptr inbounds i1, i1* %7456, i64 3
	%7483 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 270
	store %Type_Info* %7483, %Type_Info** %7480
	%7484 = getelementptr inbounds %..string, %..string* %7454, i64 3
	store %..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$664, i64 0, i32 0), i64 15}, %..string* %7484
	store i64 20, i64* %7481
	store i1 false, i1* %7482
	%7485 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	%7486 = bitcast %Type_Info* %7485 to %Type_Info*
	%7487 = getelementptr inbounds %Type_Info*, %Type_Info** %7453, i64 4
	%7488 = getelementptr inbounds i64, i64* %7455, i64 4
	%7489 = getelementptr inbounds i1, i1* %7456, i64 4
	%7490 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	store %Type_Info* %7490, %Type_Info** %7487
	%7491 = getelementptr inbounds %..string, %..string* %7454, i64 4
	store %..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$665, i64 0, i32 0), i64 14}, %..string* %7491
	store i64 28, i64* %7488
	store i1 false, i1* %7489
	%7492 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	%7493 = bitcast %Type_Info* %7492 to %Type_Info*
	%7494 = getelementptr inbounds %Type_Info*, %Type_Info** %7453, i64 5
	%7495 = getelementptr inbounds i64, i64* %7455, i64 5
	%7496 = getelementptr inbounds i1, i1* %7456, i64 5
	%7497 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	store %Type_Info* %7497, %Type_Info** %7494
	%7498 = getelementptr inbounds %..string, %..string* %7454, i64 5
	store %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$666, i64 0, i32 0), i64 13}, %..string* %7498
	store i64 32, i64* %7495
	store i1 false, i1* %7496
	%7499 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	%7500 = bitcast %Type_Info* %7499 to %Type_Info*
	%7501 = getelementptr inbounds %Type_Info*, %Type_Info** %7453, i64 6
	%7502 = getelementptr inbounds i64, i64* %7455, i64 6
	%7503 = getelementptr inbounds i1, i1* %7456, i64 6
	%7504 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	store %Type_Info* %7504, %Type_Info** %7501
	%7505 = getelementptr inbounds %..string, %..string* %7454, i64 6
	store %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$667, i64 0, i32 0), i64 9}, %..string* %7505
	store i64 36, i64* %7502
	store i1 false, i1* %7503
	%7506 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	%7507 = bitcast %Type_Info* %7506 to %Type_Info*
	%7508 = getelementptr inbounds %Type_Info*, %Type_Info** %7453, i64 7
	%7509 = getelementptr inbounds i64, i64* %7455, i64 7
	%7510 = getelementptr inbounds i1, i1* %7456, i64 7
	%7511 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	store %Type_Info* %7511, %Type_Info** %7508
	%7512 = getelementptr inbounds %..string, %..string* %7454, i64 7
	store %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$668, i64 0, i32 0), i64 9}, %..string* %7512
	store i64 40, i64* %7509
	store i1 false, i1* %7510
	%7513 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 280
	%7514 = bitcast %Type_Info* %7513 to %Type_Info*
	%7515 = getelementptr inbounds %Type_Info*, %Type_Info** %7453, i64 8
	%7516 = getelementptr inbounds i64, i64* %7455, i64 8
	%7517 = getelementptr inbounds i1, i1* %7456, i64 8
	%7518 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 280
	store %Type_Info* %7518, %Type_Info** %7515
	%7519 = getelementptr inbounds %..string, %..string* %7454, i64 8
	store %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$669, i64 0, i32 0), i64 9}, %..string* %7519
	store i64 44, i64* %7516
	store i1 false, i1* %7517
	%7520 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 281
	%7521 = bitcast %Type_Info* %7520 to %Type_Info*
	%7522 = getelementptr inbounds %Type_Info*, %Type_Info** %7453, i64 9
	%7523 = getelementptr inbounds i64, i64* %7455, i64 9
	%7524 = getelementptr inbounds i1, i1* %7456, i64 9
	%7525 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 281
	store %Type_Info* %7525, %Type_Info** %7522
	%7526 = getelementptr inbounds %..string, %..string* %7454, i64 9
	store %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$66a, i64 0, i32 0), i64 19}, %..string* %7526
	store i64 304, i64* %7523
	store i1 false, i1* %7524
	%7527 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %7448, i64 0, i32 0
	%7528 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %7527, i64 0, i32 0
	store %Type_Info** %7453, %Type_Info*** %7528
	%7529 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %7527, i64 0, i32 1
	store i64 10, i64* %7529
	%7530 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %7448, i64 0, i32 1
	%7531 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %7530, i64 0, i32 0
	store %..string* %7454, %..string** %7531
	%7532 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %7530, i64 0, i32 1
	store i64 10, i64* %7532
	%7533 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %7448, i64 0, i32 2
	%7534 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %7533, i64 0, i32 0
	store i64* %7455, i64** %7534
	%7535 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %7533, i64 0, i32 1
	store i64 10, i64* %7535
	%7536 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %7448, i64 0, i32 3
	%7537 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %7536, i64 0, i32 0
	store i1* %7456, i1** %7537
	%7538 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %7536, i64 0, i32 1
	store i64 10, i64* %7538
	%7539 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %7445, i64 0, i32 2 ; UnionTagPtr
	store i8 16, i8* %7539
	%7540 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 280
	%7541 = getelementptr inbounds %Type_Info, %Type_Info* %7540, i64 0, i32 2
	%7542 = getelementptr inbounds %Type_Info, %Type_Info* %7540, i64 0, i32 0
	store i64 260, i64* %7542
	%7543 = getelementptr inbounds %Type_Info, %Type_Info* %7540, i64 0, i32 1
	store i64 1, i64* %7543
	; TypeInfoArray
	%7544 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %7541 to %Type_Info_Array*
	%7545 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	%7546 = bitcast %Type_Info* %7545 to %Type_Info*
	%7547 = getelementptr inbounds %Type_Info_Array, %Type_Info_Array* %7544, i64 0, i32 0
	store %Type_Info* %7546, %Type_Info** %7547
	%7548 = getelementptr inbounds %Type_Info_Array, %Type_Info_Array* %7544, i64 0, i32 1
	store i64 1, i64* %7548
	%7549 = getelementptr inbounds %Type_Info_Array, %Type_Info_Array* %7544, i64 0, i32 2
	store i64 260, i64* %7549
	%7550 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %7541, i64 0, i32 2 ; UnionTagPtr
	store i8 11, i8* %7550
	%7551 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%7552 = getelementptr inbounds %Type_Info, %Type_Info* %7551, i64 0, i32 2
	%7553 = getelementptr inbounds %Type_Info, %Type_Info* %7551, i64 0, i32 0
	store i64 8, i64* %7553
	%7554 = getelementptr inbounds %Type_Info, %Type_Info* %7551, i64 0, i32 1
	store i64 8, i64* %7554
	; TypeInfoPointer
	%7555 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %7552 to %Type_Info_Pointer*
	%7556 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	%7557 = bitcast %Type_Info* %7556 to %Type_Info*
	%7558 = getelementptr inbounds %Type_Info_Pointer, %Type_Info_Pointer* %7555, i64 0, i32 0
	store %Type_Info* %7557, %Type_Info** %7558
	%7559 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %7552, i64 0, i32 2 ; UnionTagPtr
	store i8 9, i8* %7559
	%7560 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 281
	%7561 = getelementptr inbounds %Type_Info, %Type_Info* %7560, i64 0, i32 2
	%7562 = getelementptr inbounds %Type_Info, %Type_Info* %7560, i64 0, i32 0
	store i64 14, i64* %7562
	%7563 = getelementptr inbounds %Type_Info, %Type_Info* %7560, i64 0, i32 1
	store i64 1, i64* %7563
	; TypeInfoArray
	%7564 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %7561 to %Type_Info_Array*
	%7565 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	%7566 = bitcast %Type_Info* %7565 to %Type_Info*
	%7567 = getelementptr inbounds %Type_Info_Array, %Type_Info_Array* %7564, i64 0, i32 0
	store %Type_Info* %7566, %Type_Info** %7567
	%7568 = getelementptr inbounds %Type_Info_Array, %Type_Info_Array* %7564, i64 0, i32 1
	store i64 1, i64* %7568
	%7569 = getelementptr inbounds %Type_Info_Array, %Type_Info_Array* %7564, i64 0, i32 2
	store i64 14, i64* %7569
	%7570 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %7561, i64 0, i32 2 ; UnionTagPtr
	store i8 11, i8* %7570
	%7571 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%7572 = getelementptr inbounds %Type_Info, %Type_Info* %7571, i64 0, i32 2
	%7573 = getelementptr inbounds %Type_Info, %Type_Info* %7571, i64 0, i32 0
	store i64 8, i64* %7573
	%7574 = getelementptr inbounds %Type_Info, %Type_Info* %7571, i64 0, i32 1
	store i64 8, i64* %7574
	; TypeInfoPointer
	%7575 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %7572 to %Type_Info_Pointer*
	%7576 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	%7577 = bitcast %Type_Info* %7576 to %Type_Info*
	%7578 = getelementptr inbounds %Type_Info_Pointer, %Type_Info_Pointer* %7575, i64 0, i32 0
	store %Type_Info* %7577, %Type_Info** %7578
	%7579 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %7572, i64 0, i32 2 ; UnionTagPtr
	store i8 9, i8* %7579
	%7580 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 282
	%7581 = getelementptr inbounds %Type_Info, %Type_Info* %7580, i64 0, i32 2
	%7582 = getelementptr inbounds %Type_Info, %Type_Info* %7580, i64 0, i32 0
	store i64 24, i64* %7582
	%7583 = getelementptr inbounds %Type_Info, %Type_Info* %7580, i64 0, i32 1
	store i64 8, i64* %7583
	; TypeInfoNamed
	%7584 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %7581 to %Type_Info_Named*
	%7585 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 283
	%7586 = bitcast %Type_Info* %7585 to %Type_Info*
	%7587 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %7584, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$66b, i64 0, i32 0), i64 19}, %..string* %7587
	%7588 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %7584, i64 0, i32 1
	store %Type_Info* %7586, %Type_Info** %7588
	%7589 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %7581, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %7589
	%7590 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 283
	%7591 = getelementptr inbounds %Type_Info, %Type_Info* %7590, i64 0, i32 2
	%7592 = getelementptr inbounds %Type_Info, %Type_Info* %7590, i64 0, i32 0
	store i64 24, i64* %7592
	%7593 = getelementptr inbounds %Type_Info, %Type_Info* %7590, i64 0, i32 1
	store i64 8, i64* %7593
	; TypeInfoStruct
	%7594 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %7591 to %Type_Info_Struct*
	%7595 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %7594, i64 0, i32 4
	store i1 false, i1* %7595
	%7596 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %7594, i64 0, i32 5
	store i1 true, i1* %7596
	%7597 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %7594, i64 0, i32 6
	store i1 false, i1* %7597
	%7598 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %7594, i64 0, i32 7
	store i1 false, i1* %7598
	%7599 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 333
	%7600 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 297
	%7601 = getelementptr inbounds [450 x i64], [450 x i64]* @__$type_info_offsets_data, i64 0, i32 223
	%7602 = getelementptr inbounds [450 x i1], [450 x i1]* @__$type_info_usings_data, i64 0, i32 223
	%7603 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	%7604 = bitcast %Type_Info* %7603 to %Type_Info*
	%7605 = getelementptr inbounds %Type_Info*, %Type_Info** %7599, i64 0
	%7606 = getelementptr inbounds i64, i64* %7601, i64 0
	%7607 = getelementptr inbounds i1, i1* %7602, i64 0
	%7608 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	store %Type_Info* %7608, %Type_Info** %7605
	%7609 = getelementptr inbounds %..string, %..string* %7600, i64 0
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$66c, i64 0, i32 0), i64 6}, %..string* %7609
	store i64 0, i64* %7606
	store i1 false, i1* %7607
	%7610 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 76
	%7611 = bitcast %Type_Info* %7610 to %Type_Info*
	%7612 = getelementptr inbounds %Type_Info*, %Type_Info** %7599, i64 1
	%7613 = getelementptr inbounds i64, i64* %7601, i64 1
	%7614 = getelementptr inbounds i1, i1* %7602, i64 1
	%7615 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 76
	store %Type_Info* %7615, %Type_Info** %7612
	%7616 = getelementptr inbounds %..string, %..string* %7600, i64 1
	store %..string {i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__str$66d, i64 0, i32 0), i64 19}, %..string* %7616
	store i64 8, i64* %7613
	store i1 false, i1* %7614
	%7617 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 259
	%7618 = bitcast %Type_Info* %7617 to %Type_Info*
	%7619 = getelementptr inbounds %Type_Info*, %Type_Info** %7599, i64 2
	%7620 = getelementptr inbounds i64, i64* %7601, i64 2
	%7621 = getelementptr inbounds i1, i1* %7602, i64 2
	%7622 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 259
	store %Type_Info* %7622, %Type_Info** %7619
	%7623 = getelementptr inbounds %..string, %..string* %7600, i64 2
	store %..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$66e, i64 0, i32 0), i64 14}, %..string* %7623
	store i64 16, i64* %7620
	store i1 false, i1* %7621
	%7624 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %7594, i64 0, i32 0
	%7625 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %7624, i64 0, i32 0
	store %Type_Info** %7599, %Type_Info*** %7625
	%7626 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %7624, i64 0, i32 1
	store i64 3, i64* %7626
	%7627 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %7594, i64 0, i32 1
	%7628 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %7627, i64 0, i32 0
	store %..string* %7600, %..string** %7628
	%7629 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %7627, i64 0, i32 1
	store i64 3, i64* %7629
	%7630 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %7594, i64 0, i32 2
	%7631 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %7630, i64 0, i32 0
	store i64* %7601, i64** %7631
	%7632 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %7630, i64 0, i32 1
	store i64 3, i64* %7632
	%7633 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %7594, i64 0, i32 3
	%7634 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %7633, i64 0, i32 0
	store i1* %7602, i1** %7634
	%7635 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %7633, i64 0, i32 1
	store i64 3, i64* %7635
	%7636 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %7591, i64 0, i32 2 ; UnionTagPtr
	store i8 16, i8* %7636
	%7637 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 284
	%7638 = getelementptr inbounds %Type_Info, %Type_Info* %7637, i64 0, i32 2
	%7639 = getelementptr inbounds %Type_Info, %Type_Info* %7637, i64 0, i32 0
	store i64 44, i64* %7639
	%7640 = getelementptr inbounds %Type_Info, %Type_Info* %7637, i64 0, i32 1
	store i64 4, i64* %7640
	; TypeInfoNamed
	%7641 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %7638 to %Type_Info_Named*
	%7642 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 285
	%7643 = bitcast %Type_Info* %7642 to %Type_Info*
	%7644 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %7641, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__str$66f, i64 0, i32 0), i64 23}, %..string* %7644
	%7645 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %7641, i64 0, i32 1
	store %Type_Info* %7643, %Type_Info** %7645
	%7646 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %7638, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %7646
	%7647 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 285
	%7648 = getelementptr inbounds %Type_Info, %Type_Info* %7647, i64 0, i32 2
	%7649 = getelementptr inbounds %Type_Info, %Type_Info* %7647, i64 0, i32 0
	store i64 44, i64* %7649
	%7650 = getelementptr inbounds %Type_Info, %Type_Info* %7647, i64 0, i32 1
	store i64 4, i64* %7650
	; TypeInfoStruct
	%7651 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %7648 to %Type_Info_Struct*
	%7652 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %7651, i64 0, i32 4
	store i1 false, i1* %7652
	%7653 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %7651, i64 0, i32 5
	store i1 true, i1* %7653
	%7654 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %7651, i64 0, i32 6
	store i1 false, i1* %7654
	%7655 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %7651, i64 0, i32 7
	store i1 false, i1* %7655
	%7656 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 336
	%7657 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 300
	%7658 = getelementptr inbounds [450 x i64], [450 x i64]* @__$type_info_offsets_data, i64 0, i32 226
	%7659 = getelementptr inbounds [450 x i1], [450 x i1]* @__$type_info_usings_data, i64 0, i32 226
	%7660 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	%7661 = bitcast %Type_Info* %7660 to %Type_Info*
	%7662 = getelementptr inbounds %Type_Info*, %Type_Info** %7656, i64 0
	%7663 = getelementptr inbounds i64, i64* %7658, i64 0
	%7664 = getelementptr inbounds i1, i1* %7659, i64 0
	%7665 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	store %Type_Info* %7665, %Type_Info** %7662
	%7666 = getelementptr inbounds %..string, %..string* %7657, i64 0
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$670, i64 0, i32 0), i64 4}, %..string* %7666
	store i64 0, i64* %7663
	store i1 false, i1* %7664
	%7667 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	%7668 = bitcast %Type_Info* %7667 to %Type_Info*
	%7669 = getelementptr inbounds %Type_Info*, %Type_Info** %7656, i64 1
	%7670 = getelementptr inbounds i64, i64* %7658, i64 1
	%7671 = getelementptr inbounds i1, i1* %7659, i64 1
	%7672 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	store %Type_Info* %7672, %Type_Info** %7669
	%7673 = getelementptr inbounds %..string, %..string* %7657, i64 1
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$671, i64 0, i32 0), i64 7}, %..string* %7673
	store i64 4, i64* %7670
	store i1 false, i1* %7671
	%7674 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	%7675 = bitcast %Type_Info* %7674 to %Type_Info*
	%7676 = getelementptr inbounds %Type_Info*, %Type_Info** %7656, i64 2
	%7677 = getelementptr inbounds i64, i64* %7658, i64 2
	%7678 = getelementptr inbounds i1, i1* %7659, i64 2
	%7679 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	store %Type_Info* %7679, %Type_Info** %7676
	%7680 = getelementptr inbounds %..string, %..string* %7657, i64 2
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$672, i64 0, i32 0), i64 5}, %..string* %7680
	store i64 8, i64* %7677
	store i1 false, i1* %7678
	%7681 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	%7682 = bitcast %Type_Info* %7681 to %Type_Info*
	%7683 = getelementptr inbounds %Type_Info*, %Type_Info** %7656, i64 3
	%7684 = getelementptr inbounds i64, i64* %7658, i64 3
	%7685 = getelementptr inbounds i1, i1* %7659, i64 3
	%7686 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	store %Type_Info* %7686, %Type_Info** %7683
	%7687 = getelementptr inbounds %..string, %..string* %7657, i64 3
	store %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$673, i64 0, i32 0), i64 10}, %..string* %7687
	store i64 12, i64* %7684
	store i1 false, i1* %7685
	%7688 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	%7689 = bitcast %Type_Info* %7688 to %Type_Info*
	%7690 = getelementptr inbounds %Type_Info*, %Type_Info** %7656, i64 4
	%7691 = getelementptr inbounds i64, i64* %7658, i64 4
	%7692 = getelementptr inbounds i1, i1* %7659, i64 4
	%7693 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	store %Type_Info* %7693, %Type_Info** %7690
	%7694 = getelementptr inbounds %..string, %..string* %7657, i64 4
	store %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$674, i64 0, i32 0), i64 10}, %..string* %7694
	store i64 13, i64* %7691
	store i1 false, i1* %7692
	%7695 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	%7696 = bitcast %Type_Info* %7695 to %Type_Info*
	%7697 = getelementptr inbounds %Type_Info*, %Type_Info** %7656, i64 5
	%7698 = getelementptr inbounds i64, i64* %7658, i64 5
	%7699 = getelementptr inbounds i1, i1* %7659, i64 5
	%7700 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	store %Type_Info* %7700, %Type_Info** %7697
	%7701 = getelementptr inbounds %..string, %..string* %7657, i64 5
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$675, i64 0, i32 0), i64 8}, %..string* %7701
	store i64 14, i64* %7698
	store i1 false, i1* %7699
	%7702 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	%7703 = bitcast %Type_Info* %7702 to %Type_Info*
	%7704 = getelementptr inbounds %Type_Info*, %Type_Info** %7656, i64 6
	%7705 = getelementptr inbounds i64, i64* %7658, i64 6
	%7706 = getelementptr inbounds i1, i1* %7659, i64 6
	%7707 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	store %Type_Info* %7707, %Type_Info** %7704
	%7708 = getelementptr inbounds %..string, %..string* %7657, i64 6
	store %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$676, i64 0, i32 0), i64 9}, %..string* %7708
	store i64 15, i64* %7705
	store i1 false, i1* %7706
	%7709 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	%7710 = bitcast %Type_Info* %7709 to %Type_Info*
	%7711 = getelementptr inbounds %Type_Info*, %Type_Info** %7656, i64 7
	%7712 = getelementptr inbounds i64, i64* %7658, i64 7
	%7713 = getelementptr inbounds i1, i1* %7659, i64 7
	%7714 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	store %Type_Info* %7714, %Type_Info** %7711
	%7715 = getelementptr inbounds %..string, %..string* %7657, i64 7
	store %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$677, i64 0, i32 0), i64 10}, %..string* %7715
	store i64 16, i64* %7712
	store i1 false, i1* %7713
	%7716 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	%7717 = bitcast %Type_Info* %7716 to %Type_Info*
	%7718 = getelementptr inbounds %Type_Info*, %Type_Info** %7656, i64 8
	%7719 = getelementptr inbounds i64, i64* %7658, i64 8
	%7720 = getelementptr inbounds i1, i1* %7659, i64 8
	%7721 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	store %Type_Info* %7721, %Type_Info** %7718
	%7722 = getelementptr inbounds %..string, %..string* %7657, i64 8
	store %..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$678, i64 0, i32 0), i64 11}, %..string* %7722
	store i64 17, i64* %7719
	store i1 false, i1* %7720
	%7723 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	%7724 = bitcast %Type_Info* %7723 to %Type_Info*
	%7725 = getelementptr inbounds %Type_Info*, %Type_Info** %7656, i64 9
	%7726 = getelementptr inbounds i64, i64* %7658, i64 9
	%7727 = getelementptr inbounds i1, i1* %7659, i64 9
	%7728 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	store %Type_Info* %7728, %Type_Info** %7725
	%7729 = getelementptr inbounds %..string, %..string* %7657, i64 9
	store %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$679, i64 0, i32 0), i64 9}, %..string* %7729
	store i64 18, i64* %7726
	store i1 false, i1* %7727
	%7730 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	%7731 = bitcast %Type_Info* %7730 to %Type_Info*
	%7732 = getelementptr inbounds %Type_Info*, %Type_Info** %7656, i64 10
	%7733 = getelementptr inbounds i64, i64* %7658, i64 10
	%7734 = getelementptr inbounds i1, i1* %7659, i64 10
	%7735 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	store %Type_Info* %7735, %Type_Info** %7732
	%7736 = getelementptr inbounds %..string, %..string* %7657, i64 10
	store %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$67a, i64 0, i32 0), i64 10}, %..string* %7736
	store i64 19, i64* %7733
	store i1 false, i1* %7734
	%7737 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	%7738 = bitcast %Type_Info* %7737 to %Type_Info*
	%7739 = getelementptr inbounds %Type_Info*, %Type_Info** %7656, i64 11
	%7740 = getelementptr inbounds i64, i64* %7658, i64 11
	%7741 = getelementptr inbounds i1, i1* %7659, i64 11
	%7742 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	store %Type_Info* %7742, %Type_Info** %7739
	%7743 = getelementptr inbounds %..string, %..string* %7657, i64 11
	store %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$67b, i64 0, i32 0), i64 10}, %..string* %7743
	store i64 20, i64* %7740
	store i1 false, i1* %7741
	%7744 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	%7745 = bitcast %Type_Info* %7744 to %Type_Info*
	%7746 = getelementptr inbounds %Type_Info*, %Type_Info** %7656, i64 12
	%7747 = getelementptr inbounds i64, i64* %7658, i64 12
	%7748 = getelementptr inbounds i1, i1* %7659, i64 12
	%7749 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	store %Type_Info* %7749, %Type_Info** %7746
	%7750 = getelementptr inbounds %..string, %..string* %7657, i64 12
	store %..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$67c, i64 0, i32 0), i64 11}, %..string* %7750
	store i64 21, i64* %7747
	store i1 false, i1* %7748
	%7751 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	%7752 = bitcast %Type_Info* %7751 to %Type_Info*
	%7753 = getelementptr inbounds %Type_Info*, %Type_Info** %7656, i64 13
	%7754 = getelementptr inbounds i64, i64* %7658, i64 13
	%7755 = getelementptr inbounds i1, i1* %7659, i64 13
	%7756 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	store %Type_Info* %7756, %Type_Info** %7753
	%7757 = getelementptr inbounds %..string, %..string* %7657, i64 13
	store %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$67d, i64 0, i32 0), i64 10}, %..string* %7757
	store i64 22, i64* %7754
	store i1 false, i1* %7755
	%7758 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	%7759 = bitcast %Type_Info* %7758 to %Type_Info*
	%7760 = getelementptr inbounds %Type_Info*, %Type_Info** %7656, i64 14
	%7761 = getelementptr inbounds i64, i64* %7658, i64 14
	%7762 = getelementptr inbounds i1, i1* %7659, i64 14
	%7763 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	store %Type_Info* %7763, %Type_Info** %7760
	%7764 = getelementptr inbounds %..string, %..string* %7657, i64 14
	store %..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$67e, i64 0, i32 0), i64 14}, %..string* %7764
	store i64 23, i64* %7761
	store i1 false, i1* %7762
	%7765 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	%7766 = bitcast %Type_Info* %7765 to %Type_Info*
	%7767 = getelementptr inbounds %Type_Info*, %Type_Info** %7656, i64 15
	%7768 = getelementptr inbounds i64, i64* %7658, i64 15
	%7769 = getelementptr inbounds i1, i1* %7659, i64 15
	%7770 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	store %Type_Info* %7770, %Type_Info** %7767
	%7771 = getelementptr inbounds %..string, %..string* %7657, i64 15
	store %..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$67f, i64 0, i32 0), i64 16}, %..string* %7771
	store i64 24, i64* %7768
	store i1 false, i1* %7769
	%7772 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	%7773 = bitcast %Type_Info* %7772 to %Type_Info*
	%7774 = getelementptr inbounds %Type_Info*, %Type_Info** %7656, i64 16
	%7775 = getelementptr inbounds i64, i64* %7658, i64 16
	%7776 = getelementptr inbounds i1, i1* %7659, i64 16
	%7777 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	store %Type_Info* %7777, %Type_Info** %7774
	%7778 = getelementptr inbounds %..string, %..string* %7657, i64 16
	store %..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$680, i64 0, i32 0), i64 15}, %..string* %7778
	store i64 25, i64* %7775
	store i1 false, i1* %7776
	%7779 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	%7780 = bitcast %Type_Info* %7779 to %Type_Info*
	%7781 = getelementptr inbounds %Type_Info*, %Type_Info** %7656, i64 17
	%7782 = getelementptr inbounds i64, i64* %7658, i64 17
	%7783 = getelementptr inbounds i1, i1* %7659, i64 17
	%7784 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	store %Type_Info* %7784, %Type_Info** %7781
	%7785 = getelementptr inbounds %..string, %..string* %7657, i64 17
	store %..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$681, i64 0, i32 0), i64 16}, %..string* %7785
	store i64 26, i64* %7782
	store i1 false, i1* %7783
	%7786 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	%7787 = bitcast %Type_Info* %7786 to %Type_Info*
	%7788 = getelementptr inbounds %Type_Info*, %Type_Info** %7656, i64 18
	%7789 = getelementptr inbounds i64, i64* %7658, i64 18
	%7790 = getelementptr inbounds i1, i1* %7659, i64 18
	%7791 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	store %Type_Info* %7791, %Type_Info** %7788
	%7792 = getelementptr inbounds %..string, %..string* %7657, i64 18
	store %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$682, i64 0, i32 0), i64 10}, %..string* %7792
	store i64 27, i64* %7789
	store i1 false, i1* %7790
	%7793 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	%7794 = bitcast %Type_Info* %7793 to %Type_Info*
	%7795 = getelementptr inbounds %Type_Info*, %Type_Info** %7656, i64 19
	%7796 = getelementptr inbounds i64, i64* %7658, i64 19
	%7797 = getelementptr inbounds i1, i1* %7659, i64 19
	%7798 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	store %Type_Info* %7798, %Type_Info** %7795
	%7799 = getelementptr inbounds %..string, %..string* %7657, i64 19
	store %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$683, i64 0, i32 0), i64 12}, %..string* %7799
	store i64 28, i64* %7796
	store i1 false, i1* %7797
	%7800 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	%7801 = bitcast %Type_Info* %7800 to %Type_Info*
	%7802 = getelementptr inbounds %Type_Info*, %Type_Info** %7656, i64 20
	%7803 = getelementptr inbounds i64, i64* %7658, i64 20
	%7804 = getelementptr inbounds i1, i1* %7659, i64 20
	%7805 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	store %Type_Info* %7805, %Type_Info** %7802
	%7806 = getelementptr inbounds %..string, %..string* %7657, i64 20
	store %..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$684, i64 0, i32 0), i64 11}, %..string* %7806
	store i64 29, i64* %7803
	store i1 false, i1* %7804
	%7807 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	%7808 = bitcast %Type_Info* %7807 to %Type_Info*
	%7809 = getelementptr inbounds %Type_Info*, %Type_Info** %7656, i64 21
	%7810 = getelementptr inbounds i64, i64* %7658, i64 21
	%7811 = getelementptr inbounds i1, i1* %7659, i64 21
	%7812 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	store %Type_Info* %7812, %Type_Info** %7809
	%7813 = getelementptr inbounds %..string, %..string* %7657, i64 21
	store %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$685, i64 0, i32 0), i64 10}, %..string* %7813
	store i64 30, i64* %7810
	store i1 false, i1* %7811
	%7814 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	%7815 = bitcast %Type_Info* %7814 to %Type_Info*
	%7816 = getelementptr inbounds %Type_Info*, %Type_Info** %7656, i64 22
	%7817 = getelementptr inbounds i64, i64* %7658, i64 22
	%7818 = getelementptr inbounds i1, i1* %7659, i64 22
	%7819 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	store %Type_Info* %7819, %Type_Info** %7816
	%7820 = getelementptr inbounds %..string, %..string* %7657, i64 22
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$686, i64 0, i32 0), i64 8}, %..string* %7820
	store i64 31, i64* %7817
	store i1 false, i1* %7818
	%7821 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	%7822 = bitcast %Type_Info* %7821 to %Type_Info*
	%7823 = getelementptr inbounds %Type_Info*, %Type_Info** %7656, i64 23
	%7824 = getelementptr inbounds i64, i64* %7658, i64 23
	%7825 = getelementptr inbounds i1, i1* %7659, i64 23
	%7826 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	store %Type_Info* %7826, %Type_Info** %7823
	%7827 = getelementptr inbounds %..string, %..string* %7657, i64 23
	store %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$687, i64 0, i32 0), i64 10}, %..string* %7827
	store i64 32, i64* %7824
	store i1 false, i1* %7825
	%7828 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	%7829 = bitcast %Type_Info* %7828 to %Type_Info*
	%7830 = getelementptr inbounds %Type_Info*, %Type_Info** %7656, i64 24
	%7831 = getelementptr inbounds i64, i64* %7658, i64 24
	%7832 = getelementptr inbounds i1, i1* %7659, i64 24
	%7833 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	store %Type_Info* %7833, %Type_Info** %7830
	%7834 = getelementptr inbounds %..string, %..string* %7657, i64 24
	store %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$688, i64 0, i32 0), i64 12}, %..string* %7834
	store i64 36, i64* %7831
	store i1 false, i1* %7832
	%7835 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	%7836 = bitcast %Type_Info* %7835 to %Type_Info*
	%7837 = getelementptr inbounds %Type_Info*, %Type_Info** %7656, i64 25
	%7838 = getelementptr inbounds i64, i64* %7658, i64 25
	%7839 = getelementptr inbounds i1, i1* %7659, i64 25
	%7840 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	store %Type_Info* %7840, %Type_Info** %7837
	%7841 = getelementptr inbounds %..string, %..string* %7657, i64 25
	store %..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$689, i64 0, i32 0), i64 11}, %..string* %7841
	store i64 40, i64* %7838
	store i1 false, i1* %7839
	%7842 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %7651, i64 0, i32 0
	%7843 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %7842, i64 0, i32 0
	store %Type_Info** %7656, %Type_Info*** %7843
	%7844 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %7842, i64 0, i32 1
	store i64 26, i64* %7844
	%7845 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %7651, i64 0, i32 1
	%7846 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %7845, i64 0, i32 0
	store %..string* %7657, %..string** %7846
	%7847 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %7845, i64 0, i32 1
	store i64 26, i64* %7847
	%7848 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %7651, i64 0, i32 2
	%7849 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %7848, i64 0, i32 0
	store i64* %7658, i64** %7849
	%7850 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %7848, i64 0, i32 1
	store i64 26, i64* %7850
	%7851 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %7651, i64 0, i32 3
	%7852 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %7851, i64 0, i32 0
	store i1* %7659, i1** %7852
	%7853 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %7851, i64 0, i32 1
	store i64 26, i64* %7853
	%7854 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %7648, i64 0, i32 2 ; UnionTagPtr
	store i8 16, i8* %7854
	%7855 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 286
	%7856 = getelementptr inbounds %Type_Info, %Type_Info* %7855, i64 0, i32 2
	%7857 = getelementptr inbounds %Type_Info, %Type_Info* %7855, i64 0, i32 0
	store i64 40, i64* %7857
	%7858 = getelementptr inbounds %Type_Info, %Type_Info* %7855, i64 0, i32 1
	store i64 8, i64* %7858
	; TypeInfoNamed
	%7859 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %7856 to %Type_Info_Named*
	%7860 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 287
	%7861 = bitcast %Type_Info* %7860 to %Type_Info*
	%7862 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %7859, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$68a, i64 0, i32 0), i64 16}, %..string* %7862
	%7863 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %7859, i64 0, i32 1
	store %Type_Info* %7861, %Type_Info** %7863
	%7864 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %7856, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %7864
	%7865 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 287
	%7866 = getelementptr inbounds %Type_Info, %Type_Info* %7865, i64 0, i32 2
	%7867 = getelementptr inbounds %Type_Info, %Type_Info* %7865, i64 0, i32 0
	store i64 40, i64* %7867
	%7868 = getelementptr inbounds %Type_Info, %Type_Info* %7865, i64 0, i32 1
	store i64 8, i64* %7868
	; TypeInfoStruct
	%7869 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %7866 to %Type_Info_Struct*
	%7870 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %7869, i64 0, i32 4
	store i1 false, i1* %7870
	%7871 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %7869, i64 0, i32 5
	store i1 true, i1* %7871
	%7872 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %7869, i64 0, i32 6
	store i1 false, i1* %7872
	%7873 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %7869, i64 0, i32 7
	store i1 false, i1* %7873
	%7874 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 362
	%7875 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 326
	%7876 = getelementptr inbounds [450 x i64], [450 x i64]* @__$type_info_offsets_data, i64 0, i32 252
	%7877 = getelementptr inbounds [450 x i1], [450 x i1]* @__$type_info_usings_data, i64 0, i32 252
	%7878 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 288
	%7879 = bitcast %Type_Info* %7878 to %Type_Info*
	%7880 = getelementptr inbounds %Type_Info*, %Type_Info** %7874, i64 0
	%7881 = getelementptr inbounds i64, i64* %7876, i64 0
	%7882 = getelementptr inbounds i1, i1* %7877, i64 0
	%7883 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 288
	store %Type_Info* %7883, %Type_Info** %7880
	%7884 = getelementptr inbounds %..string, %..string* %7875, i64 0
	store %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$68b, i64 0, i32 0), i64 10}, %..string* %7884
	store i64 0, i64* %7881
	store i1 false, i1* %7882
	%7885 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	%7886 = bitcast %Type_Info* %7885 to %Type_Info*
	%7887 = getelementptr inbounds %Type_Info*, %Type_Info** %7874, i64 1
	%7888 = getelementptr inbounds i64, i64* %7876, i64 1
	%7889 = getelementptr inbounds i1, i1* %7877, i64 1
	%7890 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	store %Type_Info* %7890, %Type_Info** %7887
	%7891 = getelementptr inbounds %..string, %..string* %7875, i64 1
	store %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$68c, i64 0, i32 0), i64 10}, %..string* %7891
	store i64 8, i64* %7888
	store i1 false, i1* %7889
	%7892 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	%7893 = bitcast %Type_Info* %7892 to %Type_Info*
	%7894 = getelementptr inbounds %Type_Info*, %Type_Info** %7874, i64 2
	%7895 = getelementptr inbounds i64, i64* %7876, i64 2
	%7896 = getelementptr inbounds i1, i1* %7877, i64 2
	%7897 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	store %Type_Info* %7897, %Type_Info** %7894
	%7898 = getelementptr inbounds %..string, %..string* %7875, i64 2
	store %..string {i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__str$68d, i64 0, i32 0), i64 15}, %..string* %7898
	store i64 12, i64* %7895
	store i1 false, i1* %7896
	%7899 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 238
	%7900 = bitcast %Type_Info* %7899 to %Type_Info*
	%7901 = getelementptr inbounds %Type_Info*, %Type_Info** %7874, i64 3
	%7902 = getelementptr inbounds i64, i64* %7876, i64 3
	%7903 = getelementptr inbounds i1, i1* %7877, i64 3
	%7904 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 238
	store %Type_Info* %7904, %Type_Info** %7901
	%7905 = getelementptr inbounds %..string, %..string* %7875, i64 3
	store %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$68e, i64 0, i32 0), i64 13}, %..string* %7905
	store i64 16, i64* %7902
	store i1 false, i1* %7903
	%7906 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 238
	%7907 = bitcast %Type_Info* %7906 to %Type_Info*
	%7908 = getelementptr inbounds %Type_Info*, %Type_Info** %7874, i64 4
	%7909 = getelementptr inbounds i64, i64* %7876, i64 4
	%7910 = getelementptr inbounds i1, i1* %7877, i64 4
	%7911 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 238
	store %Type_Info* %7911, %Type_Info** %7908
	%7912 = getelementptr inbounds %..string, %..string* %7875, i64 4
	store %..string {i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__str$68f, i64 0, i32 0), i64 14}, %..string* %7912
	store i64 24, i64* %7909
	store i1 false, i1* %7910
	%7913 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 295
	%7914 = bitcast %Type_Info* %7913 to %Type_Info*
	%7915 = getelementptr inbounds %Type_Info*, %Type_Info** %7874, i64 5
	%7916 = getelementptr inbounds i64, i64* %7876, i64 5
	%7917 = getelementptr inbounds i1, i1* %7877, i64 5
	%7918 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 295
	store %Type_Info* %7918, %Type_Info** %7915
	%7919 = getelementptr inbounds %..string, %..string* %7875, i64 5
	store %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$690, i64 0, i32 0), i64 10}, %..string* %7919
	store i64 32, i64* %7916
	store i1 false, i1* %7917
	%7920 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %7869, i64 0, i32 0
	%7921 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %7920, i64 0, i32 0
	store %Type_Info** %7874, %Type_Info*** %7921
	%7922 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %7920, i64 0, i32 1
	store i64 6, i64* %7922
	%7923 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %7869, i64 0, i32 1
	%7924 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %7923, i64 0, i32 0
	store %..string* %7875, %..string** %7924
	%7925 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %7923, i64 0, i32 1
	store i64 6, i64* %7925
	%7926 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %7869, i64 0, i32 2
	%7927 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %7926, i64 0, i32 0
	store i64* %7876, i64** %7927
	%7928 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %7926, i64 0, i32 1
	store i64 6, i64* %7928
	%7929 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %7869, i64 0, i32 3
	%7930 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %7929, i64 0, i32 0
	store i1* %7877, i1** %7930
	%7931 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %7929, i64 0, i32 1
	store i64 6, i64* %7931
	%7932 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %7866, i64 0, i32 2 ; UnionTagPtr
	store i8 16, i8* %7932
	%7933 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 288
	%7934 = getelementptr inbounds %Type_Info, %Type_Info* %7933, i64 0, i32 2
	%7935 = getelementptr inbounds %Type_Info, %Type_Info* %7933, i64 0, i32 0
	store i64 8, i64* %7935
	%7936 = getelementptr inbounds %Type_Info, %Type_Info* %7933, i64 0, i32 1
	store i64 8, i64* %7936
	; TypeInfoPointer
	%7937 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %7934 to %Type_Info_Pointer*
	%7938 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 289
	%7939 = bitcast %Type_Info* %7938 to %Type_Info*
	%7940 = getelementptr inbounds %Type_Info_Pointer, %Type_Info_Pointer* %7937, i64 0, i32 0
	store %Type_Info* %7939, %Type_Info** %7940
	%7941 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %7934, i64 0, i32 2 ; UnionTagPtr
	store i8 9, i8* %7941
	%7942 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 289
	%7943 = getelementptr inbounds %Type_Info, %Type_Info* %7942, i64 0, i32 2
	%7944 = getelementptr inbounds %Type_Info, %Type_Info* %7942, i64 0, i32 0
	store i64 40, i64* %7944
	%7945 = getelementptr inbounds %Type_Info, %Type_Info* %7942, i64 0, i32 1
	store i64 8, i64* %7945
	; TypeInfoNamed
	%7946 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %7943 to %Type_Info_Named*
	%7947 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 290
	%7948 = bitcast %Type_Info* %7947 to %Type_Info*
	%7949 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %7946, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__str$691, i64 0, i32 0), i64 22}, %..string* %7949
	%7950 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %7946, i64 0, i32 1
	store %Type_Info* %7948, %Type_Info** %7950
	%7951 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %7943, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %7951
	%7952 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 290
	%7953 = getelementptr inbounds %Type_Info, %Type_Info* %7952, i64 0, i32 2
	%7954 = getelementptr inbounds %Type_Info, %Type_Info* %7952, i64 0, i32 0
	store i64 40, i64* %7954
	%7955 = getelementptr inbounds %Type_Info, %Type_Info* %7952, i64 0, i32 1
	store i64 8, i64* %7955
	; TypeInfoStruct
	%7956 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %7953 to %Type_Info_Struct*
	%7957 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %7956, i64 0, i32 4
	store i1 false, i1* %7957
	%7958 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %7956, i64 0, i32 5
	store i1 true, i1* %7958
	%7959 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %7956, i64 0, i32 6
	store i1 false, i1* %7959
	%7960 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %7956, i64 0, i32 7
	store i1 false, i1* %7960
	%7961 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 368
	%7962 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 332
	%7963 = getelementptr inbounds [450 x i64], [450 x i64]* @__$type_info_offsets_data, i64 0, i32 258
	%7964 = getelementptr inbounds [450 x i1], [450 x i1]* @__$type_info_usings_data, i64 0, i32 258
	%7965 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 59
	%7966 = bitcast %Type_Info* %7965 to %Type_Info*
	%7967 = getelementptr inbounds %Type_Info*, %Type_Info** %7961, i64 0
	%7968 = getelementptr inbounds i64, i64* %7963, i64 0
	%7969 = getelementptr inbounds i1, i1* %7964, i64 0
	%7970 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 59
	store %Type_Info* %7970, %Type_Info** %7967
	%7971 = getelementptr inbounds %..string, %..string* %7962, i64 0
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$692, i64 0, i32 0), i64 3}, %..string* %7971
	store i64 0, i64* %7968
	store i1 false, i1* %7969
	%7972 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 59
	%7973 = bitcast %Type_Info* %7972 to %Type_Info*
	%7974 = getelementptr inbounds %Type_Info*, %Type_Info** %7961, i64 1
	%7975 = getelementptr inbounds i64, i64* %7963, i64 1
	%7976 = getelementptr inbounds i1, i1* %7964, i64 1
	%7977 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 59
	store %Type_Info* %7977, %Type_Info** %7974
	%7978 = getelementptr inbounds %..string, %..string* %7962, i64 1
	store %..string {i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__str$693, i64 0, i32 0), i64 24}, %..string* %7978
	store i64 2, i64* %7975
	store i1 false, i1* %7976
	%7979 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 291
	%7980 = bitcast %Type_Info* %7979 to %Type_Info*
	%7981 = getelementptr inbounds %Type_Info*, %Type_Info** %7961, i64 2
	%7982 = getelementptr inbounds i64, i64* %7963, i64 2
	%7983 = getelementptr inbounds i1, i1* %7964, i64 2
	%7984 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 291
	store %Type_Info* %7984, %Type_Info** %7981
	%7985 = getelementptr inbounds %..string, %..string* %7962, i64 2
	store %..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$694, i64 0, i32 0), i64 16}, %..string* %7985
	store i64 8, i64* %7982
	store i1 false, i1* %7983
	%7986 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 292
	%7987 = bitcast %Type_Info* %7986 to %Type_Info*
	%7988 = getelementptr inbounds %Type_Info*, %Type_Info** %7961, i64 3
	%7989 = getelementptr inbounds i64, i64* %7963, i64 3
	%7990 = getelementptr inbounds i1, i1* %7964, i64 3
	%7991 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 292
	store %Type_Info* %7991, %Type_Info** %7988
	%7992 = getelementptr inbounds %..string, %..string* %7962, i64 3
	store %..string {i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__str$695, i64 0, i32 0), i64 18}, %..string* %7992
	store i64 16, i64* %7989
	store i1 false, i1* %7990
	%7993 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	%7994 = bitcast %Type_Info* %7993 to %Type_Info*
	%7995 = getelementptr inbounds %Type_Info*, %Type_Info** %7961, i64 4
	%7996 = getelementptr inbounds i64, i64* %7963, i64 4
	%7997 = getelementptr inbounds i1, i1* %7964, i64 4
	%7998 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	store %Type_Info* %7998, %Type_Info** %7995
	%7999 = getelementptr inbounds %..string, %..string* %7962, i64 4
	store %..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$696, i64 0, i32 0), i64 11}, %..string* %7999
	store i64 24, i64* %7996
	store i1 false, i1* %7997
	%8000 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	%8001 = bitcast %Type_Info* %8000 to %Type_Info*
	%8002 = getelementptr inbounds %Type_Info*, %Type_Info** %7961, i64 5
	%8003 = getelementptr inbounds i64, i64* %7963, i64 5
	%8004 = getelementptr inbounds i1, i1* %7964, i64 5
	%8005 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	store %Type_Info* %8005, %Type_Info** %8002
	%8006 = getelementptr inbounds %..string, %..string* %7962, i64 5
	store %..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$697, i64 0, i32 0), i64 16}, %..string* %8006
	store i64 28, i64* %8003
	store i1 false, i1* %8004
	%8007 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	%8008 = bitcast %Type_Info* %8007 to %Type_Info*
	%8009 = getelementptr inbounds %Type_Info*, %Type_Info** %7961, i64 6
	%8010 = getelementptr inbounds i64, i64* %7963, i64 6
	%8011 = getelementptr inbounds i1, i1* %7964, i64 6
	%8012 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	store %Type_Info* %8012, %Type_Info** %8009
	%8013 = getelementptr inbounds %..string, %..string* %7962, i64 6
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$698, i64 0, i32 0), i64 5}, %..string* %8013
	store i64 32, i64* %8010
	store i1 false, i1* %8011
	%8014 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 59
	%8015 = bitcast %Type_Info* %8014 to %Type_Info*
	%8016 = getelementptr inbounds %Type_Info*, %Type_Info** %7961, i64 7
	%8017 = getelementptr inbounds i64, i64* %7963, i64 7
	%8018 = getelementptr inbounds i1, i1* %7964, i64 7
	%8019 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 59
	store %Type_Info* %8019, %Type_Info** %8016
	%8020 = getelementptr inbounds %..string, %..string* %7962, i64 7
	store %..string {i8* getelementptr inbounds ([30 x i8], [30 x i8]* @__str$699, i64 0, i32 0), i64 29}, %..string* %8020
	store i64 36, i64* %8017
	store i1 false, i1* %8018
	%8021 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 59
	%8022 = bitcast %Type_Info* %8021 to %Type_Info*
	%8023 = getelementptr inbounds %Type_Info*, %Type_Info** %7961, i64 8
	%8024 = getelementptr inbounds i64, i64* %7963, i64 8
	%8025 = getelementptr inbounds i1, i1* %7964, i64 8
	%8026 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 59
	store %Type_Info* %8026, %Type_Info** %8023
	%8027 = getelementptr inbounds %..string, %..string* %7962, i64 8
	store %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$69a, i64 0, i32 0), i64 10}, %..string* %8027
	store i64 38, i64* %8024
	store i1 false, i1* %8025
	%8028 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %7956, i64 0, i32 0
	%8029 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %8028, i64 0, i32 0
	store %Type_Info** %7961, %Type_Info*** %8029
	%8030 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %8028, i64 0, i32 1
	store i64 9, i64* %8030
	%8031 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %7956, i64 0, i32 1
	%8032 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %8031, i64 0, i32 0
	store %..string* %7962, %..string** %8032
	%8033 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %8031, i64 0, i32 1
	store i64 9, i64* %8033
	%8034 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %7956, i64 0, i32 2
	%8035 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %8034, i64 0, i32 0
	store i64* %7963, i64** %8035
	%8036 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %8034, i64 0, i32 1
	store i64 9, i64* %8036
	%8037 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %7956, i64 0, i32 3
	%8038 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %8037, i64 0, i32 0
	store i1* %7964, i1** %8038
	%8039 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %8037, i64 0, i32 1
	store i64 9, i64* %8039
	%8040 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %7953, i64 0, i32 2 ; UnionTagPtr
	store i8 16, i8* %8040
	%8041 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 291
	%8042 = getelementptr inbounds %Type_Info, %Type_Info* %8041, i64 0, i32 2
	%8043 = getelementptr inbounds %Type_Info, %Type_Info* %8041, i64 0, i32 0
	store i64 8, i64* %8043
	%8044 = getelementptr inbounds %Type_Info, %Type_Info* %8041, i64 0, i32 1
	store i64 8, i64* %8044
	; TypeInfoPointer
	%8045 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %8042 to %Type_Info_Pointer*
	%8046 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 286
	%8047 = bitcast %Type_Info* %8046 to %Type_Info*
	%8048 = getelementptr inbounds %Type_Info_Pointer, %Type_Info_Pointer* %8045, i64 0, i32 0
	store %Type_Info* %8047, %Type_Info** %8048
	%8049 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %8042, i64 0, i32 2 ; UnionTagPtr
	store i8 9, i8* %8049
	%8050 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 292
	%8051 = getelementptr inbounds %Type_Info, %Type_Info* %8050, i64 0, i32 2
	%8052 = getelementptr inbounds %Type_Info, %Type_Info* %8050, i64 0, i32 0
	store i64 8, i64* %8052
	%8053 = getelementptr inbounds %Type_Info, %Type_Info* %8050, i64 0, i32 1
	store i64 8, i64* %8053
	; TypeInfoPointer
	%8054 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %8051 to %Type_Info_Pointer*
	%8055 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 293
	%8056 = bitcast %Type_Info* %8055 to %Type_Info*
	%8057 = getelementptr inbounds %Type_Info_Pointer, %Type_Info_Pointer* %8054, i64 0, i32 0
	store %Type_Info* %8056, %Type_Info** %8057
	%8058 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %8051, i64 0, i32 2 ; UnionTagPtr
	store i8 9, i8* %8058
	%8059 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 293
	%8060 = getelementptr inbounds %Type_Info, %Type_Info* %8059, i64 0, i32 2
	%8061 = getelementptr inbounds %Type_Info, %Type_Info* %8059, i64 0, i32 0
	store i64 16, i64* %8061
	%8062 = getelementptr inbounds %Type_Info, %Type_Info* %8059, i64 0, i32 1
	store i64 8, i64* %8062
	; TypeInfoNamed
	%8063 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %8060 to %Type_Info_Named*
	%8064 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 294
	%8065 = bitcast %Type_Info* %8064 to %Type_Info*
	%8066 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %8063, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$69b, i64 0, i32 0), i64 10}, %..string* %8066
	%8067 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %8063, i64 0, i32 1
	store %Type_Info* %8065, %Type_Info** %8067
	%8068 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %8060, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %8068
	%8069 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 294
	%8070 = getelementptr inbounds %Type_Info, %Type_Info* %8069, i64 0, i32 2
	%8071 = getelementptr inbounds %Type_Info, %Type_Info* %8069, i64 0, i32 0
	store i64 16, i64* %8071
	%8072 = getelementptr inbounds %Type_Info, %Type_Info* %8069, i64 0, i32 1
	store i64 8, i64* %8072
	; TypeInfoStruct
	%8073 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %8070 to %Type_Info_Struct*
	%8074 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8073, i64 0, i32 4
	store i1 false, i1* %8074
	%8075 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8073, i64 0, i32 5
	store i1 true, i1* %8075
	%8076 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8073, i64 0, i32 6
	store i1 false, i1* %8076
	%8077 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8073, i64 0, i32 7
	store i1 false, i1* %8077
	%8078 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 377
	%8079 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 341
	%8080 = getelementptr inbounds [450 x i64], [450 x i64]* @__$type_info_offsets_data, i64 0, i32 267
	%8081 = getelementptr inbounds [450 x i1], [450 x i1]* @__$type_info_usings_data, i64 0, i32 267
	%8082 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 292
	%8083 = bitcast %Type_Info* %8082 to %Type_Info*
	%8084 = getelementptr inbounds %Type_Info*, %Type_Info** %8078, i64 0
	%8085 = getelementptr inbounds i64, i64* %8080, i64 0
	%8086 = getelementptr inbounds i1, i1* %8081, i64 0
	%8087 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 292
	store %Type_Info* %8087, %Type_Info** %8084
	%8088 = getelementptr inbounds %..string, %..string* %8079, i64 0
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$69c, i64 0, i32 0), i64 5}, %..string* %8088
	store i64 0, i64* %8085
	store i1 false, i1* %8086
	%8089 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 292
	%8090 = bitcast %Type_Info* %8089 to %Type_Info*
	%8091 = getelementptr inbounds %Type_Info*, %Type_Info** %8078, i64 1
	%8092 = getelementptr inbounds i64, i64* %8080, i64 1
	%8093 = getelementptr inbounds i1, i1* %8081, i64 1
	%8094 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 292
	store %Type_Info* %8094, %Type_Info** %8091
	%8095 = getelementptr inbounds %..string, %..string* %8079, i64 1
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$69d, i64 0, i32 0), i64 5}, %..string* %8095
	store i64 8, i64* %8092
	store i1 false, i1* %8093
	%8096 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8073, i64 0, i32 0
	%8097 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %8096, i64 0, i32 0
	store %Type_Info** %8078, %Type_Info*** %8097
	%8098 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %8096, i64 0, i32 1
	store i64 2, i64* %8098
	%8099 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8073, i64 0, i32 1
	%8100 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %8099, i64 0, i32 0
	store %..string* %8079, %..string** %8100
	%8101 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %8099, i64 0, i32 1
	store i64 2, i64* %8101
	%8102 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8073, i64 0, i32 2
	%8103 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %8102, i64 0, i32 0
	store i64* %8080, i64** %8103
	%8104 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %8102, i64 0, i32 1
	store i64 2, i64* %8104
	%8105 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8073, i64 0, i32 3
	%8106 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %8105, i64 0, i32 0
	store i1* %8081, i1** %8106
	%8107 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %8105, i64 0, i32 1
	store i64 2, i64* %8107
	%8108 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %8070, i64 0, i32 2 ; UnionTagPtr
	store i8 16, i8* %8108
	%8109 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 292
	%8110 = getelementptr inbounds %Type_Info, %Type_Info* %8109, i64 0, i32 2
	%8111 = getelementptr inbounds %Type_Info, %Type_Info* %8109, i64 0, i32 0
	store i64 8, i64* %8111
	%8112 = getelementptr inbounds %Type_Info, %Type_Info* %8109, i64 0, i32 1
	store i64 8, i64* %8112
	; TypeInfoPointer
	%8113 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %8110 to %Type_Info_Pointer*
	%8114 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 293
	%8115 = bitcast %Type_Info* %8114 to %Type_Info*
	%8116 = getelementptr inbounds %Type_Info_Pointer, %Type_Info_Pointer* %8113, i64 0, i32 0
	store %Type_Info* %8115, %Type_Info** %8116
	%8117 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %8110, i64 0, i32 2 ; UnionTagPtr
	store i8 9, i8* %8117
	%8118 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 295
	%8119 = getelementptr inbounds %Type_Info, %Type_Info* %8118, i64 0, i32 2
	%8120 = getelementptr inbounds %Type_Info, %Type_Info* %8118, i64 0, i32 0
	store i64 8, i64* %8120
	%8121 = getelementptr inbounds %Type_Info, %Type_Info* %8118, i64 0, i32 1
	store i64 8, i64* %8121
	; TypeInfoPointer
	%8122 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %8119 to %Type_Info_Pointer*
	%8123 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	%8124 = bitcast %Type_Info* %8123 to %Type_Info*
	%8125 = getelementptr inbounds %Type_Info_Pointer, %Type_Info_Pointer* %8122, i64 0, i32 0
	store %Type_Info* %8124, %Type_Info** %8125
	%8126 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %8119, i64 0, i32 2 ; UnionTagPtr
	store i8 9, i8* %8126
	%8127 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 296
	%8128 = getelementptr inbounds %Type_Info, %Type_Info* %8127, i64 0, i32 2
	%8129 = getelementptr inbounds %Type_Info, %Type_Info* %8127, i64 0, i32 0
	store i64 16, i64* %8129
	%8130 = getelementptr inbounds %Type_Info, %Type_Info* %8127, i64 0, i32 1
	store i64 8, i64* %8130
	; TypeInfoNamed
	%8131 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %8128 to %Type_Info_Named*
	%8132 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 297
	%8133 = bitcast %Type_Info* %8132 to %Type_Info*
	%8134 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %8131, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$69e, i64 0, i32 0), i64 16}, %..string* %8134
	%8135 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %8131, i64 0, i32 1
	store %Type_Info* %8133, %Type_Info** %8135
	%8136 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %8128, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %8136
	%8137 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 297
	%8138 = getelementptr inbounds %Type_Info, %Type_Info* %8137, i64 0, i32 2
	%8139 = getelementptr inbounds %Type_Info, %Type_Info* %8137, i64 0, i32 0
	store i64 16, i64* %8139
	%8140 = getelementptr inbounds %Type_Info, %Type_Info* %8137, i64 0, i32 1
	store i64 8, i64* %8140
	; TypeInfoStruct
	%8141 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %8138 to %Type_Info_Struct*
	%8142 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8141, i64 0, i32 4
	store i1 false, i1* %8142
	%8143 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8141, i64 0, i32 5
	store i1 true, i1* %8143
	%8144 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8141, i64 0, i32 6
	store i1 false, i1* %8144
	%8145 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8141, i64 0, i32 7
	store i1 false, i1* %8145
	%8146 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 379
	%8147 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 343
	%8148 = getelementptr inbounds [450 x i64], [450 x i64]* @__$type_info_offsets_data, i64 0, i32 269
	%8149 = getelementptr inbounds [450 x i1], [450 x i1]* @__$type_info_usings_data, i64 0, i32 269
	%8150 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 59
	%8151 = bitcast %Type_Info* %8150 to %Type_Info*
	%8152 = getelementptr inbounds %Type_Info*, %Type_Info** %8146, i64 0
	%8153 = getelementptr inbounds i64, i64* %8148, i64 0
	%8154 = getelementptr inbounds i1, i1* %8149, i64 0
	%8155 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 59
	store %Type_Info* %8155, %Type_Info** %8152
	%8156 = getelementptr inbounds %..string, %..string* %8147, i64 0
	store %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$69f, i64 0, i32 0), i64 10}, %..string* %8156
	store i64 0, i64* %8153
	store i1 false, i1* %8154
	%8157 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 59
	%8158 = bitcast %Type_Info* %8157 to %Type_Info*
	%8159 = getelementptr inbounds %Type_Info*, %Type_Info** %8146, i64 1
	%8160 = getelementptr inbounds i64, i64* %8148, i64 1
	%8161 = getelementptr inbounds i1, i1* %8149, i64 1
	%8162 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 59
	store %Type_Info* %8162, %Type_Info** %8159
	%8163 = getelementptr inbounds %..string, %..string* %8147, i64 1
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$6a0, i64 0, i32 0), i64 5}, %..string* %8163
	store i64 2, i64* %8160
	store i1 false, i1* %8161
	%8164 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	%8165 = bitcast %Type_Info* %8164 to %Type_Info*
	%8166 = getelementptr inbounds %Type_Info*, %Type_Info** %8146, i64 2
	%8167 = getelementptr inbounds i64, i64* %8148, i64 2
	%8168 = getelementptr inbounds i1, i1* %8149, i64 2
	%8169 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	store %Type_Info* %8169, %Type_Info** %8166
	%8170 = getelementptr inbounds %..string, %..string* %8147, i64 2
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$6a1, i64 0, i32 0), i64 5}, %..string* %8170
	store i64 4, i64* %8167
	store i1 false, i1* %8168
	%8171 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 239
	%8172 = bitcast %Type_Info* %8171 to %Type_Info*
	%8173 = getelementptr inbounds %Type_Info*, %Type_Info** %8146, i64 3
	%8174 = getelementptr inbounds i64, i64* %8148, i64 3
	%8175 = getelementptr inbounds i1, i1* %8149, i64 3
	%8176 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 239
	store %Type_Info* %8176, %Type_Info** %8173
	%8177 = getelementptr inbounds %..string, %..string* %8147, i64 3
	store %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$6a2, i64 0, i32 0), i64 10}, %..string* %8177
	store i64 8, i64* %8174
	store i1 false, i1* %8175
	%8178 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8141, i64 0, i32 0
	%8179 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %8178, i64 0, i32 0
	store %Type_Info** %8146, %Type_Info*** %8179
	%8180 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %8178, i64 0, i32 1
	store i64 4, i64* %8180
	%8181 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8141, i64 0, i32 1
	%8182 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %8181, i64 0, i32 0
	store %..string* %8147, %..string** %8182
	%8183 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %8181, i64 0, i32 1
	store i64 4, i64* %8183
	%8184 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8141, i64 0, i32 2
	%8185 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %8184, i64 0, i32 0
	store i64* %8148, i64** %8185
	%8186 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %8184, i64 0, i32 1
	store i64 4, i64* %8186
	%8187 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8141, i64 0, i32 3
	%8188 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %8187, i64 0, i32 0
	store i1* %8149, i1** %8188
	%8189 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %8187, i64 0, i32 1
	store i64 4, i64* %8189
	%8190 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %8138, i64 0, i32 2 ; UnionTagPtr
	store i8 16, i8* %8190
	%8191 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 298
	%8192 = getelementptr inbounds %Type_Info, %Type_Info* %8191, i64 0, i32 2
	%8193 = getelementptr inbounds %Type_Info, %Type_Info* %8191, i64 0, i32 0
	store i64 24, i64* %8193
	%8194 = getelementptr inbounds %Type_Info, %Type_Info* %8191, i64 0, i32 1
	store i64 8, i64* %8194
	; TypeInfoNamed
	%8195 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %8192 to %Type_Info_Named*
	%8196 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 299
	%8197 = bitcast %Type_Info* %8196 to %Type_Info*
	%8198 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %8195, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$6a3, i64 0, i32 0), i64 16}, %..string* %8198
	%8199 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %8195, i64 0, i32 1
	store %Type_Info* %8197, %Type_Info** %8199
	%8200 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %8192, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %8200
	%8201 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 299
	%8202 = getelementptr inbounds %Type_Info, %Type_Info* %8201, i64 0, i32 2
	%8203 = getelementptr inbounds %Type_Info, %Type_Info* %8201, i64 0, i32 0
	store i64 24, i64* %8203
	%8204 = getelementptr inbounds %Type_Info, %Type_Info* %8201, i64 0, i32 1
	store i64 8, i64* %8204
	; TypeInfoStruct
	%8205 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %8202 to %Type_Info_Struct*
	%8206 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8205, i64 0, i32 4
	store i1 false, i1* %8206
	%8207 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8205, i64 0, i32 5
	store i1 true, i1* %8207
	%8208 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8205, i64 0, i32 6
	store i1 false, i1* %8208
	%8209 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8205, i64 0, i32 7
	store i1 false, i1* %8209
	%8210 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 383
	%8211 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 347
	%8212 = getelementptr inbounds [450 x i64], [450 x i64]* @__$type_info_offsets_data, i64 0, i32 273
	%8213 = getelementptr inbounds [450 x i1], [450 x i1]* @__$type_info_usings_data, i64 0, i32 273
	%8214 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	%8215 = bitcast %Type_Info* %8214 to %Type_Info*
	%8216 = getelementptr inbounds %Type_Info*, %Type_Info** %8210, i64 0
	%8217 = getelementptr inbounds i64, i64* %8212, i64 0
	%8218 = getelementptr inbounds i1, i1* %8213, i64 0
	%8219 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	store %Type_Info* %8219, %Type_Info** %8216
	%8220 = getelementptr inbounds %..string, %..string* %8211, i64 0
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$6a4, i64 0, i32 0), i64 4}, %..string* %8220
	store i64 0, i64* %8217
	store i1 false, i1* %8218
	%8221 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	%8222 = bitcast %Type_Info* %8221 to %Type_Info*
	%8223 = getelementptr inbounds %Type_Info*, %Type_Info** %8210, i64 1
	%8224 = getelementptr inbounds i64, i64* %8212, i64 1
	%8225 = getelementptr inbounds i1, i1* %8213, i64 1
	%8226 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	store %Type_Info* %8226, %Type_Info** %8223
	%8227 = getelementptr inbounds %..string, %..string* %8211, i64 1
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$6a5, i64 0, i32 0), i64 4}, %..string* %8227
	store i64 4, i64* %8224
	store i1 false, i1* %8225
	%8228 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 238
	%8229 = bitcast %Type_Info* %8228 to %Type_Info*
	%8230 = getelementptr inbounds %Type_Info*, %Type_Info** %8210, i64 2
	%8231 = getelementptr inbounds i64, i64* %8212, i64 2
	%8232 = getelementptr inbounds i1, i1* %8213, i64 2
	%8233 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 238
	store %Type_Info* %8233, %Type_Info** %8230
	%8234 = getelementptr inbounds %..string, %..string* %8211, i64 2
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$6a6, i64 0, i32 0), i64 6}, %..string* %8234
	store i64 8, i64* %8231
	store i1 false, i1* %8232
	%8235 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 251
	%8236 = bitcast %Type_Info* %8235 to %Type_Info*
	%8237 = getelementptr inbounds %Type_Info*, %Type_Info** %8210, i64 3
	%8238 = getelementptr inbounds i64, i64* %8212, i64 3
	%8239 = getelementptr inbounds i1, i1* %8213, i64 3
	%8240 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 251
	store %Type_Info* %8240, %Type_Info** %8237
	%8241 = getelementptr inbounds %..string, %..string* %8211, i64 3
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$6a7, i64 0, i32 0), i64 6}, %..string* %8241
	store i64 16, i64* %8238
	store i1 false, i1* %8239
	%8242 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8205, i64 0, i32 0
	%8243 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %8242, i64 0, i32 0
	store %Type_Info** %8210, %Type_Info*** %8243
	%8244 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %8242, i64 0, i32 1
	store i64 4, i64* %8244
	%8245 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8205, i64 0, i32 1
	%8246 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %8245, i64 0, i32 0
	store %..string* %8211, %..string** %8246
	%8247 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %8245, i64 0, i32 1
	store i64 4, i64* %8247
	%8248 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8205, i64 0, i32 2
	%8249 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %8248, i64 0, i32 0
	store i64* %8212, i64** %8249
	%8250 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %8248, i64 0, i32 1
	store i64 4, i64* %8250
	%8251 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8205, i64 0, i32 3
	%8252 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %8251, i64 0, i32 0
	store i1* %8213, i1** %8252
	%8253 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %8251, i64 0, i32 1
	store i64 4, i64* %8253
	%8254 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %8202, i64 0, i32 2 ; UnionTagPtr
	store i8 16, i8* %8254
	%8255 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 300
	%8256 = getelementptr inbounds %Type_Info, %Type_Info* %8255, i64 0, i32 2
	%8257 = getelementptr inbounds %Type_Info, %Type_Info* %8255, i64 0, i32 0
	store i64 12, i64* %8257
	%8258 = getelementptr inbounds %Type_Info, %Type_Info* %8255, i64 0, i32 1
	store i64 4, i64* %8258
	; TypeInfoNamed
	%8259 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %8256 to %Type_Info_Named*
	%8260 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 301
	%8261 = bitcast %Type_Info* %8260 to %Type_Info*
	%8262 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %8259, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$6a8, i64 0, i32 0), i64 7}, %..string* %8262
	%8263 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %8259, i64 0, i32 1
	store %Type_Info* %8261, %Type_Info** %8263
	%8264 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %8256, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %8264
	%8265 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 301
	%8266 = getelementptr inbounds %Type_Info, %Type_Info* %8265, i64 0, i32 2
	%8267 = getelementptr inbounds %Type_Info, %Type_Info* %8265, i64 0, i32 0
	store i64 12, i64* %8267
	%8268 = getelementptr inbounds %Type_Info, %Type_Info* %8265, i64 0, i32 1
	store i64 4, i64* %8268
	; TypeInfoStruct
	%8269 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %8266 to %Type_Info_Struct*
	%8270 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8269, i64 0, i32 4
	store i1 false, i1* %8270
	%8271 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8269, i64 0, i32 5
	store i1 true, i1* %8271
	%8272 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8269, i64 0, i32 6
	store i1 false, i1* %8272
	%8273 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8269, i64 0, i32 7
	store i1 false, i1* %8273
	%8274 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 387
	%8275 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 351
	%8276 = getelementptr inbounds [450 x i64], [450 x i64]* @__$type_info_offsets_data, i64 0, i32 277
	%8277 = getelementptr inbounds [450 x i1], [450 x i1]* @__$type_info_usings_data, i64 0, i32 277
	%8278 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	%8279 = bitcast %Type_Info* %8278 to %Type_Info*
	%8280 = getelementptr inbounds %Type_Info*, %Type_Info** %8274, i64 0
	%8281 = getelementptr inbounds i64, i64* %8276, i64 0
	%8282 = getelementptr inbounds i1, i1* %8277, i64 0
	%8283 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	store %Type_Info* %8283, %Type_Info** %8280
	%8284 = getelementptr inbounds %..string, %..string* %8275, i64 0
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$6a9, i64 0, i32 0), i64 8}, %..string* %8284
	store i64 0, i64* %8281
	store i1 false, i1* %8282
	%8285 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	%8286 = bitcast %Type_Info* %8285 to %Type_Info*
	%8287 = getelementptr inbounds %Type_Info*, %Type_Info** %8274, i64 1
	%8288 = getelementptr inbounds i64, i64* %8276, i64 1
	%8289 = getelementptr inbounds i1, i1* %8277, i64 1
	%8290 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	store %Type_Info* %8290, %Type_Info** %8287
	%8291 = getelementptr inbounds %..string, %..string* %8275, i64 1
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$6aa, i64 0, i32 0), i64 5}, %..string* %8291
	store i64 4, i64* %8288
	store i1 false, i1* %8289
	%8292 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 302
	%8293 = bitcast %Type_Info* %8292 to %Type_Info*
	%8294 = getelementptr inbounds %Type_Info*, %Type_Info** %8274, i64 2
	%8295 = getelementptr inbounds i64, i64* %8276, i64 2
	%8296 = getelementptr inbounds i1, i1* %8277, i64 2
	%8297 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 302
	store %Type_Info* %8297, %Type_Info** %8294
	%8298 = getelementptr inbounds %..string, %..string* %8275, i64 2
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$6ab, i64 0, i32 0), i64 8}, %..string* %8298
	store i64 8, i64* %8295
	store i1 false, i1* %8296
	%8299 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8269, i64 0, i32 0
	%8300 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %8299, i64 0, i32 0
	store %Type_Info** %8274, %Type_Info*** %8300
	%8301 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %8299, i64 0, i32 1
	store i64 3, i64* %8301
	%8302 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8269, i64 0, i32 1
	%8303 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %8302, i64 0, i32 0
	store %..string* %8275, %..string** %8303
	%8304 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %8302, i64 0, i32 1
	store i64 3, i64* %8304
	%8305 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8269, i64 0, i32 2
	%8306 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %8305, i64 0, i32 0
	store i64* %8276, i64** %8306
	%8307 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %8305, i64 0, i32 1
	store i64 3, i64* %8307
	%8308 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8269, i64 0, i32 3
	%8309 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %8308, i64 0, i32 0
	store i1* %8277, i1** %8309
	%8310 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %8308, i64 0, i32 1
	store i64 3, i64* %8310
	%8311 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %8266, i64 0, i32 2 ; UnionTagPtr
	store i8 16, i8* %8311
	%8312 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 302
	%8313 = getelementptr inbounds %Type_Info, %Type_Info* %8312, i64 0, i32 2
	%8314 = getelementptr inbounds %Type_Info, %Type_Info* %8312, i64 0, i32 0
	store i64 1, i64* %8314
	%8315 = getelementptr inbounds %Type_Info, %Type_Info* %8312, i64 0, i32 1
	store i64 1, i64* %8315
	; TypeInfoArray
	%8316 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %8313 to %Type_Info_Array*
	%8317 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	%8318 = bitcast %Type_Info* %8317 to %Type_Info*
	%8319 = getelementptr inbounds %Type_Info_Array, %Type_Info_Array* %8316, i64 0, i32 0
	store %Type_Info* %8318, %Type_Info** %8319
	%8320 = getelementptr inbounds %Type_Info_Array, %Type_Info_Array* %8316, i64 0, i32 1
	store i64 1, i64* %8320
	%8321 = getelementptr inbounds %Type_Info_Array, %Type_Info_Array* %8316, i64 0, i32 2
	store i64 1, i64* %8321
	%8322 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %8313, i64 0, i32 2 ; UnionTagPtr
	store i8 11, i8* %8322
	%8323 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%8324 = getelementptr inbounds %Type_Info, %Type_Info* %8323, i64 0, i32 2
	%8325 = getelementptr inbounds %Type_Info, %Type_Info* %8323, i64 0, i32 0
	store i64 8, i64* %8325
	%8326 = getelementptr inbounds %Type_Info, %Type_Info* %8323, i64 0, i32 1
	store i64 8, i64* %8326
	; TypeInfoPointer
	%8327 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %8324 to %Type_Info_Pointer*
	%8328 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	%8329 = bitcast %Type_Info* %8328 to %Type_Info*
	%8330 = getelementptr inbounds %Type_Info_Pointer, %Type_Info_Pointer* %8327, i64 0, i32 0
	store %Type_Info* %8329, %Type_Info** %8330
	%8331 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %8324, i64 0, i32 2 ; UnionTagPtr
	store i8 9, i8* %8331
	%8332 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 303
	%8333 = getelementptr inbounds %Type_Info, %Type_Info* %8332, i64 0, i32 2
	%8334 = getelementptr inbounds %Type_Info, %Type_Info* %8332, i64 0, i32 0
	store i64 16, i64* %8334
	%8335 = getelementptr inbounds %Type_Info, %Type_Info* %8332, i64 0, i32 1
	store i64 4, i64* %8335
	; TypeInfoNamed
	%8336 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %8333 to %Type_Info_Named*
	%8337 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 304
	%8338 = bitcast %Type_Info* %8337 to %Type_Info*
	%8339 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %8336, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$6ac, i64 0, i32 0), i64 12}, %..string* %8339
	%8340 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %8336, i64 0, i32 1
	store %Type_Info* %8338, %Type_Info** %8340
	%8341 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %8333, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %8341
	%8342 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 304
	%8343 = getelementptr inbounds %Type_Info, %Type_Info* %8342, i64 0, i32 2
	%8344 = getelementptr inbounds %Type_Info, %Type_Info* %8342, i64 0, i32 0
	store i64 16, i64* %8344
	%8345 = getelementptr inbounds %Type_Info, %Type_Info* %8342, i64 0, i32 1
	store i64 4, i64* %8345
	; TypeInfoStruct
	%8346 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %8343 to %Type_Info_Struct*
	%8347 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8346, i64 0, i32 4
	store i1 false, i1* %8347
	%8348 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8346, i64 0, i32 5
	store i1 true, i1* %8348
	%8349 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8346, i64 0, i32 6
	store i1 false, i1* %8349
	%8350 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8346, i64 0, i32 7
	store i1 false, i1* %8350
	%8351 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 390
	%8352 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 354
	%8353 = getelementptr inbounds [450 x i64], [450 x i64]* @__$type_info_offsets_data, i64 0, i32 280
	%8354 = getelementptr inbounds [450 x i1], [450 x i1]* @__$type_info_usings_data, i64 0, i32 280
	%8355 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 59
	%8356 = bitcast %Type_Info* %8355 to %Type_Info*
	%8357 = getelementptr inbounds %Type_Info*, %Type_Info** %8351, i64 0
	%8358 = getelementptr inbounds i64, i64* %8353, i64 0
	%8359 = getelementptr inbounds i1, i1* %8354, i64 0
	%8360 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 59
	store %Type_Info* %8360, %Type_Info** %8357
	%8361 = getelementptr inbounds %..string, %..string* %8352, i64 0
	store %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$6ad, i64 0, i32 0), i64 9}, %..string* %8361
	store i64 0, i64* %8358
	store i1 false, i1* %8359
	%8362 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 59
	%8363 = bitcast %Type_Info* %8362 to %Type_Info*
	%8364 = getelementptr inbounds %Type_Info*, %Type_Info** %8351, i64 1
	%8365 = getelementptr inbounds i64, i64* %8353, i64 1
	%8366 = getelementptr inbounds i1, i1* %8354, i64 1
	%8367 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 59
	store %Type_Info* %8367, %Type_Info** %8364
	%8368 = getelementptr inbounds %..string, %..string* %8352, i64 1
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$6ae, i64 0, i32 0), i64 5}, %..string* %8368
	store i64 2, i64* %8365
	store i1 false, i1* %8366
	%8369 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 59
	%8370 = bitcast %Type_Info* %8369 to %Type_Info*
	%8371 = getelementptr inbounds %Type_Info*, %Type_Info** %8351, i64 2
	%8372 = getelementptr inbounds i64, i64* %8353, i64 2
	%8373 = getelementptr inbounds i1, i1* %8354, i64 2
	%8374 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 59
	store %Type_Info* %8374, %Type_Info** %8371
	%8375 = getelementptr inbounds %..string, %..string* %8352, i64 2
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$6af, i64 0, i32 0), i64 8}, %..string* %8375
	store i64 4, i64* %8372
	store i1 false, i1* %8373
	%8376 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 59
	%8377 = bitcast %Type_Info* %8376 to %Type_Info*
	%8378 = getelementptr inbounds %Type_Info*, %Type_Info** %8351, i64 3
	%8379 = getelementptr inbounds i64, i64* %8353, i64 3
	%8380 = getelementptr inbounds i1, i1* %8354, i64 3
	%8381 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 59
	store %Type_Info* %8381, %Type_Info** %8378
	%8382 = getelementptr inbounds %..string, %..string* %8352, i64 3
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$6b0, i64 0, i32 0), i64 4}, %..string* %8382
	store i64 6, i64* %8379
	store i1 false, i1* %8380
	%8383 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	%8384 = bitcast %Type_Info* %8383 to %Type_Info*
	%8385 = getelementptr inbounds %Type_Info*, %Type_Info** %8351, i64 4
	%8386 = getelementptr inbounds i64, i64* %8353, i64 4
	%8387 = getelementptr inbounds i1, i1* %8354, i64 4
	%8388 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	store %Type_Info* %8388, %Type_Info** %8385
	%8389 = getelementptr inbounds %..string, %..string* %8352, i64 4
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$6b1, i64 0, i32 0), i64 7}, %..string* %8389
	store i64 8, i64* %8386
	store i1 false, i1* %8387
	%8390 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	%8391 = bitcast %Type_Info* %8390 to %Type_Info*
	%8392 = getelementptr inbounds %Type_Info*, %Type_Info** %8351, i64 5
	%8393 = getelementptr inbounds i64, i64* %8353, i64 5
	%8394 = getelementptr inbounds i1, i1* %8354, i64 5
	%8395 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	store %Type_Info* %8395, %Type_Info** %8392
	%8396 = getelementptr inbounds %..string, %..string* %8352, i64 5
	store %..string {i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__str$6b2, i64 0, i32 0), i64 17}, %..string* %8396
	store i64 12, i64* %8393
	store i1 false, i1* %8394
	%8397 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8346, i64 0, i32 0
	%8398 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %8397, i64 0, i32 0
	store %Type_Info** %8351, %Type_Info*** %8398
	%8399 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %8397, i64 0, i32 1
	store i64 6, i64* %8399
	%8400 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8346, i64 0, i32 1
	%8401 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %8400, i64 0, i32 0
	store %..string* %8352, %..string** %8401
	%8402 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %8400, i64 0, i32 1
	store i64 6, i64* %8402
	%8403 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8346, i64 0, i32 2
	%8404 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %8403, i64 0, i32 0
	store i64* %8353, i64** %8404
	%8405 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %8403, i64 0, i32 1
	store i64 6, i64* %8405
	%8406 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8346, i64 0, i32 3
	%8407 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %8406, i64 0, i32 0
	store i1* %8354, i1** %8407
	%8408 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %8406, i64 0, i32 1
	store i64 6, i64* %8408
	%8409 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %8343, i64 0, i32 2 ; UnionTagPtr
	store i8 16, i8* %8409
	%8410 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 305
	%8411 = getelementptr inbounds %Type_Info, %Type_Info* %8410, i64 0, i32 2
	%8412 = getelementptr inbounds %Type_Info, %Type_Info* %8410, i64 0, i32 0
	store i64 24, i64* %8412
	%8413 = getelementptr inbounds %Type_Info, %Type_Info* %8410, i64 0, i32 1
	store i64 4, i64* %8413
	; TypeInfoNamed
	%8414 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %8411 to %Type_Info_Named*
	%8415 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 306
	%8416 = bitcast %Type_Info* %8415 to %Type_Info*
	%8417 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %8414, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$6b3, i64 0, i32 0), i64 9}, %..string* %8417
	%8418 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %8414, i64 0, i32 1
	store %Type_Info* %8416, %Type_Info** %8418
	%8419 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %8411, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %8419
	%8420 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 306
	%8421 = getelementptr inbounds %Type_Info, %Type_Info* %8420, i64 0, i32 2
	%8422 = getelementptr inbounds %Type_Info, %Type_Info* %8420, i64 0, i32 0
	store i64 24, i64* %8422
	%8423 = getelementptr inbounds %Type_Info, %Type_Info* %8420, i64 0, i32 1
	store i64 4, i64* %8423
	; TypeInfoStruct
	%8424 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %8421 to %Type_Info_Struct*
	%8425 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8424, i64 0, i32 4
	store i1 false, i1* %8425
	%8426 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8424, i64 0, i32 5
	store i1 true, i1* %8426
	%8427 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8424, i64 0, i32 6
	store i1 false, i1* %8427
	%8428 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8424, i64 0, i32 7
	store i1 false, i1* %8428
	%8429 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 396
	%8430 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 360
	%8431 = getelementptr inbounds [450 x i64], [450 x i64]* @__$type_info_offsets_data, i64 0, i32 286
	%8432 = getelementptr inbounds [450 x i1], [450 x i1]* @__$type_info_usings_data, i64 0, i32 286
	%8433 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 59
	%8434 = bitcast %Type_Info* %8433 to %Type_Info*
	%8435 = getelementptr inbounds %Type_Info*, %Type_Info** %8429, i64 0
	%8436 = getelementptr inbounds i64, i64* %8431, i64 0
	%8437 = getelementptr inbounds i1, i1* %8432, i64 0
	%8438 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 59
	store %Type_Info* %8438, %Type_Info** %8435
	%8439 = getelementptr inbounds %..string, %..string* %8430, i64 0
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$6b4, i64 0, i32 0), i64 5}, %..string* %8439
	store i64 0, i64* %8436
	store i1 false, i1* %8437
	%8440 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 307
	%8441 = bitcast %Type_Info* %8440 to %Type_Info*
	%8442 = getelementptr inbounds %Type_Info*, %Type_Info** %8429, i64 1
	%8443 = getelementptr inbounds i64, i64* %8431, i64 1
	%8444 = getelementptr inbounds i1, i1* %8432, i64 1
	%8445 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 307
	store %Type_Info* %8445, %Type_Info** %8442
	%8446 = getelementptr inbounds %..string, %..string* %8430, i64 1
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$6b5, i64 0, i32 0), i64 4}, %..string* %8446
	store i64 4, i64* %8443
	store i1 true, i1* %8444
	%8447 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	%8448 = bitcast %Type_Info* %8447 to %Type_Info*
	%8449 = getelementptr inbounds %Type_Info*, %Type_Info** %8429, i64 2
	%8450 = getelementptr inbounds i64, i64* %8431, i64 2
	%8451 = getelementptr inbounds i1, i1* %8432, i64 2
	%8452 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	store %Type_Info* %8452, %Type_Info** %8449
	%8453 = getelementptr inbounds %..string, %..string* %8430, i64 2
	store %..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$6b6, i64 0, i32 0), i64 11}, %..string* %8453
	store i64 8, i64* %8450
	store i1 false, i1* %8451
	%8454 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	%8455 = bitcast %Type_Info* %8454 to %Type_Info*
	%8456 = getelementptr inbounds %Type_Info*, %Type_Info** %8429, i64 3
	%8457 = getelementptr inbounds i64, i64* %8431, i64 3
	%8458 = getelementptr inbounds i1, i1* %8432, i64 3
	%8459 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	store %Type_Info* %8459, %Type_Info** %8456
	%8460 = getelementptr inbounds %..string, %..string* %8430, i64 3
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$6b7, i64 0, i32 0), i64 6}, %..string* %8460
	store i64 12, i64* %8457
	store i1 false, i1* %8458
	%8461 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	%8462 = bitcast %Type_Info* %8461 to %Type_Info*
	%8463 = getelementptr inbounds %Type_Info*, %Type_Info** %8429, i64 4
	%8464 = getelementptr inbounds i64, i64* %8431, i64 4
	%8465 = getelementptr inbounds i1, i1* %8432, i64 4
	%8466 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	store %Type_Info* %8466, %Type_Info** %8463
	%8467 = getelementptr inbounds %..string, %..string* %8430, i64 4
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$6b8, i64 0, i32 0), i64 6}, %..string* %8467
	store i64 16, i64* %8464
	store i1 false, i1* %8465
	%8468 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	%8469 = bitcast %Type_Info* %8468 to %Type_Info*
	%8470 = getelementptr inbounds %Type_Info*, %Type_Info** %8429, i64 5
	%8471 = getelementptr inbounds i64, i64* %8431, i64 5
	%8472 = getelementptr inbounds i1, i1* %8432, i64 5
	%8473 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	store %Type_Info* %8473, %Type_Info** %8470
	%8474 = getelementptr inbounds %..string, %..string* %8430, i64 5
	store %..string {i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__str$6b9, i64 0, i32 0), i64 17}, %..string* %8474
	store i64 20, i64* %8471
	store i1 false, i1* %8472
	%8475 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8424, i64 0, i32 0
	%8476 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %8475, i64 0, i32 0
	store %Type_Info** %8429, %Type_Info*** %8476
	%8477 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %8475, i64 0, i32 1
	store i64 6, i64* %8477
	%8478 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8424, i64 0, i32 1
	%8479 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %8478, i64 0, i32 0
	store %..string* %8430, %..string** %8479
	%8480 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %8478, i64 0, i32 1
	store i64 6, i64* %8480
	%8481 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8424, i64 0, i32 2
	%8482 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %8481, i64 0, i32 0
	store i64* %8431, i64** %8482
	%8483 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %8481, i64 0, i32 1
	store i64 6, i64* %8483
	%8484 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8424, i64 0, i32 3
	%8485 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %8484, i64 0, i32 0
	store i1* %8432, i1** %8485
	%8486 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %8484, i64 0, i32 1
	store i64 6, i64* %8486
	%8487 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %8421, i64 0, i32 2 ; UnionTagPtr
	store i8 16, i8* %8487
	%8488 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 307
	%8489 = getelementptr inbounds %Type_Info, %Type_Info* %8488, i64 0, i32 2
	%8490 = getelementptr inbounds %Type_Info, %Type_Info* %8488, i64 0, i32 0
	store i64 4, i64* %8490
	%8491 = getelementptr inbounds %Type_Info, %Type_Info* %8488, i64 0, i32 1
	store i64 4, i64* %8491
	; TypeInfoStruct
	%8492 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %8489 to %Type_Info_Struct*
	%8493 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8492, i64 0, i32 4
	store i1 false, i1* %8493
	%8494 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8492, i64 0, i32 5
	store i1 false, i1* %8494
	%8495 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8492, i64 0, i32 6
	store i1 true, i1* %8495
	%8496 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8492, i64 0, i32 7
	store i1 false, i1* %8496
	%8497 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 402
	%8498 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 366
	%8499 = getelementptr inbounds [450 x i64], [450 x i64]* @__$type_info_offsets_data, i64 0, i32 292
	%8500 = getelementptr inbounds [450 x i1], [450 x i1]* @__$type_info_usings_data, i64 0, i32 292
	%8501 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	%8502 = bitcast %Type_Info* %8501 to %Type_Info*
	%8503 = getelementptr inbounds %Type_Info*, %Type_Info** %8497, i64 0
	%8504 = getelementptr inbounds i64, i64* %8499, i64 0
	%8505 = getelementptr inbounds i1, i1* %8500, i64 0
	%8506 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	store %Type_Info* %8506, %Type_Info** %8503
	%8507 = getelementptr inbounds %..string, %..string* %8498, i64 0
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$6ba, i64 0, i32 0), i64 7}, %..string* %8507
	store i64 0, i64* %8504
	store i1 false, i1* %8505
	%8508 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 308
	%8509 = bitcast %Type_Info* %8508 to %Type_Info*
	%8510 = getelementptr inbounds %Type_Info*, %Type_Info** %8497, i64 1
	%8511 = getelementptr inbounds i64, i64* %8499, i64 1
	%8512 = getelementptr inbounds i1, i1* %8500, i64 1
	%8513 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 308
	store %Type_Info* %8513, %Type_Info** %8510
	%8514 = getelementptr inbounds %..string, %..string* %8498, i64 1
	store %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$6bb, i64 0, i32 0), i64 1}, %..string* %8514
	store i64 0, i64* %8511
	store i1 true, i1* %8512
	%8515 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8492, i64 0, i32 0
	%8516 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %8515, i64 0, i32 0
	store %Type_Info** %8497, %Type_Info*** %8516
	%8517 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %8515, i64 0, i32 1
	store i64 2, i64* %8517
	%8518 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8492, i64 0, i32 1
	%8519 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %8518, i64 0, i32 0
	store %..string* %8498, %..string** %8519
	%8520 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %8518, i64 0, i32 1
	store i64 2, i64* %8520
	%8521 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8492, i64 0, i32 2
	%8522 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %8521, i64 0, i32 0
	store i64* %8499, i64** %8522
	%8523 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %8521, i64 0, i32 1
	store i64 2, i64* %8523
	%8524 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8492, i64 0, i32 3
	%8525 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %8524, i64 0, i32 0
	store i1* %8500, i1** %8525
	%8526 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %8524, i64 0, i32 1
	store i64 2, i64* %8526
	%8527 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %8489, i64 0, i32 2 ; UnionTagPtr
	store i8 16, i8* %8527
	%8528 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 308
	%8529 = getelementptr inbounds %Type_Info, %Type_Info* %8528, i64 0, i32 2
	%8530 = getelementptr inbounds %Type_Info, %Type_Info* %8528, i64 0, i32 0
	store i64 4, i64* %8530
	%8531 = getelementptr inbounds %Type_Info, %Type_Info* %8528, i64 0, i32 1
	store i64 2, i64* %8531
	; TypeInfoStruct
	%8532 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %8529 to %Type_Info_Struct*
	%8533 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8532, i64 0, i32 4
	store i1 false, i1* %8533
	%8534 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8532, i64 0, i32 5
	store i1 true, i1* %8534
	%8535 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8532, i64 0, i32 6
	store i1 false, i1* %8535
	%8536 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8532, i64 0, i32 7
	store i1 false, i1* %8536
	%8537 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 404
	%8538 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 368
	%8539 = getelementptr inbounds [450 x i64], [450 x i64]* @__$type_info_offsets_data, i64 0, i32 294
	%8540 = getelementptr inbounds [450 x i1], [450 x i1]* @__$type_info_usings_data, i64 0, i32 294
	%8541 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 59
	%8542 = bitcast %Type_Info* %8541 to %Type_Info*
	%8543 = getelementptr inbounds %Type_Info*, %Type_Info** %8537, i64 0
	%8544 = getelementptr inbounds i64, i64* %8539, i64 0
	%8545 = getelementptr inbounds i1, i1* %8540, i64 0
	%8546 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 59
	store %Type_Info* %8546, %Type_Info** %8543
	%8547 = getelementptr inbounds %..string, %..string* %8538, i64 0
	store %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$6bc, i64 0, i32 0), i64 12}, %..string* %8547
	store i64 0, i64* %8544
	store i1 false, i1* %8545
	%8548 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 59
	%8549 = bitcast %Type_Info* %8548 to %Type_Info*
	%8550 = getelementptr inbounds %Type_Info*, %Type_Info** %8537, i64 1
	%8551 = getelementptr inbounds i64, i64* %8539, i64 1
	%8552 = getelementptr inbounds i1, i1* %8540, i64 1
	%8553 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 59
	store %Type_Info* %8553, %Type_Info** %8550
	%8554 = getelementptr inbounds %..string, %..string* %8538, i64 1
	store %..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$6bd, i64 0, i32 0), i64 11}, %..string* %8554
	store i64 2, i64* %8551
	store i1 false, i1* %8552
	%8555 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8532, i64 0, i32 0
	%8556 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %8555, i64 0, i32 0
	store %Type_Info** %8537, %Type_Info*** %8556
	%8557 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %8555, i64 0, i32 1
	store i64 2, i64* %8557
	%8558 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8532, i64 0, i32 1
	%8559 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %8558, i64 0, i32 0
	store %..string* %8538, %..string** %8559
	%8560 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %8558, i64 0, i32 1
	store i64 2, i64* %8560
	%8561 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8532, i64 0, i32 2
	%8562 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %8561, i64 0, i32 0
	store i64* %8539, i64** %8562
	%8563 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %8561, i64 0, i32 1
	store i64 2, i64* %8563
	%8564 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8532, i64 0, i32 3
	%8565 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %8564, i64 0, i32 0
	store i1* %8540, i1** %8565
	%8566 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %8564, i64 0, i32 1
	store i64 2, i64* %8566
	%8567 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %8529, i64 0, i32 2 ; UnionTagPtr
	store i8 16, i8* %8567
	%8568 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 309
	%8569 = getelementptr inbounds %Type_Info, %Type_Info* %8568, i64 0, i32 2
	%8570 = getelementptr inbounds %Type_Info, %Type_Info* %8568, i64 0, i32 0
	store i64 48, i64* %8570
	%8571 = getelementptr inbounds %Type_Info, %Type_Info* %8568, i64 0, i32 1
	store i64 8, i64* %8571
	; TypeInfoNamed
	%8572 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %8569 to %Type_Info_Named*
	%8573 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 310
	%8574 = bitcast %Type_Info* %8573 to %Type_Info*
	%8575 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %8572, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$6be, i64 0, i32 0), i64 9}, %..string* %8575
	%8576 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %8572, i64 0, i32 1
	store %Type_Info* %8574, %Type_Info** %8576
	%8577 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %8569, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %8577
	%8578 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 310
	%8579 = getelementptr inbounds %Type_Info, %Type_Info* %8578, i64 0, i32 2
	%8580 = getelementptr inbounds %Type_Info, %Type_Info* %8578, i64 0, i32 0
	store i64 48, i64* %8580
	%8581 = getelementptr inbounds %Type_Info, %Type_Info* %8578, i64 0, i32 1
	store i64 8, i64* %8581
	; TypeInfoStruct
	%8582 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %8579 to %Type_Info_Struct*
	%8583 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8582, i64 0, i32 4
	store i1 false, i1* %8583
	%8584 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8582, i64 0, i32 5
	store i1 true, i1* %8584
	%8585 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8582, i64 0, i32 6
	store i1 false, i1* %8585
	%8586 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8582, i64 0, i32 7
	store i1 false, i1* %8586
	%8587 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 406
	%8588 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 370
	%8589 = getelementptr inbounds [450 x i64], [450 x i64]* @__$type_info_offsets_data, i64 0, i32 296
	%8590 = getelementptr inbounds [450 x i1], [450 x i1]* @__$type_info_usings_data, i64 0, i32 296
	%8591 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 298
	%8592 = bitcast %Type_Info* %8591 to %Type_Info*
	%8593 = getelementptr inbounds %Type_Info*, %Type_Info** %8587, i64 0
	%8594 = getelementptr inbounds i64, i64* %8589, i64 0
	%8595 = getelementptr inbounds i1, i1* %8590, i64 0
	%8596 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 298
	store %Type_Info* %8596, %Type_Info** %8593
	%8597 = getelementptr inbounds %..string, %..string* %8588, i64 0
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$6bf, i64 0, i32 0), i64 6}, %..string* %8597
	store i64 0, i64* %8594
	store i1 true, i1* %8595
	%8598 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 311
	%8599 = bitcast %Type_Info* %8598 to %Type_Info*
	%8600 = getelementptr inbounds %Type_Info*, %Type_Info** %8587, i64 1
	%8601 = getelementptr inbounds i64, i64* %8589, i64 1
	%8602 = getelementptr inbounds i1, i1* %8590, i64 1
	%8603 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 311
	store %Type_Info* %8603, %Type_Info** %8600
	%8604 = getelementptr inbounds %..string, %..string* %8588, i64 1
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$6c0, i64 0, i32 0), i64 4}, %..string* %8604
	store i64 24, i64* %8601
	store i1 false, i1* %8602
	%8605 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8582, i64 0, i32 0
	%8606 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %8605, i64 0, i32 0
	store %Type_Info** %8587, %Type_Info*** %8606
	%8607 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %8605, i64 0, i32 1
	store i64 2, i64* %8607
	%8608 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8582, i64 0, i32 1
	%8609 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %8608, i64 0, i32 0
	store %..string* %8588, %..string** %8609
	%8610 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %8608, i64 0, i32 1
	store i64 2, i64* %8610
	%8611 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8582, i64 0, i32 2
	%8612 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %8611, i64 0, i32 0
	store i64* %8589, i64** %8612
	%8613 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %8611, i64 0, i32 1
	store i64 2, i64* %8613
	%8614 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8582, i64 0, i32 3
	%8615 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %8614, i64 0, i32 0
	store i1* %8590, i1** %8615
	%8616 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %8614, i64 0, i32 1
	store i64 2, i64* %8616
	%8617 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %8579, i64 0, i32 2 ; UnionTagPtr
	store i8 16, i8* %8617
	%8618 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 311
	%8619 = getelementptr inbounds %Type_Info, %Type_Info* %8618, i64 0, i32 2
	%8620 = getelementptr inbounds %Type_Info, %Type_Info* %8618, i64 0, i32 0
	store i64 24, i64* %8620
	%8621 = getelementptr inbounds %Type_Info, %Type_Info* %8618, i64 0, i32 1
	store i64 4, i64* %8621
	; TypeInfoStruct
	%8622 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %8619 to %Type_Info_Struct*
	%8623 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8622, i64 0, i32 4
	store i1 false, i1* %8623
	%8624 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8622, i64 0, i32 5
	store i1 false, i1* %8624
	%8625 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8622, i64 0, i32 6
	store i1 true, i1* %8625
	%8626 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8622, i64 0, i32 7
	store i1 false, i1* %8626
	%8627 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 408
	%8628 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 372
	%8629 = getelementptr inbounds [450 x i64], [450 x i64]* @__$type_info_offsets_data, i64 0, i32 298
	%8630 = getelementptr inbounds [450 x i1], [450 x i1]* @__$type_info_usings_data, i64 0, i32 298
	%8631 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 305
	%8632 = bitcast %Type_Info* %8631 to %Type_Info*
	%8633 = getelementptr inbounds %Type_Info*, %Type_Info** %8627, i64 0
	%8634 = getelementptr inbounds i64, i64* %8629, i64 0
	%8635 = getelementptr inbounds i1, i1* %8630, i64 0
	%8636 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 305
	store %Type_Info* %8636, %Type_Info** %8633
	%8637 = getelementptr inbounds %..string, %..string* %8628, i64 0
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$6c1, i64 0, i32 0), i64 5}, %..string* %8637
	store i64 0, i64* %8634
	store i1 false, i1* %8635
	%8638 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 303
	%8639 = bitcast %Type_Info* %8638 to %Type_Info*
	%8640 = getelementptr inbounds %Type_Info*, %Type_Info** %8627, i64 1
	%8641 = getelementptr inbounds i64, i64* %8629, i64 1
	%8642 = getelementptr inbounds i1, i1* %8630, i64 1
	%8643 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 303
	store %Type_Info* %8643, %Type_Info** %8640
	%8644 = getelementptr inbounds %..string, %..string* %8628, i64 1
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$6c2, i64 0, i32 0), i64 8}, %..string* %8644
	store i64 0, i64* %8641
	store i1 false, i1* %8642
	%8645 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 300
	%8646 = bitcast %Type_Info* %8645 to %Type_Info*
	%8647 = getelementptr inbounds %Type_Info*, %Type_Info** %8627, i64 2
	%8648 = getelementptr inbounds i64, i64* %8629, i64 2
	%8649 = getelementptr inbounds i1, i1* %8630, i64 2
	%8650 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 300
	store %Type_Info* %8650, %Type_Info** %8647
	%8651 = getelementptr inbounds %..string, %..string* %8628, i64 2
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$6c3, i64 0, i32 0), i64 3}, %..string* %8651
	store i64 0, i64* %8648
	store i1 false, i1* %8649
	%8652 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8622, i64 0, i32 0
	%8653 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %8652, i64 0, i32 0
	store %Type_Info** %8627, %Type_Info*** %8653
	%8654 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %8652, i64 0, i32 1
	store i64 3, i64* %8654
	%8655 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8622, i64 0, i32 1
	%8656 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %8655, i64 0, i32 0
	store %..string* %8628, %..string** %8656
	%8657 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %8655, i64 0, i32 1
	store i64 3, i64* %8657
	%8658 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8622, i64 0, i32 2
	%8659 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %8658, i64 0, i32 0
	store i64* %8629, i64** %8659
	%8660 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %8658, i64 0, i32 1
	store i64 3, i64* %8660
	%8661 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8622, i64 0, i32 3
	%8662 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %8661, i64 0, i32 0
	store i1* %8630, i1** %8662
	%8663 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %8661, i64 0, i32 1
	store i64 3, i64* %8663
	%8664 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %8619, i64 0, i32 2 ; UnionTagPtr
	store i8 16, i8* %8664
	%8665 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 312
	%8666 = getelementptr inbounds %Type_Info, %Type_Info* %8665, i64 0, i32 2
	%8667 = getelementptr inbounds %Type_Info, %Type_Info* %8665, i64 0, i32 0
	store i64 4, i64* %8667
	%8668 = getelementptr inbounds %Type_Info, %Type_Info* %8665, i64 0, i32 1
	store i64 4, i64* %8668
	; TypeInfoNamed
	%8669 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %8666 to %Type_Info_Named*
	%8670 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	%8671 = bitcast %Type_Info* %8670 to %Type_Info*
	%8672 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %8669, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__str$6c4, i64 0, i32 0), i64 22}, %..string* %8672
	%8673 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %8669, i64 0, i32 1
	store %Type_Info* %8671, %Type_Info** %8673
	%8674 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %8666, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %8674
	%8675 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 313
	%8676 = getelementptr inbounds %Type_Info, %Type_Info* %8675, i64 0, i32 2
	%8677 = getelementptr inbounds %Type_Info, %Type_Info* %8675, i64 0, i32 0
	store i64 40, i64* %8677
	%8678 = getelementptr inbounds %Type_Info, %Type_Info* %8675, i64 0, i32 1
	store i64 4, i64* %8678
	; TypeInfoNamed
	%8679 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %8676 to %Type_Info_Named*
	%8680 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 314
	%8681 = bitcast %Type_Info* %8680 to %Type_Info*
	%8682 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %8679, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__str$6c5, i64 0, i32 0), i64 12}, %..string* %8682
	%8683 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %8679, i64 0, i32 1
	store %Type_Info* %8681, %Type_Info** %8683
	%8684 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %8676, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %8684
	%8685 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 314
	%8686 = getelementptr inbounds %Type_Info, %Type_Info* %8685, i64 0, i32 2
	%8687 = getelementptr inbounds %Type_Info, %Type_Info* %8685, i64 0, i32 0
	store i64 40, i64* %8687
	%8688 = getelementptr inbounds %Type_Info, %Type_Info* %8685, i64 0, i32 1
	store i64 4, i64* %8688
	; TypeInfoStruct
	%8689 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %8686 to %Type_Info_Struct*
	%8690 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8689, i64 0, i32 4
	store i1 false, i1* %8690
	%8691 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8689, i64 0, i32 5
	store i1 true, i1* %8691
	%8692 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8689, i64 0, i32 6
	store i1 false, i1* %8692
	%8693 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8689, i64 0, i32 7
	store i1 false, i1* %8693
	%8694 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 411
	%8695 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 375
	%8696 = getelementptr inbounds [450 x i64], [450 x i64]* @__$type_info_offsets_data, i64 0, i32 301
	%8697 = getelementptr inbounds [450 x i1], [450 x i1]* @__$type_info_usings_data, i64 0, i32 301
	%8698 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	%8699 = bitcast %Type_Info* %8698 to %Type_Info*
	%8700 = getelementptr inbounds %Type_Info*, %Type_Info** %8694, i64 0
	%8701 = getelementptr inbounds i64, i64* %8696, i64 0
	%8702 = getelementptr inbounds i1, i1* %8697, i64 0
	%8703 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	store %Type_Info* %8703, %Type_Info** %8700
	%8704 = getelementptr inbounds %..string, %..string* %8695, i64 0
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$6c6, i64 0, i32 0), i64 4}, %..string* %8704
	store i64 0, i64* %8701
	store i1 false, i1* %8702
	%8705 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 268
	%8706 = bitcast %Type_Info* %8705 to %Type_Info*
	%8707 = getelementptr inbounds %Type_Info*, %Type_Info** %8694, i64 1
	%8708 = getelementptr inbounds i64, i64* %8696, i64 1
	%8709 = getelementptr inbounds i1, i1* %8697, i64 1
	%8710 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 268
	store %Type_Info* %8710, %Type_Info** %8707
	%8711 = getelementptr inbounds %..string, %..string* %8695, i64 1
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$6c7, i64 0, i32 0), i64 7}, %..string* %8711
	store i64 4, i64* %8708
	store i1 false, i1* %8709
	%8712 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 268
	%8713 = bitcast %Type_Info* %8712 to %Type_Info*
	%8714 = getelementptr inbounds %Type_Info*, %Type_Info** %8694, i64 2
	%8715 = getelementptr inbounds i64, i64* %8696, i64 2
	%8716 = getelementptr inbounds i1, i1* %8697, i64 2
	%8717 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 268
	store %Type_Info* %8717, %Type_Info** %8714
	%8718 = getelementptr inbounds %..string, %..string* %8695, i64 2
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$6c8, i64 0, i32 0), i64 4}, %..string* %8718
	store i64 20, i64* %8715
	store i1 false, i1* %8716
	%8719 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	%8720 = bitcast %Type_Info* %8719 to %Type_Info*
	%8721 = getelementptr inbounds %Type_Info*, %Type_Info** %8694, i64 3
	%8722 = getelementptr inbounds i64, i64* %8696, i64 3
	%8723 = getelementptr inbounds i1, i1* %8697, i64 3
	%8724 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	store %Type_Info* %8724, %Type_Info** %8721
	%8725 = getelementptr inbounds %..string, %..string* %8695, i64 3
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$6c9, i64 0, i32 0), i64 5}, %..string* %8725
	store i64 36, i64* %8722
	store i1 false, i1* %8723
	%8726 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8689, i64 0, i32 0
	%8727 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %8726, i64 0, i32 0
	store %Type_Info** %8694, %Type_Info*** %8727
	%8728 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %8726, i64 0, i32 1
	store i64 4, i64* %8728
	%8729 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8689, i64 0, i32 1
	%8730 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %8729, i64 0, i32 0
	store %..string* %8695, %..string** %8730
	%8731 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %8729, i64 0, i32 1
	store i64 4, i64* %8731
	%8732 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8689, i64 0, i32 2
	%8733 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %8732, i64 0, i32 0
	store i64* %8696, i64** %8733
	%8734 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %8732, i64 0, i32 1
	store i64 4, i64* %8734
	%8735 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8689, i64 0, i32 3
	%8736 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %8735, i64 0, i32 0
	store i1* %8697, i1** %8736
	%8737 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %8735, i64 0, i32 1
	store i64 4, i64* %8737
	%8738 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %8686, i64 0, i32 2 ; UnionTagPtr
	store i8 16, i8* %8738
	%8739 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 315
	%8740 = getelementptr inbounds %Type_Info, %Type_Info* %8739, i64 0, i32 2
	%8741 = getelementptr inbounds %Type_Info, %Type_Info* %8739, i64 0, i32 0
	store i64 44, i64* %8741
	%8742 = getelementptr inbounds %Type_Info, %Type_Info* %8739, i64 0, i32 1
	store i64 4, i64* %8742
	; TypeInfoNamed
	%8743 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %8740 to %Type_Info_Named*
	%8744 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 316
	%8745 = bitcast %Type_Info* %8744 to %Type_Info*
	%8746 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %8743, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$6ca, i64 0, i32 0), i64 16}, %..string* %8746
	%8747 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %8743, i64 0, i32 1
	store %Type_Info* %8745, %Type_Info** %8747
	%8748 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %8740, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %8748
	%8749 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 316
	%8750 = getelementptr inbounds %Type_Info, %Type_Info* %8749, i64 0, i32 2
	%8751 = getelementptr inbounds %Type_Info, %Type_Info* %8749, i64 0, i32 0
	store i64 44, i64* %8751
	%8752 = getelementptr inbounds %Type_Info, %Type_Info* %8749, i64 0, i32 1
	store i64 4, i64* %8752
	; TypeInfoStruct
	%8753 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %8750 to %Type_Info_Struct*
	%8754 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8753, i64 0, i32 4
	store i1 false, i1* %8754
	%8755 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8753, i64 0, i32 5
	store i1 true, i1* %8755
	%8756 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8753, i64 0, i32 6
	store i1 false, i1* %8756
	%8757 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8753, i64 0, i32 7
	store i1 false, i1* %8757
	%8758 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 415
	%8759 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 379
	%8760 = getelementptr inbounds [450 x i64], [450 x i64]* @__$type_info_offsets_data, i64 0, i32 305
	%8761 = getelementptr inbounds [450 x i1], [450 x i1]* @__$type_info_usings_data, i64 0, i32 305
	%8762 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	%8763 = bitcast %Type_Info* %8762 to %Type_Info*
	%8764 = getelementptr inbounds %Type_Info*, %Type_Info** %8758, i64 0
	%8765 = getelementptr inbounds i64, i64* %8760, i64 0
	%8766 = getelementptr inbounds i1, i1* %8761, i64 0
	%8767 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	store %Type_Info* %8767, %Type_Info** %8764
	%8768 = getelementptr inbounds %..string, %..string* %8759, i64 0
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$6cb, i64 0, i32 0), i64 6}, %..string* %8768
	store i64 0, i64* %8765
	store i1 false, i1* %8766
	%8769 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	%8770 = bitcast %Type_Info* %8769 to %Type_Info*
	%8771 = getelementptr inbounds %Type_Info*, %Type_Info** %8758, i64 1
	%8772 = getelementptr inbounds i64, i64* %8760, i64 1
	%8773 = getelementptr inbounds i1, i1* %8761, i64 1
	%8774 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	store %Type_Info* %8774, %Type_Info** %8771
	%8775 = getelementptr inbounds %..string, %..string* %8759, i64 1
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$6cc, i64 0, i32 0), i64 5}, %..string* %8775
	store i64 4, i64* %8772
	store i1 false, i1* %8773
	%8776 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	%8777 = bitcast %Type_Info* %8776 to %Type_Info*
	%8778 = getelementptr inbounds %Type_Info*, %Type_Info** %8758, i64 2
	%8779 = getelementptr inbounds i64, i64* %8760, i64 2
	%8780 = getelementptr inbounds i1, i1* %8761, i64 2
	%8781 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	store %Type_Info* %8781, %Type_Info** %8778
	%8782 = getelementptr inbounds %..string, %..string* %8759, i64 2
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$6cd, i64 0, i32 0), i64 8}, %..string* %8782
	store i64 8, i64* %8779
	store i1 false, i1* %8780
	%8783 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 260
	%8784 = bitcast %Type_Info* %8783 to %Type_Info*
	%8785 = getelementptr inbounds %Type_Info*, %Type_Info** %8758, i64 3
	%8786 = getelementptr inbounds i64, i64* %8760, i64 3
	%8787 = getelementptr inbounds i1, i1* %8761, i64 3
	%8788 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 260
	store %Type_Info* %8788, %Type_Info** %8785
	%8789 = getelementptr inbounds %..string, %..string* %8759, i64 3
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$6ce, i64 0, i32 0), i64 7}, %..string* %8789
	store i64 12, i64* %8786
	store i1 false, i1* %8787
	%8790 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 260
	%8791 = bitcast %Type_Info* %8790 to %Type_Info*
	%8792 = getelementptr inbounds %Type_Info*, %Type_Info** %8758, i64 4
	%8793 = getelementptr inbounds i64, i64* %8760, i64 4
	%8794 = getelementptr inbounds i1, i1* %8761, i64 4
	%8795 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 260
	store %Type_Info* %8795, %Type_Info** %8792
	%8796 = getelementptr inbounds %..string, %..string* %8759, i64 4
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$6cf, i64 0, i32 0), i64 7}, %..string* %8796
	store i64 20, i64* %8793
	store i1 false, i1* %8794
	%8797 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 268
	%8798 = bitcast %Type_Info* %8797 to %Type_Info*
	%8799 = getelementptr inbounds %Type_Info*, %Type_Info** %8758, i64 5
	%8800 = getelementptr inbounds i64, i64* %8760, i64 5
	%8801 = getelementptr inbounds i1, i1* %8761, i64 5
	%8802 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 268
	store %Type_Info* %8802, %Type_Info** %8799
	%8803 = getelementptr inbounds %..string, %..string* %8759, i64 5
	store %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$6d0, i64 0, i32 0), i64 10}, %..string* %8803
	store i64 28, i64* %8800
	store i1 false, i1* %8801
	%8804 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8753, i64 0, i32 0
	%8805 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %8804, i64 0, i32 0
	store %Type_Info** %8758, %Type_Info*** %8805
	%8806 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %8804, i64 0, i32 1
	store i64 6, i64* %8806
	%8807 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8753, i64 0, i32 1
	%8808 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %8807, i64 0, i32 0
	store %..string* %8759, %..string** %8808
	%8809 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %8807, i64 0, i32 1
	store i64 6, i64* %8809
	%8810 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8753, i64 0, i32 2
	%8811 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %8810, i64 0, i32 0
	store i64* %8760, i64** %8811
	%8812 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %8810, i64 0, i32 1
	store i64 6, i64* %8812
	%8813 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8753, i64 0, i32 3
	%8814 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %8813, i64 0, i32 0
	store i1* %8761, i1** %8814
	%8815 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %8813, i64 0, i32 1
	store i64 6, i64* %8815
	%8816 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %8750, i64 0, i32 2 ; UnionTagPtr
	store i8 16, i8* %8816
	%8817 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 317
	%8818 = getelementptr inbounds %Type_Info, %Type_Info* %8817, i64 0, i32 2
	%8819 = getelementptr inbounds %Type_Info, %Type_Info* %8817, i64 0, i32 0
	store i64 40, i64* %8819
	%8820 = getelementptr inbounds %Type_Info, %Type_Info* %8817, i64 0, i32 1
	store i64 4, i64* %8820
	; TypeInfoNamed
	%8821 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %8818 to %Type_Info_Named*
	%8822 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 318
	%8823 = bitcast %Type_Info* %8822 to %Type_Info*
	%8824 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %8821, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__str$6d1, i64 0, i32 0), i64 18}, %..string* %8824
	%8825 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %8821, i64 0, i32 1
	store %Type_Info* %8823, %Type_Info** %8825
	%8826 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %8818, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %8826
	%8827 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 318
	%8828 = getelementptr inbounds %Type_Info, %Type_Info* %8827, i64 0, i32 2
	%8829 = getelementptr inbounds %Type_Info, %Type_Info* %8827, i64 0, i32 0
	store i64 40, i64* %8829
	%8830 = getelementptr inbounds %Type_Info, %Type_Info* %8827, i64 0, i32 1
	store i64 4, i64* %8830
	; TypeInfoStruct
	%8831 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %8828 to %Type_Info_Struct*
	%8832 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8831, i64 0, i32 4
	store i1 false, i1* %8832
	%8833 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8831, i64 0, i32 5
	store i1 true, i1* %8833
	%8834 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8831, i64 0, i32 6
	store i1 false, i1* %8834
	%8835 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8831, i64 0, i32 7
	store i1 false, i1* %8835
	%8836 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 421
	%8837 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 385
	%8838 = getelementptr inbounds [450 x i64], [450 x i64]* @__$type_info_offsets_data, i64 0, i32 311
	%8839 = getelementptr inbounds [450 x i1], [450 x i1]* @__$type_info_usings_data, i64 0, i32 311
	%8840 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	%8841 = bitcast %Type_Info* %8840 to %Type_Info*
	%8842 = getelementptr inbounds %Type_Info*, %Type_Info** %8836, i64 0
	%8843 = getelementptr inbounds i64, i64* %8838, i64 0
	%8844 = getelementptr inbounds i1, i1* %8839, i64 0
	%8845 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	store %Type_Info* %8845, %Type_Info** %8842
	%8846 = getelementptr inbounds %..string, %..string* %8837, i64 0
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$6d2, i64 0, i32 0), i64 4}, %..string* %8846
	store i64 0, i64* %8843
	store i1 false, i1* %8844
	%8847 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	%8848 = bitcast %Type_Info* %8847 to %Type_Info*
	%8849 = getelementptr inbounds %Type_Info*, %Type_Info** %8836, i64 1
	%8850 = getelementptr inbounds i64, i64* %8838, i64 1
	%8851 = getelementptr inbounds i1, i1* %8839, i64 1
	%8852 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	store %Type_Info* %8852, %Type_Info** %8849
	%8853 = getelementptr inbounds %..string, %..string* %8837, i64 1
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$6d3, i64 0, i32 0), i64 5}, %..string* %8853
	store i64 4, i64* %8850
	store i1 false, i1* %8851
	%8854 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	%8855 = bitcast %Type_Info* %8854 to %Type_Info*
	%8856 = getelementptr inbounds %Type_Info*, %Type_Info** %8836, i64 2
	%8857 = getelementptr inbounds i64, i64* %8838, i64 2
	%8858 = getelementptr inbounds i1, i1* %8839, i64 2
	%8859 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	store %Type_Info* %8859, %Type_Info** %8856
	%8860 = getelementptr inbounds %..string, %..string* %8837, i64 2
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$6d4, i64 0, i32 0), i64 6}, %..string* %8860
	store i64 8, i64* %8857
	store i1 false, i1* %8858
	%8861 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 55
	%8862 = bitcast %Type_Info* %8861 to %Type_Info*
	%8863 = getelementptr inbounds %Type_Info*, %Type_Info** %8836, i64 3
	%8864 = getelementptr inbounds i64, i64* %8838, i64 3
	%8865 = getelementptr inbounds i1, i1* %8839, i64 3
	%8866 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 55
	store %Type_Info* %8866, %Type_Info** %8863
	%8867 = getelementptr inbounds %..string, %..string* %8837, i64 3
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$6d5, i64 0, i32 0), i64 6}, %..string* %8867
	store i64 12, i64* %8864
	store i1 false, i1* %8865
	%8868 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 55
	%8869 = bitcast %Type_Info* %8868 to %Type_Info*
	%8870 = getelementptr inbounds %Type_Info*, %Type_Info** %8836, i64 4
	%8871 = getelementptr inbounds i64, i64* %8838, i64 4
	%8872 = getelementptr inbounds i1, i1* %8839, i64 4
	%8873 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 55
	store %Type_Info* %8873, %Type_Info** %8870
	%8874 = getelementptr inbounds %..string, %..string* %8837, i64 4
	store %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$6d6, i64 0, i32 0), i64 9}, %..string* %8874
	store i64 14, i64* %8871
	store i1 false, i1* %8872
	%8875 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	%8876 = bitcast %Type_Info* %8875 to %Type_Info*
	%8877 = getelementptr inbounds %Type_Info*, %Type_Info** %8836, i64 5
	%8878 = getelementptr inbounds i64, i64* %8838, i64 5
	%8879 = getelementptr inbounds i1, i1* %8839, i64 5
	%8880 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	store %Type_Info* %8880, %Type_Info** %8877
	%8881 = getelementptr inbounds %..string, %..string* %8837, i64 5
	store %..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$6d7, i64 0, i32 0), i64 11}, %..string* %8881
	store i64 16, i64* %8878
	store i1 false, i1* %8879
	%8882 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	%8883 = bitcast %Type_Info* %8882 to %Type_Info*
	%8884 = getelementptr inbounds %Type_Info*, %Type_Info** %8836, i64 6
	%8885 = getelementptr inbounds i64, i64* %8838, i64 6
	%8886 = getelementptr inbounds i1, i1* %8839, i64 6
	%8887 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	store %Type_Info* %8887, %Type_Info** %8884
	%8888 = getelementptr inbounds %..string, %..string* %8837, i64 6
	store %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$6d8, i64 0, i32 0), i64 10}, %..string* %8888
	store i64 20, i64* %8885
	store i1 false, i1* %8886
	%8889 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	%8890 = bitcast %Type_Info* %8889 to %Type_Info*
	%8891 = getelementptr inbounds %Type_Info*, %Type_Info** %8836, i64 7
	%8892 = getelementptr inbounds i64, i64* %8838, i64 7
	%8893 = getelementptr inbounds i1, i1* %8839, i64 7
	%8894 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	store %Type_Info* %8894, %Type_Info** %8891
	%8895 = getelementptr inbounds %..string, %..string* %8837, i64 7
	store %..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$6d9, i64 0, i32 0), i64 16}, %..string* %8895
	store i64 24, i64* %8892
	store i1 false, i1* %8893
	%8896 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	%8897 = bitcast %Type_Info* %8896 to %Type_Info*
	%8898 = getelementptr inbounds %Type_Info*, %Type_Info** %8836, i64 8
	%8899 = getelementptr inbounds i64, i64* %8838, i64 8
	%8900 = getelementptr inbounds i1, i1* %8839, i64 8
	%8901 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	store %Type_Info* %8901, %Type_Info** %8898
	%8902 = getelementptr inbounds %..string, %..string* %8837, i64 8
	store %..string {i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__str$6da, i64 0, i32 0), i64 16}, %..string* %8902
	store i64 28, i64* %8899
	store i1 false, i1* %8900
	%8903 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	%8904 = bitcast %Type_Info* %8903 to %Type_Info*
	%8905 = getelementptr inbounds %Type_Info*, %Type_Info** %8836, i64 9
	%8906 = getelementptr inbounds i64, i64* %8838, i64 9
	%8907 = getelementptr inbounds i1, i1* %8839, i64 9
	%8908 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	store %Type_Info* %8908, %Type_Info** %8905
	%8909 = getelementptr inbounds %..string, %..string* %8837, i64 9
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$6db, i64 0, i32 0), i64 8}, %..string* %8909
	store i64 32, i64* %8906
	store i1 false, i1* %8907
	%8910 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	%8911 = bitcast %Type_Info* %8910 to %Type_Info*
	%8912 = getelementptr inbounds %Type_Info*, %Type_Info** %8836, i64 10
	%8913 = getelementptr inbounds i64, i64* %8838, i64 10
	%8914 = getelementptr inbounds i1, i1* %8839, i64 10
	%8915 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 60
	store %Type_Info* %8915, %Type_Info** %8912
	%8916 = getelementptr inbounds %..string, %..string* %8837, i64 10
	store %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$6dc, i64 0, i32 0), i64 13}, %..string* %8916
	store i64 36, i64* %8913
	store i1 false, i1* %8914
	%8917 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8831, i64 0, i32 0
	%8918 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %8917, i64 0, i32 0
	store %Type_Info** %8836, %Type_Info*** %8918
	%8919 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %8917, i64 0, i32 1
	store i64 11, i64* %8919
	%8920 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8831, i64 0, i32 1
	%8921 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %8920, i64 0, i32 0
	store %..string* %8837, %..string** %8921
	%8922 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %8920, i64 0, i32 1
	store i64 11, i64* %8922
	%8923 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8831, i64 0, i32 2
	%8924 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %8923, i64 0, i32 0
	store i64* %8838, i64** %8924
	%8925 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %8923, i64 0, i32 1
	store i64 11, i64* %8925
	%8926 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8831, i64 0, i32 3
	%8927 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %8926, i64 0, i32 0
	store i1* %8839, i1** %8927
	%8928 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %8926, i64 0, i32 1
	store i64 11, i64* %8928
	%8929 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %8828, i64 0, i32 2 ; UnionTagPtr
	store i8 16, i8* %8929
	%8930 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 319
	%8931 = getelementptr inbounds %Type_Info, %Type_Info* %8930, i64 0, i32 2
	%8932 = getelementptr inbounds %Type_Info, %Type_Info* %8930, i64 0, i32 0
	store i64 44, i64* %8932
	%8933 = getelementptr inbounds %Type_Info, %Type_Info* %8930, i64 0, i32 1
	store i64 4, i64* %8933
	; TypeInfoNamed
	%8934 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %8931 to %Type_Info_Named*
	%8935 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 320
	%8936 = bitcast %Type_Info* %8935 to %Type_Info*
	%8937 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %8934, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$6dd, i64 0, i32 0), i64 11}, %..string* %8937
	%8938 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %8934, i64 0, i32 1
	store %Type_Info* %8936, %Type_Info** %8938
	%8939 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %8931, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %8939
	%8940 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 320
	%8941 = getelementptr inbounds %Type_Info, %Type_Info* %8940, i64 0, i32 2
	%8942 = getelementptr inbounds %Type_Info, %Type_Info* %8940, i64 0, i32 0
	store i64 44, i64* %8942
	%8943 = getelementptr inbounds %Type_Info, %Type_Info* %8940, i64 0, i32 1
	store i64 4, i64* %8943
	; TypeInfoStruct
	%8944 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %8941 to %Type_Info_Struct*
	%8945 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8944, i64 0, i32 4
	store i1 false, i1* %8945
	%8946 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8944, i64 0, i32 5
	store i1 true, i1* %8946
	%8947 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8944, i64 0, i32 6
	store i1 false, i1* %8947
	%8948 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8944, i64 0, i32 7
	store i1 false, i1* %8948
	%8949 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 432
	%8950 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 396
	%8951 = getelementptr inbounds [450 x i64], [450 x i64]* @__$type_info_offsets_data, i64 0, i32 322
	%8952 = getelementptr inbounds [450 x i1], [450 x i1]* @__$type_info_usings_data, i64 0, i32 322
	%8953 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 317
	%8954 = bitcast %Type_Info* %8953 to %Type_Info*
	%8955 = getelementptr inbounds %Type_Info*, %Type_Info** %8949, i64 0
	%8956 = getelementptr inbounds i64, i64* %8951, i64 0
	%8957 = getelementptr inbounds i1, i1* %8952, i64 0
	%8958 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 317
	store %Type_Info* %8958, %Type_Info** %8955
	%8959 = getelementptr inbounds %..string, %..string* %8950, i64 0
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$6de, i64 0, i32 0), i64 6}, %..string* %8959
	store i64 0, i64* %8956
	store i1 true, i1* %8957
	%8960 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 321
	%8961 = bitcast %Type_Info* %8960 to %Type_Info*
	%8962 = getelementptr inbounds %Type_Info*, %Type_Info** %8949, i64 1
	%8963 = getelementptr inbounds i64, i64* %8951, i64 1
	%8964 = getelementptr inbounds i1, i1* %8952, i64 1
	%8965 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 321
	store %Type_Info* %8965, %Type_Info** %8962
	%8966 = getelementptr inbounds %..string, %..string* %8950, i64 1
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$6df, i64 0, i32 0), i64 6}, %..string* %8966
	store i64 40, i64* %8963
	store i1 false, i1* %8964
	%8967 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8944, i64 0, i32 0
	%8968 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %8967, i64 0, i32 0
	store %Type_Info** %8949, %Type_Info*** %8968
	%8969 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %8967, i64 0, i32 1
	store i64 2, i64* %8969
	%8970 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8944, i64 0, i32 1
	%8971 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %8970, i64 0, i32 0
	store %..string* %8950, %..string** %8971
	%8972 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %8970, i64 0, i32 1
	store i64 2, i64* %8972
	%8973 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8944, i64 0, i32 2
	%8974 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %8973, i64 0, i32 0
	store i64* %8951, i64** %8974
	%8975 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %8973, i64 0, i32 1
	store i64 2, i64* %8975
	%8976 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %8944, i64 0, i32 3
	%8977 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %8976, i64 0, i32 0
	store i1* %8952, i1** %8977
	%8978 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %8976, i64 0, i32 1
	store i64 2, i64* %8978
	%8979 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %8941, i64 0, i32 2 ; UnionTagPtr
	store i8 16, i8* %8979
	%8980 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 321
	%8981 = getelementptr inbounds %Type_Info, %Type_Info* %8980, i64 0, i32 2
	%8982 = getelementptr inbounds %Type_Info, %Type_Info* %8980, i64 0, i32 0
	store i64 4, i64* %8982
	%8983 = getelementptr inbounds %Type_Info, %Type_Info* %8980, i64 0, i32 1
	store i64 1, i64* %8983
	; TypeInfoArray
	%8984 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %8981 to %Type_Info_Array*
	%8985 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 322
	%8986 = bitcast %Type_Info* %8985 to %Type_Info*
	%8987 = getelementptr inbounds %Type_Info_Array, %Type_Info_Array* %8984, i64 0, i32 0
	store %Type_Info* %8986, %Type_Info** %8987
	%8988 = getelementptr inbounds %Type_Info_Array, %Type_Info_Array* %8984, i64 0, i32 1
	store i64 4, i64* %8988
	%8989 = getelementptr inbounds %Type_Info_Array, %Type_Info_Array* %8984, i64 0, i32 2
	store i64 1, i64* %8989
	%8990 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %8981, i64 0, i32 2 ; UnionTagPtr
	store i8 11, i8* %8990
	%8991 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 322
	%8992 = getelementptr inbounds %Type_Info, %Type_Info* %8991, i64 0, i32 2
	%8993 = getelementptr inbounds %Type_Info, %Type_Info* %8991, i64 0, i32 0
	store i64 4, i64* %8993
	%8994 = getelementptr inbounds %Type_Info, %Type_Info* %8991, i64 0, i32 1
	store i64 1, i64* %8994
	; TypeInfoNamed
	%8995 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %8992 to %Type_Info_Named*
	%8996 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 323
	%8997 = bitcast %Type_Info* %8996 to %Type_Info*
	%8998 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %8995, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$6e0, i64 0, i32 0), i64 8}, %..string* %8998
	%8999 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %8995, i64 0, i32 1
	store %Type_Info* %8997, %Type_Info** %8999
	%9000 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %8992, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %9000
	%9001 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 323
	%9002 = getelementptr inbounds %Type_Info, %Type_Info* %9001, i64 0, i32 2
	%9003 = getelementptr inbounds %Type_Info, %Type_Info* %9001, i64 0, i32 0
	store i64 4, i64* %9003
	%9004 = getelementptr inbounds %Type_Info, %Type_Info* %9001, i64 0, i32 1
	store i64 1, i64* %9004
	; TypeInfoStruct
	%9005 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %9002 to %Type_Info_Struct*
	%9006 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %9005, i64 0, i32 4
	store i1 false, i1* %9006
	%9007 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %9005, i64 0, i32 5
	store i1 true, i1* %9007
	%9008 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %9005, i64 0, i32 6
	store i1 false, i1* %9008
	%9009 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %9005, i64 0, i32 7
	store i1 false, i1* %9009
	%9010 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 434
	%9011 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 398
	%9012 = getelementptr inbounds [450 x i64], [450 x i64]* @__$type_info_offsets_data, i64 0, i32 324
	%9013 = getelementptr inbounds [450 x i1], [450 x i1]* @__$type_info_usings_data, i64 0, i32 324
	%9014 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	%9015 = bitcast %Type_Info* %9014 to %Type_Info*
	%9016 = getelementptr inbounds %Type_Info*, %Type_Info** %9010, i64 0
	%9017 = getelementptr inbounds i64, i64* %9012, i64 0
	%9018 = getelementptr inbounds i1, i1* %9013, i64 0
	%9019 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	store %Type_Info* %9019, %Type_Info** %9016
	%9020 = getelementptr inbounds %..string, %..string* %9011, i64 0
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$6e1, i64 0, i32 0), i64 4}, %..string* %9020
	store i64 0, i64* %9017
	store i1 false, i1* %9018
	%9021 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	%9022 = bitcast %Type_Info* %9021 to %Type_Info*
	%9023 = getelementptr inbounds %Type_Info*, %Type_Info** %9010, i64 1
	%9024 = getelementptr inbounds i64, i64* %9012, i64 1
	%9025 = getelementptr inbounds i1, i1* %9013, i64 1
	%9026 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	store %Type_Info* %9026, %Type_Info** %9023
	%9027 = getelementptr inbounds %..string, %..string* %9011, i64 1
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$6e2, i64 0, i32 0), i64 5}, %..string* %9027
	store i64 1, i64* %9024
	store i1 false, i1* %9025
	%9028 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	%9029 = bitcast %Type_Info* %9028 to %Type_Info*
	%9030 = getelementptr inbounds %Type_Info*, %Type_Info** %9010, i64 2
	%9031 = getelementptr inbounds i64, i64* %9012, i64 2
	%9032 = getelementptr inbounds i1, i1* %9013, i64 2
	%9033 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	store %Type_Info* %9033, %Type_Info** %9030
	%9034 = getelementptr inbounds %..string, %..string* %9011, i64 2
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$6e3, i64 0, i32 0), i64 3}, %..string* %9034
	store i64 2, i64* %9031
	store i1 false, i1* %9032
	%9035 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	%9036 = bitcast %Type_Info* %9035 to %Type_Info*
	%9037 = getelementptr inbounds %Type_Info*, %Type_Info** %9010, i64 3
	%9038 = getelementptr inbounds i64, i64* %9012, i64 3
	%9039 = getelementptr inbounds i1, i1* %9013, i64 3
	%9040 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	store %Type_Info* %9040, %Type_Info** %9037
	%9041 = getelementptr inbounds %..string, %..string* %9011, i64 3
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$6e4, i64 0, i32 0), i64 8}, %..string* %9041
	store i64 3, i64* %9038
	store i1 false, i1* %9039
	%9042 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %9005, i64 0, i32 0
	%9043 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %9042, i64 0, i32 0
	store %Type_Info** %9010, %Type_Info*** %9043
	%9044 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %9042, i64 0, i32 1
	store i64 4, i64* %9044
	%9045 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %9005, i64 0, i32 1
	%9046 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %9045, i64 0, i32 0
	store %..string* %9011, %..string** %9046
	%9047 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %9045, i64 0, i32 1
	store i64 4, i64* %9047
	%9048 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %9005, i64 0, i32 2
	%9049 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %9048, i64 0, i32 0
	store i64* %9012, i64** %9049
	%9050 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %9048, i64 0, i32 1
	store i64 4, i64* %9050
	%9051 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %9005, i64 0, i32 3
	%9052 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %9051, i64 0, i32 0
	store i1* %9013, i1** %9052
	%9053 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %9051, i64 0, i32 1
	store i64 4, i64* %9053
	%9054 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %9002, i64 0, i32 2 ; UnionTagPtr
	store i8 16, i8* %9054
	%9055 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 324
	%9056 = getelementptr inbounds %Type_Info, %Type_Info* %9055, i64 0, i32 2
	%9057 = getelementptr inbounds %Type_Info, %Type_Info* %9055, i64 0, i32 0
	store i64 8, i64* %9057
	%9058 = getelementptr inbounds %Type_Info, %Type_Info* %9055, i64 0, i32 1
	store i64 8, i64* %9058
	; TypeInfoPointer
	%9059 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %9056 to %Type_Info_Pointer*
	%9060 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 322
	%9061 = bitcast %Type_Info* %9060 to %Type_Info*
	%9062 = getelementptr inbounds %Type_Info_Pointer, %Type_Info_Pointer* %9059, i64 0, i32 0
	store %Type_Info* %9061, %Type_Info** %9062
	%9063 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %9056, i64 0, i32 2 ; UnionTagPtr
	store i8 9, i8* %9063
	%9064 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 325
	%9065 = getelementptr inbounds %Type_Info, %Type_Info* %9064, i64 0, i32 2
	%9066 = getelementptr inbounds %Type_Info, %Type_Info* %9064, i64 0, i32 0
	store i64 4, i64* %9066
	%9067 = getelementptr inbounds %Type_Info, %Type_Info* %9064, i64 0, i32 1
	store i64 4, i64* %9067
	; TypeInfoNamed
	%9068 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %9065 to %Type_Info_Named*
	%9069 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 326
	%9070 = bitcast %Type_Info* %9069 to %Type_Info*
	%9071 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %9068, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$6e5, i64 0, i32 0), i64 8}, %..string* %9071
	%9072 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %9068, i64 0, i32 1
	store %Type_Info* %9070, %Type_Info** %9072
	%9073 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %9065, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %9073
	%9074 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 326
	%9075 = getelementptr inbounds %Type_Info, %Type_Info* %9074, i64 0, i32 2
	%9076 = getelementptr inbounds %Type_Info, %Type_Info* %9074, i64 0, i32 0
	store i64 4, i64* %9076
	%9077 = getelementptr inbounds %Type_Info, %Type_Info* %9074, i64 0, i32 1
	store i64 4, i64* %9077
	; TypeInfoEnum
	%9078 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %9075 to %Type_Info_Enum*
	%9079 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 56
	%9080 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %9078, i64 0, i32 0
	store %Type_Info* %9079, %Type_Info** %9080
	%9081 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 0
	%9082 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 0
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %128
	%9083 = bitcast %Type_Info_Enum_Value* %128 to i32*
	store i32 0, i32* %9083
	%9084 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %128, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9084
	%9085 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %128, align 8
	store %Type_Info_Enum_Value %9085, %Type_Info_Enum_Value* %9082
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$6e6, i64 0, i32 0), i64 7}, %..string* %9081
	%9086 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 1
	%9087 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 1
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %129
	%9088 = bitcast %Type_Info_Enum_Value* %129 to i32*
	store i32 1, i32* %9088
	%9089 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %129, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9089
	%9090 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %129, align 8
	store %Type_Info_Enum_Value %9090, %Type_Info_Enum_Value* %9087
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$6e7, i64 0, i32 0), i64 7}, %..string* %9086
	%9091 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 2
	%9092 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 2
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %130
	%9093 = bitcast %Type_Info_Enum_Value* %130 to i32*
	store i32 2, i32* %9093
	%9094 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %130, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9094
	%9095 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %130, align 8
	store %Type_Info_Enum_Value %9095, %Type_Info_Enum_Value* %9092
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$6e8, i64 0, i32 0), i64 7}, %..string* %9091
	%9096 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 3
	%9097 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 3
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %131
	%9098 = bitcast %Type_Info_Enum_Value* %131 to i32*
	store i32 3, i32* %9098
	%9099 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %131, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9099
	%9100 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %131, align 8
	store %Type_Info_Enum_Value %9100, %Type_Info_Enum_Value* %9097
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$6e9, i64 0, i32 0), i64 6}, %..string* %9096
	%9101 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 4
	%9102 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 4
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %132
	%9103 = bitcast %Type_Info_Enum_Value* %132 to i32*
	store i32 4, i32* %9103
	%9104 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %132, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9104
	%9105 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %132, align 8
	store %Type_Info_Enum_Value %9105, %Type_Info_Enum_Value* %9102
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$6ea, i64 0, i32 0), i64 7}, %..string* %9101
	%9106 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 5
	%9107 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 5
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %133
	%9108 = bitcast %Type_Info_Enum_Value* %133 to i32*
	store i32 5, i32* %9108
	%9109 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %133, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9109
	%9110 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %133, align 8
	store %Type_Info_Enum_Value %9110, %Type_Info_Enum_Value* %9107
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$6eb, i64 0, i32 0), i64 8}, %..string* %9106
	%9111 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 6
	%9112 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 6
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %134
	%9113 = bitcast %Type_Info_Enum_Value* %134 to i32*
	store i32 6, i32* %9113
	%9114 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %134, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9114
	%9115 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %134, align 8
	store %Type_Info_Enum_Value %9115, %Type_Info_Enum_Value* %9112
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$6ec, i64 0, i32 0), i64 8}, %..string* %9111
	%9116 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 7
	%9117 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 7
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %135
	%9118 = bitcast %Type_Info_Enum_Value* %135 to i32*
	store i32 8, i32* %9118
	%9119 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %135, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9119
	%9120 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %135, align 8
	store %Type_Info_Enum_Value %9120, %Type_Info_Enum_Value* %9117
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$6ed, i64 0, i32 0), i64 4}, %..string* %9116
	%9121 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 8
	%9122 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 8
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %136
	%9123 = bitcast %Type_Info_Enum_Value* %136 to i32*
	store i32 9, i32* %9123
	%9124 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %136, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9124
	%9125 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %136, align 8
	store %Type_Info_Enum_Value %9125, %Type_Info_Enum_Value* %9122
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$6ee, i64 0, i32 0), i64 3}, %..string* %9121
	%9126 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 9
	%9127 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 9
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %137
	%9128 = bitcast %Type_Info_Enum_Value* %137 to i32*
	store i32 12, i32* %9128
	%9129 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %137, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9129
	%9130 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %137, align 8
	store %Type_Info_Enum_Value %9130, %Type_Info_Enum_Value* %9127
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$6ef, i64 0, i32 0), i64 5}, %..string* %9126
	%9131 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 10
	%9132 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 10
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %138
	%9133 = bitcast %Type_Info_Enum_Value* %138 to i32*
	store i32 13, i32* %9133
	%9134 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %138, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9134
	%9135 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %138, align 8
	store %Type_Info_Enum_Value %9135, %Type_Info_Enum_Value* %9132
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$6f0, i64 0, i32 0), i64 6}, %..string* %9131
	%9136 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 11
	%9137 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 11
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %139
	%9138 = bitcast %Type_Info_Enum_Value* %139 to i32*
	store i32 16, i32* %9138
	%9139 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %139, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9139
	%9140 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %139, align 8
	store %Type_Info_Enum_Value %9140, %Type_Info_Enum_Value* %9137
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$6f1, i64 0, i32 0), i64 5}, %..string* %9136
	%9141 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 12
	%9142 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 12
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %140
	%9143 = bitcast %Type_Info_Enum_Value* %140 to i32*
	store i32 17, i32* %9143
	%9144 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %140, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9144
	%9145 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %140, align 8
	store %Type_Info_Enum_Value %9145, %Type_Info_Enum_Value* %9142
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$6f2, i64 0, i32 0), i64 7}, %..string* %9141
	%9146 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 13
	%9147 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 13
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %141
	%9148 = bitcast %Type_Info_Enum_Value* %141 to i32*
	store i32 18, i32* %9148
	%9149 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %141, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9149
	%9150 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %141, align 8
	store %Type_Info_Enum_Value %9150, %Type_Info_Enum_Value* %9147
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$6f3, i64 0, i32 0), i64 4}, %..string* %9146
	%9151 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 14
	%9152 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 14
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %142
	%9153 = bitcast %Type_Info_Enum_Value* %142 to i32*
	store i32 19, i32* %9153
	%9154 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %142, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9154
	%9155 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %142, align 8
	store %Type_Info_Enum_Value %9155, %Type_Info_Enum_Value* %9152
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$6f4, i64 0, i32 0), i64 5}, %..string* %9151
	%9156 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 15
	%9157 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 15
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %143
	%9158 = bitcast %Type_Info_Enum_Value* %143 to i32*
	store i32 20, i32* %9158
	%9159 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %143, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9159
	%9160 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %143, align 8
	store %Type_Info_Enum_Value %9160, %Type_Info_Enum_Value* %9157
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$6f5, i64 0, i32 0), i64 7}, %..string* %9156
	%9161 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 16
	%9162 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 16
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %144
	%9163 = bitcast %Type_Info_Enum_Value* %144 to i32*
	store i32 21, i32* %9163
	%9164 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %144, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9164
	%9165 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %144, align 8
	store %Type_Info_Enum_Value %9165, %Type_Info_Enum_Value* %9162
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$6f6, i64 0, i32 0), i64 4}, %..string* %9161
	%9166 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 17
	%9167 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 17
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %145
	%9168 = bitcast %Type_Info_Enum_Value* %145 to i32*
	store i32 21, i32* %9168
	%9169 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %145, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9169
	%9170 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %145, align 8
	store %Type_Info_Enum_Value %9170, %Type_Info_Enum_Value* %9167
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$6f7, i64 0, i32 0), i64 7}, %..string* %9166
	%9171 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 18
	%9172 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 18
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %146
	%9173 = bitcast %Type_Info_Enum_Value* %146 to i32*
	store i32 21, i32* %9173
	%9174 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %146, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9174
	%9175 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %146, align 8
	store %Type_Info_Enum_Value %9175, %Type_Info_Enum_Value* %9172
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$6f8, i64 0, i32 0), i64 6}, %..string* %9171
	%9176 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 19
	%9177 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 19
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %147
	%9178 = bitcast %Type_Info_Enum_Value* %147 to i32*
	store i32 23, i32* %9178
	%9179 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %147, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9179
	%9180 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %147, align 8
	store %Type_Info_Enum_Value %9180, %Type_Info_Enum_Value* %9177
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$6f9, i64 0, i32 0), i64 5}, %..string* %9176
	%9181 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 20
	%9182 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 20
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %148
	%9183 = bitcast %Type_Info_Enum_Value* %148 to i32*
	store i32 24, i32* %9183
	%9184 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %148, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9184
	%9185 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %148, align 8
	store %Type_Info_Enum_Value %9185, %Type_Info_Enum_Value* %9182
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$6fa, i64 0, i32 0), i64 5}, %..string* %9181
	%9186 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 21
	%9187 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 21
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %149
	%9188 = bitcast %Type_Info_Enum_Value* %149 to i32*
	store i32 25, i32* %9188
	%9189 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %149, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9189
	%9190 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %149, align 8
	store %Type_Info_Enum_Value %9190, %Type_Info_Enum_Value* %9187
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$6fb, i64 0, i32 0), i64 5}, %..string* %9186
	%9191 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 22
	%9192 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 22
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %150
	%9193 = bitcast %Type_Info_Enum_Value* %150 to i32*
	store i32 25, i32* %9193
	%9194 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %150, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9194
	%9195 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %150, align 8
	store %Type_Info_Enum_Value %9195, %Type_Info_Enum_Value* %9192
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$6fc, i64 0, i32 0), i64 5}, %..string* %9191
	%9196 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 23
	%9197 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 23
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %151
	%9198 = bitcast %Type_Info_Enum_Value* %151 to i32*
	store i32 27, i32* %9198
	%9199 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %151, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9199
	%9200 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %151, align 8
	store %Type_Info_Enum_Value %9200, %Type_Info_Enum_Value* %9197
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$6fd, i64 0, i32 0), i64 6}, %..string* %9196
	%9201 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 24
	%9202 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 24
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %152
	%9203 = bitcast %Type_Info_Enum_Value* %152 to i32*
	store i32 28, i32* %9203
	%9204 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %152, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9204
	%9205 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %152, align 8
	store %Type_Info_Enum_Value %9205, %Type_Info_Enum_Value* %9202
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$6fe, i64 0, i32 0), i64 7}, %..string* %9201
	%9206 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 25
	%9207 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 25
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %153
	%9208 = bitcast %Type_Info_Enum_Value* %153 to i32*
	store i32 29, i32* %9208
	%9209 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %153, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9209
	%9210 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %153, align 8
	store %Type_Info_Enum_Value %9210, %Type_Info_Enum_Value* %9207
	store %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$6ff, i64 0, i32 0), i64 10}, %..string* %9206
	%9211 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 26
	%9212 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 26
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %154
	%9213 = bitcast %Type_Info_Enum_Value* %154 to i32*
	store i32 30, i32* %9213
	%9214 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %154, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9214
	%9215 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %154, align 8
	store %Type_Info_Enum_Value %9215, %Type_Info_Enum_Value* %9212
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$700, i64 0, i32 0), i64 6}, %..string* %9211
	%9216 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 27
	%9217 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 27
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %155
	%9218 = bitcast %Type_Info_Enum_Value* %155 to i32*
	store i32 31, i32* %9218
	%9219 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %155, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9219
	%9220 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %155, align 8
	store %Type_Info_Enum_Value %9220, %Type_Info_Enum_Value* %9217
	store %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$701, i64 0, i32 0), i64 10}, %..string* %9216
	%9221 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 28
	%9222 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 28
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %156
	%9223 = bitcast %Type_Info_Enum_Value* %156 to i32*
	store i32 32, i32* %9223
	%9224 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %156, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9224
	%9225 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %156, align 8
	store %Type_Info_Enum_Value %9225, %Type_Info_Enum_Value* %9222
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$702, i64 0, i32 0), i64 5}, %..string* %9221
	%9226 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 29
	%9227 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 29
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %157
	%9228 = bitcast %Type_Info_Enum_Value* %157 to i32*
	store i32 33, i32* %9228
	%9229 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %157, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9229
	%9230 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %157, align 8
	store %Type_Info_Enum_Value %9230, %Type_Info_Enum_Value* %9227
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$703, i64 0, i32 0), i64 5}, %..string* %9226
	%9231 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 30
	%9232 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 30
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %158
	%9233 = bitcast %Type_Info_Enum_Value* %158 to i32*
	store i32 34, i32* %9233
	%9234 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %158, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9234
	%9235 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %158, align 8
	store %Type_Info_Enum_Value %9235, %Type_Info_Enum_Value* %9232
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$704, i64 0, i32 0), i64 4}, %..string* %9231
	%9236 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 31
	%9237 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 31
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %159
	%9238 = bitcast %Type_Info_Enum_Value* %159 to i32*
	store i32 35, i32* %9238
	%9239 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %159, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9239
	%9240 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %159, align 8
	store %Type_Info_Enum_Value %9240, %Type_Info_Enum_Value* %9237
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$705, i64 0, i32 0), i64 3}, %..string* %9236
	%9241 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 32
	%9242 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 32
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %160
	%9243 = bitcast %Type_Info_Enum_Value* %160 to i32*
	store i32 36, i32* %9243
	%9244 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %160, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9244
	%9245 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %160, align 8
	store %Type_Info_Enum_Value %9245, %Type_Info_Enum_Value* %9242
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$706, i64 0, i32 0), i64 4}, %..string* %9241
	%9246 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 33
	%9247 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 33
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %161
	%9248 = bitcast %Type_Info_Enum_Value* %161 to i32*
	store i32 37, i32* %9248
	%9249 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %161, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9249
	%9250 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %161, align 8
	store %Type_Info_Enum_Value %9250, %Type_Info_Enum_Value* %9247
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$707, i64 0, i32 0), i64 4}, %..string* %9246
	%9251 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 34
	%9252 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 34
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %162
	%9253 = bitcast %Type_Info_Enum_Value* %162 to i32*
	store i32 38, i32* %9253
	%9254 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %162, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9254
	%9255 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %162, align 8
	store %Type_Info_Enum_Value %9255, %Type_Info_Enum_Value* %9252
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$708, i64 0, i32 0), i64 2}, %..string* %9251
	%9256 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 35
	%9257 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 35
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %163
	%9258 = bitcast %Type_Info_Enum_Value* %163 to i32*
	store i32 39, i32* %9258
	%9259 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %163, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9259
	%9260 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %163, align 8
	store %Type_Info_Enum_Value %9260, %Type_Info_Enum_Value* %9257
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$709, i64 0, i32 0), i64 5}, %..string* %9256
	%9261 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 36
	%9262 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 36
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %164
	%9263 = bitcast %Type_Info_Enum_Value* %164 to i32*
	store i32 40, i32* %9263
	%9264 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %164, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9264
	%9265 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %164, align 8
	store %Type_Info_Enum_Value %9265, %Type_Info_Enum_Value* %9262
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$70a, i64 0, i32 0), i64 4}, %..string* %9261
	%9266 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 37
	%9267 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 37
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %165
	%9268 = bitcast %Type_Info_Enum_Value* %165 to i32*
	store i32 41, i32* %9268
	%9269 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %165, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9269
	%9270 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %165, align 8
	store %Type_Info_Enum_Value %9270, %Type_Info_Enum_Value* %9267
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$70b, i64 0, i32 0), i64 6}, %..string* %9266
	%9271 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 38
	%9272 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 38
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %166
	%9273 = bitcast %Type_Info_Enum_Value* %166 to i32*
	store i32 42, i32* %9273
	%9274 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %166, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9274
	%9275 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %166, align 8
	store %Type_Info_Enum_Value %9275, %Type_Info_Enum_Value* %9272
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$70c, i64 0, i32 0), i64 5}, %..string* %9271
	%9276 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 39
	%9277 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 39
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %167
	%9278 = bitcast %Type_Info_Enum_Value* %167 to i32*
	store i32 43, i32* %9278
	%9279 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %167, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9279
	%9280 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %167, align 8
	store %Type_Info_Enum_Value %9280, %Type_Info_Enum_Value* %9277
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$70d, i64 0, i32 0), i64 7}, %..string* %9276
	%9281 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 40
	%9282 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 40
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %168
	%9283 = bitcast %Type_Info_Enum_Value* %168 to i32*
	store i32 44, i32* %9283
	%9284 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %168, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9284
	%9285 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %168, align 8
	store %Type_Info_Enum_Value %9285, %Type_Info_Enum_Value* %9282
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$70e, i64 0, i32 0), i64 8}, %..string* %9281
	%9286 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 41
	%9287 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 41
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %169
	%9288 = bitcast %Type_Info_Enum_Value* %169 to i32*
	store i32 45, i32* %9288
	%9289 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %169, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9289
	%9290 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %169, align 8
	store %Type_Info_Enum_Value %9290, %Type_Info_Enum_Value* %9287
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$70f, i64 0, i32 0), i64 6}, %..string* %9286
	%9291 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 42
	%9292 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 42
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %170
	%9293 = bitcast %Type_Info_Enum_Value* %170 to i32*
	store i32 46, i32* %9293
	%9294 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %170, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9294
	%9295 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %170, align 8
	store %Type_Info_Enum_Value %9295, %Type_Info_Enum_Value* %9292
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$710, i64 0, i32 0), i64 6}, %..string* %9291
	%9296 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 43
	%9297 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 43
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %171
	%9298 = bitcast %Type_Info_Enum_Value* %171 to i32*
	store i32 47, i32* %9298
	%9299 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %171, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9299
	%9300 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %171, align 8
	store %Type_Info_Enum_Value %9300, %Type_Info_Enum_Value* %9297
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$711, i64 0, i32 0), i64 4}, %..string* %9296
	%9301 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 44
	%9302 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 44
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %172
	%9303 = bitcast %Type_Info_Enum_Value* %172 to i32*
	store i32 48, i32* %9303
	%9304 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %172, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9304
	%9305 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %172, align 8
	store %Type_Info_Enum_Value %9305, %Type_Info_Enum_Value* %9302
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$712, i64 0, i32 0), i64 4}, %..string* %9301
	%9306 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 45
	%9307 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 45
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %173
	%9308 = bitcast %Type_Info_Enum_Value* %173 to i32*
	store i32 49, i32* %9308
	%9309 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %173, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9309
	%9310 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %173, align 8
	store %Type_Info_Enum_Value %9310, %Type_Info_Enum_Value* %9307
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$713, i64 0, i32 0), i64 4}, %..string* %9306
	%9311 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 46
	%9312 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 46
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %174
	%9313 = bitcast %Type_Info_Enum_Value* %174 to i32*
	store i32 50, i32* %9313
	%9314 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %174, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9314
	%9315 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %174, align 8
	store %Type_Info_Enum_Value %9315, %Type_Info_Enum_Value* %9312
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$714, i64 0, i32 0), i64 4}, %..string* %9311
	%9316 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 47
	%9317 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 47
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %175
	%9318 = bitcast %Type_Info_Enum_Value* %175 to i32*
	store i32 51, i32* %9318
	%9319 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %175, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9319
	%9320 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %175, align 8
	store %Type_Info_Enum_Value %9320, %Type_Info_Enum_Value* %9317
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$715, i64 0, i32 0), i64 4}, %..string* %9316
	%9321 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 48
	%9322 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 48
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %176
	%9323 = bitcast %Type_Info_Enum_Value* %176 to i32*
	store i32 52, i32* %9323
	%9324 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %176, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9324
	%9325 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %176, align 8
	store %Type_Info_Enum_Value %9325, %Type_Info_Enum_Value* %9322
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$716, i64 0, i32 0), i64 4}, %..string* %9321
	%9326 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 49
	%9327 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 49
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %177
	%9328 = bitcast %Type_Info_Enum_Value* %177 to i32*
	store i32 53, i32* %9328
	%9329 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %177, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9329
	%9330 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %177, align 8
	store %Type_Info_Enum_Value %9330, %Type_Info_Enum_Value* %9327
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$717, i64 0, i32 0), i64 4}, %..string* %9326
	%9331 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 50
	%9332 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 50
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %178
	%9333 = bitcast %Type_Info_Enum_Value* %178 to i32*
	store i32 54, i32* %9333
	%9334 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %178, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9334
	%9335 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %178, align 8
	store %Type_Info_Enum_Value %9335, %Type_Info_Enum_Value* %9332
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$718, i64 0, i32 0), i64 4}, %..string* %9331
	%9336 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 51
	%9337 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 51
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %179
	%9338 = bitcast %Type_Info_Enum_Value* %179 to i32*
	store i32 55, i32* %9338
	%9339 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %179, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9339
	%9340 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %179, align 8
	store %Type_Info_Enum_Value %9340, %Type_Info_Enum_Value* %9337
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$719, i64 0, i32 0), i64 4}, %..string* %9336
	%9341 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 52
	%9342 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 52
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %180
	%9343 = bitcast %Type_Info_Enum_Value* %180 to i32*
	store i32 56, i32* %9343
	%9344 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %180, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9344
	%9345 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %180, align 8
	store %Type_Info_Enum_Value %9345, %Type_Info_Enum_Value* %9342
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$71a, i64 0, i32 0), i64 4}, %..string* %9341
	%9346 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 53
	%9347 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 53
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %181
	%9348 = bitcast %Type_Info_Enum_Value* %181 to i32*
	store i32 57, i32* %9348
	%9349 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %181, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9349
	%9350 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %181, align 8
	store %Type_Info_Enum_Value %9350, %Type_Info_Enum_Value* %9347
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$71b, i64 0, i32 0), i64 4}, %..string* %9346
	%9351 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 54
	%9352 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 54
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %182
	%9353 = bitcast %Type_Info_Enum_Value* %182 to i32*
	store i32 65, i32* %9353
	%9354 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %182, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9354
	%9355 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %182, align 8
	store %Type_Info_Enum_Value %9355, %Type_Info_Enum_Value* %9352
	store %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$71c, i64 0, i32 0), i64 1}, %..string* %9351
	%9356 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 55
	%9357 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 55
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %183
	%9358 = bitcast %Type_Info_Enum_Value* %183 to i32*
	store i32 66, i32* %9358
	%9359 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %183, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9359
	%9360 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %183, align 8
	store %Type_Info_Enum_Value %9360, %Type_Info_Enum_Value* %9357
	store %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$71d, i64 0, i32 0), i64 1}, %..string* %9356
	%9361 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 56
	%9362 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 56
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %184
	%9363 = bitcast %Type_Info_Enum_Value* %184 to i32*
	store i32 67, i32* %9363
	%9364 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %184, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9364
	%9365 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %184, align 8
	store %Type_Info_Enum_Value %9365, %Type_Info_Enum_Value* %9362
	store %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$71e, i64 0, i32 0), i64 1}, %..string* %9361
	%9366 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 57
	%9367 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 57
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %185
	%9368 = bitcast %Type_Info_Enum_Value* %185 to i32*
	store i32 68, i32* %9368
	%9369 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %185, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9369
	%9370 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %185, align 8
	store %Type_Info_Enum_Value %9370, %Type_Info_Enum_Value* %9367
	store %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$71f, i64 0, i32 0), i64 1}, %..string* %9366
	%9371 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 58
	%9372 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 58
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %186
	%9373 = bitcast %Type_Info_Enum_Value* %186 to i32*
	store i32 69, i32* %9373
	%9374 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %186, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9374
	%9375 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %186, align 8
	store %Type_Info_Enum_Value %9375, %Type_Info_Enum_Value* %9372
	store %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$720, i64 0, i32 0), i64 1}, %..string* %9371
	%9376 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 59
	%9377 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 59
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %187
	%9378 = bitcast %Type_Info_Enum_Value* %187 to i32*
	store i32 70, i32* %9378
	%9379 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %187, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9379
	%9380 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %187, align 8
	store %Type_Info_Enum_Value %9380, %Type_Info_Enum_Value* %9377
	store %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$721, i64 0, i32 0), i64 1}, %..string* %9376
	%9381 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 60
	%9382 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 60
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %188
	%9383 = bitcast %Type_Info_Enum_Value* %188 to i32*
	store i32 71, i32* %9383
	%9384 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %188, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9384
	%9385 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %188, align 8
	store %Type_Info_Enum_Value %9385, %Type_Info_Enum_Value* %9382
	store %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$722, i64 0, i32 0), i64 1}, %..string* %9381
	%9386 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 61
	%9387 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 61
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %189
	%9388 = bitcast %Type_Info_Enum_Value* %189 to i32*
	store i32 72, i32* %9388
	%9389 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %189, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9389
	%9390 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %189, align 8
	store %Type_Info_Enum_Value %9390, %Type_Info_Enum_Value* %9387
	store %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$723, i64 0, i32 0), i64 1}, %..string* %9386
	%9391 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 62
	%9392 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 62
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %190
	%9393 = bitcast %Type_Info_Enum_Value* %190 to i32*
	store i32 73, i32* %9393
	%9394 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %190, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9394
	%9395 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %190, align 8
	store %Type_Info_Enum_Value %9395, %Type_Info_Enum_Value* %9392
	store %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$724, i64 0, i32 0), i64 1}, %..string* %9391
	%9396 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 63
	%9397 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 63
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %191
	%9398 = bitcast %Type_Info_Enum_Value* %191 to i32*
	store i32 74, i32* %9398
	%9399 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %191, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9399
	%9400 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %191, align 8
	store %Type_Info_Enum_Value %9400, %Type_Info_Enum_Value* %9397
	store %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$725, i64 0, i32 0), i64 1}, %..string* %9396
	%9401 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 64
	%9402 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 64
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %192
	%9403 = bitcast %Type_Info_Enum_Value* %192 to i32*
	store i32 75, i32* %9403
	%9404 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %192, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9404
	%9405 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %192, align 8
	store %Type_Info_Enum_Value %9405, %Type_Info_Enum_Value* %9402
	store %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$726, i64 0, i32 0), i64 1}, %..string* %9401
	%9406 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 65
	%9407 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 65
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %193
	%9408 = bitcast %Type_Info_Enum_Value* %193 to i32*
	store i32 76, i32* %9408
	%9409 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %193, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9409
	%9410 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %193, align 8
	store %Type_Info_Enum_Value %9410, %Type_Info_Enum_Value* %9407
	store %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$727, i64 0, i32 0), i64 1}, %..string* %9406
	%9411 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 66
	%9412 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 66
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %194
	%9413 = bitcast %Type_Info_Enum_Value* %194 to i32*
	store i32 77, i32* %9413
	%9414 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %194, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9414
	%9415 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %194, align 8
	store %Type_Info_Enum_Value %9415, %Type_Info_Enum_Value* %9412
	store %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$728, i64 0, i32 0), i64 1}, %..string* %9411
	%9416 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 67
	%9417 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 67
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %195
	%9418 = bitcast %Type_Info_Enum_Value* %195 to i32*
	store i32 78, i32* %9418
	%9419 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %195, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9419
	%9420 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %195, align 8
	store %Type_Info_Enum_Value %9420, %Type_Info_Enum_Value* %9417
	store %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$729, i64 0, i32 0), i64 1}, %..string* %9416
	%9421 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 68
	%9422 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 68
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %196
	%9423 = bitcast %Type_Info_Enum_Value* %196 to i32*
	store i32 79, i32* %9423
	%9424 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %196, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9424
	%9425 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %196, align 8
	store %Type_Info_Enum_Value %9425, %Type_Info_Enum_Value* %9422
	store %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$72a, i64 0, i32 0), i64 1}, %..string* %9421
	%9426 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 69
	%9427 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 69
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %197
	%9428 = bitcast %Type_Info_Enum_Value* %197 to i32*
	store i32 80, i32* %9428
	%9429 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %197, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9429
	%9430 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %197, align 8
	store %Type_Info_Enum_Value %9430, %Type_Info_Enum_Value* %9427
	store %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$72b, i64 0, i32 0), i64 1}, %..string* %9426
	%9431 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 70
	%9432 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 70
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %198
	%9433 = bitcast %Type_Info_Enum_Value* %198 to i32*
	store i32 81, i32* %9433
	%9434 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %198, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9434
	%9435 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %198, align 8
	store %Type_Info_Enum_Value %9435, %Type_Info_Enum_Value* %9432
	store %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$72c, i64 0, i32 0), i64 1}, %..string* %9431
	%9436 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 71
	%9437 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 71
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %199
	%9438 = bitcast %Type_Info_Enum_Value* %199 to i32*
	store i32 82, i32* %9438
	%9439 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %199, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9439
	%9440 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %199, align 8
	store %Type_Info_Enum_Value %9440, %Type_Info_Enum_Value* %9437
	store %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$72d, i64 0, i32 0), i64 1}, %..string* %9436
	%9441 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 72
	%9442 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 72
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %200
	%9443 = bitcast %Type_Info_Enum_Value* %200 to i32*
	store i32 83, i32* %9443
	%9444 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %200, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9444
	%9445 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %200, align 8
	store %Type_Info_Enum_Value %9445, %Type_Info_Enum_Value* %9442
	store %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$72e, i64 0, i32 0), i64 1}, %..string* %9441
	%9446 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 73
	%9447 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 73
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %201
	%9448 = bitcast %Type_Info_Enum_Value* %201 to i32*
	store i32 84, i32* %9448
	%9449 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %201, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9449
	%9450 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %201, align 8
	store %Type_Info_Enum_Value %9450, %Type_Info_Enum_Value* %9447
	store %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$72f, i64 0, i32 0), i64 1}, %..string* %9446
	%9451 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 74
	%9452 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 74
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %202
	%9453 = bitcast %Type_Info_Enum_Value* %202 to i32*
	store i32 85, i32* %9453
	%9454 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %202, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9454
	%9455 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %202, align 8
	store %Type_Info_Enum_Value %9455, %Type_Info_Enum_Value* %9452
	store %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$730, i64 0, i32 0), i64 1}, %..string* %9451
	%9456 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 75
	%9457 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 75
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %203
	%9458 = bitcast %Type_Info_Enum_Value* %203 to i32*
	store i32 86, i32* %9458
	%9459 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %203, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9459
	%9460 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %203, align 8
	store %Type_Info_Enum_Value %9460, %Type_Info_Enum_Value* %9457
	store %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$731, i64 0, i32 0), i64 1}, %..string* %9456
	%9461 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 76
	%9462 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 76
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %204
	%9463 = bitcast %Type_Info_Enum_Value* %204 to i32*
	store i32 87, i32* %9463
	%9464 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %204, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9464
	%9465 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %204, align 8
	store %Type_Info_Enum_Value %9465, %Type_Info_Enum_Value* %9462
	store %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$732, i64 0, i32 0), i64 1}, %..string* %9461
	%9466 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 77
	%9467 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 77
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %205
	%9468 = bitcast %Type_Info_Enum_Value* %205 to i32*
	store i32 88, i32* %9468
	%9469 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %205, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9469
	%9470 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %205, align 8
	store %Type_Info_Enum_Value %9470, %Type_Info_Enum_Value* %9467
	store %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$733, i64 0, i32 0), i64 1}, %..string* %9466
	%9471 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 78
	%9472 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 78
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %206
	%9473 = bitcast %Type_Info_Enum_Value* %206 to i32*
	store i32 89, i32* %9473
	%9474 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %206, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9474
	%9475 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %206, align 8
	store %Type_Info_Enum_Value %9475, %Type_Info_Enum_Value* %9472
	store %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$734, i64 0, i32 0), i64 1}, %..string* %9471
	%9476 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 79
	%9477 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 79
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %207
	%9478 = bitcast %Type_Info_Enum_Value* %207 to i32*
	store i32 90, i32* %9478
	%9479 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %207, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9479
	%9480 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %207, align 8
	store %Type_Info_Enum_Value %9480, %Type_Info_Enum_Value* %9477
	store %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$735, i64 0, i32 0), i64 1}, %..string* %9476
	%9481 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 80
	%9482 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 80
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %208
	%9483 = bitcast %Type_Info_Enum_Value* %208 to i32*
	store i32 91, i32* %9483
	%9484 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %208, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9484
	%9485 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %208, align 8
	store %Type_Info_Enum_Value %9485, %Type_Info_Enum_Value* %9482
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$736, i64 0, i32 0), i64 4}, %..string* %9481
	%9486 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 81
	%9487 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 81
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %209
	%9488 = bitcast %Type_Info_Enum_Value* %209 to i32*
	store i32 92, i32* %9488
	%9489 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %209, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9489
	%9490 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %209, align 8
	store %Type_Info_Enum_Value %9490, %Type_Info_Enum_Value* %9487
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$737, i64 0, i32 0), i64 4}, %..string* %9486
	%9491 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 82
	%9492 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 82
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %210
	%9493 = bitcast %Type_Info_Enum_Value* %210 to i32*
	store i32 93, i32* %9493
	%9494 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %210, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9494
	%9495 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %210, align 8
	store %Type_Info_Enum_Value %9495, %Type_Info_Enum_Value* %9492
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$738, i64 0, i32 0), i64 4}, %..string* %9491
	%9496 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 83
	%9497 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 83
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %211
	%9498 = bitcast %Type_Info_Enum_Value* %211 to i32*
	store i32 96, i32* %9498
	%9499 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %211, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9499
	%9500 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %211, align 8
	store %Type_Info_Enum_Value %9500, %Type_Info_Enum_Value* %9497
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$739, i64 0, i32 0), i64 7}, %..string* %9496
	%9501 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 84
	%9502 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 84
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %212
	%9503 = bitcast %Type_Info_Enum_Value* %212 to i32*
	store i32 97, i32* %9503
	%9504 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %212, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9504
	%9505 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %212, align 8
	store %Type_Info_Enum_Value %9505, %Type_Info_Enum_Value* %9502
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$73a, i64 0, i32 0), i64 7}, %..string* %9501
	%9506 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 85
	%9507 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 85
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %213
	%9508 = bitcast %Type_Info_Enum_Value* %213 to i32*
	store i32 98, i32* %9508
	%9509 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %213, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9509
	%9510 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %213, align 8
	store %Type_Info_Enum_Value %9510, %Type_Info_Enum_Value* %9507
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$73b, i64 0, i32 0), i64 7}, %..string* %9506
	%9511 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 86
	%9512 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 86
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %214
	%9513 = bitcast %Type_Info_Enum_Value* %214 to i32*
	store i32 99, i32* %9513
	%9514 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %214, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9514
	%9515 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %214, align 8
	store %Type_Info_Enum_Value %9515, %Type_Info_Enum_Value* %9512
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$73c, i64 0, i32 0), i64 7}, %..string* %9511
	%9516 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 87
	%9517 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 87
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %215
	%9518 = bitcast %Type_Info_Enum_Value* %215 to i32*
	store i32 100, i32* %9518
	%9519 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %215, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9519
	%9520 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %215, align 8
	store %Type_Info_Enum_Value %9520, %Type_Info_Enum_Value* %9517
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$73d, i64 0, i32 0), i64 7}, %..string* %9516
	%9521 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 88
	%9522 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 88
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %216
	%9523 = bitcast %Type_Info_Enum_Value* %216 to i32*
	store i32 101, i32* %9523
	%9524 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %216, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9524
	%9525 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %216, align 8
	store %Type_Info_Enum_Value %9525, %Type_Info_Enum_Value* %9522
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$73e, i64 0, i32 0), i64 7}, %..string* %9521
	%9526 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 89
	%9527 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 89
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %217
	%9528 = bitcast %Type_Info_Enum_Value* %217 to i32*
	store i32 102, i32* %9528
	%9529 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %217, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9529
	%9530 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %217, align 8
	store %Type_Info_Enum_Value %9530, %Type_Info_Enum_Value* %9527
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$73f, i64 0, i32 0), i64 7}, %..string* %9526
	%9531 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 90
	%9532 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 90
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %218
	%9533 = bitcast %Type_Info_Enum_Value* %218 to i32*
	store i32 103, i32* %9533
	%9534 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %218, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9534
	%9535 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %218, align 8
	store %Type_Info_Enum_Value %9535, %Type_Info_Enum_Value* %9532
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$740, i64 0, i32 0), i64 7}, %..string* %9531
	%9536 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 91
	%9537 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 91
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %219
	%9538 = bitcast %Type_Info_Enum_Value* %219 to i32*
	store i32 104, i32* %9538
	%9539 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %219, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9539
	%9540 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %219, align 8
	store %Type_Info_Enum_Value %9540, %Type_Info_Enum_Value* %9537
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$741, i64 0, i32 0), i64 7}, %..string* %9536
	%9541 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 92
	%9542 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 92
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %220
	%9543 = bitcast %Type_Info_Enum_Value* %220 to i32*
	store i32 105, i32* %9543
	%9544 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %220, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9544
	%9545 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %220, align 8
	store %Type_Info_Enum_Value %9545, %Type_Info_Enum_Value* %9542
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$742, i64 0, i32 0), i64 7}, %..string* %9541
	%9546 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 93
	%9547 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 93
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %221
	%9548 = bitcast %Type_Info_Enum_Value* %221 to i32*
	store i32 106, i32* %9548
	%9549 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %221, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9549
	%9550 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %221, align 8
	store %Type_Info_Enum_Value %9550, %Type_Info_Enum_Value* %9547
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$743, i64 0, i32 0), i64 8}, %..string* %9546
	%9551 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 94
	%9552 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 94
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %222
	%9553 = bitcast %Type_Info_Enum_Value* %222 to i32*
	store i32 107, i32* %9553
	%9554 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %222, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9554
	%9555 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %222, align 8
	store %Type_Info_Enum_Value %9555, %Type_Info_Enum_Value* %9552
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$744, i64 0, i32 0), i64 3}, %..string* %9551
	%9556 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 95
	%9557 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 95
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %223
	%9558 = bitcast %Type_Info_Enum_Value* %223 to i32*
	store i32 108, i32* %9558
	%9559 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %223, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9559
	%9560 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %223, align 8
	store %Type_Info_Enum_Value %9560, %Type_Info_Enum_Value* %9557
	store %..string {i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__str$745, i64 0, i32 0), i64 9}, %..string* %9556
	%9561 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 96
	%9562 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 96
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %224
	%9563 = bitcast %Type_Info_Enum_Value* %224 to i32*
	store i32 109, i32* %9563
	%9564 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %224, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9564
	%9565 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %224, align 8
	store %Type_Info_Enum_Value %9565, %Type_Info_Enum_Value* %9562
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$746, i64 0, i32 0), i64 8}, %..string* %9561
	%9566 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 97
	%9567 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 97
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %225
	%9568 = bitcast %Type_Info_Enum_Value* %225 to i32*
	store i32 110, i32* %9568
	%9569 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %225, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9569
	%9570 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %225, align 8
	store %Type_Info_Enum_Value %9570, %Type_Info_Enum_Value* %9567
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$747, i64 0, i32 0), i64 7}, %..string* %9566
	%9571 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 98
	%9572 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 98
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %226
	%9573 = bitcast %Type_Info_Enum_Value* %226 to i32*
	store i32 111, i32* %9573
	%9574 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %226, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9574
	%9575 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %226, align 8
	store %Type_Info_Enum_Value %9575, %Type_Info_Enum_Value* %9572
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$748, i64 0, i32 0), i64 6}, %..string* %9571
	%9576 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 99
	%9577 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 99
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %227
	%9578 = bitcast %Type_Info_Enum_Value* %227 to i32*
	store i32 112, i32* %9578
	%9579 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %227, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9579
	%9580 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %227, align 8
	store %Type_Info_Enum_Value %9580, %Type_Info_Enum_Value* %9577
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$749, i64 0, i32 0), i64 2}, %..string* %9576
	%9581 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 100
	%9582 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 100
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %228
	%9583 = bitcast %Type_Info_Enum_Value* %228 to i32*
	store i32 113, i32* %9583
	%9584 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %228, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9584
	%9585 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %228, align 8
	store %Type_Info_Enum_Value %9585, %Type_Info_Enum_Value* %9582
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$74a, i64 0, i32 0), i64 2}, %..string* %9581
	%9586 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 101
	%9587 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 101
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %229
	%9588 = bitcast %Type_Info_Enum_Value* %229 to i32*
	store i32 114, i32* %9588
	%9589 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %229, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9589
	%9590 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %229, align 8
	store %Type_Info_Enum_Value %9590, %Type_Info_Enum_Value* %9587
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$74b, i64 0, i32 0), i64 2}, %..string* %9586
	%9591 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 102
	%9592 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 102
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %230
	%9593 = bitcast %Type_Info_Enum_Value* %230 to i32*
	store i32 115, i32* %9593
	%9594 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %230, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9594
	%9595 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %230, align 8
	store %Type_Info_Enum_Value %9595, %Type_Info_Enum_Value* %9592
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$74c, i64 0, i32 0), i64 2}, %..string* %9591
	%9596 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 103
	%9597 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 103
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %231
	%9598 = bitcast %Type_Info_Enum_Value* %231 to i32*
	store i32 116, i32* %9598
	%9599 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %231, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9599
	%9600 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %231, align 8
	store %Type_Info_Enum_Value %9600, %Type_Info_Enum_Value* %9597
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$74d, i64 0, i32 0), i64 2}, %..string* %9596
	%9601 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 104
	%9602 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 104
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %232
	%9603 = bitcast %Type_Info_Enum_Value* %232 to i32*
	store i32 117, i32* %9603
	%9604 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %232, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9604
	%9605 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %232, align 8
	store %Type_Info_Enum_Value %9605, %Type_Info_Enum_Value* %9602
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$74e, i64 0, i32 0), i64 2}, %..string* %9601
	%9606 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 105
	%9607 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 105
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %233
	%9608 = bitcast %Type_Info_Enum_Value* %233 to i32*
	store i32 118, i32* %9608
	%9609 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %233, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9609
	%9610 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %233, align 8
	store %Type_Info_Enum_Value %9610, %Type_Info_Enum_Value* %9607
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$74f, i64 0, i32 0), i64 2}, %..string* %9606
	%9611 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 106
	%9612 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 106
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %234
	%9613 = bitcast %Type_Info_Enum_Value* %234 to i32*
	store i32 119, i32* %9613
	%9614 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %234, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9614
	%9615 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %234, align 8
	store %Type_Info_Enum_Value %9615, %Type_Info_Enum_Value* %9612
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$750, i64 0, i32 0), i64 2}, %..string* %9611
	%9616 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 107
	%9617 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 107
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %235
	%9618 = bitcast %Type_Info_Enum_Value* %235 to i32*
	store i32 120, i32* %9618
	%9619 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %235, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9619
	%9620 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %235, align 8
	store %Type_Info_Enum_Value %9620, %Type_Info_Enum_Value* %9617
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$751, i64 0, i32 0), i64 2}, %..string* %9616
	%9621 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 108
	%9622 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 108
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %236
	%9623 = bitcast %Type_Info_Enum_Value* %236 to i32*
	store i32 121, i32* %9623
	%9624 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %236, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9624
	%9625 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %236, align 8
	store %Type_Info_Enum_Value %9625, %Type_Info_Enum_Value* %9622
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$752, i64 0, i32 0), i64 3}, %..string* %9621
	%9626 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 109
	%9627 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 109
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %237
	%9628 = bitcast %Type_Info_Enum_Value* %237 to i32*
	store i32 122, i32* %9628
	%9629 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %237, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9629
	%9630 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %237, align 8
	store %Type_Info_Enum_Value %9630, %Type_Info_Enum_Value* %9627
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$753, i64 0, i32 0), i64 3}, %..string* %9626
	%9631 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 110
	%9632 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 110
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %238
	%9633 = bitcast %Type_Info_Enum_Value* %238 to i32*
	store i32 123, i32* %9633
	%9634 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %238, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9634
	%9635 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %238, align 8
	store %Type_Info_Enum_Value %9635, %Type_Info_Enum_Value* %9632
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$754, i64 0, i32 0), i64 3}, %..string* %9631
	%9636 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 111
	%9637 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 111
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %239
	%9638 = bitcast %Type_Info_Enum_Value* %239 to i32*
	store i32 124, i32* %9638
	%9639 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %239, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9639
	%9640 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %239, align 8
	store %Type_Info_Enum_Value %9640, %Type_Info_Enum_Value* %9637
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$755, i64 0, i32 0), i64 3}, %..string* %9636
	%9641 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 112
	%9642 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 112
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %240
	%9643 = bitcast %Type_Info_Enum_Value* %240 to i32*
	store i32 125, i32* %9643
	%9644 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %240, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9644
	%9645 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %240, align 8
	store %Type_Info_Enum_Value %9645, %Type_Info_Enum_Value* %9642
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$756, i64 0, i32 0), i64 3}, %..string* %9641
	%9646 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 113
	%9647 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 113
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %241
	%9648 = bitcast %Type_Info_Enum_Value* %241 to i32*
	store i32 126, i32* %9648
	%9649 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %241, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9649
	%9650 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %241, align 8
	store %Type_Info_Enum_Value %9650, %Type_Info_Enum_Value* %9647
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$757, i64 0, i32 0), i64 3}, %..string* %9646
	%9651 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 114
	%9652 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 114
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %242
	%9653 = bitcast %Type_Info_Enum_Value* %242 to i32*
	store i32 127, i32* %9653
	%9654 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %242, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9654
	%9655 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %242, align 8
	store %Type_Info_Enum_Value %9655, %Type_Info_Enum_Value* %9652
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$758, i64 0, i32 0), i64 3}, %..string* %9651
	%9656 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 115
	%9657 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 115
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %243
	%9658 = bitcast %Type_Info_Enum_Value* %243 to i32*
	store i32 128, i32* %9658
	%9659 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %243, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9659
	%9660 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %243, align 8
	store %Type_Info_Enum_Value %9660, %Type_Info_Enum_Value* %9657
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$759, i64 0, i32 0), i64 3}, %..string* %9656
	%9661 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 116
	%9662 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 116
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %244
	%9663 = bitcast %Type_Info_Enum_Value* %244 to i32*
	store i32 129, i32* %9663
	%9664 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %244, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9664
	%9665 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %244, align 8
	store %Type_Info_Enum_Value %9665, %Type_Info_Enum_Value* %9662
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$75a, i64 0, i32 0), i64 3}, %..string* %9661
	%9666 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 117
	%9667 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 117
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %245
	%9668 = bitcast %Type_Info_Enum_Value* %245 to i32*
	store i32 130, i32* %9668
	%9669 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %245, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9669
	%9670 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %245, align 8
	store %Type_Info_Enum_Value %9670, %Type_Info_Enum_Value* %9667
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$75b, i64 0, i32 0), i64 3}, %..string* %9666
	%9671 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 118
	%9672 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 118
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %246
	%9673 = bitcast %Type_Info_Enum_Value* %246 to i32*
	store i32 131, i32* %9673
	%9674 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %246, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9674
	%9675 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %246, align 8
	store %Type_Info_Enum_Value %9675, %Type_Info_Enum_Value* %9672
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$75c, i64 0, i32 0), i64 3}, %..string* %9671
	%9676 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 119
	%9677 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 119
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %247
	%9678 = bitcast %Type_Info_Enum_Value* %247 to i32*
	store i32 132, i32* %9678
	%9679 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %247, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9679
	%9680 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %247, align 8
	store %Type_Info_Enum_Value %9680, %Type_Info_Enum_Value* %9677
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$75d, i64 0, i32 0), i64 3}, %..string* %9676
	%9681 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 120
	%9682 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 120
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %248
	%9683 = bitcast %Type_Info_Enum_Value* %248 to i32*
	store i32 133, i32* %9683
	%9684 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %248, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9684
	%9685 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %248, align 8
	store %Type_Info_Enum_Value %9685, %Type_Info_Enum_Value* %9682
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$75e, i64 0, i32 0), i64 3}, %..string* %9681
	%9686 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 121
	%9687 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 121
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %249
	%9688 = bitcast %Type_Info_Enum_Value* %249 to i32*
	store i32 134, i32* %9688
	%9689 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %249, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9689
	%9690 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %249, align 8
	store %Type_Info_Enum_Value %9690, %Type_Info_Enum_Value* %9687
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$75f, i64 0, i32 0), i64 3}, %..string* %9686
	%9691 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 122
	%9692 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 122
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %250
	%9693 = bitcast %Type_Info_Enum_Value* %250 to i32*
	store i32 135, i32* %9693
	%9694 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %250, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9694
	%9695 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %250, align 8
	store %Type_Info_Enum_Value %9695, %Type_Info_Enum_Value* %9692
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$760, i64 0, i32 0), i64 3}, %..string* %9691
	%9696 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 123
	%9697 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 123
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %251
	%9698 = bitcast %Type_Info_Enum_Value* %251 to i32*
	store i32 144, i32* %9698
	%9699 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %251, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9699
	%9700 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %251, align 8
	store %Type_Info_Enum_Value %9700, %Type_Info_Enum_Value* %9697
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$761, i64 0, i32 0), i64 7}, %..string* %9696
	%9701 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 124
	%9702 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 124
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %252
	%9703 = bitcast %Type_Info_Enum_Value* %252 to i32*
	store i32 145, i32* %9703
	%9704 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %252, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9704
	%9705 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %252, align 8
	store %Type_Info_Enum_Value %9705, %Type_Info_Enum_Value* %9702
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$762, i64 0, i32 0), i64 6}, %..string* %9701
	%9706 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 125
	%9707 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 125
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %253
	%9708 = bitcast %Type_Info_Enum_Value* %253 to i32*
	store i32 160, i32* %9708
	%9709 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %253, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9709
	%9710 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %253, align 8
	store %Type_Info_Enum_Value %9710, %Type_Info_Enum_Value* %9707
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$763, i64 0, i32 0), i64 6}, %..string* %9706
	%9711 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 126
	%9712 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 126
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %254
	%9713 = bitcast %Type_Info_Enum_Value* %254 to i32*
	store i32 161, i32* %9713
	%9714 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %254, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9714
	%9715 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %254, align 8
	store %Type_Info_Enum_Value %9715, %Type_Info_Enum_Value* %9712
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$764, i64 0, i32 0), i64 6}, %..string* %9711
	%9716 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 127
	%9717 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 127
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %255
	%9718 = bitcast %Type_Info_Enum_Value* %255 to i32*
	store i32 162, i32* %9718
	%9719 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %255, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9719
	%9720 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %255, align 8
	store %Type_Info_Enum_Value %9720, %Type_Info_Enum_Value* %9717
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$765, i64 0, i32 0), i64 8}, %..string* %9716
	%9721 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 128
	%9722 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 128
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %256
	%9723 = bitcast %Type_Info_Enum_Value* %256 to i32*
	store i32 163, i32* %9723
	%9724 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %256, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9724
	%9725 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %256, align 8
	store %Type_Info_Enum_Value %9725, %Type_Info_Enum_Value* %9722
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$766, i64 0, i32 0), i64 8}, %..string* %9721
	%9726 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 129
	%9727 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 129
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %257
	%9728 = bitcast %Type_Info_Enum_Value* %257 to i32*
	store i32 164, i32* %9728
	%9729 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %257, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9729
	%9730 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %257, align 8
	store %Type_Info_Enum_Value %9730, %Type_Info_Enum_Value* %9727
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$767, i64 0, i32 0), i64 5}, %..string* %9726
	%9731 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 130
	%9732 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 130
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %258
	%9733 = bitcast %Type_Info_Enum_Value* %258 to i32*
	store i32 165, i32* %9733
	%9734 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %258, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9734
	%9735 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %258, align 8
	store %Type_Info_Enum_Value %9735, %Type_Info_Enum_Value* %9732
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$768, i64 0, i32 0), i64 5}, %..string* %9731
	%9736 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 131
	%9737 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 131
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %259
	%9738 = bitcast %Type_Info_Enum_Value* %259 to i32*
	store i32 229, i32* %9738
	%9739 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %259, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9739
	%9740 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %259, align 8
	store %Type_Info_Enum_Value %9740, %Type_Info_Enum_Value* %9737
	store %..string {i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__str$769, i64 0, i32 0), i64 10}, %..string* %9736
	%9741 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 132
	%9742 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 132
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %260
	%9743 = bitcast %Type_Info_Enum_Value* %260 to i32*
	store i32 246, i32* %9743
	%9744 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %260, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9744
	%9745 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %260, align 8
	store %Type_Info_Enum_Value %9745, %Type_Info_Enum_Value* %9742
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$76a, i64 0, i32 0), i64 4}, %..string* %9741
	%9746 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 133
	%9747 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 133
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %261
	%9748 = bitcast %Type_Info_Enum_Value* %261 to i32*
	store i32 247, i32* %9748
	%9749 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %261, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9749
	%9750 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %261, align 8
	store %Type_Info_Enum_Value %9750, %Type_Info_Enum_Value* %9747
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$76b, i64 0, i32 0), i64 5}, %..string* %9746
	%9751 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 134
	%9752 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 134
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %262
	%9753 = bitcast %Type_Info_Enum_Value* %262 to i32*
	store i32 248, i32* %9753
	%9754 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %262, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9754
	%9755 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %262, align 8
	store %Type_Info_Enum_Value %9755, %Type_Info_Enum_Value* %9752
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$76c, i64 0, i32 0), i64 5}, %..string* %9751
	%9756 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 135
	%9757 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 135
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %263
	%9758 = bitcast %Type_Info_Enum_Value* %263 to i32*
	store i32 249, i32* %9758
	%9759 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %263, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9759
	%9760 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %263, align 8
	store %Type_Info_Enum_Value %9760, %Type_Info_Enum_Value* %9757
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$76d, i64 0, i32 0), i64 5}, %..string* %9756
	%9761 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 136
	%9762 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 136
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %264
	%9763 = bitcast %Type_Info_Enum_Value* %264 to i32*
	store i32 250, i32* %9763
	%9764 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %264, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9764
	%9765 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %264, align 8
	store %Type_Info_Enum_Value %9765, %Type_Info_Enum_Value* %9762
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$76e, i64 0, i32 0), i64 4}, %..string* %9761
	%9766 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 137
	%9767 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 137
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %265
	%9768 = bitcast %Type_Info_Enum_Value* %265 to i32*
	store i32 251, i32* %9768
	%9769 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %265, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9769
	%9770 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %265, align 8
	store %Type_Info_Enum_Value %9770, %Type_Info_Enum_Value* %9767
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$76f, i64 0, i32 0), i64 4}, %..string* %9766
	%9771 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 138
	%9772 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 138
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %266
	%9773 = bitcast %Type_Info_Enum_Value* %266 to i32*
	store i32 252, i32* %9773
	%9774 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %266, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9774
	%9775 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %266, align 8
	store %Type_Info_Enum_Value %9775, %Type_Info_Enum_Value* %9772
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$770, i64 0, i32 0), i64 6}, %..string* %9771
	%9776 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 139
	%9777 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 139
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %267
	%9778 = bitcast %Type_Info_Enum_Value* %267 to i32*
	store i32 253, i32* %9778
	%9779 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %267, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9779
	%9780 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %267, align 8
	store %Type_Info_Enum_Value %9780, %Type_Info_Enum_Value* %9777
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$771, i64 0, i32 0), i64 3}, %..string* %9776
	%9781 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 140
	%9782 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 140
	; union - child to parent
	store %Type_Info_Enum_Value zeroinitializer, %Type_Info_Enum_Value* %268
	%9783 = bitcast %Type_Info_Enum_Value* %268 to i32*
	store i32 254, i32* %9783
	%9784 = getelementptr inbounds %Type_Info_Enum_Value, %Type_Info_Enum_Value* %268, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %9784
	%9785 = load %Type_Info_Enum_Value, %Type_Info_Enum_Value* %268, align 8
	store %Type_Info_Enum_Value %9785, %Type_Info_Enum_Value* %9782
	store %..string {i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__str$772, i64 0, i32 0), i64 8}, %..string* %9781
	%9786 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %9078, i64 0, i32 1
	%9787 = getelementptr inbounds [141 x %..string], [141 x %..string]* @__$enum_names-146, i64 0, i32 0
	%9788 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %9786, i64 0, i32 0
	store %..string* %9787, %..string** %9788
	%9789 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %9786, i64 0, i32 1
	store i64 141, i64* %9789
	%9790 = getelementptr inbounds %Type_Info_Enum, %Type_Info_Enum* %9078, i64 0, i32 2
	%9791 = getelementptr inbounds [141 x %Type_Info_Enum_Value], [141 x %Type_Info_Enum_Value]* @__$enum_values-146, i64 0, i32 0
	%9792 = getelementptr inbounds {%Type_Info_Enum_Value*, i64}, {%Type_Info_Enum_Value*, i64}* %9790, i64 0, i32 0
	store %Type_Info_Enum_Value* %9791, %Type_Info_Enum_Value** %9792
	%9793 = getelementptr inbounds {%Type_Info_Enum_Value*, i64}, {%Type_Info_Enum_Value*, i64}* %9790, i64 0, i32 1
	store i64 141, i64* %9793
	%9794 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %9075, i64 0, i32 2 ; UnionTagPtr
	store i8 18, i8* %9794
	%9795 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 327
	%9796 = getelementptr inbounds %Type_Info, %Type_Info* %9795, i64 0, i32 2
	%9797 = getelementptr inbounds %Type_Info, %Type_Info* %9795, i64 0, i32 0
	store i64 408, i64* %9797
	%9798 = getelementptr inbounds %Type_Info, %Type_Info* %9795, i64 0, i32 1
	store i64 8, i64* %9798
	; TypeInfoNamed
	%9799 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %9796 to %Type_Info_Named*
	%9800 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 328
	%9801 = bitcast %Type_Info* %9800 to %Type_Info*
	%9802 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %9799, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__str$773, i64 0, i32 0), i64 7}, %..string* %9802
	%9803 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %9799, i64 0, i32 1
	store %Type_Info* %9801, %Type_Info** %9803
	%9804 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %9796, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %9804
	%9805 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 328
	%9806 = getelementptr inbounds %Type_Info, %Type_Info* %9805, i64 0, i32 2
	%9807 = getelementptr inbounds %Type_Info, %Type_Info* %9805, i64 0, i32 0
	store i64 408, i64* %9807
	%9808 = getelementptr inbounds %Type_Info, %Type_Info* %9805, i64 0, i32 1
	store i64 8, i64* %9808
	; TypeInfoStruct
	%9809 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %9806 to %Type_Info_Struct*
	%9810 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %9809, i64 0, i32 4
	store i1 false, i1* %9810
	%9811 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %9809, i64 0, i32 5
	store i1 false, i1* %9811
	%9812 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %9809, i64 0, i32 6
	store i1 false, i1* %9812
	%9813 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %9809, i64 0, i32 7
	store i1 false, i1* %9813
	%9814 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 438
	%9815 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 402
	%9816 = getelementptr inbounds [450 x i64], [450 x i64]* @__$type_info_offsets_data, i64 0, i32 328
	%9817 = getelementptr inbounds [450 x i1], [450 x i1]* @__$type_info_usings_data, i64 0, i32 328
	%9818 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 329
	%9819 = bitcast %Type_Info* %9818 to %Type_Info*
	%9820 = getelementptr inbounds %Type_Info*, %Type_Info** %9814, i64 0
	%9821 = getelementptr inbounds i64, i64* %9816, i64 0
	%9822 = getelementptr inbounds i1, i1* %9817, i64 0
	%9823 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 329
	store %Type_Info* %9823, %Type_Info** %9820
	%9824 = getelementptr inbounds %..string, %..string* %9815, i64 0
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$774, i64 0, i32 0), i64 6}, %..string* %9824
	store i64 16, i64* %9821
	store i1 false, i1* %9822
	%9825 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%9826 = bitcast %Type_Info* %9825 to %Type_Info*
	%9827 = getelementptr inbounds %Type_Info*, %Type_Info** %9814, i64 1
	%9828 = getelementptr inbounds i64, i64* %9816, i64 1
	%9829 = getelementptr inbounds i1, i1* %9817, i64 1
	%9830 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	store %Type_Info* %9830, %Type_Info** %9827
	%9831 = getelementptr inbounds %..string, %..string* %9815, i64 1
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$775, i64 0, i32 0), i64 5}, %..string* %9831
	store i64 0, i64* %9828
	store i1 false, i1* %9829
	%9832 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%9833 = bitcast %Type_Info* %9832 to %Type_Info*
	%9834 = getelementptr inbounds %Type_Info*, %Type_Info** %9814, i64 2
	%9835 = getelementptr inbounds i64, i64* %9816, i64 2
	%9836 = getelementptr inbounds i1, i1* %9817, i64 2
	%9837 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	store %Type_Info* %9837, %Type_Info** %9834
	%9838 = getelementptr inbounds %..string, %..string* %9815, i64 2
	store %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$776, i64 0, i32 0), i64 13}, %..string* %9838
	store i64 8, i64* %9835
	store i1 false, i1* %9836
	%9839 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 13
	%9840 = bitcast %Type_Info* %9839 to %Type_Info*
	%9841 = getelementptr inbounds %Type_Info*, %Type_Info** %9814, i64 3
	%9842 = getelementptr inbounds i64, i64* %9816, i64 3
	%9843 = getelementptr inbounds i1, i1* %9817, i64 3
	%9844 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 13
	store %Type_Info* %9844, %Type_Info** %9841
	%9845 = getelementptr inbounds %..string, %..string* %9815, i64 3
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$777, i64 0, i32 0), i64 3}, %..string* %9845
	store i64 400, i64* %9842
	store i1 false, i1* %9843
	%9846 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 13
	%9847 = bitcast %Type_Info* %9846 to %Type_Info*
	%9848 = getelementptr inbounds %Type_Info*, %Type_Info** %9814, i64 4
	%9849 = getelementptr inbounds i64, i64* %9816, i64 4
	%9850 = getelementptr inbounds i1, i1* %9817, i64 4
	%9851 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 13
	store %Type_Info* %9851, %Type_Info** %9848
	%9852 = getelementptr inbounds %..string, %..string* %9815, i64 4
	store %..string {i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__str$778, i64 0, i32 0), i64 5}, %..string* %9852
	store i64 401, i64* %9849
	store i1 false, i1* %9850
	%9853 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %9809, i64 0, i32 0
	%9854 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %9853, i64 0, i32 0
	store %Type_Info** %9814, %Type_Info*** %9854
	%9855 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %9853, i64 0, i32 1
	store i64 5, i64* %9855
	%9856 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %9809, i64 0, i32 1
	%9857 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %9856, i64 0, i32 0
	store %..string* %9815, %..string** %9857
	%9858 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %9856, i64 0, i32 1
	store i64 5, i64* %9858
	%9859 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %9809, i64 0, i32 2
	%9860 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %9859, i64 0, i32 0
	store i64* %9816, i64** %9860
	%9861 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %9859, i64 0, i32 1
	store i64 5, i64* %9861
	%9862 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %9809, i64 0, i32 3
	%9863 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %9862, i64 0, i32 0
	store i1* %9817, i1** %9863
	%9864 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %9862, i64 0, i32 1
	store i64 5, i64* %9864
	%9865 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %9806, i64 0, i32 2 ; UnionTagPtr
	store i8 16, i8* %9865
	%9866 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 329
	%9867 = getelementptr inbounds %Type_Info, %Type_Info* %9866, i64 0, i32 2
	%9868 = getelementptr inbounds %Type_Info, %Type_Info* %9866, i64 0, i32 0
	store i64 384, i64* %9868
	%9869 = getelementptr inbounds %Type_Info, %Type_Info* %9866, i64 0, i32 1
	store i64 1, i64* %9869
	; TypeInfoArray
	%9870 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %9867 to %Type_Info_Array*
	%9871 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	%9872 = bitcast %Type_Info* %9871 to %Type_Info*
	%9873 = getelementptr inbounds %Type_Info_Array, %Type_Info_Array* %9870, i64 0, i32 0
	store %Type_Info* %9872, %Type_Info** %9873
	%9874 = getelementptr inbounds %Type_Info_Array, %Type_Info_Array* %9870, i64 0, i32 1
	store i64 1, i64* %9874
	%9875 = getelementptr inbounds %Type_Info_Array, %Type_Info_Array* %9870, i64 0, i32 2
	store i64 384, i64* %9875
	%9876 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %9867, i64 0, i32 2 ; UnionTagPtr
	store i8 11, i8* %9876
	%9877 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%9878 = getelementptr inbounds %Type_Info, %Type_Info* %9877, i64 0, i32 2
	%9879 = getelementptr inbounds %Type_Info, %Type_Info* %9877, i64 0, i32 0
	store i64 8, i64* %9879
	%9880 = getelementptr inbounds %Type_Info, %Type_Info* %9877, i64 0, i32 1
	store i64 8, i64* %9880
	; TypeInfoPointer
	%9881 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %9878 to %Type_Info_Pointer*
	%9882 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	%9883 = bitcast %Type_Info* %9882 to %Type_Info*
	%9884 = getelementptr inbounds %Type_Info_Pointer, %Type_Info_Pointer* %9881, i64 0, i32 0
	store %Type_Info* %9883, %Type_Info** %9884
	%9885 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %9878, i64 0, i32 2 ; UnionTagPtr
	store i8 9, i8* %9885
	%9886 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	%9887 = getelementptr inbounds %Type_Info, %Type_Info* %9886, i64 0, i32 2
	%9888 = getelementptr inbounds %Type_Info, %Type_Info* %9886, i64 0, i32 0
	store i64 1, i64* %9888
	%9889 = getelementptr inbounds %Type_Info, %Type_Info* %9886, i64 0, i32 1
	store i64 1, i64* %9889
	; TypeInfoBasic
	%9890 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %9887 to %Type_Info_Integer*
	%9891 = getelementptr inbounds %Type_Info_Integer, %Type_Info_Integer* %9890, i64 0, i32 0
	store i1 false, i1* %9891
	%9892 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %9887, i64 0, i32 2 ; UnionTagPtr
	store i8 2, i8* %9892
	%9893 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 202
	%9894 = getelementptr inbounds %Type_Info, %Type_Info* %9893, i64 0, i32 2
	%9895 = getelementptr inbounds %Type_Info, %Type_Info* %9893, i64 0, i32 0
	store i64 16, i64* %9895
	%9896 = getelementptr inbounds %Type_Info, %Type_Info* %9893, i64 0, i32 1
	store i64 8, i64* %9896
	; TypeInfoSlice
	%9897 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %9894 to %Type_Info_Slice*
	%9898 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	%9899 = bitcast %Type_Info* %9898 to %Type_Info*
	%9900 = getelementptr inbounds %Type_Info_Slice, %Type_Info_Slice* %9897, i64 0, i32 0
	store %Type_Info* %9899, %Type_Info** %9900
	%9901 = getelementptr inbounds %Type_Info_Slice, %Type_Info_Slice* %9897, i64 0, i32 1
	store i64 1, i64* %9901
	%9902 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %9894, i64 0, i32 2 ; UnionTagPtr
	store i8 13, i8* %9902
	%9903 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%9904 = getelementptr inbounds %Type_Info, %Type_Info* %9903, i64 0, i32 2
	%9905 = getelementptr inbounds %Type_Info, %Type_Info* %9903, i64 0, i32 0
	store i64 8, i64* %9905
	%9906 = getelementptr inbounds %Type_Info, %Type_Info* %9903, i64 0, i32 1
	store i64 8, i64* %9906
	; TypeInfoPointer
	%9907 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %9904 to %Type_Info_Pointer*
	%9908 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	%9909 = bitcast %Type_Info* %9908 to %Type_Info*
	%9910 = getelementptr inbounds %Type_Info_Pointer, %Type_Info_Pointer* %9907, i64 0, i32 0
	store %Type_Info* %9909, %Type_Info** %9910
	%9911 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %9904, i64 0, i32 2 ; UnionTagPtr
	store i8 9, i8* %9911
	%9912 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	%9913 = getelementptr inbounds %Type_Info, %Type_Info* %9912, i64 0, i32 2
	%9914 = getelementptr inbounds %Type_Info, %Type_Info* %9912, i64 0, i32 0
	store i64 1, i64* %9914
	%9915 = getelementptr inbounds %Type_Info, %Type_Info* %9912, i64 0, i32 1
	store i64 1, i64* %9915
	; TypeInfoBasic
	%9916 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %9913 to %Type_Info_Integer*
	%9917 = getelementptr inbounds %Type_Info_Integer, %Type_Info_Integer* %9916, i64 0, i32 0
	store i1 false, i1* %9917
	%9918 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %9913, i64 0, i32 2 ; UnionTagPtr
	store i8 2, i8* %9918
	%9919 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 114
	%9920 = getelementptr inbounds %Type_Info, %Type_Info* %9919, i64 0, i32 2
	%9921 = getelementptr inbounds %Type_Info, %Type_Info* %9919, i64 0, i32 0
	store i64 40, i64* %9921
	%9922 = getelementptr inbounds %Type_Info, %Type_Info* %9919, i64 0, i32 1
	store i64 8, i64* %9922
	; TypeInfoNamed
	%9923 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %9920 to %Type_Info_Named*
	%9924 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 115
	%9925 = bitcast %Type_Info* %9924 to %Type_Info*
	%9926 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %9923, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$779, i64 0, i32 0), i64 13}, %..string* %9926
	%9927 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %9923, i64 0, i32 1
	store %Type_Info* %9925, %Type_Info** %9927
	%9928 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %9920, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %9928
	%9929 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	%9930 = getelementptr inbounds %Type_Info, %Type_Info* %9929, i64 0, i32 2
	%9931 = getelementptr inbounds %Type_Info, %Type_Info* %9929, i64 0, i32 0
	store i64 1, i64* %9931
	%9932 = getelementptr inbounds %Type_Info, %Type_Info* %9929, i64 0, i32 1
	store i64 1, i64* %9932
	; TypeInfoBasic
	%9933 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %9930 to %Type_Info_Integer*
	%9934 = getelementptr inbounds %Type_Info_Integer, %Type_Info_Integer* %9933, i64 0, i32 0
	store i1 false, i1* %9934
	%9935 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %9930, i64 0, i32 2 ; UnionTagPtr
	store i8 2, i8* %9935
	%9936 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 114
	%9937 = getelementptr inbounds %Type_Info, %Type_Info* %9936, i64 0, i32 2
	%9938 = getelementptr inbounds %Type_Info, %Type_Info* %9936, i64 0, i32 0
	store i64 40, i64* %9938
	%9939 = getelementptr inbounds %Type_Info, %Type_Info* %9936, i64 0, i32 1
	store i64 8, i64* %9939
	; TypeInfoNamed
	%9940 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %9937 to %Type_Info_Named*
	%9941 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 115
	%9942 = bitcast %Type_Info* %9941 to %Type_Info*
	%9943 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %9940, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__str$77a, i64 0, i32 0), i64 13}, %..string* %9943
	%9944 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %9940, i64 0, i32 1
	store %Type_Info* %9942, %Type_Info** %9944
	%9945 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %9937, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %9945
	%9946 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 187
	%9947 = getelementptr inbounds %Type_Info, %Type_Info* %9946, i64 0, i32 2
	%9948 = getelementptr inbounds %Type_Info, %Type_Info* %9946, i64 0, i32 0
	store i64 32, i64* %9948
	%9949 = getelementptr inbounds %Type_Info, %Type_Info* %9946, i64 0, i32 1
	store i64 8, i64* %9949
	; TypeInfoNamed
	%9950 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %9947 to %Type_Info_Named*
	%9951 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 188
	%9952 = bitcast %Type_Info* %9951 to %Type_Info*
	%9953 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %9950, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$77b, i64 0, i32 0), i64 11}, %..string* %9953
	%9954 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %9950, i64 0, i32 1
	store %Type_Info* %9952, %Type_Info** %9954
	%9955 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %9947, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %9955
	%9956 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 330
	%9957 = getelementptr inbounds %Type_Info, %Type_Info* %9956, i64 0, i32 2
	%9958 = getelementptr inbounds %Type_Info, %Type_Info* %9956, i64 0, i32 0
	store i64 40, i64* %9958
	%9959 = getelementptr inbounds %Type_Info, %Type_Info* %9956, i64 0, i32 1
	store i64 8, i64* %9959
	; TypeInfoDynamicArray
	%9960 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %9957 to %Type_Info_Dynamic_Array*
	%9961 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 187
	%9962 = bitcast %Type_Info* %9961 to %Type_Info*
	%9963 = getelementptr inbounds %Type_Info_Dynamic_Array, %Type_Info_Dynamic_Array* %9960, i64 0, i32 0
	store %Type_Info* %9962, %Type_Info** %9963
	%9964 = getelementptr inbounds %Type_Info_Dynamic_Array, %Type_Info_Dynamic_Array* %9960, i64 0, i32 1
	store i64 32, i64* %9964
	%9965 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %9957, i64 0, i32 2 ; UnionTagPtr
	store i8 12, i8* %9965
	%9966 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 331
	%9967 = getelementptr inbounds %Type_Info, %Type_Info* %9966, i64 0, i32 2
	%9968 = getelementptr inbounds %Type_Info, %Type_Info* %9966, i64 0, i32 0
	store i64 8, i64* %9968
	%9969 = getelementptr inbounds %Type_Info, %Type_Info* %9966, i64 0, i32 1
	store i64 8, i64* %9969
	; TypeInfoPointer
	%9970 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %9967 to %Type_Info_Pointer*
	%9971 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 187
	%9972 = bitcast %Type_Info* %9971 to %Type_Info*
	%9973 = getelementptr inbounds %Type_Info_Pointer, %Type_Info_Pointer* %9970, i64 0, i32 0
	store %Type_Info* %9972, %Type_Info** %9973
	%9974 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %9967, i64 0, i32 2 ; UnionTagPtr
	store i8 9, i8* %9974
	%9975 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 187
	%9976 = getelementptr inbounds %Type_Info, %Type_Info* %9975, i64 0, i32 2
	%9977 = getelementptr inbounds %Type_Info, %Type_Info* %9975, i64 0, i32 0
	store i64 32, i64* %9977
	%9978 = getelementptr inbounds %Type_Info, %Type_Info* %9975, i64 0, i32 1
	store i64 8, i64* %9978
	; TypeInfoNamed
	%9979 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %9976 to %Type_Info_Named*
	%9980 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 188
	%9981 = bitcast %Type_Info* %9980 to %Type_Info*
	%9982 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %9979, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__str$77c, i64 0, i32 0), i64 11}, %..string* %9982
	%9983 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %9979, i64 0, i32 1
	store %Type_Info* %9981, %Type_Info** %9983
	%9984 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %9976, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %9984
	%9985 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 330
	%9986 = getelementptr inbounds %Type_Info, %Type_Info* %9985, i64 0, i32 2
	%9987 = getelementptr inbounds %Type_Info, %Type_Info* %9985, i64 0, i32 0
	store i64 40, i64* %9987
	%9988 = getelementptr inbounds %Type_Info, %Type_Info* %9985, i64 0, i32 1
	store i64 8, i64* %9988
	; TypeInfoDynamicArray
	%9989 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %9986 to %Type_Info_Dynamic_Array*
	%9990 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 187
	%9991 = bitcast %Type_Info* %9990 to %Type_Info*
	%9992 = getelementptr inbounds %Type_Info_Dynamic_Array, %Type_Info_Dynamic_Array* %9989, i64 0, i32 0
	store %Type_Info* %9991, %Type_Info** %9992
	%9993 = getelementptr inbounds %Type_Info_Dynamic_Array, %Type_Info_Dynamic_Array* %9989, i64 0, i32 1
	store i64 32, i64* %9993
	%9994 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %9986, i64 0, i32 2 ; UnionTagPtr
	store i8 12, i8* %9994
	%9995 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 331
	%9996 = getelementptr inbounds %Type_Info, %Type_Info* %9995, i64 0, i32 2
	%9997 = getelementptr inbounds %Type_Info, %Type_Info* %9995, i64 0, i32 0
	store i64 8, i64* %9997
	%9998 = getelementptr inbounds %Type_Info, %Type_Info* %9995, i64 0, i32 1
	store i64 8, i64* %9998
	; TypeInfoPointer
	%9999 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %9996 to %Type_Info_Pointer*
	%10000 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 187
	%10001 = bitcast %Type_Info* %10000 to %Type_Info*
	%10002 = getelementptr inbounds %Type_Info_Pointer, %Type_Info_Pointer* %9999, i64 0, i32 0
	store %Type_Info* %10001, %Type_Info** %10002
	%10003 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %9996, i64 0, i32 2 ; UnionTagPtr
	store i8 9, i8* %10003
	%10004 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	%10005 = getelementptr inbounds %Type_Info, %Type_Info* %10004, i64 0, i32 2
	%10006 = getelementptr inbounds %Type_Info, %Type_Info* %10004, i64 0, i32 0
	store i64 1, i64* %10006
	%10007 = getelementptr inbounds %Type_Info, %Type_Info* %10004, i64 0, i32 1
	store i64 1, i64* %10007
	; TypeInfoBasic
	%10008 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %10005 to %Type_Info_Integer*
	%10009 = getelementptr inbounds %Type_Info_Integer, %Type_Info_Integer* %10008, i64 0, i32 0
	store i1 false, i1* %10009
	%10010 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %10005, i64 0, i32 2 ; UnionTagPtr
	store i8 2, i8* %10010
	%10011 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 202
	%10012 = getelementptr inbounds %Type_Info, %Type_Info* %10011, i64 0, i32 2
	%10013 = getelementptr inbounds %Type_Info, %Type_Info* %10011, i64 0, i32 0
	store i64 16, i64* %10013
	%10014 = getelementptr inbounds %Type_Info, %Type_Info* %10011, i64 0, i32 1
	store i64 8, i64* %10014
	; TypeInfoSlice
	%10015 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %10012 to %Type_Info_Slice*
	%10016 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	%10017 = bitcast %Type_Info* %10016 to %Type_Info*
	%10018 = getelementptr inbounds %Type_Info_Slice, %Type_Info_Slice* %10015, i64 0, i32 0
	store %Type_Info* %10017, %Type_Info** %10018
	%10019 = getelementptr inbounds %Type_Info_Slice, %Type_Info_Slice* %10015, i64 0, i32 1
	store i64 1, i64* %10019
	%10020 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %10012, i64 0, i32 2 ; UnionTagPtr
	store i8 13, i8* %10020
	%10021 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%10022 = getelementptr inbounds %Type_Info, %Type_Info* %10021, i64 0, i32 2
	%10023 = getelementptr inbounds %Type_Info, %Type_Info* %10021, i64 0, i32 0
	store i64 8, i64* %10023
	%10024 = getelementptr inbounds %Type_Info, %Type_Info* %10021, i64 0, i32 1
	store i64 8, i64* %10024
	; TypeInfoPointer
	%10025 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %10022 to %Type_Info_Pointer*
	%10026 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	%10027 = bitcast %Type_Info* %10026 to %Type_Info*
	%10028 = getelementptr inbounds %Type_Info_Pointer, %Type_Info_Pointer* %10025, i64 0, i32 0
	store %Type_Info* %10027, %Type_Info** %10028
	%10029 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %10022, i64 0, i32 2 ; UnionTagPtr
	store i8 9, i8* %10029
	%10030 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 59
	%10031 = getelementptr inbounds %Type_Info, %Type_Info* %10030, i64 0, i32 2
	%10032 = getelementptr inbounds %Type_Info, %Type_Info* %10030, i64 0, i32 0
	store i64 2, i64* %10032
	%10033 = getelementptr inbounds %Type_Info, %Type_Info* %10030, i64 0, i32 1
	store i64 2, i64* %10033
	; TypeInfoBasic
	%10034 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %10031 to %Type_Info_Integer*
	%10035 = getelementptr inbounds %Type_Info_Integer, %Type_Info_Integer* %10034, i64 0, i32 0
	store i1 false, i1* %10035
	%10036 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %10031, i64 0, i32 2 ; UnionTagPtr
	store i8 2, i8* %10036
	%10037 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 64
	%10038 = getelementptr inbounds %Type_Info, %Type_Info* %10037, i64 0, i32 2
	%10039 = getelementptr inbounds %Type_Info, %Type_Info* %10037, i64 0, i32 0
	store i64 4, i64* %10039
	%10040 = getelementptr inbounds %Type_Info, %Type_Info* %10037, i64 0, i32 1
	store i64 4, i64* %10040
	; TypeInfoBasic
	%10041 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %10038 to %Type_Info_Float*
	%10042 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %10038, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %10042
	%10043 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 208
	%10044 = getelementptr inbounds %Type_Info, %Type_Info* %10043, i64 0, i32 2
	%10045 = getelementptr inbounds %Type_Info, %Type_Info* %10043, i64 0, i32 0
	store i64 12, i64* %10045
	%10046 = getelementptr inbounds %Type_Info, %Type_Info* %10043, i64 0, i32 1
	store i64 4, i64* %10046
	; TypeInfoNamed
	%10047 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %10044 to %Type_Info_Named*
	%10048 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 209
	%10049 = bitcast %Type_Info* %10048 to %Type_Info*
	%10050 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %10047, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$77d, i64 0, i32 0), i64 4}, %..string* %10050
	%10051 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %10047, i64 0, i32 1
	store %Type_Info* %10049, %Type_Info** %10051
	%10052 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %10044, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %10052
	%10053 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 64
	%10054 = getelementptr inbounds %Type_Info, %Type_Info* %10053, i64 0, i32 2
	%10055 = getelementptr inbounds %Type_Info, %Type_Info* %10053, i64 0, i32 0
	store i64 4, i64* %10055
	%10056 = getelementptr inbounds %Type_Info, %Type_Info* %10053, i64 0, i32 1
	store i64 4, i64* %10056
	; TypeInfoBasic
	%10057 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %10054 to %Type_Info_Float*
	%10058 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %10054, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %10058
	%10059 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 208
	%10060 = getelementptr inbounds %Type_Info, %Type_Info* %10059, i64 0, i32 2
	%10061 = getelementptr inbounds %Type_Info, %Type_Info* %10059, i64 0, i32 0
	store i64 12, i64* %10061
	%10062 = getelementptr inbounds %Type_Info, %Type_Info* %10059, i64 0, i32 1
	store i64 4, i64* %10062
	; TypeInfoNamed
	%10063 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %10060 to %Type_Info_Named*
	%10064 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 209
	%10065 = bitcast %Type_Info* %10064 to %Type_Info*
	%10066 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %10063, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$77e, i64 0, i32 0), i64 4}, %..string* %10066
	%10067 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %10063, i64 0, i32 1
	store %Type_Info* %10065, %Type_Info** %10067
	%10068 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %10060, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %10068
	%10069 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 64
	%10070 = getelementptr inbounds %Type_Info, %Type_Info* %10069, i64 0, i32 2
	%10071 = getelementptr inbounds %Type_Info, %Type_Info* %10069, i64 0, i32 0
	store i64 4, i64* %10071
	%10072 = getelementptr inbounds %Type_Info, %Type_Info* %10069, i64 0, i32 1
	store i64 4, i64* %10072
	; TypeInfoBasic
	%10073 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %10070 to %Type_Info_Float*
	%10074 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %10070, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %10074
	%10075 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 208
	%10076 = getelementptr inbounds %Type_Info, %Type_Info* %10075, i64 0, i32 2
	%10077 = getelementptr inbounds %Type_Info, %Type_Info* %10075, i64 0, i32 0
	store i64 12, i64* %10077
	%10078 = getelementptr inbounds %Type_Info, %Type_Info* %10075, i64 0, i32 1
	store i64 4, i64* %10078
	; TypeInfoNamed
	%10079 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %10076 to %Type_Info_Named*
	%10080 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 209
	%10081 = bitcast %Type_Info* %10080 to %Type_Info*
	%10082 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %10079, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$77f, i64 0, i32 0), i64 4}, %..string* %10082
	%10083 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %10079, i64 0, i32 1
	store %Type_Info* %10081, %Type_Info** %10083
	%10084 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %10076, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %10084
	%10085 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 64
	%10086 = getelementptr inbounds %Type_Info, %Type_Info* %10085, i64 0, i32 2
	%10087 = getelementptr inbounds %Type_Info, %Type_Info* %10085, i64 0, i32 0
	store i64 4, i64* %10087
	%10088 = getelementptr inbounds %Type_Info, %Type_Info* %10085, i64 0, i32 1
	store i64 4, i64* %10088
	; TypeInfoBasic
	%10089 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %10086 to %Type_Info_Float*
	%10090 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %10086, i64 0, i32 2 ; UnionTagPtr
	store i8 4, i8* %10090
	%10091 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 208
	%10092 = getelementptr inbounds %Type_Info, %Type_Info* %10091, i64 0, i32 2
	%10093 = getelementptr inbounds %Type_Info, %Type_Info* %10091, i64 0, i32 0
	store i64 12, i64* %10093
	%10094 = getelementptr inbounds %Type_Info, %Type_Info* %10091, i64 0, i32 1
	store i64 4, i64* %10094
	; TypeInfoNamed
	%10095 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %10092 to %Type_Info_Named*
	%10096 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 209
	%10097 = bitcast %Type_Info* %10096 to %Type_Info*
	%10098 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %10095, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__str$780, i64 0, i32 0), i64 4}, %..string* %10098
	%10099 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %10095, i64 0, i32 1
	store %Type_Info* %10097, %Type_Info** %10099
	%10100 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %10092, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %10100
	%10101 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 332
	%10102 = getelementptr inbounds %Type_Info, %Type_Info* %10101, i64 0, i32 2
	%10103 = getelementptr inbounds %Type_Info, %Type_Info* %10101, i64 0, i32 0
	store i64 16, i64* %10103
	%10104 = getelementptr inbounds %Type_Info, %Type_Info* %10101, i64 0, i32 1
	store i64 8, i64* %10104
	; TypeInfoNamed
	%10105 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %10102 to %Type_Info_Named*
	%10106 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 333
	%10107 = bitcast %Type_Info* %10106 to %Type_Info*
	%10108 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %10105, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$781, i64 0, i32 0), i64 6}, %..string* %10108
	%10109 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %10105, i64 0, i32 1
	store %Type_Info* %10107, %Type_Info** %10109
	%10110 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %10102, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %10110
	%10111 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 333
	%10112 = getelementptr inbounds %Type_Info, %Type_Info* %10111, i64 0, i32 2
	%10113 = getelementptr inbounds %Type_Info, %Type_Info* %10111, i64 0, i32 0
	store i64 16, i64* %10113
	%10114 = getelementptr inbounds %Type_Info, %Type_Info* %10111, i64 0, i32 1
	store i64 8, i64* %10114
	; TypeInfoStruct
	%10115 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %10112 to %Type_Info_Struct*
	%10116 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %10115, i64 0, i32 4
	store i1 false, i1* %10116
	%10117 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %10115, i64 0, i32 5
	store i1 false, i1* %10117
	%10118 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %10115, i64 0, i32 6
	store i1 true, i1* %10118
	%10119 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %10115, i64 0, i32 7
	store i1 false, i1* %10119
	%10120 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 443
	%10121 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 407
	%10122 = getelementptr inbounds [450 x i64], [450 x i64]* @__$type_info_offsets_data, i64 0, i32 333
	%10123 = getelementptr inbounds [450 x i1], [450 x i1]* @__$type_info_usings_data, i64 0, i32 333
	%10124 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 62
	%10125 = bitcast %Type_Info* %10124 to %Type_Info*
	%10126 = getelementptr inbounds %Type_Info*, %Type_Info** %10120, i64 0
	%10127 = getelementptr inbounds i64, i64* %10122, i64 0
	%10128 = getelementptr inbounds i1, i1* %10123, i64 0
	%10129 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 62
	store %Type_Info* %10129, %Type_Info** %10126
	%10130 = getelementptr inbounds %..string, %..string* %10121, i64 0
	store %..string {i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__str$782, i64 0, i32 0), i64 3}, %..string* %10130
	store i64 0, i64* %10127
	store i1 false, i1* %10128
	%10131 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 334
	%10132 = bitcast %Type_Info* %10131 to %Type_Info*
	%10133 = getelementptr inbounds %Type_Info*, %Type_Info** %10120, i64 1
	%10134 = getelementptr inbounds i64, i64* %10122, i64 1
	%10135 = getelementptr inbounds i1, i1* %10123, i64 1
	%10136 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 334
	store %Type_Info* %10136, %Type_Info** %10133
	%10137 = getelementptr inbounds %..string, %..string* %10121, i64 1
	store %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$783, i64 0, i32 0), i64 1}, %..string* %10137
	store i64 0, i64* %10134
	store i1 true, i1* %10135
	%10138 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %10115, i64 0, i32 0
	%10139 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %10138, i64 0, i32 0
	store %Type_Info** %10120, %Type_Info*** %10139
	%10140 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %10138, i64 0, i32 1
	store i64 2, i64* %10140
	%10141 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %10115, i64 0, i32 1
	%10142 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %10141, i64 0, i32 0
	store %..string* %10121, %..string** %10142
	%10143 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %10141, i64 0, i32 1
	store i64 2, i64* %10143
	%10144 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %10115, i64 0, i32 2
	%10145 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %10144, i64 0, i32 0
	store i64* %10122, i64** %10145
	%10146 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %10144, i64 0, i32 1
	store i64 2, i64* %10146
	%10147 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %10115, i64 0, i32 3
	%10148 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %10147, i64 0, i32 0
	store i1* %10123, i1** %10148
	%10149 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %10147, i64 0, i32 1
	store i64 2, i64* %10149
	%10150 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %10112, i64 0, i32 2 ; UnionTagPtr
	store i8 16, i8* %10150
	%10151 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 334
	%10152 = getelementptr inbounds %Type_Info, %Type_Info* %10151, i64 0, i32 2
	%10153 = getelementptr inbounds %Type_Info, %Type_Info* %10151, i64 0, i32 0
	store i64 16, i64* %10153
	%10154 = getelementptr inbounds %Type_Info, %Type_Info* %10151, i64 0, i32 1
	store i64 8, i64* %10154
	; TypeInfoStruct
	%10155 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %10152 to %Type_Info_Struct*
	%10156 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %10155, i64 0, i32 4
	store i1 false, i1* %10156
	%10157 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %10155, i64 0, i32 5
	store i1 false, i1* %10157
	%10158 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %10155, i64 0, i32 6
	store i1 false, i1* %10158
	%10159 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %10155, i64 0, i32 7
	store i1 false, i1* %10159
	%10160 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 445
	%10161 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 409
	%10162 = getelementptr inbounds [450 x i64], [450 x i64]* @__$type_info_offsets_data, i64 0, i32 335
	%10163 = getelementptr inbounds [450 x i1], [450 x i1]* @__$type_info_usings_data, i64 0, i32 335
	%10164 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 61
	%10165 = bitcast %Type_Info* %10164 to %Type_Info*
	%10166 = getelementptr inbounds %Type_Info*, %Type_Info** %10160, i64 0
	%10167 = getelementptr inbounds i64, i64* %10162, i64 0
	%10168 = getelementptr inbounds i1, i1* %10163, i64 0
	%10169 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 61
	store %Type_Info* %10169, %Type_Info** %10166
	%10170 = getelementptr inbounds %..string, %..string* %10161, i64 0
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$784, i64 0, i32 0), i64 2}, %..string* %10170
	store i64 0, i64* %10167
	store i1 false, i1* %10168
	%10171 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 61
	%10172 = bitcast %Type_Info* %10171 to %Type_Info*
	%10173 = getelementptr inbounds %Type_Info*, %Type_Info** %10160, i64 1
	%10174 = getelementptr inbounds i64, i64* %10162, i64 1
	%10175 = getelementptr inbounds i1, i1* %10163, i64 1
	%10176 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 61
	store %Type_Info* %10176, %Type_Info** %10173
	%10177 = getelementptr inbounds %..string, %..string* %10161, i64 1
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$785, i64 0, i32 0), i64 2}, %..string* %10177
	store i64 8, i64* %10174
	store i1 false, i1* %10175
	%10178 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %10155, i64 0, i32 0
	%10179 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %10178, i64 0, i32 0
	store %Type_Info** %10160, %Type_Info*** %10179
	%10180 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %10178, i64 0, i32 1
	store i64 2, i64* %10180
	%10181 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %10155, i64 0, i32 1
	%10182 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %10181, i64 0, i32 0
	store %..string* %10161, %..string** %10182
	%10183 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %10181, i64 0, i32 1
	store i64 2, i64* %10183
	%10184 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %10155, i64 0, i32 2
	%10185 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %10184, i64 0, i32 0
	store i64* %10162, i64** %10185
	%10186 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %10184, i64 0, i32 1
	store i64 2, i64* %10186
	%10187 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %10155, i64 0, i32 3
	%10188 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %10187, i64 0, i32 0
	store i1* %10163, i1** %10188
	%10189 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %10187, i64 0, i32 1
	store i64 2, i64* %10189
	%10190 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %10152, i64 0, i32 2 ; UnionTagPtr
	store i8 16, i8* %10190
	%10191 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 335
	%10192 = getelementptr inbounds %Type_Info, %Type_Info* %10191, i64 0, i32 2
	%10193 = getelementptr inbounds %Type_Info, %Type_Info* %10191, i64 0, i32 0
	store i64 8, i64* %10193
	%10194 = getelementptr inbounds %Type_Info, %Type_Info* %10191, i64 0, i32 1
	store i64 8, i64* %10194
	; TypeInfoNamed
	%10195 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %10192 to %Type_Info_Named*
	%10196 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 336
	%10197 = bitcast %Type_Info* %10196 to %Type_Info*
	%10198 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %10195, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__str$786, i64 0, i32 0), i64 22}, %..string* %10198
	%10199 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %10195, i64 0, i32 1
	store %Type_Info* %10197, %Type_Info** %10199
	%10200 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %10192, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %10200
	%10201 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 336
	%10202 = getelementptr inbounds %Type_Info, %Type_Info* %10201, i64 0, i32 2
	%10203 = getelementptr inbounds %Type_Info, %Type_Info* %10201, i64 0, i32 0
	store i64 8, i64* %10203
	%10204 = getelementptr inbounds %Type_Info, %Type_Info* %10201, i64 0, i32 1
	store i64 8, i64* %10204
	; TypeInfoStruct
	%10205 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %10202 to %Type_Info_Struct*
	%10206 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %10205, i64 0, i32 4
	store i1 false, i1* %10206
	%10207 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %10205, i64 0, i32 5
	store i1 false, i1* %10207
	%10208 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %10205, i64 0, i32 6
	store i1 false, i1* %10208
	%10209 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %10205, i64 0, i32 7
	store i1 false, i1* %10209
	%10210 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 447
	%10211 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 411
	%10212 = getelementptr inbounds [450 x i64], [450 x i64]* @__$type_info_offsets_data, i64 0, i32 337
	%10213 = getelementptr inbounds [450 x i1], [450 x i1]* @__$type_info_usings_data, i64 0, i32 337
	%10214 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 110
	%10215 = bitcast %Type_Info* %10214 to %Type_Info*
	%10216 = getelementptr inbounds %Type_Info*, %Type_Info** %10210, i64 0
	%10217 = getelementptr inbounds i64, i64* %10212, i64 0
	%10218 = getelementptr inbounds i1, i1* %10213, i64 0
	%10219 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 110
	store %Type_Info* %10219, %Type_Info** %10216
	%10220 = getelementptr inbounds %..string, %..string* %10211, i64 0
	store %..string {i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__str$787, i64 0, i32 0), i64 2}, %..string* %10220
	store i64 0, i64* %10217
	store i1 false, i1* %10218
	%10221 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %10205, i64 0, i32 0
	%10222 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %10221, i64 0, i32 0
	store %Type_Info** %10210, %Type_Info*** %10222
	%10223 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %10221, i64 0, i32 1
	store i64 1, i64* %10223
	%10224 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %10205, i64 0, i32 1
	%10225 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %10224, i64 0, i32 0
	store %..string* %10211, %..string** %10225
	%10226 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %10224, i64 0, i32 1
	store i64 1, i64* %10226
	%10227 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %10205, i64 0, i32 2
	%10228 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %10227, i64 0, i32 0
	store i64* %10212, i64** %10228
	%10229 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %10227, i64 0, i32 1
	store i64 1, i64* %10229
	%10230 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %10205, i64 0, i32 3
	%10231 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %10230, i64 0, i32 0
	store i1* %10213, i1** %10231
	%10232 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %10230, i64 0, i32 1
	store i64 1, i64* %10232
	%10233 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %10202, i64 0, i32 2 ; UnionTagPtr
	store i8 16, i8* %10233
	%10234 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 337
	%10235 = getelementptr inbounds %Type_Info, %Type_Info* %10234, i64 0, i32 2
	%10236 = getelementptr inbounds %Type_Info, %Type_Info* %10234, i64 0, i32 0
	store i64 24, i64* %10236
	%10237 = getelementptr inbounds %Type_Info, %Type_Info* %10234, i64 0, i32 1
	store i64 8, i64* %10237
	; TypeInfoNamed
	%10238 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %10235 to %Type_Info_Named*
	%10239 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 338
	%10240 = bitcast %Type_Info* %10239 to %Type_Info*
	%10241 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %10238, i64 0, i32 0
	store %..string {i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__str$788, i64 0, i32 0), i64 6}, %..string* %10241
	%10242 = getelementptr inbounds %Type_Info_Named, %Type_Info_Named* %10238, i64 0, i32 1
	store %Type_Info* %10240, %Type_Info** %10242
	%10243 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %10235, i64 0, i32 2 ; UnionTagPtr
	store i8 1, i8* %10243
	%10244 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 338
	%10245 = getelementptr inbounds %Type_Info, %Type_Info* %10244, i64 0, i32 2
	%10246 = getelementptr inbounds %Type_Info, %Type_Info* %10244, i64 0, i32 0
	store i64 24, i64* %10246
	%10247 = getelementptr inbounds %Type_Info, %Type_Info* %10244, i64 0, i32 1
	store i64 8, i64* %10247
	; TypeInfoStruct
	%10248 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %10245 to %Type_Info_Struct*
	%10249 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %10248, i64 0, i32 4
	store i1 false, i1* %10249
	%10250 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %10248, i64 0, i32 5
	store i1 false, i1* %10250
	%10251 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %10248, i64 0, i32 6
	store i1 false, i1* %10251
	%10252 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %10248, i64 0, i32 7
	store i1 false, i1* %10252
	%10253 = getelementptr inbounds [450 x %Type_Info*], [450 x %Type_Info*]* @__$type_info_types_data, i64 0, i32 448
	%10254 = getelementptr inbounds [450 x %..string], [450 x %..string]* @__$type_info_names_data, i64 0, i32 412
	%10255 = getelementptr inbounds [450 x i64], [450 x i64]* @__$type_info_offsets_data, i64 0, i32 338
	%10256 = getelementptr inbounds [450 x i1], [450 x i1]* @__$type_info_usings_data, i64 0, i32 338
	%10257 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 202
	%10258 = bitcast %Type_Info* %10257 to %Type_Info*
	%10259 = getelementptr inbounds %Type_Info*, %Type_Info** %10253, i64 0
	%10260 = getelementptr inbounds i64, i64* %10255, i64 0
	%10261 = getelementptr inbounds i1, i1* %10256, i64 0
	%10262 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 202
	store %Type_Info* %10262, %Type_Info** %10259
	%10263 = getelementptr inbounds %..string, %..string* %10254, i64 0
	store %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$789, i64 0, i32 0), i64 1}, %..string* %10263
	store i64 0, i64* %10260
	store i1 false, i1* %10261
	%10264 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	%10265 = bitcast %Type_Info* %10264 to %Type_Info*
	%10266 = getelementptr inbounds %Type_Info*, %Type_Info** %10253, i64 1
	%10267 = getelementptr inbounds i64, i64* %10255, i64 1
	%10268 = getelementptr inbounds i1, i1* %10256, i64 1
	%10269 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 6
	store %Type_Info* %10269, %Type_Info** %10266
	%10270 = getelementptr inbounds %..string, %..string* %10254, i64 1
	store %..string {i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__str$78a, i64 0, i32 0), i64 1}, %..string* %10270
	store i64 16, i64* %10267
	store i1 false, i1* %10268
	%10271 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %10248, i64 0, i32 0
	%10272 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %10271, i64 0, i32 0
	store %Type_Info** %10253, %Type_Info*** %10272
	%10273 = getelementptr inbounds {%Type_Info**, i64}, {%Type_Info**, i64}* %10271, i64 0, i32 1
	store i64 2, i64* %10273
	%10274 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %10248, i64 0, i32 1
	%10275 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %10274, i64 0, i32 0
	store %..string* %10254, %..string** %10275
	%10276 = getelementptr inbounds {%..string*, i64}, {%..string*, i64}* %10274, i64 0, i32 1
	store i64 2, i64* %10276
	%10277 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %10248, i64 0, i32 2
	%10278 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %10277, i64 0, i32 0
	store i64* %10255, i64** %10278
	%10279 = getelementptr inbounds {i64*, i64}, {i64*, i64}* %10277, i64 0, i32 1
	store i64 2, i64* %10279
	%10280 = getelementptr inbounds %Type_Info_Struct, %Type_Info_Struct* %10248, i64 0, i32 3
	%10281 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %10280, i64 0, i32 0
	store i1* %10256, i1** %10281
	%10282 = getelementptr inbounds {i1*, i64}, {i1*, i64}* %10280, i64 0, i32 1
	store i64 2, i64* %10282
	%10283 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %10245, i64 0, i32 2 ; UnionTagPtr
	store i8 16, i8* %10283
	%10284 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 202
	%10285 = getelementptr inbounds %Type_Info, %Type_Info* %10284, i64 0, i32 2
	%10286 = getelementptr inbounds %Type_Info, %Type_Info* %10284, i64 0, i32 0
	store i64 16, i64* %10286
	%10287 = getelementptr inbounds %Type_Info, %Type_Info* %10284, i64 0, i32 1
	store i64 8, i64* %10287
	; TypeInfoSlice
	%10288 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %10285 to %Type_Info_Slice*
	%10289 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	%10290 = bitcast %Type_Info* %10289 to %Type_Info*
	%10291 = getelementptr inbounds %Type_Info_Slice, %Type_Info_Slice* %10288, i64 0, i32 0
	store %Type_Info* %10290, %Type_Info** %10291
	%10292 = getelementptr inbounds %Type_Info_Slice, %Type_Info_Slice* %10288, i64 0, i32 1
	store i64 1, i64* %10292
	%10293 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %10285, i64 0, i32 2 ; UnionTagPtr
	store i8 13, i8* %10293
	%10294 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 4
	%10295 = getelementptr inbounds %Type_Info, %Type_Info* %10294, i64 0, i32 2
	%10296 = getelementptr inbounds %Type_Info, %Type_Info* %10294, i64 0, i32 0
	store i64 8, i64* %10296
	%10297 = getelementptr inbounds %Type_Info, %Type_Info* %10294, i64 0, i32 1
	store i64 8, i64* %10297
	; TypeInfoPointer
	%10298 = bitcast {[0 x <8 x i8>], [72 x i8], i8}* %10295 to %Type_Info_Pointer*
	%10299 = getelementptr inbounds [339 x %Type_Info], [339 x %Type_Info]* @__$type_info_data, i64 0, i32 5
	%10300 = bitcast %Type_Info* %10299 to %Type_Info*
	%10301 = getelementptr inbounds %Type_Info_Pointer, %Type_Info_Pointer* %10298, i64 0, i32 0
	store %Type_Info* %10300, %Type_Info** %10301
	%10302 = getelementptr inbounds {[0 x <8 x i8>], [72 x i8], i8}, {[0 x <8 x i8>], [72 x i8], i8}* %10295, i64 0, i32 2 ; UnionTagPtr
	store i8 9, i8* %10302
	; make
	call void @__dynamic_array_expr_error(%..string {i8* getelementptr inbounds ([40 x i8], [40 x i8]* @__str$78b, i64 0, i32 0), i64 39}, i64 15, i64 18, i64 0, i64 0, i64 10)
	store {%main-0.Entity*, i64, i64, %Allocator} zeroinitializer, {%main-0.Entity*, i64, i64, %Allocator}* %269
	%10303 = bitcast {%main-0.Entity*, i64, i64, %Allocator}* %269 to %..rawptr
	%10304 = call %Source_Code_Location @make_source_code_location(%..string {i8* getelementptr inbounds ([40 x i8], [40 x i8]* @__str$78c, i64 0, i32 0), i64 39}, i64 15, i64 18, %..string {i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__str$78d, i64 0, i32 0), i64 18})
	store %Context zeroinitializer, %Context* %270
	%10305 = load %Context, %Context* @__ggv$0, align 8
	store %Context %10305, %Context* %270
	store %Source_Code_Location zeroinitializer, %Source_Code_Location* %271
	store %Source_Code_Location %10304, %Source_Code_Location* %271
	call void @__dynamic_array_make(%..rawptr %10303, i64 32, i64 8, i64 0, i64 10, %Source_Code_Location* %271, %Context* noalias nonnull %270)
	%10306 = load {%main-0.Entity*, i64, i64, %Allocator}, {%main-0.Entity*, i64, i64, %Allocator}* %269, align 8
	store {%main-0.Entity*, i64, i64, %Allocator} %10306, {%main-0.Entity*, i64, i64, %Allocator}* @main-0.entities
	; make
	call void @__dynamic_array_expr_error(%..string {i8* getelementptr inbounds ([40 x i8], [40 x i8]* @__str$78e, i64 0, i32 0), i64 39}, i64 29, i64 21, i64 0, i64 0, i64 10)
	store {%engine-10.Sprite*, i64, i64, %Allocator} zeroinitializer, {%engine-10.Sprite*, i64, i64, %Allocator}* %272
	%10307 = bitcast {%engine-10.Sprite*, i64, i64, %Allocator}* %272 to %..rawptr
	%10308 = call %Source_Code_Location @make_source_code_location(%..string {i8* getelementptr inbounds ([40 x i8], [40 x i8]* @__str$78f, i64 0, i32 0), i64 39}, i64 29, i64 21, %..string {i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__str$790, i64 0, i32 0), i64 18})
	store %Source_Code_Location zeroinitializer, %Source_Code_Location* %273
	store %Source_Code_Location %10308, %Source_Code_Location* %273
	call void @__dynamic_array_make(%..rawptr %10307, i64 12, i64 4, i64 0, i64 10, %Source_Code_Location* %273, %Context* noalias nonnull %270)
	%10309 = load {%engine-10.Sprite*, i64, i64, %Allocator}, {%engine-10.Sprite*, i64, i64, %Allocator}* %272, align 8
	store {%engine-10.Sprite*, i64, i64, %Allocator} %10309, {%engine-10.Sprite*, i64, i64, %Allocator}* @main-0.all_sprites
	store %..string {i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__str$791, i64 0, i32 0), i64 17}, %..string* @fmt-4.__DIGITS_LOWER
	store %..string {i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__str$792, i64 0, i32 0), i64 17}, %..string* @fmt-4.__DIGITS_UPPER
	store [5 x %utf8-5.Accept_Range] [%utf8-5.Accept_Range {i8 128, i8 191}, %utf8-5.Accept_Range {i8 160, i8 191}, %utf8-5.Accept_Range {i8 128, i8 159}, %utf8-5.Accept_Range {i8 144, i8 191}, %utf8-5.Accept_Range {i8 128, i8 143}], [5 x %utf8-5.Accept_Range]* @utf8-5.accept_ranges
	store [256 x i8] [i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 19, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 35, i8 3, i8 3, i8 52, i8 4, i8 4, i8 4, i8 68, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241], [256 x i8]* @utf8-5.accept_sizes
	store %glfw-9._TimingStruct {double 0x0000000000000000, double 0x0000000000000000, double 0x0000000000000000, double 0x3f91111111111111, i64 60, i64 0}, %glfw-9._TimingStruct* @glfw-9.persistent_timing_data
	store [6 x {[0 x <8 x i8>], [2 x float]}] [{[0 x <8 x i8>], [2 x float]} {[0 x <8 x i8>] zeroinitializer, [2 x float][float 0xbff0000000000000, float 0xbff0000000000000]}, {[0 x <8 x i8>], [2 x float]} {[0 x <8 x i8>] zeroinitializer, [2 x float][float 0xbff0000000000000, float 0x3ff0000000000000]}, {[0 x <8 x i8>], [2 x float]} {[0 x <8 x i8>] zeroinitializer, [2 x float][float 0x3ff0000000000000, float 0x3ff0000000000000]}, {[0 x <8 x i8>], [2 x float]} {[0 x <8 x i8>] zeroinitializer, [2 x float][float 0x3ff0000000000000, float 0x3ff0000000000000]}, {[0 x <8 x i8>], [2 x float]} {[0 x <8 x i8>] zeroinitializer, [2 x float][float 0x3ff0000000000000, float 0xbff0000000000000]}, {[0 x <8 x i8>], [2 x float]} {[0 x <8 x i8>] zeroinitializer, [2 x float][float 0xbff0000000000000, float 0xbff0000000000000]}], [6 x {[0 x <8 x i8>], [2 x float]}]* @engine-10.sprite_vbo
	store %strconv-18.FloatInfo {i64 23, i64 8, i64 -127}, %strconv-18.FloatInfo* @strconv-18._f32_info
	store %strconv-18.FloatInfo {i64 52, i64 11, i64 -1023}, %strconv-18.FloatInfo* @strconv-18._f64_info
	store %..string {i8* getelementptr inbounds ([37 x i8], [37 x i8]* @__str$793, i64 0, i32 0), i64 36}, %..string* @strconv-18.digits
	%10310 = call i64 @os_windows-12.get_std_handle(i64 -11, %Context* noalias nonnull %270)
	store i64 %10310, i64* @os_windows-12.stdout
	%10311 = call i64 @os_windows-12.get_std_handle(i64 -12, %Context* noalias nonnull %270)
	store i64 %10311, i64* @os_windows-12.stderr
	ret void
}
@__$type_info_data = private global [339 x %Type_Info] zeroinitializer
@__$type_info_types_data = global [450 x %Type_Info*] zeroinitializer
@__$type_info_names_data = global [450 x %..string] zeroinitializer
@__$type_info_offsets_data = global [450 x i64] zeroinitializer
@__$type_info_usings_data = global [450 x i1] zeroinitializer
@__ggv$0 = global %Context zeroinitializer
@__type_table = global {%Type_Info*, i64} zeroinitializer
@__argc__ = global i32 zeroinitializer
@__argv__ = global i8** zeroinitializer
@main-0.entities = global {%main-0.Entity*, i64, i64, %Allocator} zeroinitializer
@main-0.all_sprites = global {%engine-10.Sprite*, i64, i64, %Allocator} zeroinitializer
@fmt-4.__DIGITS_LOWER = global %..string {i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__str$794, i64 0, i32 0), i64 17}
@fmt-4.__DIGITS_UPPER = global %..string {i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__str$795, i64 0, i32 0), i64 17}
@utf8-5.accept_ranges = global [5 x %utf8-5.Accept_Range] [%utf8-5.Accept_Range {i8 128, i8 191}, %utf8-5.Accept_Range {i8 160, i8 191}, %utf8-5.Accept_Range {i8 128, i8 159}, %utf8-5.Accept_Range {i8 144, i8 191}, %utf8-5.Accept_Range {i8 128, i8 143}]
@utf8-5.accept_sizes = global [256 x i8] [i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 240, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 19, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 35, i8 3, i8 3, i8 52, i8 4, i8 4, i8 4, i8 68, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241, i8 241]
@glfw-9.persistent_timing_data = global %glfw-9._TimingStruct {double 0x0000000000000000, double 0x0000000000000000, double 0x0000000000000000, double 0x3f91111111111111, i64 60, i64 0}
@engine-10.transform = global [4 x [4 x float]] zeroinitializer
@engine-10.transform_buffer = global i32 zeroinitializer
@engine-10.instanced_shader_program = global i32 zeroinitializer
@engine-10.window = global %..rawptr zeroinitializer
@engine-10.vao = global i32 zeroinitializer
@engine-10.vbo = global i32 zeroinitializer
@engine-10.sprite_vbo = global [6 x {[0 x <8 x i8>], [2 x float]}] [{[0 x <8 x i8>], [2 x float]} {[0 x <8 x i8>] zeroinitializer, [2 x float][float 0xbff0000000000000, float 0xbff0000000000000]}, {[0 x <8 x i8>], [2 x float]} {[0 x <8 x i8>] zeroinitializer, [2 x float][float 0xbff0000000000000, float 0x3ff0000000000000]}, {[0 x <8 x i8>], [2 x float]} {[0 x <8 x i8>] zeroinitializer, [2 x float][float 0x3ff0000000000000, float 0x3ff0000000000000]}, {[0 x <8 x i8>], [2 x float]} {[0 x <8 x i8>] zeroinitializer, [2 x float][float 0x3ff0000000000000, float 0x3ff0000000000000]}, {[0 x <8 x i8>], [2 x float]} {[0 x <8 x i8>] zeroinitializer, [2 x float][float 0x3ff0000000000000, float 0xbff0000000000000]}, {[0 x <8 x i8>], [2 x float]} {[0 x <8 x i8>] zeroinitializer, [2 x float][float 0xbff0000000000000, float 0xbff0000000000000]}]
@engine-10.camera_size = global float zeroinitializer
@engine-10.camera_position = global {[0 x <8 x i8>], [2 x float]} zeroinitializer
@engine-10.current_window_width = global i32 zeroinitializer
@engine-10.current_window_height = global i32 zeroinitializer
@engine-10.sprites = global {%engine-10.Sprite_Data*, i64, i64, %Allocator} zeroinitializer
@engine-10.metadata_texture = global i32 zeroinitializer
@engine-10.atlas_texture = global i32 zeroinitializer
@engine-10.atlas_loaded = global i1 zeroinitializer
@engine-10.atlas_x = global i32 zeroinitializer
@engine-10.sprite_index = global i32 zeroinitializer
@strconv-18._f32_info = global %strconv-18.FloatInfo {i64 23, i64 8, i64 -127}
@strconv-18._f64_info = global %strconv-18.FloatInfo {i64 52, i64 11, i64 -1023}
@strconv-18.digits = global %..string {i8* getelementptr inbounds ([37 x i8], [37 x i8]* @__str$796, i64 0, i32 0), i64 36}
@gl-21.CullFace = global void (i32)* zeroinitializer
@gl-21.FrontFace = global void (i32)* zeroinitializer
@gl-21.Hint = global void (i32, i32)* zeroinitializer
@gl-21.LineWidth = global void (float)* zeroinitializer
@gl-21.PointSize = global void (float)* zeroinitializer
@gl-21.PolygonMode = global void (i32, i32)* zeroinitializer
@gl-21.Scissor = global void (i32, i32, i32, i32)* zeroinitializer
@gl-21.TexParameterf = global void (i32, i32, float)* zeroinitializer
@gl-21.TexParameterfv = global void (i32, i32, float*)* zeroinitializer
@gl-21.TexParameteri = global void (i32, i32, i32)* zeroinitializer
@gl-21.TexParameteriv = global void (i32, i32, i32*)* zeroinitializer
@gl-21.TexImage1D = global void (i32, i32, i32, i32, i32, i32, i32, %..rawptr)* zeroinitializer
@gl-21.TexImage2D = global void (i32, i32, i32, i32, i32, i32, i32, i32, %..rawptr)* zeroinitializer
@gl-21.DrawBuffer = global void (i32)* zeroinitializer
@gl-21.Clear = global void (i32)* zeroinitializer
@gl-21.ClearColor = global void (float, float, float, float)* zeroinitializer
@gl-21.ClearStencil = global void (i32)* zeroinitializer
@gl-21.ClearDepth = global void (double)* zeroinitializer
@gl-21.StencilMask = global void (i32)* zeroinitializer
@gl-21.ColorMask = global void (i8, i8, i8, i8)* zeroinitializer
@gl-21.DepthMask = global void (i8)* zeroinitializer
@gl-21.Disable = global void (i32)* zeroinitializer
@gl-21.Enable = global void (i32)* zeroinitializer
@gl-21.Finish = global void ()* zeroinitializer
@gl-21.Flush = global void ()* zeroinitializer
@gl-21.BlendFunc = global void (i32, i32)* zeroinitializer
@gl-21.LogicOp = global void (i32)* zeroinitializer
@gl-21.StencilFunc = global void (i32, i32, i32)* zeroinitializer
@gl-21.StencilOp = global void (i32, i32, i32)* zeroinitializer
@gl-21.DepthFunc = global void (i32)* zeroinitializer
@gl-21.PixelStoref = global void (i32, float)* zeroinitializer
@gl-21.PixelStorei = global void (i32, i32)* zeroinitializer
@gl-21.ReadBuffer = global void (i32)* zeroinitializer
@gl-21.ReadPixels = global void (i32, i32, i32, i32, i32, i32, %..rawptr)* zeroinitializer
@gl-21.GetBooleanv = global void (i32, i8*)* zeroinitializer
@gl-21.GetDoublev = global void (i32, double*)* zeroinitializer
@gl-21.GetError = global i32 ()* zeroinitializer
@gl-21.GetFloatv = global void (i32, float*)* zeroinitializer
@gl-21.GetIntegerv = global void (i32, i32*)* zeroinitializer
@gl-21.GetString = global i8* (i32)* zeroinitializer
@gl-21.GetTexImage = global void (i32, i32, i32, i32, %..rawptr)* zeroinitializer
@gl-21.GetTexParameterfv = global void (i32, i32, float*)* zeroinitializer
@gl-21.GetTexParameteriv = global void (i32, i32, i32*)* zeroinitializer
@gl-21.GetTexLevelParameterfv = global void (i32, i32, i32, float*)* zeroinitializer
@gl-21.GetTexLevelParameteriv = global void (i32, i32, i32, i32*)* zeroinitializer
@gl-21.IsEnabled = global i8 (i32)* zeroinitializer
@gl-21.DepthRange = global void (double, double)* zeroinitializer
@gl-21.Viewport = global void (i32, i32, i32, i32)* zeroinitializer
@gl-21.DrawArrays = global void (i32, i32, i32)* zeroinitializer
@gl-21.DrawElements = global void (i32, i32, i32, %..rawptr)* zeroinitializer
@gl-21.PolygonOffset = global void (float, float)* zeroinitializer
@gl-21.CopyTexImage1D = global void (i32, i32, i32, i32, i32, i32, i32)* zeroinitializer
@gl-21.CopyTexImage2D = global void (i32, i32, i32, i32, i32, i32, i32, i32)* zeroinitializer
@gl-21.CopyTexSubImage1D = global void (i32, i32, i32, i32, i32, i32)* zeroinitializer
@gl-21.CopyTexSubImage2D = global void (i32, i32, i32, i32, i32, i32, i32, i32)* zeroinitializer
@gl-21.TexSubImage1D = global void (i32, i32, i32, i32, i32, i32, %..rawptr)* zeroinitializer
@gl-21.TexSubImage2D = global void (i32, i32, i32, i32, i32, i32, i32, i32, %..rawptr)* zeroinitializer
@gl-21.BindTexture = global void (i32, i32)* zeroinitializer
@gl-21.DeleteTextures = global void (i32, i32*)* zeroinitializer
@gl-21.GenTextures = global void (i32, i32*)* zeroinitializer
@gl-21.IsTexture = global i8 (i32)* zeroinitializer
@gl-21.DrawRangeElements = global void (i32, i32, i32, i32, i32, %..rawptr)* zeroinitializer
@gl-21.TexImage3D = global void (i32, i32, i32, i32, i32, i32, i32, i32, i32, %..rawptr)* zeroinitializer
@gl-21.TexSubImage3D = global void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %..rawptr)* zeroinitializer
@gl-21.CopyTexSubImage3D = global void (i32, i32, i32, i32, i32, i32, i32, i32, i32)* zeroinitializer
@gl-21.ActiveTexture = global void (i32)* zeroinitializer
@gl-21.SampleCoverage = global void (float, i8)* zeroinitializer
@gl-21.CompressedTexImage3D = global void (i32, i32, i32, i32, i32, i32, i32, i32, %..rawptr)* zeroinitializer
@gl-21.CompressedTexImage2D = global void (i32, i32, i32, i32, i32, i32, i32, %..rawptr)* zeroinitializer
@gl-21.CompressedTexImage1D = global void (i32, i32, i32, i32, i32, i32, %..rawptr)* zeroinitializer
@gl-21.CompressedTexSubImage3D = global void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %..rawptr)* zeroinitializer
@gl-21.CompressedTexSubImage2D = global void (i32, i32, i32, i32, i32, i32, i32, i32, %..rawptr)* zeroinitializer
@gl-21.CompressedTexSubImage1D = global void (i32, i32, i32, i32, i32, i32, %..rawptr)* zeroinitializer
@gl-21.GetCompressedTexImage = global void (i32, i32, %..rawptr)* zeroinitializer
@gl-21.BlendFuncSeparate = global void (i32, i32, i32, i32)* zeroinitializer
@gl-21.MultiDrawArrays = global void (i32, i32*, i32*, i32)* zeroinitializer
@gl-21.MultiDrawElements = global void (i32, i32*, i32, %..rawptr*, i32)* zeroinitializer
@gl-21.PointParameterf = global void (i32, float)* zeroinitializer
@gl-21.PointParameterfv = global void (i32, float*)* zeroinitializer
@gl-21.PointParameteri = global void (i32, i32)* zeroinitializer
@gl-21.PointParameteriv = global void (i32, i32*)* zeroinitializer
@gl-21.BlendColor = global void (float, float, float, float)* zeroinitializer
@gl-21.BlendEquation = global void (i32)* zeroinitializer
@gl-21.GenQueries = global void (i32, i32*)* zeroinitializer
@gl-21.DeleteQueries = global void (i32, i32*)* zeroinitializer
@gl-21.IsQuery = global i8 (i32)* zeroinitializer
@gl-21.BeginQuery = global void (i32, i32)* zeroinitializer
@gl-21.EndQuery = global void (i32)* zeroinitializer
@gl-21.GetQueryiv = global void (i32, i32, i32*)* zeroinitializer
@gl-21.GetQueryObjectiv = global void (i32, i32, i32*)* zeroinitializer
@gl-21.GetQueryObjectuiv = global void (i32, i32, i32*)* zeroinitializer
@gl-21.BindBuffer = global void (i32, i32)* zeroinitializer
@gl-21.DeleteBuffers = global void (i32, i32*)* zeroinitializer
@gl-21.GenBuffers = global void (i32, i32*)* zeroinitializer
@gl-21.IsBuffer = global i8 (i32)* zeroinitializer
@gl-21.BufferData = global void (i32, i64, %..rawptr, i32)* zeroinitializer
@gl-21.BufferSubData = global void (i32, i64, i64, %..rawptr)* zeroinitializer
@gl-21.GetBufferSubData = global void (i32, i64, i64, %..rawptr)* zeroinitializer
@gl-21.MapBuffer = global %..rawptr (i32, i32)* zeroinitializer
@gl-21.UnmapBuffer = global i8 (i32)* zeroinitializer
@gl-21.GetBufferParameteriv = global void (i32, i32, i32*)* zeroinitializer
@gl-21.GetBufferPointerv = global void (i32, i32, %..rawptr*)* zeroinitializer
@gl-21.BlendEquationSeparate = global void (i32, i32)* zeroinitializer
@gl-21.DrawBuffers = global void (i32, i32*)* zeroinitializer
@gl-21.StencilOpSeparate = global void (i32, i32, i32, i32)* zeroinitializer
@gl-21.StencilFuncSeparate = global void (i32, i32, i32, i32)* zeroinitializer
@gl-21.StencilMaskSeparate = global void (i32, i32)* zeroinitializer
@gl-21.AttachShader = global void (i32, i32)* zeroinitializer
@gl-21.BindAttribLocation = global void (i32, i32, i8*)* zeroinitializer
@gl-21.CompileShader = global void (i32)* zeroinitializer
@gl-21.CreateProgram = global i32 ()* zeroinitializer
@gl-21.CreateShader = global i32 (i32)* zeroinitializer
@gl-21.DeleteProgram = global void (i32)* zeroinitializer
@gl-21.DeleteShader = global void (i32)* zeroinitializer
@gl-21.DetachShader = global void (i32, i32)* zeroinitializer
@gl-21.DisableVertexAttribArray = global void (i32)* zeroinitializer
@gl-21.EnableVertexAttribArray = global void (i32)* zeroinitializer
@gl-21.GetActiveAttrib = global void (i32, i32, i32, i32*, i32*, i32*, i8*)* zeroinitializer
@gl-21.GetActiveUniform = global void (i32, i32, i32, i32*, i32*, i32*, i8*)* zeroinitializer
@gl-21.GetAttachedShaders = global void (i32, i32, i32*, i32*)* zeroinitializer
@gl-21.GetAttribLocation = global i32 (i32, i8*)* zeroinitializer
@gl-21.GetProgramiv = global void (i32, i32, i32*)* zeroinitializer
@gl-21.GetProgramInfoLog = global void (i32, i32, i32*, i8*)* zeroinitializer
@gl-21.GetShaderiv = global void (i32, i32, i32*)* zeroinitializer
@gl-21.GetShaderInfoLog = global void (i32, i32, i32*, i8*)* zeroinitializer
@gl-21.GetShaderSource = global void (i32, i32, i32*, i8*)* zeroinitializer
@gl-21.GetUniformLocation = global i32 (i32, i8*)* zeroinitializer
@gl-21.GetUniformfv = global void (i32, i32, float*)* zeroinitializer
@gl-21.GetUniformiv = global void (i32, i32, i32*)* zeroinitializer
@gl-21.GetVertexAttribdv = global void (i32, i32, double*)* zeroinitializer
@gl-21.GetVertexAttribfv = global void (i32, i32, float*)* zeroinitializer
@gl-21.GetVertexAttribiv = global void (i32, i32, i32*)* zeroinitializer
@gl-21.GetVertexAttribPointerv = global void (i32, i32, %..rawptr*)* zeroinitializer
@gl-21.IsProgram = global i8 (i32)* zeroinitializer
@gl-21.IsShader = global i8 (i32)* zeroinitializer
@gl-21.LinkProgram = global void (i32)* zeroinitializer
@gl-21.ShaderSource = global void (i32, i32, i8**, i32*)* zeroinitializer
@gl-21.UseProgram = global void (i32)* zeroinitializer
@gl-21.Uniform1f = global void (i32, float)* zeroinitializer
@gl-21.Uniform2f = global void (i32, float, float)* zeroinitializer
@gl-21.Uniform3f = global void (i32, float, float, float)* zeroinitializer
@gl-21.Uniform4f = global void (i32, float, float, float, float)* zeroinitializer
@gl-21.Uniform1i = global void (i32, i32)* zeroinitializer
@gl-21.Uniform2i = global void (i32, i32, i32)* zeroinitializer
@gl-21.Uniform3i = global void (i32, i32, i32, i32)* zeroinitializer
@gl-21.Uniform4i = global void (i32, i32, i32, i32, i32)* zeroinitializer
@gl-21.Uniform1fv = global void (i32, i32, float*)* zeroinitializer
@gl-21.Uniform2fv = global void (i32, i32, float*)* zeroinitializer
@gl-21.Uniform3fv = global void (i32, i32, float*)* zeroinitializer
@gl-21.Uniform4fv = global void (i32, i32, float*)* zeroinitializer
@gl-21.Uniform1iv = global void (i32, i32, i32*)* zeroinitializer
@gl-21.Uniform2iv = global void (i32, i32, i32*)* zeroinitializer
@gl-21.Uniform3iv = global void (i32, i32, i32*)* zeroinitializer
@gl-21.Uniform4iv = global void (i32, i32, i32*)* zeroinitializer
@gl-21.UniformMatrix2fv = global void (i32, i32, i8, float*)* zeroinitializer
@gl-21.UniformMatrix3fv = global void (i32, i32, i8, float*)* zeroinitializer
@gl-21.UniformMatrix4fv = global void (i32, i32, i8, float*)* zeroinitializer
@gl-21.ValidateProgram = global void (i32)* zeroinitializer
@gl-21.VertexAttrib1d = global void (i32, double)* zeroinitializer
@gl-21.VertexAttrib1dv = global void (i32, double*)* zeroinitializer
@gl-21.VertexAttrib1f = global void (i32, float)* zeroinitializer
@gl-21.VertexAttrib1fv = global void (i32, float*)* zeroinitializer
@gl-21.VertexAttrib1s = global void (i32, i16)* zeroinitializer
@gl-21.VertexAttrib1sv = global void (i32, i16*)* zeroinitializer
@gl-21.VertexAttrib2d = global void (i32, double, double)* zeroinitializer
@gl-21.VertexAttrib2dv = global void (i32, double*)* zeroinitializer
@gl-21.VertexAttrib2f = global void (i32, float, float)* zeroinitializer
@gl-21.VertexAttrib2fv = global void (i32, float*)* zeroinitializer
@gl-21.VertexAttrib2s = global void (i32, i16, i16)* zeroinitializer
@gl-21.VertexAttrib2sv = global void (i32, i16*)* zeroinitializer
@gl-21.VertexAttrib3d = global void (i32, double, double, double)* zeroinitializer
@gl-21.VertexAttrib3dv = global void (i32, double*)* zeroinitializer
@gl-21.VertexAttrib3f = global void (i32, float, float, float)* zeroinitializer
@gl-21.VertexAttrib3fv = global void (i32, float*)* zeroinitializer
@gl-21.VertexAttrib3s = global void (i32, i16, i16, i16)* zeroinitializer
@gl-21.VertexAttrib3sv = global void (i32, i16*)* zeroinitializer
@gl-21.VertexAttrib4Nbv = global void (i32, i8*)* zeroinitializer
@gl-21.VertexAttrib4Niv = global void (i32, i32*)* zeroinitializer
@gl-21.VertexAttrib4Nsv = global void (i32, i16*)* zeroinitializer
@gl-21.VertexAttrib4Nub = global void (i32, i8, i8, i8, i8)* zeroinitializer
@gl-21.VertexAttrib4Nubv = global void (i32, i8*)* zeroinitializer
@gl-21.VertexAttrib4Nuiv = global void (i32, i32*)* zeroinitializer
@gl-21.VertexAttrib4Nusv = global void (i32, i16*)* zeroinitializer
@gl-21.VertexAttrib4bv = global void (i32, i8*)* zeroinitializer
@gl-21.VertexAttrib4d = global void (i32, double, double, double, double)* zeroinitializer
@gl-21.VertexAttrib4dv = global void (i32, double*)* zeroinitializer
@gl-21.VertexAttrib4f = global void (i32, float, float, float, float)* zeroinitializer
@gl-21.VertexAttrib4fv = global void (i32, float*)* zeroinitializer
@gl-21.VertexAttrib4iv = global void (i32, i32*)* zeroinitializer
@gl-21.VertexAttrib4s = global void (i32, i16, i16, i16, i16)* zeroinitializer
@gl-21.VertexAttrib4sv = global void (i32, i16*)* zeroinitializer
@gl-21.VertexAttrib4ubv = global void (i32, i8*)* zeroinitializer
@gl-21.VertexAttrib4uiv = global void (i32, i32*)* zeroinitializer
@gl-21.VertexAttrib4usv = global void (i32, i16*)* zeroinitializer
@gl-21.VertexAttribPointer = global void (i32, i32, i32, i8, i32, %..rawptr)* zeroinitializer
@gl-21.UniformMatrix2x3fv = global void (i32, i32, i8, float*)* zeroinitializer
@gl-21.UniformMatrix3x2fv = global void (i32, i32, i8, float*)* zeroinitializer
@gl-21.UniformMatrix2x4fv = global void (i32, i32, i8, float*)* zeroinitializer
@gl-21.UniformMatrix4x2fv = global void (i32, i32, i8, float*)* zeroinitializer
@gl-21.UniformMatrix3x4fv = global void (i32, i32, i8, float*)* zeroinitializer
@gl-21.UniformMatrix4x3fv = global void (i32, i32, i8, float*)* zeroinitializer
@gl-21.ColorMaski = global void (i32, i8, i8, i8, i8)* zeroinitializer
@gl-21.GetBooleani_v = global void (i32, i32, i8*)* zeroinitializer
@gl-21.GetIntegeri_v = global void (i32, i32, i32*)* zeroinitializer
@gl-21.Enablei = global void (i32, i32)* zeroinitializer
@gl-21.Disablei = global void (i32, i32)* zeroinitializer
@gl-21.IsEnabledi = global i8 (i32, i32)* zeroinitializer
@gl-21.BeginTransformFeedback = global void (i32)* zeroinitializer
@gl-21.EndTransformFeedback = global void ()* zeroinitializer
@gl-21.BindBufferRange = global void (i32, i32, i32, i64, i64)* zeroinitializer
@gl-21.BindBufferBase = global void (i32, i32, i32)* zeroinitializer
@gl-21.TransformFeedbackVaryings = global void (i32, i32, i8*, i32)* zeroinitializer
@gl-21.GetTransformFeedbackVarying = global void (i32, i32, i32, i32*, i32*, i32*, i8*)* zeroinitializer
@gl-21.ClampColor = global void (i32, i32)* zeroinitializer
@gl-21.BeginConditionalRender = global void (i32, i32)* zeroinitializer
@gl-21.EndConditionalRender = global void ()* zeroinitializer
@gl-21.VertexAttribIPointer = global void (i32, i32, i32, i32, %..rawptr)* zeroinitializer
@gl-21.GetVertexAttribIiv = global void (i32, i32, i32*)* zeroinitializer
@gl-21.GetVertexAttribIuiv = global void (i32, i32, i32*)* zeroinitializer
@gl-21.VertexAttribI1i = global void (i32, i32)* zeroinitializer
@gl-21.VertexAttribI2i = global void (i32, i32, i32)* zeroinitializer
@gl-21.VertexAttribI3i = global void (i32, i32, i32, i32)* zeroinitializer
@gl-21.VertexAttribI4i = global void (i32, i32, i32, i32, i32)* zeroinitializer
@gl-21.VertexAttribI1ui = global void (i32, i32)* zeroinitializer
@gl-21.VertexAttribI2ui = global void (i32, i32, i32)* zeroinitializer
@gl-21.VertexAttribI3ui = global void (i32, i32, i32, i32)* zeroinitializer
@gl-21.VertexAttribI4ui = global void (i32, i32, i32, i32, i32)* zeroinitializer
@gl-21.VertexAttribI1iv = global void (i32, i32*)* zeroinitializer
@gl-21.VertexAttribI2iv = global void (i32, i32*)* zeroinitializer
@gl-21.VertexAttribI3iv = global void (i32, i32*)* zeroinitializer
@gl-21.VertexAttribI4iv = global void (i32, i32*)* zeroinitializer
@gl-21.VertexAttribI1uiv = global void (i32, i32*)* zeroinitializer
@gl-21.VertexAttribI2uiv = global void (i32, i32*)* zeroinitializer
@gl-21.VertexAttribI3uiv = global void (i32, i32*)* zeroinitializer
@gl-21.VertexAttribI4uiv = global void (i32, i32*)* zeroinitializer
@gl-21.VertexAttribI4bv = global void (i32, i8*)* zeroinitializer
@gl-21.VertexAttribI4sv = global void (i32, i16*)* zeroinitializer
@gl-21.VertexAttribI4ubv = global void (i32, i8*)* zeroinitializer
@gl-21.VertexAttribI4usv = global void (i32, i16*)* zeroinitializer
@gl-21.GetUniformuiv = global void (i32, i32, i32*)* zeroinitializer
@gl-21.BindFragDataLocation = global void (i32, i32, i8*)* zeroinitializer
@gl-21.GetFragDataLocation = global i32 (i32, i8*)* zeroinitializer
@gl-21.Uniform1ui = global void (i32, i32)* zeroinitializer
@gl-21.Uniform2ui = global void (i32, i32, i32)* zeroinitializer
@gl-21.Uniform3ui = global void (i32, i32, i32, i32)* zeroinitializer
@gl-21.Uniform4ui = global void (i32, i32, i32, i32, i32)* zeroinitializer
@gl-21.Uniform1uiv = global void (i32, i32, i32*)* zeroinitializer
@gl-21.Uniform2uiv = global void (i32, i32, i32*)* zeroinitializer
@gl-21.Uniform3uiv = global void (i32, i32, i32*)* zeroinitializer
@gl-21.Uniform4uiv = global void (i32, i32, i32*)* zeroinitializer
@gl-21.TexParameterIiv = global void (i32, i32, i32*)* zeroinitializer
@gl-21.TexParameterIuiv = global void (i32, i32, i32*)* zeroinitializer
@gl-21.GetTexParameterIiv = global void (i32, i32, i32*)* zeroinitializer
@gl-21.GetTexParameterIuiv = global void (i32, i32, i32*)* zeroinitializer
@gl-21.ClearBufferiv = global void (i32, i32, i32*)* zeroinitializer
@gl-21.ClearBufferuiv = global void (i32, i32, i32*)* zeroinitializer
@gl-21.ClearBufferfv = global void (i32, i32, float*)* zeroinitializer
@gl-21.ClearBufferfi = global %..rawptr (i32, i32, float, i32)* zeroinitializer
@gl-21.GetStringi = global i8 (i32, i32)* zeroinitializer
@gl-21.IsRenderbuffer = global i8 (i32)* zeroinitializer
@gl-21.BindRenderbuffer = global void (i32, i32)* zeroinitializer
@gl-21.DeleteRenderbuffers = global void (i32, i32*)* zeroinitializer
@gl-21.GenRenderbuffers = global void (i32, i32*)* zeroinitializer
@gl-21.RenderbufferStorage = global void (i32, i32, i32, i32)* zeroinitializer
@gl-21.GetRenderbufferParameteriv = global void (i32, i32, i32*)* zeroinitializer
@gl-21.IsFramebuffer = global i8 (i32)* zeroinitializer
@gl-21.BindFramebuffer = global void (i32, i32)* zeroinitializer
@gl-21.DeleteFramebuffers = global void (i32, i32*)* zeroinitializer
@gl-21.GenFramebuffers = global void (i32, i32*)* zeroinitializer
@gl-21.CheckFramebufferStatus = global i32 (i32)* zeroinitializer
@gl-21.FramebufferTexture1D = global void (i32, i32, i32, i32, i32)* zeroinitializer
@gl-21.FramebufferTexture2D = global void (i32, i32, i32, i32, i32)* zeroinitializer
@gl-21.FramebufferTexture3D = global void (i32, i32, i32, i32, i32, i32)* zeroinitializer
@gl-21.FramebufferRenderbuffer = global void (i32, i32, i32, i32)* zeroinitializer
@gl-21.GetFramebufferAttachmentParameteriv = global void (i32, i32, i32, i32*)* zeroinitializer
@gl-21.GenerateMipmap = global void (i32)* zeroinitializer
@gl-21.BlitFramebuffer = global void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)* zeroinitializer
@gl-21.RenderbufferStorageMultisample = global void (i32, i32, i32, i32, i32)* zeroinitializer
@gl-21.FramebufferTextureLayer = global void (i32, i32, i32, i32, i32)* zeroinitializer
@gl-21.MapBufferRange = global %..rawptr (i32, i64, i64, i32)* zeroinitializer
@gl-21.FlushMappedBufferRange = global void (i32, i64, i64)* zeroinitializer
@gl-21.BindVertexArray = global void (i32)* zeroinitializer
@gl-21.DeleteVertexArrays = global void (i32, i32*)* zeroinitializer
@gl-21.GenVertexArrays = global void (i32, i32*)* zeroinitializer
@gl-21.IsVertexArray = global i8 (i32)* zeroinitializer
@gl-21.DrawArraysInstanced = global void (i32, i32, i32, i32)* zeroinitializer
@gl-21.DrawElementsInstanced = global void (i32, i32, i32, %..rawptr, i32)* zeroinitializer
@gl-21.TexBuffer = global void (i32, i32, i32)* zeroinitializer
@gl-21.PrimitiveRestartIndex = global void (i32)* zeroinitializer
@gl-21.CopyBufferSubData = global void (i32, i32, i64, i64, i64)* zeroinitializer
@gl-21.GetUniformIndices = global void (i32, i32, i8*, i32*)* zeroinitializer
@gl-21.GetActiveUniformsiv = global void (i32, i32, i32*, i32, i32*)* zeroinitializer
@gl-21.GetActiveUniformName = global void (i32, i32, i32, i32*, i8*)* zeroinitializer
@gl-21.GetUniformBlockIndex = global i32 (i32, i8*)* zeroinitializer
@gl-21.GetActiveUniformBlockiv = global void (i32, i32, i32, i32*)* zeroinitializer
@gl-21.GetActiveUniformBlockName = global void (i32, i32, i32, i32*, i8*)* zeroinitializer
@gl-21.UniformBlockBinding = global void (i32, i32, i32)* zeroinitializer
@gl-21.DrawElementsBaseVertex = global void (i32, i32, i32, %..rawptr, i32)* zeroinitializer
@gl-21.DrawRangeElementsBaseVertex = global void (i32, i32, i32, i32, i32, %..rawptr, i32)* zeroinitializer
@gl-21.DrawElementsInstancedBaseVertex = global void (i32, i32, i32, %..rawptr, i32, i32)* zeroinitializer
@gl-21.MultiDrawElementsBaseVertex = global void (i32, i32*, i32, %..rawptr*, i32, i32*)* zeroinitializer
@gl-21.ProvokingVertex = global void (i32)* zeroinitializer
@gl-21.FenceSync = global %..rawptr (i32, i32)* zeroinitializer
@gl-21.IsSync = global i8 (%..rawptr)* zeroinitializer
@gl-21.DeleteSync = global void (%..rawptr)* zeroinitializer
@gl-21.ClientWaitSync = global i32 (%..rawptr, i32, i64)* zeroinitializer
@gl-21.WaitSync = global void (%..rawptr, i32, i64)* zeroinitializer
@gl-21.GetInteger64v = global void (i32, i64*)* zeroinitializer
@gl-21.GetSynciv = global void (%..rawptr, i32, i32, i32*, i32*)* zeroinitializer
@gl-21.GetInteger64i_v = global void (i32, i32, i64*)* zeroinitializer
@gl-21.GetBufferParameteri64v = global void (i32, i32, i64*)* zeroinitializer
@gl-21.FramebufferTexture = global void (i32, i32, i32, i32)* zeroinitializer
@gl-21.TexImage2DMultisample = global void (i32, i32, i32, i32, i32, i8)* zeroinitializer
@gl-21.TexImage3DMultisample = global void (i32, i32, i32, i32, i32, i32, i8)* zeroinitializer
@gl-21.GetMultisamplefv = global void (i32, i32, float*)* zeroinitializer
@gl-21.SampleMaski = global void (i32, i32)* zeroinitializer
@gl-21.BindFragDataLocationIndexed = global void (i32, i32, i32, i8*)* zeroinitializer
@gl-21.GetFragDataIndex = global i32 (i32, i8*)* zeroinitializer
@gl-21.GenSamplers = global void (i32, i32*)* zeroinitializer
@gl-21.DeleteSamplers = global void (i32, i32*)* zeroinitializer
@gl-21.IsSampler = global i8 (i32)* zeroinitializer
@gl-21.BindSampler = global void (i32, i32)* zeroinitializer
@gl-21.SamplerParameteri = global void (i32, i32, i32)* zeroinitializer
@gl-21.SamplerParameteriv = global void (i32, i32, i32*)* zeroinitializer
@gl-21.SamplerParameterf = global void (i32, i32, float)* zeroinitializer
@gl-21.SamplerParameterfv = global void (i32, i32, float*)* zeroinitializer
@gl-21.SamplerParameterIiv = global void (i32, i32, i32*)* zeroinitializer
@gl-21.SamplerParameterIuiv = global void (i32, i32, i32*)* zeroinitializer
@gl-21.GetSamplerParameteriv = global void (i32, i32, i32*)* zeroinitializer
@gl-21.GetSamplerParameterIiv = global void (i32, i32, i32*)* zeroinitializer
@gl-21.GetSamplerParameterfv = global void (i32, i32, float*)* zeroinitializer
@gl-21.GetSamplerParameterIuiv = global void (i32, i32, i32*)* zeroinitializer
@gl-21.QueryCounter = global void (i32, i32)* zeroinitializer
@gl-21.GetQueryObjecti64v = global void (i32, i32, i64*)* zeroinitializer
@gl-21.GetQueryObjectui64v = global void (i32, i32, i64*)* zeroinitializer
@gl-21.VertexAttribDivisor = global void (i32, i32)* zeroinitializer
@gl-21.VertexAttribP1ui = global void (i32, i32, i8, i32)* zeroinitializer
@gl-21.VertexAttribP1uiv = global void (i32, i32, i8, i32*)* zeroinitializer
@gl-21.VertexAttribP2ui = global void (i32, i32, i8, i32)* zeroinitializer
@gl-21.VertexAttribP2uiv = global void (i32, i32, i8, i32*)* zeroinitializer
@gl-21.VertexAttribP3ui = global void (i32, i32, i8, i32)* zeroinitializer
@gl-21.VertexAttribP3uiv = global void (i32, i32, i8, i32*)* zeroinitializer
@gl-21.VertexAttribP4ui = global void (i32, i32, i8, i32)* zeroinitializer
@gl-21.VertexAttribP4uiv = global void (i32, i32, i8, i32*)* zeroinitializer
@gl-21.VertexP2ui = global void (i32, i32)* zeroinitializer
@gl-21.VertexP2uiv = global void (i32, i32*)* zeroinitializer
@gl-21.VertexP3ui = global void (i32, i32)* zeroinitializer
@gl-21.VertexP3uiv = global void (i32, i32*)* zeroinitializer
@gl-21.VertexP4ui = global void (i32, i32)* zeroinitializer
@gl-21.VertexP4uiv = global void (i32, i32*)* zeroinitializer
@gl-21.TexCoordP1ui = global void (i32, i32)* zeroinitializer
@gl-21.TexCoordP1uiv = global void (i32, i32*)* zeroinitializer
@gl-21.TexCoordP2ui = global void (i32, i32)* zeroinitializer
@gl-21.TexCoordP2uiv = global void (i32, i32*)* zeroinitializer
@gl-21.TexCoordP3ui = global void (i32, i32)* zeroinitializer
@gl-21.TexCoordP3uiv = global void (i32, i32*)* zeroinitializer
@gl-21.TexCoordP4ui = global void (i32, i32)* zeroinitializer
@gl-21.TexCoordP4uiv = global void (i32, i32*)* zeroinitializer
@gl-21.MultiTexCoordP1ui = global void (i32, i32, i32)* zeroinitializer
@gl-21.MultiTexCoordP1uiv = global void (i32, i32, i32*)* zeroinitializer
@gl-21.MultiTexCoordP2ui = global void (i32, i32, i32)* zeroinitializer
@gl-21.MultiTexCoordP2uiv = global void (i32, i32, i32*)* zeroinitializer
@gl-21.MultiTexCoordP3ui = global void (i32, i32, i32)* zeroinitializer
@gl-21.MultiTexCoordP3uiv = global void (i32, i32, i32*)* zeroinitializer
@gl-21.MultiTexCoordP4ui = global void (i32, i32, i32)* zeroinitializer
@gl-21.MultiTexCoordP4uiv = global void (i32, i32, i32*)* zeroinitializer
@gl-21.NormalP3ui = global void (i32, i32)* zeroinitializer
@gl-21.NormalP3uiv = global void (i32, i32*)* zeroinitializer
@gl-21.ColorP3ui = global void (i32, i32)* zeroinitializer
@gl-21.ColorP3uiv = global void (i32, i32*)* zeroinitializer
@gl-21.ColorP4ui = global void (i32, i32)* zeroinitializer
@gl-21.ColorP4uiv = global void (i32, i32*)* zeroinitializer
@gl-21.SecondaryColorP3ui = global void (i32, i32)* zeroinitializer
@gl-21.SecondaryColorP3uiv = global void (i32, i32*)* zeroinitializer
@gl-21.MinSampleShading = global void (float)* zeroinitializer
@gl-21.BlendEquationi = global void (i32, i32)* zeroinitializer
@gl-21.BlendEquationSeparatei = global void (i32, i32, i32)* zeroinitializer
@gl-21.BlendFunci = global void (i32, i32, i32)* zeroinitializer
@gl-21.BlendFuncSeparatei = global void (i32, i32, i32, i32, i32)* zeroinitializer
@gl-21.DrawArraysIndirect = global void (i32, %..rawptr)* zeroinitializer
@gl-21.DrawElementsIndirect = global void (i32, i32, %..rawptr)* zeroinitializer
@gl-21.Uniform1d = global void (i32, double)* zeroinitializer
@gl-21.Uniform2d = global void (i32, double, double)* zeroinitializer
@gl-21.Uniform3d = global void (i32, double, double, double)* zeroinitializer
@gl-21.Uniform4d = global void (i32, double, double, double, double)* zeroinitializer
@gl-21.Uniform1dv = global void (i32, i32, double*)* zeroinitializer
@gl-21.Uniform2dv = global void (i32, i32, double*)* zeroinitializer
@gl-21.Uniform3dv = global void (i32, i32, double*)* zeroinitializer
@gl-21.Uniform4dv = global void (i32, i32, double*)* zeroinitializer
@gl-21.UniformMatrix2dv = global void (i32, i32, i8, double*)* zeroinitializer
@gl-21.UniformMatrix3dv = global void (i32, i32, i8, double*)* zeroinitializer
@gl-21.UniformMatrix4dv = global void (i32, i32, i8, double*)* zeroinitializer
@gl-21.UniformMatrix2x3dv = global void (i32, i32, i8, double*)* zeroinitializer
@gl-21.UniformMatrix2x4dv = global void (i32, i32, i8, double*)* zeroinitializer
@gl-21.UniformMatrix3x2dv = global void (i32, i32, i8, double*)* zeroinitializer
@gl-21.UniformMatrix3x4dv = global void (i32, i32, i8, double*)* zeroinitializer
@gl-21.UniformMatrix4x2dv = global void (i32, i32, i8, double*)* zeroinitializer
@gl-21.UniformMatrix4x3dv = global void (i32, i32, i8, double*)* zeroinitializer
@gl-21.GetUniformdv = global void (i32, i32, double*)* zeroinitializer
@gl-21.GetSubroutineUniformLocation = global i32 (i32, i32, i8*)* zeroinitializer
@gl-21.GetSubroutineIndex = global i32 (i32, i32, i8*)* zeroinitializer
@gl-21.GetActiveSubroutineUniformiv = global void (i32, i32, i32, i32, i32*)* zeroinitializer
@gl-21.GetActiveSubroutineUniformName = global void (i32, i32, i32, i32, i32*, i8*)* zeroinitializer
@gl-21.GetActiveSubroutineName = global void (i32, i32, i32, i32, i32*, i8*)* zeroinitializer
@gl-21.UniformSubroutinesuiv = global void (i32, i32, i32*)* zeroinitializer
@gl-21.GetUniformSubroutineuiv = global void (i32, i32, i32*)* zeroinitializer
@gl-21.GetProgramStageiv = global void (i32, i32, i32, i32*)* zeroinitializer
@gl-21.PatchParameteri = global void (i32, i32)* zeroinitializer
@gl-21.PatchParameterfv = global void (i32, float*)* zeroinitializer
@gl-21.BindTransformFeedback = global void (i32, i32)* zeroinitializer
@gl-21.DeleteTransformFeedbacks = global void (i32, i32*)* zeroinitializer
@gl-21.GenTransformFeedbacks = global void (i32, i32*)* zeroinitializer
@gl-21.IsTransformFeedback = global i8 (i32)* zeroinitializer
@gl-21.PauseTransformFeedback = global void ()* zeroinitializer
@gl-21.ResumeTransformFeedback = global void ()* zeroinitializer
@gl-21.DrawTransformFeedback = global void (i32, i32)* zeroinitializer
@gl-21.DrawTransformFeedbackStream = global void (i32, i32, i32)* zeroinitializer
@gl-21.BeginQueryIndexed = global void (i32, i32, i32)* zeroinitializer
@gl-21.EndQueryIndexed = global void (i32, i32)* zeroinitializer
@gl-21.GetQueryIndexediv = global void (i32, i32, i32, i32*)* zeroinitializer
@gl-21.ReleaseShaderCompiler = global void ()* zeroinitializer
@gl-21.ShaderBinary = global void (i32, i32*, i32, %..rawptr, i32)* zeroinitializer
@gl-21.GetShaderPrecisionFormat = global void (i32, i32, i32*, i32*)* zeroinitializer
@gl-21.DepthRangef = global void (float, float)* zeroinitializer
@gl-21.ClearDepthf = global void (float)* zeroinitializer
@gl-21.GetProgramBinary = global void (i32, i32, i32*, i32*, %..rawptr)* zeroinitializer
@gl-21.ProgramBinary = global void (i32, i32, %..rawptr, i32)* zeroinitializer
@gl-21.ProgramParameteri = global void (i32, i32, i32)* zeroinitializer
@gl-21.UseProgramStages = global void (i32, i32, i32)* zeroinitializer
@gl-21.ActiveShaderProgram = global void (i32, i32)* zeroinitializer
@gl-21.CreateShaderProgramv = global i32 (i32, i32, i8*)* zeroinitializer
@gl-21.BindProgramPipeline = global void (i32)* zeroinitializer
@gl-21.DeleteProgramPipelines = global void (i32, i32*)* zeroinitializer
@gl-21.GenProgramPipelines = global void (i32, i32*)* zeroinitializer
@gl-21.IsProgramPipeline = global i8 (i32)* zeroinitializer
@gl-21.GetProgramPipelineiv = global void (i32, i32, i32*)* zeroinitializer
@gl-21.ProgramUniform1i = global void (i32, i32, i32)* zeroinitializer
@gl-21.ProgramUniform1iv = global void (i32, i32, i32, i32*)* zeroinitializer
@gl-21.ProgramUniform1f = global void (i32, i32, float)* zeroinitializer
@gl-21.ProgramUniform1fv = global void (i32, i32, i32, float*)* zeroinitializer
@gl-21.ProgramUniform1d = global void (i32, i32, double)* zeroinitializer
@gl-21.ProgramUniform1dv = global void (i32, i32, i32, double*)* zeroinitializer
@gl-21.ProgramUniform1ui = global void (i32, i32, i32)* zeroinitializer
@gl-21.ProgramUniform1uiv = global void (i32, i32, i32, i32*)* zeroinitializer
@gl-21.ProgramUniform2i = global void (i32, i32, i32, i32)* zeroinitializer
@gl-21.ProgramUniform2iv = global void (i32, i32, i32, i32*)* zeroinitializer
@gl-21.ProgramUniform2f = global void (i32, i32, float, float)* zeroinitializer
@gl-21.ProgramUniform2fv = global void (i32, i32, i32, float*)* zeroinitializer
@gl-21.ProgramUniform2d = global void (i32, i32, double, double)* zeroinitializer
@gl-21.ProgramUniform2dv = global void (i32, i32, i32, double*)* zeroinitializer
@gl-21.ProgramUniform2ui = global void (i32, i32, i32, i32)* zeroinitializer
@gl-21.ProgramUniform2uiv = global void (i32, i32, i32, i32*)* zeroinitializer
@gl-21.ProgramUniform3i = global void (i32, i32, i32, i32, i32)* zeroinitializer
@gl-21.ProgramUniform3iv = global void (i32, i32, i32, i32*)* zeroinitializer
@gl-21.ProgramUniform3f = global void (i32, i32, float, float, float)* zeroinitializer
@gl-21.ProgramUniform3fv = global void (i32, i32, i32, float*)* zeroinitializer
@gl-21.ProgramUniform3d = global void (i32, i32, double, double, double)* zeroinitializer
@gl-21.ProgramUniform3dv = global void (i32, i32, i32, double*)* zeroinitializer
@gl-21.ProgramUniform3ui = global void (i32, i32, i32, i32, i32)* zeroinitializer
@gl-21.ProgramUniform3uiv = global void (i32, i32, i32, i32*)* zeroinitializer
@gl-21.ProgramUniform4i = global void (i32, i32, i32, i32, i32, i32)* zeroinitializer
@gl-21.ProgramUniform4iv = global void (i32, i32, i32, i32*)* zeroinitializer
@gl-21.ProgramUniform4f = global void (i32, i32, float, float, float, float)* zeroinitializer
@gl-21.ProgramUniform4fv = global void (i32, i32, i32, float*)* zeroinitializer
@gl-21.ProgramUniform4d = global void (i32, i32, double, double, double, double)* zeroinitializer
@gl-21.ProgramUniform4dv = global void (i32, i32, i32, double*)* zeroinitializer
@gl-21.ProgramUniform4ui = global void (i32, i32, i32, i32, i32, i32)* zeroinitializer
@gl-21.ProgramUniform4uiv = global void (i32, i32, i32, i32*)* zeroinitializer
@gl-21.ProgramUniformMatrix2fv = global void (i32, i32, i32, i8, float*)* zeroinitializer
@gl-21.ProgramUniformMatrix3fv = global void (i32, i32, i32, i8, float*)* zeroinitializer
@gl-21.ProgramUniformMatrix4fv = global void (i32, i32, i32, i8, float*)* zeroinitializer
@gl-21.ProgramUniformMatrix2dv = global void (i32, i32, i32, i8, double*)* zeroinitializer
@gl-21.ProgramUniformMatrix3dv = global void (i32, i32, i32, i8, double*)* zeroinitializer
@gl-21.ProgramUniformMatrix4dv = global void (i32, i32, i32, i8, double*)* zeroinitializer
@gl-21.ProgramUniformMatrix2x3fv = global void (i32, i32, i32, i8, float*)* zeroinitializer
@gl-21.ProgramUniformMatrix3x2fv = global void (i32, i32, i32, i8, float*)* zeroinitializer
@gl-21.ProgramUniformMatrix2x4fv = global void (i32, i32, i32, i8, float*)* zeroinitializer
@gl-21.ProgramUniformMatrix4x2fv = global void (i32, i32, i32, i8, float*)* zeroinitializer
@gl-21.ProgramUniformMatrix3x4fv = global void (i32, i32, i32, i8, float*)* zeroinitializer
@gl-21.ProgramUniformMatrix4x3fv = global void (i32, i32, i32, i8, float*)* zeroinitializer
@gl-21.ProgramUniformMatrix2x3dv = global void (i32, i32, i32, i8, double*)* zeroinitializer
@gl-21.ProgramUniformMatrix3x2dv = global void (i32, i32, i32, i8, double*)* zeroinitializer
@gl-21.ProgramUniformMatrix2x4dv = global void (i32, i32, i32, i8, double*)* zeroinitializer
@gl-21.ProgramUniformMatrix4x2dv = global void (i32, i32, i32, i8, double*)* zeroinitializer
@gl-21.ProgramUniformMatrix3x4dv = global void (i32, i32, i32, i8, double*)* zeroinitializer
@gl-21.ProgramUniformMatrix4x3dv = global void (i32, i32, i32, i8, double*)* zeroinitializer
@gl-21.ValidateProgramPipeline = global void (i32)* zeroinitializer
@gl-21.GetProgramPipelineInfoLog = global void (i32, i32, i32*, i8*)* zeroinitializer
@gl-21.VertexAttribL1d = global void (i32, double)* zeroinitializer
@gl-21.VertexAttribL2d = global void (i32, double, double)* zeroinitializer
@gl-21.VertexAttribL3d = global void (i32, double, double, double)* zeroinitializer
@gl-21.VertexAttribL4d = global void (i32, double, double, double, double)* zeroinitializer
@gl-21.VertexAttribL1dv = global void (i32, double*)* zeroinitializer
@gl-21.VertexAttribL2dv = global void (i32, double*)* zeroinitializer
@gl-21.VertexAttribL3dv = global void (i32, double*)* zeroinitializer
@gl-21.VertexAttribL4dv = global void (i32, double*)* zeroinitializer
@gl-21.VertexAttribLPointer = global void (i32, i32, i32, i32, %..rawptr)* zeroinitializer
@gl-21.GetVertexAttribLdv = global void (i32, i32, double*)* zeroinitializer
@gl-21.ViewportArrayv = global void (i32, i32, float*)* zeroinitializer
@gl-21.ViewportIndexedf = global void (i32, float, float, float, float)* zeroinitializer
@gl-21.ViewportIndexedfv = global void (i32, float*)* zeroinitializer
@gl-21.ScissorArrayv = global void (i32, i32, i32*)* zeroinitializer
@gl-21.ScissorIndexed = global void (i32, i32, i32, i32, i32)* zeroinitializer
@gl-21.ScissorIndexedv = global void (i32, i32*)* zeroinitializer
@gl-21.DepthRangeArrayv = global void (i32, i32, double*)* zeroinitializer
@gl-21.DepthRangeIndexed = global void (i32, double, double)* zeroinitializer
@gl-21.GetFloati_v = global void (i32, i32, float*)* zeroinitializer
@gl-21.GetDoublei_v = global void (i32, i32, double*)* zeroinitializer
@gl-21.DrawArraysInstancedBaseInstance = global void (i32, i32, i32, i32, i32)* zeroinitializer
@gl-21.DrawElementsInstancedBaseInstance = global void (i32, i32, i32, %..rawptr, i32, i32)* zeroinitializer
@gl-21.DrawElementsInstancedBaseVertexBaseInstance = global void (i32, i32, i32, %..rawptr, i32, i32, i32)* zeroinitializer
@gl-21.GetInternalformativ = global void (i32, i32, i32, i32, i32*)* zeroinitializer
@gl-21.GetActiveAtomicCounterBufferiv = global void (i32, i32, i32, i32*)* zeroinitializer
@gl-21.BindImageTexture = global void (i32, i32, i32, i8, i32, i32, i32)* zeroinitializer
@gl-21.MemoryBarrier = global void (i32)* zeroinitializer
@gl-21.TexStorage1D = global void (i32, i32, i32, i32)* zeroinitializer
@gl-21.TexStorage2D = global void (i32, i32, i32, i32, i32)* zeroinitializer
@gl-21.TexStorage3D = global void (i32, i32, i32, i32, i32, i32)* zeroinitializer
@gl-21.DrawTransformFeedbackInstanced = global void (i32, i32, i32)* zeroinitializer
@gl-21.DrawTransformFeedbackStreamInstanced = global void (i32, i32, i32, i32)* zeroinitializer
@gl-21.ClearBufferData = global void (i32, i32, i32, i32, %..rawptr)* zeroinitializer
@gl-21.ClearBufferSubData = global void (i32, i32, i64, i64, i32, i32, %..rawptr)* zeroinitializer
@gl-21.DispatchCompute = global void (i32, i32, i32)* zeroinitializer
@gl-21.DispatchComputeIndirect = global void (i64)* zeroinitializer
@gl-21.CopyImageSubData = global void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)* zeroinitializer
@gl-21.FramebufferParameteri = global void (i32, i32, i32)* zeroinitializer
@gl-21.GetFramebufferParameteriv = global void (i32, i32, i32*)* zeroinitializer
@gl-21.GetInternalformati64v = global void (i32, i32, i32, i32, i64*)* zeroinitializer
@gl-21.InvalidateTexSubImage = global void (i32, i32, i32, i32, i32, i32, i32, i32)* zeroinitializer
@gl-21.InvalidateTexImage = global void (i32, i32)* zeroinitializer
@gl-21.InvalidateBufferSubData = global void (i32, i64, i64)* zeroinitializer
@gl-21.InvalidateBufferData = global void (i32)* zeroinitializer
@gl-21.InvalidateFramebuffer = global void (i32, i32, i32*)* zeroinitializer
@gl-21.InvalidateSubFramebuffer = global void (i32, i32, i32*, i32, i32, i32, i32)* zeroinitializer
@gl-21.MultiDrawArraysIndirect = global void (i32, %..rawptr, i32, i32)* zeroinitializer
@gl-21.MultiDrawElementsIndirect = global void (i32, i32, %..rawptr, i32, i32)* zeroinitializer
@gl-21.GetProgramInterfaceiv = global void (i32, i32, i32, i32*)* zeroinitializer
@gl-21.GetProgramResourceIndex = global i32 (i32, i32, i8*)* zeroinitializer
@gl-21.GetProgramResourceName = global void (i32, i32, i32, i32, i32*, i8*)* zeroinitializer
@gl-21.GetProgramResourceiv = global void (i32, i32, i32, i32, i32*, i32, i32*, i32*)* zeroinitializer
@gl-21.GetProgramResourceLocation = global i32 (i32, i32, i8*)* zeroinitializer
@gl-21.GetProgramResourceLocationIndex = global i32 (i32, i32, i8*)* zeroinitializer
@gl-21.ShaderStorageBlockBinding = global void (i32, i32, i32)* zeroinitializer
@gl-21.TexBufferRange = global void (i32, i32, i32, i64, i64)* zeroinitializer
@gl-21.TexStorage2DMultisample = global void (i32, i32, i32, i32, i32, i8)* zeroinitializer
@gl-21.TexStorage3DMultisample = global void (i32, i32, i32, i32, i32, i32, i8)* zeroinitializer
@gl-21.TextureView = global void (i32, i32, i32, i32, i32, i32, i32, i32)* zeroinitializer
@gl-21.BindVertexBuffer = global void (i32, i32, i64, i32)* zeroinitializer
@gl-21.VertexAttribFormat = global void (i32, i32, i32, i8, i32)* zeroinitializer
@gl-21.VertexAttribIFormat = global void (i32, i32, i32, i32)* zeroinitializer
@gl-21.VertexAttribLFormat = global void (i32, i32, i32, i32)* zeroinitializer
@gl-21.VertexAttribBinding = global void (i32, i32)* zeroinitializer
@gl-21.VertexBindingDivisor = global void (i32, i32)* zeroinitializer
@gl-21.DebugMessageControl = global void (i32, i32, i32, i32, i32*, i8)* zeroinitializer
@gl-21.DebugMessageInsert = global void (i32, i32, i32, i32, i32, i8*)* zeroinitializer
@gl-21.DebugMessageCallback = global void (void (i32, i32, i32, i32, i32, i8*, %..rawptr)*, %..rawptr)* zeroinitializer
@gl-21.GetDebugMessageLog = global i32 (i32, i32, i32*, i32*, i32*, i32*, i32*, i8*)* zeroinitializer
@gl-21.PushDebugGroup = global void (i32, i32, i32, i8*)* zeroinitializer
@gl-21.PopDebugGroup = global void ()* zeroinitializer
@gl-21.ObjectLabel = global void (i32, i32, i32, i8*)* zeroinitializer
@gl-21.GetObjectLabel = global void (i32, i32, i32, i32*, i8*)* zeroinitializer
@gl-21.ObjectPtrLabel = global void (%..rawptr, i32, i8*)* zeroinitializer
@gl-21.GetObjectPtrLabel = global void (%..rawptr, i32, i32*, i8*)* zeroinitializer
@gl-21.BufferStorage = global void (i32, i64, %..rawptr, i32)* zeroinitializer
@gl-21.ClearTexImage = global void (i32, i32, i32, i32, %..rawptr)* zeroinitializer
@gl-21.ClearTexSubImage = global void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %..rawptr)* zeroinitializer
@gl-21.BindBuffersBase = global void (i32, i32, i32, i32*)* zeroinitializer
@gl-21.BindBuffersRange = global void (i32, i32, i32, i32*, i64*, i64*)* zeroinitializer
@gl-21.BindTextures = global void (i32, i32, i32*)* zeroinitializer
@gl-21.BindSamplers = global void (i32, i32, i32*)* zeroinitializer
@gl-21.BindImageTextures = global void (i32, i32, i32*)* zeroinitializer
@gl-21.BindVertexBuffers = global void (i32, i32, i32*, i64*, i32*)* zeroinitializer
@gl-21.ClipControl = global void (i32, i32)* zeroinitializer
@gl-21.CreateTransformFeedbacks = global void (i32, i32*)* zeroinitializer
@gl-21.TransformFeedbackBufferBase = global void (i32, i32, i32)* zeroinitializer
@gl-21.TransformFeedbackBufferRange = global void (i32, i32, i32, i64, i64)* zeroinitializer
@gl-21.GetTransformFeedbackiv = global void (i32, i32, i32*)* zeroinitializer
@gl-21.GetTransformFeedbacki_v = global void (i32, i32, i32, i32*)* zeroinitializer
@gl-21.GetTransformFeedbacki64_v = global void (i32, i32, i32, i64*)* zeroinitializer
@gl-21.CreateBuffers = global void (i32, i32*)* zeroinitializer
@gl-21.NamedBufferStorage = global void (i32, i64, %..rawptr, i32)* zeroinitializer
@gl-21.NamedBufferData = global void (i32, i64, %..rawptr, i32)* zeroinitializer
@gl-21.NamedBufferSubData = global void (i32, i64, i64, %..rawptr)* zeroinitializer
@gl-21.CopyNamedBufferSubData = global void (i32, i32, i64, i64, i64)* zeroinitializer
@gl-21.ClearNamedBufferData = global void (i32, i32, i32, i32, %..rawptr)* zeroinitializer
@gl-21.ClearNamedBufferSubData = global void (i32, i32, i64, i64, i32, i32, %..rawptr)* zeroinitializer
@gl-21.MapNamedBuffer = global %..rawptr (i32, i32)* zeroinitializer
@gl-21.MapNamedBufferRange = global %..rawptr (i32, i64, i64, i32)* zeroinitializer
@gl-21.UnmapNamedBuffer = global i8 (i32)* zeroinitializer
@gl-21.FlushMappedNamedBufferRange = global void (i32, i64, i64)* zeroinitializer
@gl-21.GetNamedBufferParameteriv = global void (i32, i32, i32*)* zeroinitializer
@gl-21.GetNamedBufferParameteri64v = global void (i32, i32, i64*)* zeroinitializer
@gl-21.GetNamedBufferPointerv = global void (i32, i32, %..rawptr*)* zeroinitializer
@gl-21.GetNamedBufferSubData = global void (i32, i64, i64, %..rawptr)* zeroinitializer
@gl-21.CreateFramebuffers = global void (i32, i32*)* zeroinitializer
@gl-21.NamedFramebufferRenderbuffer = global void (i32, i32, i32, i32)* zeroinitializer
@gl-21.NamedFramebufferParameteri = global void (i32, i32, i32)* zeroinitializer
@gl-21.NamedFramebufferTexture = global void (i32, i32, i32, i32)* zeroinitializer
@gl-21.NamedFramebufferTextureLayer = global void (i32, i32, i32, i32, i32)* zeroinitializer
@gl-21.NamedFramebufferDrawBuffer = global void (i32, i32)* zeroinitializer
@gl-21.NamedFramebufferDrawBuffers = global void (i32, i32, i32*)* zeroinitializer
@gl-21.NamedFramebufferReadBuffer = global void (i32, i32)* zeroinitializer
@gl-21.InvalidateNamedFramebufferData = global void (i32, i32, i32*)* zeroinitializer
@gl-21.InvalidateNamedFramebufferSubData = global void (i32, i32, i32*, i32, i32, i32, i32)* zeroinitializer
@gl-21.ClearNamedFramebufferiv = global void (i32, i32, i32, i32*)* zeroinitializer
@gl-21.ClearNamedFramebufferuiv = global void (i32, i32, i32, i32*)* zeroinitializer
@gl-21.ClearNamedFramebufferfv = global void (i32, i32, i32, float*)* zeroinitializer
@gl-21.ClearNamedFramebufferfi = global void (i32, i32, i32, float, i32)* zeroinitializer
@gl-21.BlitNamedFramebuffer = global void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)* zeroinitializer
@gl-21.CheckNamedFramebufferStatus = global i32 (i32, i32)* zeroinitializer
@gl-21.GetNamedFramebufferParameteriv = global void (i32, i32, i32*)* zeroinitializer
@gl-21.GetNamedFramebufferAttachmentParameteriv = global void (i32, i32, i32, i32*)* zeroinitializer
@gl-21.CreateRenderbuffers = global void (i32, i32*)* zeroinitializer
@gl-21.NamedRenderbufferStorage = global void (i32, i32, i32, i32)* zeroinitializer
@gl-21.NamedRenderbufferStorageMultisample = global void (i32, i32, i32, i32, i32)* zeroinitializer
@gl-21.GetNamedRenderbufferParameteriv = global void (i32, i32, i32*)* zeroinitializer
@gl-21.CreateTextures = global void (i32, i32, i32*)* zeroinitializer
@gl-21.TextureBuffer = global void (i32, i32, i32)* zeroinitializer
@gl-21.TextureBufferRange = global void (i32, i32, i32, i64, i64)* zeroinitializer
@gl-21.TextureStorage1D = global void (i32, i32, i32, i32)* zeroinitializer
@gl-21.TextureStorage2D = global void (i32, i32, i32, i32, i32)* zeroinitializer
@gl-21.TextureStorage3D = global void (i32, i32, i32, i32, i32, i32)* zeroinitializer
@gl-21.TextureStorage2DMultisample = global void (i32, i32, i32, i32, i32, i8)* zeroinitializer
@gl-21.TextureStorage3DMultisample = global void (i32, i32, i32, i32, i32, i32, i8)* zeroinitializer
@gl-21.TextureSubImage1D = global void (i32, i32, i32, i32, i32, i32, %..rawptr)* zeroinitializer
@gl-21.TextureSubImage2D = global void (i32, i32, i32, i32, i32, i32, i32, i32, %..rawptr)* zeroinitializer
@gl-21.TextureSubImage3D = global void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %..rawptr)* zeroinitializer
@gl-21.CompressedTextureSubImage1D = global void (i32, i32, i32, i32, i32, i32, %..rawptr)* zeroinitializer
@gl-21.CompressedTextureSubImage2D = global void (i32, i32, i32, i32, i32, i32, i32, i32, %..rawptr)* zeroinitializer
@gl-21.CompressedTextureSubImage3D = global void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %..rawptr)* zeroinitializer
@gl-21.CopyTextureSubImage1D = global void (i32, i32, i32, i32, i32, i32)* zeroinitializer
@gl-21.CopyTextureSubImage2D = global void (i32, i32, i32, i32, i32, i32, i32, i32)* zeroinitializer
@gl-21.CopyTextureSubImage3D = global void (i32, i32, i32, i32, i32, i32, i32, i32, i32)* zeroinitializer
@gl-21.TextureParameterf = global void (i32, i32, float)* zeroinitializer
@gl-21.TextureParameterfv = global void (i32, i32, float*)* zeroinitializer
@gl-21.TextureParameteri = global void (i32, i32, i32)* zeroinitializer
@gl-21.TextureParameterIiv = global void (i32, i32, i32*)* zeroinitializer
@gl-21.TextureParameterIuiv = global void (i32, i32, i32*)* zeroinitializer
@gl-21.TextureParameteriv = global void (i32, i32, i32*)* zeroinitializer
@gl-21.GenerateTextureMipmap = global void (i32)* zeroinitializer
@gl-21.BindTextureUnit = global void (i32, i32)* zeroinitializer
@gl-21.GetTextureImage = global void (i32, i32, i32, i32, i32, %..rawptr)* zeroinitializer
@gl-21.GetCompressedTextureImage = global void (i32, i32, i32, %..rawptr)* zeroinitializer
@gl-21.GetTextureLevelParameterfv = global void (i32, i32, i32, float*)* zeroinitializer
@gl-21.GetTextureLevelParameteriv = global void (i32, i32, i32, i32*)* zeroinitializer
@gl-21.GetTextureParameterfv = global void (i32, i32, float*)* zeroinitializer
@gl-21.GetTextureParameterIiv = global void (i32, i32, i32*)* zeroinitializer
@gl-21.GetTextureParameterIuiv = global void (i32, i32, i32*)* zeroinitializer
@gl-21.GetTextureParameteriv = global void (i32, i32, i32*)* zeroinitializer
@gl-21.CreateVertexArrays = global void (i32, i32*)* zeroinitializer
@gl-21.DisableVertexArrayAttrib = global void (i32, i32)* zeroinitializer
@gl-21.EnableVertexArrayAttrib = global void (i32, i32)* zeroinitializer
@gl-21.VertexArrayElementBuffer = global void (i32, i32)* zeroinitializer
@gl-21.VertexArrayVertexBuffer = global void (i32, i32, i32, i64, i32)* zeroinitializer
@gl-21.VertexArrayVertexBuffers = global void (i32, i32, i32, i32*, i64*, i32*)* zeroinitializer
@gl-21.VertexArrayAttribBinding = global void (i32, i32, i32)* zeroinitializer
@gl-21.VertexArrayAttribFormat = global void (i32, i32, i32, i32, i8, i32)* zeroinitializer
@gl-21.VertexArrayAttribIFormat = global void (i32, i32, i32, i32, i32)* zeroinitializer
@gl-21.VertexArrayAttribLFormat = global void (i32, i32, i32, i32, i32)* zeroinitializer
@gl-21.VertexArrayBindingDivisor = global void (i32, i32, i32)* zeroinitializer
@gl-21.GetVertexArrayiv = global void (i32, i32, i32*)* zeroinitializer
@gl-21.GetVertexArrayIndexediv = global void (i32, i32, i32, i32*)* zeroinitializer
@gl-21.GetVertexArrayIndexed64iv = global void (i32, i32, i32, i64*)* zeroinitializer
@gl-21.CreateSamplers = global void (i32, i32*)* zeroinitializer
@gl-21.CreateProgramPipelines = global void (i32, i32*)* zeroinitializer
@gl-21.CreateQueries = global void (i32, i32, i32*)* zeroinitializer
@gl-21.GetQueryBufferObjecti64v = global void (i32, i32, i32, i64)* zeroinitializer
@gl-21.GetQueryBufferObjectiv = global void (i32, i32, i32, i64)* zeroinitializer
@gl-21.GetQueryBufferObjectui64v = global void (i32, i32, i32, i64)* zeroinitializer
@gl-21.GetQueryBufferObjectuiv = global void (i32, i32, i32, i64)* zeroinitializer
@gl-21.MemoryBarrierByRegion = global void (i32)* zeroinitializer
@gl-21.GetTextureSubImage = global void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %..rawptr)* zeroinitializer
@gl-21.GetCompressedTextureSubImage = global void (i32, i32, i32, i32, i32, i32, i32, i32, i32, %..rawptr)* zeroinitializer
@gl-21.GetGraphicsResetStatus = global i32 ()* zeroinitializer
@gl-21.GetnCompressedTexImage = global void (i32, i32, i32, %..rawptr)* zeroinitializer
@gl-21.GetnTexImage = global void (i32, i32, i32, i32, i32, %..rawptr)* zeroinitializer
@gl-21.GetnUniformdv = global void (i32, i32, i32, double*)* zeroinitializer
@gl-21.GetnUniformfv = global void (i32, i32, i32, float*)* zeroinitializer
@gl-21.GetnUniformiv = global void (i32, i32, i32, i32*)* zeroinitializer
@gl-21.GetnUniformuiv = global void (i32, i32, i32, i32*)* zeroinitializer
@gl-21.ReadnPixels = global void (i32, i32, i32, i32, i32, i32, i32, %..rawptr)* zeroinitializer
@gl-21.GetnMapdv = global void (i32, i32, i32, double*)* zeroinitializer
@gl-21.GetnMapfv = global void (i32, i32, i32, float*)* zeroinitializer
@gl-21.GetnMapiv = global void (i32, i32, i32, i32*)* zeroinitializer
@gl-21.GetnPixelMapusv = global void (i32, i32, i16*)* zeroinitializer
@gl-21.GetnPixelMapfv = global void (i32, i32, float*)* zeroinitializer
@gl-21.GetnPixelMapuiv = global void (i32, i32, i32*)* zeroinitializer
@gl-21.GetnPolygonStipple = global void (i32, i8*)* zeroinitializer
@gl-21.GetnColorTable = global void (i32, i32, i32, i32, %..rawptr)* zeroinitializer
@gl-21.GetnConvolutionFilter = global void (i32, i32, i32, i32, %..rawptr)* zeroinitializer
@gl-21.GetnSeparableFilter = global void (i32, i32, i32, i32, %..rawptr, i32, %..rawptr, %..rawptr)* zeroinitializer
@gl-21.GetnHistogram = global void (i32, i8, i32, i32, i32, %..rawptr)* zeroinitializer
@gl-21.GetnMinmax = global void (i32, i8, i32, i32, i32, %..rawptr)* zeroinitializer
@gl-21.TextureBarrier = global void ()* zeroinitializer
@gl-21.SpecializeShader = global void (i32, i8*, i32, i32*, i32*)* zeroinitializer
@gl-21.MultiDrawArraysIndirectCount = global void (i32, %..rawptr, i64, i32, i32)* zeroinitializer
@gl-21.MultiDrawElementsIndirectCount = global void (i32, i32, %..rawptr, i64, i32, i32)* zeroinitializer
@gl-21.PolygonOffsetClamp = global void (float, float, float)* zeroinitializer
@os_windows-12.stdout = global i64 zeroinitializer
@os_windows-12.stderr = global i64 zeroinitializer
@__csba$0 = global [2 x i32] [i32 zeroinitializer, i32 zeroinitializer]
@__$enum_names-1a = private global [6 x %..string] zeroinitializer
@__$enum_values-1a = private global [6 x %Type_Info_Enum_Value] zeroinitializer
@__$enum_names-4a = private global [4 x %..string] zeroinitializer
@__$enum_values-4a = private global [4 x %Type_Info_Enum_Value] zeroinitializer
@__$enum_names-4e = private global [3 x %..string] zeroinitializer
@__$enum_values-4e = private global [3 x %Type_Info_Enum_Value] zeroinitializer
@__$enum_names-54 = private global [7 x %..string] zeroinitializer
@__$enum_values-54 = private global [7 x %Type_Info_Enum_Value] zeroinitializer
@__$enum_names-e3 = private global [108 x %..string] zeroinitializer
@__$enum_values-e3 = private global [108 x %Type_Info_Enum_Value] zeroinitializer
@__$enum_names-146 = private global [141 x %..string] zeroinitializer
@__$enum_values-146 = private global [141 x %Type_Info_Enum_Value] zeroinitializer
@__str$0 = private global [34 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5C_preload.odin\00"
@__str$1 = private global [9 x i8] c"free_ptr\00"
@__str$2 = private global [34 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5C_preload.odin\00"
@__str$3 = private global [23 x i8] c"default_allocator_proc\00"
@__str$4 = private global [28 x i8] c"\25s\28\25d\3A\25d\29\20Runtime\20assertion\00"
@__str$5 = private global [3 x i8] c"\3A\20\00"
@__str$6 = private global [2 x i8] c"\0A\00"
@__str$7 = private global [16 x i8] c"\25s\28\25d\3A\25d\29\20Panic\00"
@__str$8 = private global [3 x i8] c"\3A\20\00"
@__str$9 = private global [2 x i8] c"\0A\00"
@__str$a = private global [34 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5C_preload.odin\00"
@__str$b = private global [34 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5C_preload.odin\00"
@__str$c = private global [34 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5C_preload.odin\00"
@__str$d = private global [34 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5C_preload.odin\00"
@__str$e = private global [49 x i8] c"\25s\28\25d\3A\25d\29\20Index\20\25d\20is\20out\20of\20bounds\20range\200..\25d\0A\00"
@__str$f = private global [41 x i8] c"\25s\28\25d\3A\25d\29\20Invalid\20slice\20indices\3A\20\25d..\25d\0A\00"
@__str$10 = private global [45 x i8] c"\25s\28\25d\3A\25d\29\20Invalid\20slice\20indices\3A\20\25d..\25d..\25d\0A\00"
@__str$11 = private global [45 x i8] c"\25s\28\25d\3A\25d\29\20Invalid\20substring\20indices\3A\20\25d..\25d\0A\00"
@__str$12 = private global [48 x i8] c"\25s\28\25d\3A\25d\29\20Invalid\20type_assertion\20from\20\25T\20to\20\25T\0A\00"
@__str$13 = private global [34 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5C_preload.odin\00"
@__str$14 = private global [21 x i8] c"__dynamic_array_make\00"
@__str$15 = private global [34 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5C_preload.odin\00"
@__str$16 = private global [24 x i8] c"__dynamic_array_reserve\00"
@__str$17 = private global [34 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5C_preload.odin\00"
@__str$18 = private global [23 x i8] c"__dynamic_array_append\00"
@__str$19 = private global [34 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5C_preload.odin\00"
@__str$1a = private global [31 x i8] c"__dynamic_array_append_nothing\00"
@__str$1b = private global [34 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5C_preload.odin\00"
@__str$1c = private global [34 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5C_preload.odin\00"
@__str$1d = private global [34 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5C_preload.odin\00"
@__str$1e = private global [18 x i8] c"__dynamic_map_set\00"
@__str$1f = private global [34 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5C_preload.odin\00"
@__str$20 = private global [34 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5C_preload.odin\00"
@__str$21 = private global [34 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5C_preload.odin\00"
@__str$22 = private global [34 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5C_preload.odin\00"
@__str$23 = private global [11 x i8] c"WindowName\00"
@__str$24 = private global [15 x i8] c"Odin\20GL\20Engine\00"
@__str$25 = private global [11 x i8] c"WindowName\00"
@__str$26 = private global [8 x i8] c"guy.png\00"
@__str$27 = private global [40 x i8] c"D\3A\5CProgramming\5Codin-gl-engine\5Cmain.odin\00"
@__str$28 = private global [5 x i8] c"init\00"
@__str$29 = private global [40 x i8] c"D\3A\5CProgramming\5Codin-gl-engine\5Cmain.odin\00"
@__str$2a = private global [40 x i8] c"D\3A\5CProgramming\5Codin-gl-engine\5Cmain.odin\00"
@__str$2b = private global [5 x i8] c"init\00"
@__str$2c = private global [40 x i8] c"D\3A\5CProgramming\5Codin-gl-engine\5Cmain.odin\00"
@__str$2d = private global [28 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cos.odin\00"
@__str$2e = private global [28 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cos.odin\00"
@__str$2f = private global [17 x i8] c"read_entire_file\00"
@__str$30 = private global [28 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cos.odin\00"
@__str$31 = private global [17 x i8] c"read_entire_file\00"
@__str$32 = private global [28 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cos.odin\00"
@__str$33 = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$34 = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$35 = private global [13 x i8] c"write_string\00"
@__str$36 = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$37 = private global [12 x i8] c"write_bytes\00"
@__str$38 = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$39 = private global [11 x i8] c"write_byte\00"
@__str$3a = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$3b = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$3c = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$3d = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$3e = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$3f = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$40 = private global [4 x i8] c"nil\00"
@__str$41 = private global [4 x i8] c"int\00"
@__str$42 = private global [5 x i8] c"uint\00"
@__str$43 = private global [8 x i8] c"uintptr\00"
@__str$44 = private global [5 x i8] c"rune\00"
@__str$45 = private global [4 x i8] c"f16\00"
@__str$46 = private global [4 x i8] c"f32\00"
@__str$47 = private global [4 x i8] c"f64\00"
@__str$48 = private global [10 x i8] c"complex32\00"
@__str$49 = private global [10 x i8] c"complex64\00"
@__str$4a = private global [11 x i8] c"complex128\00"
@__str$4b = private global [7 x i8] c"string\00"
@__str$4c = private global [5 x i8] c"bool\00"
@__str$4d = private global [4 x i8] c"any\00"
@__str$4e = private global [7 x i8] c"rawptr\00"
@__str$4f = private global [2 x i8] c"\5E\00"
@__str$50 = private global [5 x i8] c"proc\00"
@__str$51 = private global [3 x i8] c"\28\29\00"
@__str$52 = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$53 = private global [2 x i8] c"\28\00"
@__str$54 = private global [3 x i8] c"\2C\20\00"
@__str$55 = private global [2 x i8] c"\29\00"
@__str$56 = private global [5 x i8] c"\20-\3E\20\00"
@__str$57 = private global [2 x i8] c"\28\00"
@__str$58 = private global [3 x i8] c"\2C\20\00"
@__str$59 = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$5a = private global [3 x i8] c"\3A\20\00"
@__str$5b = private global [2 x i8] c"\29\00"
@__str$5c = private global [2 x i8] c"\5B\00"
@__str$5d = private global [2 x i8] c"\5D\00"
@__str$5e = private global [10 x i8] c"\5Bdynamic\5D\00"
@__str$5f = private global [3 x i8] c"\5B\5D\00"
@__str$60 = private global [9 x i8] c"\5Bvector\20\00"
@__str$61 = private global [2 x i8] c"\5D\00"
@__str$62 = private global [5 x i8] c"map\5B\00"
@__str$63 = private global [8 x i8] c"struct\20\00"
@__str$64 = private global [9 x i8] c"\23packed\20\00"
@__str$65 = private global [10 x i8] c"\23ordered\20\00"
@__str$66 = private global [12 x i8] c"\23raw_union\20\00"
@__str$67 = private global [8 x i8] c"\23align\20\00"
@__str$68 = private global [3 x i8] c"\2C\20\00"
@__str$69 = private global [3 x i8] c"\3A\20\00"
@__str$6a = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$6b = private global [8 x i8] c"union\20\7B\00"
@__str$6c = private global [3 x i8] c"\2C\20\00"
@__str$6d = private global [2 x i8] c"\7D\00"
@__str$6e = private global [6 x i8] c"enum\20\00"
@__str$6f = private global [3 x i8] c"\20\7B\00"
@__str$70 = private global [3 x i8] c"\2C\20\00"
@__str$71 = private global [2 x i8] c"\7D\00"
@__str$72 = private global [11 x i8] c"bit_field\20\00"
@__str$73 = private global [8 x i8] c"\23align\20\00"
@__str$74 = private global [3 x i8] c"\20\7B\00"
@__str$75 = private global [3 x i8] c"\2C\20\00"
@__str$76 = private global [3 x i8] c"\3A\20\00"
@__str$77 = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$78 = private global [2 x i8] c"\7D\00"
@__str$79 = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$7a = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$7b = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$7c = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$7d = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$7e = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$7f = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$80 = private global [13 x i8] c"fmt_bad_verb\00"
@__str$81 = private global [3 x i8] c"\25\21\00"
@__str$82 = private global [6 x i8] c"\3Cnil\3E\00"
@__str$83 = private global [6 x i8] c"false\00"
@__str$84 = private global [5 x i8] c"true\00"
@__str$85 = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$86 = private global [9 x i8] c"_fmt_int\00"
@__str$87 = private global [54 x i8] c"_fmt_int\3A\20buffer\20overrun.\20Width\20and\20precision\20too\20big\00"
@__str$88 = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$89 = private global [9 x i8] c"_fmt_int\00"
@__str$8a = private global [31 x i8] c"_fmt_int\3A\20unknown\20base\2C\20whoops\00"
@__str$8b = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$8c = private global [3 x i8] c"U\2B\00"
@__str$8d = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$8e = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$8f = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$90 = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$91 = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$92 = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$93 = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$94 = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$95 = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$96 = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$97 = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$98 = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$99 = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$9a = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$9b = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$9c = private global [3 x i8] c"0x\00"
@__str$9d = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$9e = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$9f = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$a0 = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$a1 = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$a2 = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$a3 = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$a4 = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$a5 = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$a6 = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$a7 = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$a8 = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$a9 = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$aa = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$ab = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$ac = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$ad = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$ae = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$af = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$b0 = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$b1 = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$b2 = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$b3 = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$b4 = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$b5 = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$b6 = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$b7 = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$b8 = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$b9 = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$ba = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$bb = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$bc = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$bd = private global [6 x i8] c"\3Cnil\3E\00"
@__str$be = private global [19 x i8] c"\21\25\28BAD\20ENUM\20VALUE\29\00"
@__str$bf = private global [6 x i8] c"\3Cnil\3E\00"
@__str$c0 = private global [3 x i8] c"\7B\7D\00"
@__str$c1 = private global [3 x i8] c"\2C\20\00"
@__str$c2 = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$c3 = private global [4 x i8] c"\20\3D\20\00"
@__str$c4 = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$c5 = private global [6 x i8] c"any\7B\7D\00"
@__str$c6 = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$c7 = private global [3 x i8] c"\2C\0A\00"
@__str$c8 = private global [3 x i8] c"\2C\20\00"
@__str$c9 = private global [3 x i8] c"\2C\20\00"
@__str$ca = private global [3 x i8] c"\2C\20\00"
@__str$cb = private global [3 x i8] c"\2C\20\00"
@__str$cc = private global [5 x i8] c"map\5B\00"
@__str$cd = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$ce = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$cf = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$d0 = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$d1 = private global [3 x i8] c"\2C\20\00"
@__str$d2 = private global [2 x i8] c"\3D\00"
@__str$d3 = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$d4 = private global [12 x i8] c"\28raw_union\29\00"
@__str$d5 = private global [3 x i8] c"\2C\20\00"
@__str$d6 = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$d7 = private global [4 x i8] c"\20\3D\20\00"
@__str$d8 = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$d9 = private global [6 x i8] c"any\7B\7D\00"
@__str$da = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$db = private global [3 x i8] c"\2C\0A\00"
@__str$dc = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$dd = private global [10 x i8] c"fmt_value\00"
@__str$de = private global [23 x i8] c"Invalid\20union\20tag\20type\00"
@__str$df = private global [4 x i8] c"nil\00"
@__str$e0 = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$e1 = private global [4 x i8] c"\20\40\20\00"
@__str$e2 = private global [6 x i8] c"\3Cnil\3E\00"
@__str$e3 = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$e4 = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$e5 = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$e6 = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$e7 = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$e8 = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$e9 = private global [14 x i8] c"\25\21\28BAD\20WIDTH\29\00"
@__str$ea = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$eb = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$ec = private global [18 x i8] c"\25\21\28BAD\20PRECISION\29\00"
@__str$ed = private global [12 x i8] c"\25\21\28NO\20VERB\29\00"
@__str$ee = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$ef = private global [24 x i8] c"\25\21\28BAD\20ARGUMENT\20NUMBER\29\00"
@__str$f0 = private global [21 x i8] c"\25\21\28MISSING\20ARGUMENT\29\00"
@__str$f1 = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$f2 = private global [10 x i8] c"\25\21\28EXTRA\20\00"
@__str$f3 = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$f4 = private global [3 x i8] c"\2C\20\00"
@__str$f5 = private global [6 x i8] c"\3Cnil\3E\00"
@__str$f6 = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cfmt.odin\00"
@__str$f7 = private global [2 x i8] c"\29\00"
@__str$f8 = private global [30 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cutf8.odin\00"
@__str$f9 = private global [30 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cutf8.odin\00"
@__str$fa = private global [30 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cutf8.odin\00"
@__str$fb = private global [30 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cutf8.odin\00"
@__str$fc = private global [30 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cutf8.odin\00"
@__str$fd = private global [30 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cutf8.odin\00"
@__str$fe = private global [30 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cutf8.odin\00"
@__str$ff = private global [30 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cutf8.odin\00"
@__str$100 = private global [30 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cutf8.odin\00"
@__str$101 = private global [30 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cutf8.odin\00"
@__str$102 = private global [30 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cutf8.odin\00"
@__str$103 = private global [30 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cutf8.odin\00"
@__str$104 = private global [30 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cutf8.odin\00"
@__str$105 = private global [42 x i8] c"D\3A\5CGitHub\5COdin\5Cshared\5Codin-glfw\5Cglfw.odin\00"
@__str$106 = private global [29 x i8] c"Too\20long\20title\20format\20string\00"
@__str$107 = private global [42 x i8] c"D\3A\5CGitHub\5COdin\5Cshared\5Codin-glfw\5Cglfw.odin\00"
@__str$108 = private global [42 x i8] c"D\3A\5CGitHub\5COdin\5Cshared\5Codin-glfw\5Cglfw.odin\00"
@__str$109 = private global [69 x i8] c"frame\20timings\3A\20avg\20\3D\20\25.3fms\2C\20std\20\3D\20\25.3fms\2C\20ste\20\3D\20\25.4fms.\20fps\20\3D\20\25.1f\00\00"
@__str$10a = private global [12 x i8] c"vertex.glsl\00"
@__str$10b = private global [14 x i8] c"fragment.glsl\00"
@__str$10c = private global [42 x i8] c"D\3A\5CProgramming\5Codin-gl-engine\5Cengine.odin\00"
@__str$10d = private global [6 x i8] c"start\00"
@__str$10e = private global [42 x i8] c"D\3A\5CProgramming\5Codin-gl-engine\5Cengine.odin\00"
@__str$10f = private global [42 x i8] c"D\3A\5CProgramming\5Codin-gl-engine\5Cengine.odin\00"
@__str$110 = private global [6 x i8] c"start\00"
@__str$111 = private global [23 x i8] c"Error\20code\20\25d\3A\0A\20\20\20\20\25s\0A\00"
@__str$112 = private global [42 x i8] c"D\3A\5CProgramming\5Codin-gl-engine\5Cengine.odin\00"
@__str$113 = private global [42 x i8] c"D\3A\5CProgramming\5Codin-gl-engine\5Cengine.odin\00"
@__str$114 = private global [14 x i8] c"submit_sprite\00"
@__str$115 = private global [11 x i8] c"transform\00\00"
@__str$116 = private global [17 x i8] c"camera_position\00\00"
@__str$117 = private global [42 x i8] c"D\3A\5CProgramming\5Codin-gl-engine\5Cengine.odin\00"
@__str$118 = private global [15 x i8] c"atlas_texture\00\00"
@__str$119 = private global [42 x i8] c"D\3A\5CProgramming\5Codin-gl-engine\5Cengine.odin\00"
@__str$11a = private global [18 x i8] c"metadata_texture\00\00"
@__str$11b = private global [42 x i8] c"D\3A\5CProgramming\5Codin-gl-engine\5Cengine.odin\00"
@__str$11c = private global [42 x i8] c"D\3A\5CProgramming\5Codin-gl-engine\5Cengine.odin\00"
@__str$11d = private global [12 x i8] c"load_sprite\00"
@__str$11e = private global [42 x i8] c"D\3A\5CProgramming\5Codin-gl-engine\5Cengine.odin\00"
@__str$11f = private global [42 x i8] c"D\3A\5CProgramming\5Codin-gl-engine\5Cengine.odin\00"
@__str$120 = private global [42 x i8] c"D\3A\5CProgramming\5Codin-gl-engine\5Cengine.odin\00"
@__str$121 = private global [12 x i8] c"load_sprite\00"
@__str$122 = private global [42 x i8] c"D\3A\5CProgramming\5Codin-gl-engine\5Cengine.odin\00"
@__str$123 = private global [36 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cos_windows.odin\00"
@__str$124 = private global [36 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cos_windows.odin\00"
@__str$125 = private global [36 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cos_windows.odin\00"
@__str$126 = private global [33 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cstrconv.odin\00"
@__str$127 = private global [13 x i8] c"generic_ftoa\00"
@__str$128 = private global [26 x i8] c"strconv\3A\20invalid\20bit_size\00"
@__str$129 = private global [4 x i8] c"NaN\00"
@__str$12a = private global [5 x i8] c"-Inf\00"
@__str$12b = private global [5 x i8] c"\2BInf\00"
@__str$12c = private global [33 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cstrconv.odin\00"
@__str$12d = private global [33 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cstrconv.odin\00"
@__str$12e = private global [33 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cstrconv.odin\00"
@__str$12f = private global [33 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cstrconv.odin\00"
@__str$130 = private global [33 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cstrconv.odin\00"
@__str$131 = private global [33 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cstrconv.odin\00"
@__str$132 = private global [14 x i8] c"format_digits\00"
@__str$133 = private global [49 x i8] c"strconv\3A\20e\2FE\20float\20printing\20is\20not\20yet\20supported\00"
@__str$134 = private global [33 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cstrconv.odin\00"
@__str$135 = private global [14 x i8] c"format_digits\00"
@__str$136 = private global [49 x i8] c"strconv\3A\20g\2FG\20float\20printing\20is\20not\20yet\20supported\00"
@__str$137 = private global [33 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cstrconv.odin\00"
@__str$138 = private global [33 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cstrconv.odin\00"
@__str$139 = private global [33 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cstrconv.odin\00"
@__str$13a = private global [33 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cstrconv.odin\00"
@__str$13b = private global [33 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cstrconv.odin\00"
@__str$13c = private global [33 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cstrconv.odin\00"
@__str$13d = private global [20 x i8] c"is_integer_negative\00"
@__str$13e = private global [42 x i8] c"is_integer_negative\3A\20Unknown\20integer\20size\00"
@__str$13f = private global [33 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cstrconv.odin\00"
@__str$140 = private global [12 x i8] c"append_bits\00"
@__str$141 = private global [44 x i8] c"strconv\3A\20illegal\20base\20passed\20to\20append_bits\00"
@__str$142 = private global [33 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cstrconv.odin\00"
@__str$143 = private global [33 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cstrconv.odin\00"
@__str$144 = private global [33 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cstrconv.odin\00"
@__str$145 = private global [33 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cstrconv.odin\00"
@__str$146 = private global [33 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cstrconv.odin\00"
@__str$147 = private global [33 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cstrconv.odin\00"
@__str$148 = private global [33 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cstrconv.odin\00"
@__str$149 = private global [33 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cstrconv.odin\00"
@__str$14a = private global [33 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cstrconv.odin\00"
@__str$14b = private global [33 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cstrconv.odin\00"
@__str$14c = private global [33 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cstrconv.odin\00"
@__str$14d = private global [33 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cstrconv.odin\00"
@__str$14e = private global [33 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cstrconv.odin\00"
@__str$14f = private global [33 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cstrconv.odin\00"
@__str$150 = private global [33 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cstrconv.odin\00"
@__str$151 = private global [30 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cmath.odin\00"
@__str$152 = private global [30 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cmath.odin\00"
@__str$153 = private global [30 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cmath.odin\00"
@__str$154 = private global [30 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cmath.odin\00"
@__str$155 = private global [30 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cmath.odin\00"
@__str$156 = private global [30 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cmath.odin\00"
@__str$157 = private global [30 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cmath.odin\00"
@__str$158 = private global [30 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cmath.odin\00"
@__str$159 = private global [30 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cmath.odin\00"
@__str$15a = private global [30 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cmath.odin\00"
@__str$15b = private global [12 x i8] c"glCullFace\00\00"
@__str$15c = private global [13 x i8] c"glFrontFace\00\00"
@__str$15d = private global [8 x i8] c"glHint\00\00"
@__str$15e = private global [13 x i8] c"glLineWidth\00\00"
@__str$15f = private global [13 x i8] c"glPointSize\00\00"
@__str$160 = private global [15 x i8] c"glPolygonMode\00\00"
@__str$161 = private global [11 x i8] c"glScissor\00\00"
@__str$162 = private global [17 x i8] c"glTexParameterf\00\00"
@__str$163 = private global [18 x i8] c"glTexParameterfv\00\00"
@__str$164 = private global [17 x i8] c"glTexParameteri\00\00"
@__str$165 = private global [18 x i8] c"glTexParameteriv\00\00"
@__str$166 = private global [14 x i8] c"glTexImage1D\00\00"
@__str$167 = private global [14 x i8] c"glTexImage2D\00\00"
@__str$168 = private global [14 x i8] c"glDrawBuffer\00\00"
@__str$169 = private global [9 x i8] c"glClear\00\00"
@__str$16a = private global [14 x i8] c"glClearColor\00\00"
@__str$16b = private global [16 x i8] c"glClearStencil\00\00"
@__str$16c = private global [14 x i8] c"glClearDepth\00\00"
@__str$16d = private global [15 x i8] c"glStencilMask\00\00"
@__str$16e = private global [13 x i8] c"glColorMask\00\00"
@__str$16f = private global [13 x i8] c"glDepthMask\00\00"
@__str$170 = private global [11 x i8] c"glDisable\00\00"
@__str$171 = private global [10 x i8] c"glEnable\00\00"
@__str$172 = private global [10 x i8] c"glFinish\00\00"
@__str$173 = private global [9 x i8] c"glFlush\00\00"
@__str$174 = private global [13 x i8] c"glBlendFunc\00\00"
@__str$175 = private global [11 x i8] c"glLogicOp\00\00"
@__str$176 = private global [15 x i8] c"glStencilFunc\00\00"
@__str$177 = private global [13 x i8] c"glStencilOp\00\00"
@__str$178 = private global [13 x i8] c"glDepthFunc\00\00"
@__str$179 = private global [15 x i8] c"glPixelStoref\00\00"
@__str$17a = private global [15 x i8] c"glPixelStorei\00\00"
@__str$17b = private global [14 x i8] c"glReadBuffer\00\00"
@__str$17c = private global [14 x i8] c"glReadPixels\00\00"
@__str$17d = private global [15 x i8] c"glGetBooleanv\00\00"
@__str$17e = private global [14 x i8] c"glGetDoublev\00\00"
@__str$17f = private global [12 x i8] c"glGetError\00\00"
@__str$180 = private global [13 x i8] c"glGetFloatv\00\00"
@__str$181 = private global [15 x i8] c"glGetIntegerv\00\00"
@__str$182 = private global [13 x i8] c"glGetString\00\00"
@__str$183 = private global [15 x i8] c"glGetTexImage\00\00"
@__str$184 = private global [21 x i8] c"glGetTexParameterfv\00\00"
@__str$185 = private global [21 x i8] c"glGetTexParameteriv\00\00"
@__str$186 = private global [26 x i8] c"glGetTexLevelParameterfv\00\00"
@__str$187 = private global [26 x i8] c"glGetTexLevelParameteriv\00\00"
@__str$188 = private global [13 x i8] c"glIsEnabled\00\00"
@__str$189 = private global [14 x i8] c"glDepthRange\00\00"
@__str$18a = private global [12 x i8] c"glViewport\00\00"
@__str$18b = private global [14 x i8] c"glDrawArrays\00\00"
@__str$18c = private global [16 x i8] c"glDrawElements\00\00"
@__str$18d = private global [17 x i8] c"glPolygonOffset\00\00"
@__str$18e = private global [18 x i8] c"glCopyTexImage1D\00\00"
@__str$18f = private global [18 x i8] c"glCopyTexImage2D\00\00"
@__str$190 = private global [21 x i8] c"glCopyTexSubImage1D\00\00"
@__str$191 = private global [21 x i8] c"glCopyTexSubImage2D\00\00"
@__str$192 = private global [17 x i8] c"glTexSubImage1D\00\00"
@__str$193 = private global [17 x i8] c"glTexSubImage2D\00\00"
@__str$194 = private global [15 x i8] c"glBindTexture\00\00"
@__str$195 = private global [18 x i8] c"glDeleteTextures\00\00"
@__str$196 = private global [15 x i8] c"glGenTextures\00\00"
@__str$197 = private global [13 x i8] c"glIsTexture\00\00"
@__str$198 = private global [21 x i8] c"glDrawRangeElements\00\00"
@__str$199 = private global [14 x i8] c"glTexImage3D\00\00"
@__str$19a = private global [17 x i8] c"glTexSubImage3D\00\00"
@__str$19b = private global [21 x i8] c"glCopyTexSubImage3D\00\00"
@__str$19c = private global [17 x i8] c"glActiveTexture\00\00"
@__str$19d = private global [18 x i8] c"glSampleCoverage\00\00"
@__str$19e = private global [24 x i8] c"glCompressedTexImage3D\00\00"
@__str$19f = private global [24 x i8] c"glCompressedTexImage2D\00\00"
@__str$1a0 = private global [24 x i8] c"glCompressedTexImage1D\00\00"
@__str$1a1 = private global [27 x i8] c"glCompressedTexSubImage3D\00\00"
@__str$1a2 = private global [27 x i8] c"glCompressedTexSubImage2D\00\00"
@__str$1a3 = private global [27 x i8] c"glCompressedTexSubImage1D\00\00"
@__str$1a4 = private global [25 x i8] c"glGetCompressedTexImage\00\00"
@__str$1a5 = private global [21 x i8] c"glBlendFuncSeparate\00\00"
@__str$1a6 = private global [19 x i8] c"glMultiDrawArrays\00\00"
@__str$1a7 = private global [21 x i8] c"glMultiDrawElements\00\00"
@__str$1a8 = private global [19 x i8] c"glPointParameterf\00\00"
@__str$1a9 = private global [20 x i8] c"glPointParameterfv\00\00"
@__str$1aa = private global [19 x i8] c"glPointParameteri\00\00"
@__str$1ab = private global [20 x i8] c"glPointParameteriv\00\00"
@__str$1ac = private global [14 x i8] c"glBlendColor\00\00"
@__str$1ad = private global [17 x i8] c"glBlendEquation\00\00"
@__str$1ae = private global [14 x i8] c"glGenQueries\00\00"
@__str$1af = private global [17 x i8] c"glDeleteQueries\00\00"
@__str$1b0 = private global [11 x i8] c"glIsQuery\00\00"
@__str$1b1 = private global [14 x i8] c"glBeginQuery\00\00"
@__str$1b2 = private global [12 x i8] c"glEndQuery\00\00"
@__str$1b3 = private global [14 x i8] c"glGetQueryiv\00\00"
@__str$1b4 = private global [20 x i8] c"glGetQueryObjectiv\00\00"
@__str$1b5 = private global [21 x i8] c"glGetQueryObjectuiv\00\00"
@__str$1b6 = private global [14 x i8] c"glBindBuffer\00\00"
@__str$1b7 = private global [17 x i8] c"glDeleteBuffers\00\00"
@__str$1b8 = private global [14 x i8] c"glGenBuffers\00\00"
@__str$1b9 = private global [12 x i8] c"glIsBuffer\00\00"
@__str$1ba = private global [14 x i8] c"glBufferData\00\00"
@__str$1bb = private global [17 x i8] c"glBufferSubData\00\00"
@__str$1bc = private global [20 x i8] c"glGetBufferSubData\00\00"
@__str$1bd = private global [13 x i8] c"glMapBuffer\00\00"
@__str$1be = private global [15 x i8] c"glUnmapBuffer\00\00"
@__str$1bf = private global [24 x i8] c"glGetBufferParameteriv\00\00"
@__str$1c0 = private global [21 x i8] c"glGetBufferPointerv\00\00"
@__str$1c1 = private global [25 x i8] c"glBlendEquationSeparate\00\00"
@__str$1c2 = private global [15 x i8] c"glDrawBuffers\00\00"
@__str$1c3 = private global [21 x i8] c"glStencilOpSeparate\00\00"
@__str$1c4 = private global [23 x i8] c"glStencilFuncSeparate\00\00"
@__str$1c5 = private global [23 x i8] c"glStencilMaskSeparate\00\00"
@__str$1c6 = private global [16 x i8] c"glAttachShader\00\00"
@__str$1c7 = private global [22 x i8] c"glBindAttribLocation\00\00"
@__str$1c8 = private global [17 x i8] c"glCompileShader\00\00"
@__str$1c9 = private global [17 x i8] c"glCreateProgram\00\00"
@__str$1ca = private global [16 x i8] c"glCreateShader\00\00"
@__str$1cb = private global [17 x i8] c"glDeleteProgram\00\00"
@__str$1cc = private global [16 x i8] c"glDeleteShader\00\00"
@__str$1cd = private global [16 x i8] c"glDetachShader\00\00"
@__str$1ce = private global [28 x i8] c"glDisableVertexAttribArray\00\00"
@__str$1cf = private global [27 x i8] c"glEnableVertexAttribArray\00\00"
@__str$1d0 = private global [19 x i8] c"glGetActiveAttrib\00\00"
@__str$1d1 = private global [20 x i8] c"glGetActiveUniform\00\00"
@__str$1d2 = private global [22 x i8] c"glGetAttachedShaders\00\00"
@__str$1d3 = private global [21 x i8] c"glGetAttribLocation\00\00"
@__str$1d4 = private global [16 x i8] c"glGetProgramiv\00\00"
@__str$1d5 = private global [21 x i8] c"glGetProgramInfoLog\00\00"
@__str$1d6 = private global [15 x i8] c"glGetShaderiv\00\00"
@__str$1d7 = private global [20 x i8] c"glGetShaderInfoLog\00\00"
@__str$1d8 = private global [19 x i8] c"glGetShaderSource\00\00"
@__str$1d9 = private global [22 x i8] c"glGetUniformLocation\00\00"
@__str$1da = private global [16 x i8] c"glGetUniformfv\00\00"
@__str$1db = private global [16 x i8] c"glGetUniformiv\00\00"
@__str$1dc = private global [21 x i8] c"glGetVertexAttribdv\00\00"
@__str$1dd = private global [21 x i8] c"glGetVertexAttribfv\00\00"
@__str$1de = private global [21 x i8] c"glGetVertexAttribiv\00\00"
@__str$1df = private global [27 x i8] c"glGetVertexAttribPointerv\00\00"
@__str$1e0 = private global [13 x i8] c"glIsProgram\00\00"
@__str$1e1 = private global [12 x i8] c"glIsShader\00\00"
@__str$1e2 = private global [15 x i8] c"glLinkProgram\00\00"
@__str$1e3 = private global [16 x i8] c"glShaderSource\00\00"
@__str$1e4 = private global [14 x i8] c"glUseProgram\00\00"
@__str$1e5 = private global [13 x i8] c"glUniform1f\00\00"
@__str$1e6 = private global [13 x i8] c"glUniform2f\00\00"
@__str$1e7 = private global [13 x i8] c"glUniform3f\00\00"
@__str$1e8 = private global [13 x i8] c"glUniform4f\00\00"
@__str$1e9 = private global [13 x i8] c"glUniform1i\00\00"
@__str$1ea = private global [13 x i8] c"glUniform2i\00\00"
@__str$1eb = private global [13 x i8] c"glUniform3i\00\00"
@__str$1ec = private global [13 x i8] c"glUniform4i\00\00"
@__str$1ed = private global [14 x i8] c"glUniform1fv\00\00"
@__str$1ee = private global [14 x i8] c"glUniform2fv\00\00"
@__str$1ef = private global [14 x i8] c"glUniform3fv\00\00"
@__str$1f0 = private global [14 x i8] c"glUniform4fv\00\00"
@__str$1f1 = private global [14 x i8] c"glUniform1iv\00\00"
@__str$1f2 = private global [14 x i8] c"glUniform2iv\00\00"
@__str$1f3 = private global [14 x i8] c"glUniform3iv\00\00"
@__str$1f4 = private global [14 x i8] c"glUniform4iv\00\00"
@__str$1f5 = private global [20 x i8] c"glUniformMatrix2fv\00\00"
@__str$1f6 = private global [20 x i8] c"glUniformMatrix3fv\00\00"
@__str$1f7 = private global [20 x i8] c"glUniformMatrix4fv\00\00"
@__str$1f8 = private global [19 x i8] c"glValidateProgram\00\00"
@__str$1f9 = private global [18 x i8] c"glVertexAttrib1d\00\00"
@__str$1fa = private global [19 x i8] c"glVertexAttrib1dv\00\00"
@__str$1fb = private global [18 x i8] c"glVertexAttrib1f\00\00"
@__str$1fc = private global [19 x i8] c"glVertexAttrib1fv\00\00"
@__str$1fd = private global [18 x i8] c"glVertexAttrib1s\00\00"
@__str$1fe = private global [19 x i8] c"glVertexAttrib1sv\00\00"
@__str$1ff = private global [18 x i8] c"glVertexAttrib2d\00\00"
@__str$200 = private global [19 x i8] c"glVertexAttrib2dv\00\00"
@__str$201 = private global [18 x i8] c"glVertexAttrib2f\00\00"
@__str$202 = private global [19 x i8] c"glVertexAttrib2fv\00\00"
@__str$203 = private global [18 x i8] c"glVertexAttrib2s\00\00"
@__str$204 = private global [19 x i8] c"glVertexAttrib2sv\00\00"
@__str$205 = private global [18 x i8] c"glVertexAttrib3d\00\00"
@__str$206 = private global [19 x i8] c"glVertexAttrib3dv\00\00"
@__str$207 = private global [18 x i8] c"glVertexAttrib3f\00\00"
@__str$208 = private global [19 x i8] c"glVertexAttrib3fv\00\00"
@__str$209 = private global [18 x i8] c"glVertexAttrib3s\00\00"
@__str$20a = private global [19 x i8] c"glVertexAttrib3sv\00\00"
@__str$20b = private global [20 x i8] c"glVertexAttrib4Nbv\00\00"
@__str$20c = private global [20 x i8] c"glVertexAttrib4Niv\00\00"
@__str$20d = private global [20 x i8] c"glVertexAttrib4Nsv\00\00"
@__str$20e = private global [20 x i8] c"glVertexAttrib4Nub\00\00"
@__str$20f = private global [21 x i8] c"glVertexAttrib4Nubv\00\00"
@__str$210 = private global [21 x i8] c"glVertexAttrib4Nuiv\00\00"
@__str$211 = private global [21 x i8] c"glVertexAttrib4Nusv\00\00"
@__str$212 = private global [19 x i8] c"glVertexAttrib4bv\00\00"
@__str$213 = private global [18 x i8] c"glVertexAttrib4d\00\00"
@__str$214 = private global [19 x i8] c"glVertexAttrib4dv\00\00"
@__str$215 = private global [18 x i8] c"glVertexAttrib4f\00\00"
@__str$216 = private global [19 x i8] c"glVertexAttrib4fv\00\00"
@__str$217 = private global [19 x i8] c"glVertexAttrib4iv\00\00"
@__str$218 = private global [18 x i8] c"glVertexAttrib4s\00\00"
@__str$219 = private global [19 x i8] c"glVertexAttrib4sv\00\00"
@__str$21a = private global [20 x i8] c"glVertexAttrib4ubv\00\00"
@__str$21b = private global [20 x i8] c"glVertexAttrib4uiv\00\00"
@__str$21c = private global [20 x i8] c"glVertexAttrib4usv\00\00"
@__str$21d = private global [23 x i8] c"glVertexAttribPointer\00\00"
@__str$21e = private global [22 x i8] c"glUniformMatrix2x3fv\00\00"
@__str$21f = private global [22 x i8] c"glUniformMatrix3x2fv\00\00"
@__str$220 = private global [22 x i8] c"glUniformMatrix2x4fv\00\00"
@__str$221 = private global [22 x i8] c"glUniformMatrix4x2fv\00\00"
@__str$222 = private global [22 x i8] c"glUniformMatrix3x4fv\00\00"
@__str$223 = private global [22 x i8] c"glUniformMatrix4x3fv\00\00"
@__str$224 = private global [14 x i8] c"glColorMaski\00\00"
@__str$225 = private global [17 x i8] c"glGetBooleani_v\00\00"
@__str$226 = private global [17 x i8] c"glGetIntegeri_v\00\00"
@__str$227 = private global [11 x i8] c"glEnablei\00\00"
@__str$228 = private global [12 x i8] c"glDisablei\00\00"
@__str$229 = private global [14 x i8] c"glIsEnabledi\00\00"
@__str$22a = private global [26 x i8] c"glBeginTransformFeedback\00\00"
@__str$22b = private global [24 x i8] c"glEndTransformFeedback\00\00"
@__str$22c = private global [19 x i8] c"glBindBufferRange\00\00"
@__str$22d = private global [18 x i8] c"glBindBufferBase\00\00"
@__str$22e = private global [29 x i8] c"glTransformFeedbackVaryings\00\00"
@__str$22f = private global [31 x i8] c"glGetTransformFeedbackVarying\00\00"
@__str$230 = private global [14 x i8] c"glClampColor\00\00"
@__str$231 = private global [26 x i8] c"glBeginConditionalRender\00\00"
@__str$232 = private global [24 x i8] c"glEndConditionalRender\00\00"
@__str$233 = private global [24 x i8] c"glVertexAttribIPointer\00\00"
@__str$234 = private global [22 x i8] c"glGetVertexAttribIiv\00\00"
@__str$235 = private global [23 x i8] c"glGetVertexAttribIuiv\00\00"
@__str$236 = private global [19 x i8] c"glVertexAttribI1i\00\00"
@__str$237 = private global [19 x i8] c"glVertexAttribI2i\00\00"
@__str$238 = private global [19 x i8] c"glVertexAttribI3i\00\00"
@__str$239 = private global [19 x i8] c"glVertexAttribI4i\00\00"
@__str$23a = private global [20 x i8] c"glVertexAttribI1ui\00\00"
@__str$23b = private global [20 x i8] c"glVertexAttribI2ui\00\00"
@__str$23c = private global [20 x i8] c"glVertexAttribI3ui\00\00"
@__str$23d = private global [20 x i8] c"glVertexAttribI4ui\00\00"
@__str$23e = private global [20 x i8] c"glVertexAttribI1iv\00\00"
@__str$23f = private global [20 x i8] c"glVertexAttribI2iv\00\00"
@__str$240 = private global [20 x i8] c"glVertexAttribI3iv\00\00"
@__str$241 = private global [20 x i8] c"glVertexAttribI4iv\00\00"
@__str$242 = private global [21 x i8] c"glVertexAttribI1uiv\00\00"
@__str$243 = private global [21 x i8] c"glVertexAttribI2uiv\00\00"
@__str$244 = private global [21 x i8] c"glVertexAttribI3uiv\00\00"
@__str$245 = private global [21 x i8] c"glVertexAttribI4uiv\00\00"
@__str$246 = private global [20 x i8] c"glVertexAttribI4bv\00\00"
@__str$247 = private global [20 x i8] c"glVertexAttribI4sv\00\00"
@__str$248 = private global [21 x i8] c"glVertexAttribI4ubv\00\00"
@__str$249 = private global [21 x i8] c"glVertexAttribI4usv\00\00"
@__str$24a = private global [17 x i8] c"glGetUniformuiv\00\00"
@__str$24b = private global [24 x i8] c"glBindFragDataLocation\00\00"
@__str$24c = private global [23 x i8] c"glGetFragDataLocation\00\00"
@__str$24d = private global [14 x i8] c"glUniform1ui\00\00"
@__str$24e = private global [14 x i8] c"glUniform2ui\00\00"
@__str$24f = private global [14 x i8] c"glUniform3ui\00\00"
@__str$250 = private global [14 x i8] c"glUniform4ui\00\00"
@__str$251 = private global [15 x i8] c"glUniform1uiv\00\00"
@__str$252 = private global [15 x i8] c"glUniform2uiv\00\00"
@__str$253 = private global [15 x i8] c"glUniform3uiv\00\00"
@__str$254 = private global [15 x i8] c"glUniform4uiv\00\00"
@__str$255 = private global [19 x i8] c"glTexParameterIiv\00\00"
@__str$256 = private global [20 x i8] c"glTexParameterIuiv\00\00"
@__str$257 = private global [22 x i8] c"glGetTexParameterIiv\00\00"
@__str$258 = private global [23 x i8] c"glGetTexParameterIuiv\00\00"
@__str$259 = private global [17 x i8] c"glClearBufferiv\00\00"
@__str$25a = private global [18 x i8] c"glClearBufferuiv\00\00"
@__str$25b = private global [17 x i8] c"glClearBufferfv\00\00"
@__str$25c = private global [17 x i8] c"glClearBufferfi\00\00"
@__str$25d = private global [14 x i8] c"glGetStringi\00\00"
@__str$25e = private global [18 x i8] c"glIsRenderbuffer\00\00"
@__str$25f = private global [20 x i8] c"glBindRenderbuffer\00\00"
@__str$260 = private global [23 x i8] c"glDeleteRenderbuffers\00\00"
@__str$261 = private global [20 x i8] c"glGenRenderbuffers\00\00"
@__str$262 = private global [23 x i8] c"glRenderbufferStorage\00\00"
@__str$263 = private global [30 x i8] c"glGetRenderbufferParameteriv\00\00"
@__str$264 = private global [17 x i8] c"glIsFramebuffer\00\00"
@__str$265 = private global [19 x i8] c"glBindFramebuffer\00\00"
@__str$266 = private global [22 x i8] c"glDeleteFramebuffers\00\00"
@__str$267 = private global [19 x i8] c"glGenFramebuffers\00\00"
@__str$268 = private global [26 x i8] c"glCheckFramebufferStatus\00\00"
@__str$269 = private global [24 x i8] c"glFramebufferTexture1D\00\00"
@__str$26a = private global [24 x i8] c"glFramebufferTexture2D\00\00"
@__str$26b = private global [24 x i8] c"glFramebufferTexture3D\00\00"
@__str$26c = private global [27 x i8] c"glFramebufferRenderbuffer\00\00"
@__str$26d = private global [39 x i8] c"glGetFramebufferAttachmentParameteriv\00\00"
@__str$26e = private global [18 x i8] c"glGenerateMipmap\00\00"
@__str$26f = private global [19 x i8] c"glBlitFramebuffer\00\00"
@__str$270 = private global [34 x i8] c"glRenderbufferStorageMultisample\00\00"
@__str$271 = private global [27 x i8] c"glFramebufferTextureLayer\00\00"
@__str$272 = private global [18 x i8] c"glMapBufferRange\00\00"
@__str$273 = private global [26 x i8] c"glFlushMappedBufferRange\00\00"
@__str$274 = private global [19 x i8] c"glBindVertexArray\00\00"
@__str$275 = private global [22 x i8] c"glDeleteVertexArrays\00\00"
@__str$276 = private global [19 x i8] c"glGenVertexArrays\00\00"
@__str$277 = private global [17 x i8] c"glIsVertexArray\00\00"
@__str$278 = private global [23 x i8] c"glDrawArraysInstanced\00\00"
@__str$279 = private global [25 x i8] c"glDrawElementsInstanced\00\00"
@__str$27a = private global [13 x i8] c"glTexBuffer\00\00"
@__str$27b = private global [25 x i8] c"glPrimitiveRestartIndex\00\00"
@__str$27c = private global [21 x i8] c"glCopyBufferSubData\00\00"
@__str$27d = private global [21 x i8] c"glGetUniformIndices\00\00"
@__str$27e = private global [23 x i8] c"glGetActiveUniformsiv\00\00"
@__str$27f = private global [24 x i8] c"glGetActiveUniformName\00\00"
@__str$280 = private global [24 x i8] c"glGetUniformBlockIndex\00\00"
@__str$281 = private global [27 x i8] c"glGetActiveUniformBlockiv\00\00"
@__str$282 = private global [29 x i8] c"glGetActiveUniformBlockName\00\00"
@__str$283 = private global [23 x i8] c"glUniformBlockBinding\00\00"
@__str$284 = private global [26 x i8] c"glDrawElementsBaseVertex\00\00"
@__str$285 = private global [31 x i8] c"glDrawRangeElementsBaseVertex\00\00"
@__str$286 = private global [35 x i8] c"glDrawElementsInstancedBaseVertex\00\00"
@__str$287 = private global [31 x i8] c"glMultiDrawElementsBaseVertex\00\00"
@__str$288 = private global [19 x i8] c"glProvokingVertex\00\00"
@__str$289 = private global [13 x i8] c"glFenceSync\00\00"
@__str$28a = private global [10 x i8] c"glIsSync\00\00"
@__str$28b = private global [14 x i8] c"glDeleteSync\00\00"
@__str$28c = private global [18 x i8] c"glClientWaitSync\00\00"
@__str$28d = private global [12 x i8] c"glWaitSync\00\00"
@__str$28e = private global [17 x i8] c"glGetInteger64v\00\00"
@__str$28f = private global [13 x i8] c"glGetSynciv\00\00"
@__str$290 = private global [19 x i8] c"glGetInteger64i_v\00\00"
@__str$291 = private global [26 x i8] c"glGetBufferParameteri64v\00\00"
@__str$292 = private global [22 x i8] c"glFramebufferTexture\00\00"
@__str$293 = private global [25 x i8] c"glTexImage2DMultisample\00\00"
@__str$294 = private global [25 x i8] c"glTexImage3DMultisample\00\00"
@__str$295 = private global [20 x i8] c"glGetMultisamplefv\00\00"
@__str$296 = private global [15 x i8] c"glSampleMaski\00\00"
@__str$297 = private global [31 x i8] c"glBindFragDataLocationIndexed\00\00"
@__str$298 = private global [20 x i8] c"glGetFragDataIndex\00\00"
@__str$299 = private global [15 x i8] c"glGenSamplers\00\00"
@__str$29a = private global [18 x i8] c"glDeleteSamplers\00\00"
@__str$29b = private global [13 x i8] c"glIsSampler\00\00"
@__str$29c = private global [15 x i8] c"glBindSampler\00\00"
@__str$29d = private global [21 x i8] c"glSamplerParameteri\00\00"
@__str$29e = private global [22 x i8] c"glSamplerParameteriv\00\00"
@__str$29f = private global [21 x i8] c"glSamplerParameterf\00\00"
@__str$2a0 = private global [22 x i8] c"glSamplerParameterfv\00\00"
@__str$2a1 = private global [23 x i8] c"glSamplerParameterIiv\00\00"
@__str$2a2 = private global [24 x i8] c"glSamplerParameterIuiv\00\00"
@__str$2a3 = private global [25 x i8] c"glGetSamplerParameteriv\00\00"
@__str$2a4 = private global [26 x i8] c"glGetSamplerParameterIiv\00\00"
@__str$2a5 = private global [25 x i8] c"glGetSamplerParameterfv\00\00"
@__str$2a6 = private global [27 x i8] c"glGetSamplerParameterIuiv\00\00"
@__str$2a7 = private global [16 x i8] c"glQueryCounter\00\00"
@__str$2a8 = private global [22 x i8] c"glGetQueryObjecti64v\00\00"
@__str$2a9 = private global [23 x i8] c"glGetQueryObjectui64v\00\00"
@__str$2aa = private global [23 x i8] c"glVertexAttribDivisor\00\00"
@__str$2ab = private global [20 x i8] c"glVertexAttribP1ui\00\00"
@__str$2ac = private global [21 x i8] c"glVertexAttribP1uiv\00\00"
@__str$2ad = private global [20 x i8] c"glVertexAttribP2ui\00\00"
@__str$2ae = private global [21 x i8] c"glVertexAttribP2uiv\00\00"
@__str$2af = private global [20 x i8] c"glVertexAttribP3ui\00\00"
@__str$2b0 = private global [21 x i8] c"glVertexAttribP3uiv\00\00"
@__str$2b1 = private global [20 x i8] c"glVertexAttribP4ui\00\00"
@__str$2b2 = private global [21 x i8] c"glVertexAttribP4uiv\00\00"
@__str$2b3 = private global [14 x i8] c"glVertexP2ui\00\00"
@__str$2b4 = private global [15 x i8] c"glVertexP2uiv\00\00"
@__str$2b5 = private global [14 x i8] c"glVertexP3ui\00\00"
@__str$2b6 = private global [15 x i8] c"glVertexP3uiv\00\00"
@__str$2b7 = private global [14 x i8] c"glVertexP4ui\00\00"
@__str$2b8 = private global [15 x i8] c"glVertexP4uiv\00\00"
@__str$2b9 = private global [16 x i8] c"glTexCoordP1ui\00\00"
@__str$2ba = private global [17 x i8] c"glTexCoordP1uiv\00\00"
@__str$2bb = private global [16 x i8] c"glTexCoordP2ui\00\00"
@__str$2bc = private global [17 x i8] c"glTexCoordP2uiv\00\00"
@__str$2bd = private global [16 x i8] c"glTexCoordP3ui\00\00"
@__str$2be = private global [17 x i8] c"glTexCoordP3uiv\00\00"
@__str$2bf = private global [16 x i8] c"glTexCoordP4ui\00\00"
@__str$2c0 = private global [17 x i8] c"glTexCoordP4uiv\00\00"
@__str$2c1 = private global [21 x i8] c"glMultiTexCoordP1ui\00\00"
@__str$2c2 = private global [22 x i8] c"glMultiTexCoordP1uiv\00\00"
@__str$2c3 = private global [21 x i8] c"glMultiTexCoordP2ui\00\00"
@__str$2c4 = private global [22 x i8] c"glMultiTexCoordP2uiv\00\00"
@__str$2c5 = private global [21 x i8] c"glMultiTexCoordP3ui\00\00"
@__str$2c6 = private global [22 x i8] c"glMultiTexCoordP3uiv\00\00"
@__str$2c7 = private global [21 x i8] c"glMultiTexCoordP4ui\00\00"
@__str$2c8 = private global [22 x i8] c"glMultiTexCoordP4uiv\00\00"
@__str$2c9 = private global [14 x i8] c"glNormalP3ui\00\00"
@__str$2ca = private global [15 x i8] c"glNormalP3uiv\00\00"
@__str$2cb = private global [13 x i8] c"glColorP3ui\00\00"
@__str$2cc = private global [14 x i8] c"glColorP3uiv\00\00"
@__str$2cd = private global [13 x i8] c"glColorP4ui\00\00"
@__str$2ce = private global [14 x i8] c"glColorP4uiv\00\00"
@__str$2cf = private global [22 x i8] c"glSecondaryColorP3ui\00\00"
@__str$2d0 = private global [23 x i8] c"glSecondaryColorP3uiv\00\00"
@__str$2d1 = private global [20 x i8] c"glMinSampleShading\00\00"
@__str$2d2 = private global [18 x i8] c"glBlendEquationi\00\00"
@__str$2d3 = private global [26 x i8] c"glBlendEquationSeparatei\00\00"
@__str$2d4 = private global [14 x i8] c"glBlendFunci\00\00"
@__str$2d5 = private global [22 x i8] c"glBlendFuncSeparatei\00\00"
@__str$2d6 = private global [22 x i8] c"glDrawArraysIndirect\00\00"
@__str$2d7 = private global [24 x i8] c"glDrawElementsIndirect\00\00"
@__str$2d8 = private global [13 x i8] c"glUniform1d\00\00"
@__str$2d9 = private global [13 x i8] c"glUniform2d\00\00"
@__str$2da = private global [13 x i8] c"glUniform3d\00\00"
@__str$2db = private global [13 x i8] c"glUniform4d\00\00"
@__str$2dc = private global [14 x i8] c"glUniform1dv\00\00"
@__str$2dd = private global [14 x i8] c"glUniform2dv\00\00"
@__str$2de = private global [14 x i8] c"glUniform3dv\00\00"
@__str$2df = private global [14 x i8] c"glUniform4dv\00\00"
@__str$2e0 = private global [20 x i8] c"glUniformMatrix2dv\00\00"
@__str$2e1 = private global [20 x i8] c"glUniformMatrix3dv\00\00"
@__str$2e2 = private global [20 x i8] c"glUniformMatrix4dv\00\00"
@__str$2e3 = private global [22 x i8] c"glUniformMatrix2x3dv\00\00"
@__str$2e4 = private global [22 x i8] c"glUniformMatrix2x4dv\00\00"
@__str$2e5 = private global [22 x i8] c"glUniformMatrix3x2dv\00\00"
@__str$2e6 = private global [22 x i8] c"glUniformMatrix3x4dv\00\00"
@__str$2e7 = private global [22 x i8] c"glUniformMatrix4x2dv\00\00"
@__str$2e8 = private global [22 x i8] c"glUniformMatrix4x3dv\00\00"
@__str$2e9 = private global [16 x i8] c"glGetUniformdv\00\00"
@__str$2ea = private global [32 x i8] c"glGetSubroutineUniformLocation\00\00"
@__str$2eb = private global [22 x i8] c"glGetSubroutineIndex\00\00"
@__str$2ec = private global [32 x i8] c"glGetActiveSubroutineUniformiv\00\00"
@__str$2ed = private global [34 x i8] c"glGetActiveSubroutineUniformName\00\00"
@__str$2ee = private global [27 x i8] c"glGetActiveSubroutineName\00\00"
@__str$2ef = private global [25 x i8] c"glUniformSubroutinesuiv\00\00"
@__str$2f0 = private global [27 x i8] c"glGetUniformSubroutineuiv\00\00"
@__str$2f1 = private global [21 x i8] c"glGetProgramStageiv\00\00"
@__str$2f2 = private global [19 x i8] c"glPatchParameteri\00\00"
@__str$2f3 = private global [20 x i8] c"glPatchParameterfv\00\00"
@__str$2f4 = private global [25 x i8] c"glBindTransformFeedback\00\00"
@__str$2f5 = private global [28 x i8] c"glDeleteTransformFeedbacks\00\00"
@__str$2f6 = private global [25 x i8] c"glGenTransformFeedbacks\00\00"
@__str$2f7 = private global [23 x i8] c"glIsTransformFeedback\00\00"
@__str$2f8 = private global [26 x i8] c"glPauseTransformFeedback\00\00"
@__str$2f9 = private global [27 x i8] c"glResumeTransformFeedback\00\00"
@__str$2fa = private global [25 x i8] c"glDrawTransformFeedback\00\00"
@__str$2fb = private global [31 x i8] c"glDrawTransformFeedbackStream\00\00"
@__str$2fc = private global [21 x i8] c"glBeginQueryIndexed\00\00"
@__str$2fd = private global [19 x i8] c"glEndQueryIndexed\00\00"
@__str$2fe = private global [21 x i8] c"glGetQueryIndexediv\00\00"
@__str$2ff = private global [25 x i8] c"glReleaseShaderCompiler\00\00"
@__str$300 = private global [16 x i8] c"glShaderBinary\00\00"
@__str$301 = private global [28 x i8] c"glGetShaderPrecisionFormat\00\00"
@__str$302 = private global [15 x i8] c"glDepthRangef\00\00"
@__str$303 = private global [15 x i8] c"glClearDepthf\00\00"
@__str$304 = private global [20 x i8] c"glGetProgramBinary\00\00"
@__str$305 = private global [17 x i8] c"glProgramBinary\00\00"
@__str$306 = private global [21 x i8] c"glProgramParameteri\00\00"
@__str$307 = private global [20 x i8] c"glUseProgramStages\00\00"
@__str$308 = private global [23 x i8] c"glActiveShaderProgram\00\00"
@__str$309 = private global [24 x i8] c"glCreateShaderProgramv\00\00"
@__str$30a = private global [23 x i8] c"glBindProgramPipeline\00\00"
@__str$30b = private global [26 x i8] c"glDeleteProgramPipelines\00\00"
@__str$30c = private global [23 x i8] c"glGenProgramPipelines\00\00"
@__str$30d = private global [21 x i8] c"glIsProgramPipeline\00\00"
@__str$30e = private global [24 x i8] c"glGetProgramPipelineiv\00\00"
@__str$30f = private global [20 x i8] c"glProgramUniform1i\00\00"
@__str$310 = private global [21 x i8] c"glProgramUniform1iv\00\00"
@__str$311 = private global [20 x i8] c"glProgramUniform1f\00\00"
@__str$312 = private global [21 x i8] c"glProgramUniform1fv\00\00"
@__str$313 = private global [20 x i8] c"glProgramUniform1d\00\00"
@__str$314 = private global [21 x i8] c"glProgramUniform1dv\00\00"
@__str$315 = private global [21 x i8] c"glProgramUniform1ui\00\00"
@__str$316 = private global [22 x i8] c"glProgramUniform1uiv\00\00"
@__str$317 = private global [20 x i8] c"glProgramUniform2i\00\00"
@__str$318 = private global [21 x i8] c"glProgramUniform2iv\00\00"
@__str$319 = private global [20 x i8] c"glProgramUniform2f\00\00"
@__str$31a = private global [21 x i8] c"glProgramUniform2fv\00\00"
@__str$31b = private global [20 x i8] c"glProgramUniform2d\00\00"
@__str$31c = private global [21 x i8] c"glProgramUniform2dv\00\00"
@__str$31d = private global [21 x i8] c"glProgramUniform2ui\00\00"
@__str$31e = private global [22 x i8] c"glProgramUniform2uiv\00\00"
@__str$31f = private global [20 x i8] c"glProgramUniform3i\00\00"
@__str$320 = private global [21 x i8] c"glProgramUniform3iv\00\00"
@__str$321 = private global [20 x i8] c"glProgramUniform3f\00\00"
@__str$322 = private global [21 x i8] c"glProgramUniform3fv\00\00"
@__str$323 = private global [20 x i8] c"glProgramUniform3d\00\00"
@__str$324 = private global [21 x i8] c"glProgramUniform3dv\00\00"
@__str$325 = private global [21 x i8] c"glProgramUniform3ui\00\00"
@__str$326 = private global [22 x i8] c"glProgramUniform3uiv\00\00"
@__str$327 = private global [20 x i8] c"glProgramUniform4i\00\00"
@__str$328 = private global [21 x i8] c"glProgramUniform4iv\00\00"
@__str$329 = private global [20 x i8] c"glProgramUniform4f\00\00"
@__str$32a = private global [21 x i8] c"glProgramUniform4fv\00\00"
@__str$32b = private global [20 x i8] c"glProgramUniform4d\00\00"
@__str$32c = private global [21 x i8] c"glProgramUniform4dv\00\00"
@__str$32d = private global [21 x i8] c"glProgramUniform4ui\00\00"
@__str$32e = private global [22 x i8] c"glProgramUniform4uiv\00\00"
@__str$32f = private global [27 x i8] c"glProgramUniformMatrix2fv\00\00"
@__str$330 = private global [27 x i8] c"glProgramUniformMatrix3fv\00\00"
@__str$331 = private global [27 x i8] c"glProgramUniformMatrix4fv\00\00"
@__str$332 = private global [27 x i8] c"glProgramUniformMatrix2dv\00\00"
@__str$333 = private global [27 x i8] c"glProgramUniformMatrix3dv\00\00"
@__str$334 = private global [27 x i8] c"glProgramUniformMatrix4dv\00\00"
@__str$335 = private global [29 x i8] c"glProgramUniformMatrix2x3fv\00\00"
@__str$336 = private global [29 x i8] c"glProgramUniformMatrix3x2fv\00\00"
@__str$337 = private global [29 x i8] c"glProgramUniformMatrix2x4fv\00\00"
@__str$338 = private global [29 x i8] c"glProgramUniformMatrix4x2fv\00\00"
@__str$339 = private global [29 x i8] c"glProgramUniformMatrix3x4fv\00\00"
@__str$33a = private global [29 x i8] c"glProgramUniformMatrix4x3fv\00\00"
@__str$33b = private global [29 x i8] c"glProgramUniformMatrix2x3dv\00\00"
@__str$33c = private global [29 x i8] c"glProgramUniformMatrix3x2dv\00\00"
@__str$33d = private global [29 x i8] c"glProgramUniformMatrix2x4dv\00\00"
@__str$33e = private global [29 x i8] c"glProgramUniformMatrix4x2dv\00\00"
@__str$33f = private global [29 x i8] c"glProgramUniformMatrix3x4dv\00\00"
@__str$340 = private global [29 x i8] c"glProgramUniformMatrix4x3dv\00\00"
@__str$341 = private global [27 x i8] c"glValidateProgramPipeline\00\00"
@__str$342 = private global [29 x i8] c"glGetProgramPipelineInfoLog\00\00"
@__str$343 = private global [19 x i8] c"glVertexAttribL1d\00\00"
@__str$344 = private global [19 x i8] c"glVertexAttribL2d\00\00"
@__str$345 = private global [19 x i8] c"glVertexAttribL3d\00\00"
@__str$346 = private global [19 x i8] c"glVertexAttribL4d\00\00"
@__str$347 = private global [20 x i8] c"glVertexAttribL1dv\00\00"
@__str$348 = private global [20 x i8] c"glVertexAttribL2dv\00\00"
@__str$349 = private global [20 x i8] c"glVertexAttribL3dv\00\00"
@__str$34a = private global [20 x i8] c"glVertexAttribL4dv\00\00"
@__str$34b = private global [24 x i8] c"glVertexAttribLPointer\00\00"
@__str$34c = private global [22 x i8] c"glGetVertexAttribLdv\00\00"
@__str$34d = private global [18 x i8] c"glViewportArrayv\00\00"
@__str$34e = private global [20 x i8] c"glViewportIndexedf\00\00"
@__str$34f = private global [21 x i8] c"glViewportIndexedfv\00\00"
@__str$350 = private global [17 x i8] c"glScissorArrayv\00\00"
@__str$351 = private global [18 x i8] c"glScissorIndexed\00\00"
@__str$352 = private global [19 x i8] c"glScissorIndexedv\00\00"
@__str$353 = private global [20 x i8] c"glDepthRangeArrayv\00\00"
@__str$354 = private global [21 x i8] c"glDepthRangeIndexed\00\00"
@__str$355 = private global [15 x i8] c"glGetFloati_v\00\00"
@__str$356 = private global [16 x i8] c"glGetDoublei_v\00\00"
@__str$357 = private global [35 x i8] c"glDrawArraysInstancedBaseInstance\00\00"
@__str$358 = private global [37 x i8] c"glDrawElementsInstancedBaseInstance\00\00"
@__str$359 = private global [47 x i8] c"glDrawElementsInstancedBaseVertexBaseInstance\00\00"
@__str$35a = private global [23 x i8] c"glGetInternalformativ\00\00"
@__str$35b = private global [34 x i8] c"glGetActiveAtomicCounterBufferiv\00\00"
@__str$35c = private global [20 x i8] c"glBindImageTexture\00\00"
@__str$35d = private global [17 x i8] c"glMemoryBarrier\00\00"
@__str$35e = private global [16 x i8] c"glTexStorage1D\00\00"
@__str$35f = private global [16 x i8] c"glTexStorage2D\00\00"
@__str$360 = private global [16 x i8] c"glTexStorage3D\00\00"
@__str$361 = private global [34 x i8] c"glDrawTransformFeedbackInstanced\00\00"
@__str$362 = private global [40 x i8] c"glDrawTransformFeedbackStreamInstanced\00\00"
@__str$363 = private global [19 x i8] c"glClearBufferData\00\00"
@__str$364 = private global [22 x i8] c"glClearBufferSubData\00\00"
@__str$365 = private global [19 x i8] c"glDispatchCompute\00\00"
@__str$366 = private global [27 x i8] c"glDispatchComputeIndirect\00\00"
@__str$367 = private global [20 x i8] c"glCopyImageSubData\00\00"
@__str$368 = private global [25 x i8] c"glFramebufferParameteri\00\00"
@__str$369 = private global [29 x i8] c"glGetFramebufferParameteriv\00\00"
@__str$36a = private global [25 x i8] c"glGetInternalformati64v\00\00"
@__str$36b = private global [25 x i8] c"glInvalidateTexSubImage\00\00"
@__str$36c = private global [22 x i8] c"glInvalidateTexImage\00\00"
@__str$36d = private global [27 x i8] c"glInvalidateBufferSubData\00\00"
@__str$36e = private global [24 x i8] c"glInvalidateBufferData\00\00"
@__str$36f = private global [25 x i8] c"glInvalidateFramebuffer\00\00"
@__str$370 = private global [28 x i8] c"glInvalidateSubFramebuffer\00\00"
@__str$371 = private global [27 x i8] c"glMultiDrawArraysIndirect\00\00"
@__str$372 = private global [29 x i8] c"glMultiDrawElementsIndirect\00\00"
@__str$373 = private global [25 x i8] c"glGetProgramInterfaceiv\00\00"
@__str$374 = private global [27 x i8] c"glGetProgramResourceIndex\00\00"
@__str$375 = private global [26 x i8] c"glGetProgramResourceName\00\00"
@__str$376 = private global [24 x i8] c"glGetProgramResourceiv\00\00"
@__str$377 = private global [30 x i8] c"glGetProgramResourceLocation\00\00"
@__str$378 = private global [35 x i8] c"glGetProgramResourceLocationIndex\00\00"
@__str$379 = private global [29 x i8] c"glShaderStorageBlockBinding\00\00"
@__str$37a = private global [18 x i8] c"glTexBufferRange\00\00"
@__str$37b = private global [27 x i8] c"glTexStorage2DMultisample\00\00"
@__str$37c = private global [27 x i8] c"glTexStorage3DMultisample\00\00"
@__str$37d = private global [15 x i8] c"glTextureView\00\00"
@__str$37e = private global [20 x i8] c"glBindVertexBuffer\00\00"
@__str$37f = private global [22 x i8] c"glVertexAttribFormat\00\00"
@__str$380 = private global [23 x i8] c"glVertexAttribIFormat\00\00"
@__str$381 = private global [23 x i8] c"glVertexAttribLFormat\00\00"
@__str$382 = private global [23 x i8] c"glVertexAttribBinding\00\00"
@__str$383 = private global [24 x i8] c"glVertexBindingDivisor\00\00"
@__str$384 = private global [23 x i8] c"glDebugMessageControl\00\00"
@__str$385 = private global [22 x i8] c"glDebugMessageInsert\00\00"
@__str$386 = private global [24 x i8] c"glDebugMessageCallback\00\00"
@__str$387 = private global [22 x i8] c"glGetDebugMessageLog\00\00"
@__str$388 = private global [18 x i8] c"glPushDebugGroup\00\00"
@__str$389 = private global [17 x i8] c"glPopDebugGroup\00\00"
@__str$38a = private global [15 x i8] c"glObjectLabel\00\00"
@__str$38b = private global [18 x i8] c"glGetObjectLabel\00\00"
@__str$38c = private global [18 x i8] c"glObjectPtrLabel\00\00"
@__str$38d = private global [21 x i8] c"glGetObjectPtrLabel\00\00"
@__str$38e = private global [17 x i8] c"glBufferStorage\00\00"
@__str$38f = private global [17 x i8] c"glClearTexImage\00\00"
@__str$390 = private global [20 x i8] c"glClearTexSubImage\00\00"
@__str$391 = private global [19 x i8] c"glBindBuffersBase\00\00"
@__str$392 = private global [20 x i8] c"glBindBuffersRange\00\00"
@__str$393 = private global [16 x i8] c"glBindTextures\00\00"
@__str$394 = private global [16 x i8] c"glBindSamplers\00\00"
@__str$395 = private global [21 x i8] c"glBindImageTextures\00\00"
@__str$396 = private global [21 x i8] c"glBindVertexBuffers\00\00"
@__str$397 = private global [15 x i8] c"glClipControl\00\00"
@__str$398 = private global [28 x i8] c"glCreateTransformFeedbacks\00\00"
@__str$399 = private global [31 x i8] c"glTransformFeedbackBufferBase\00\00"
@__str$39a = private global [32 x i8] c"glTransformFeedbackBufferRange\00\00"
@__str$39b = private global [26 x i8] c"glGetTransformFeedbackiv\00\00"
@__str$39c = private global [27 x i8] c"glGetTransformFeedbacki_v\00\00"
@__str$39d = private global [29 x i8] c"glGetTransformFeedbacki64_v\00\00"
@__str$39e = private global [17 x i8] c"glCreateBuffers\00\00"
@__str$39f = private global [22 x i8] c"glNamedBufferStorage\00\00"
@__str$3a0 = private global [19 x i8] c"glNamedBufferData\00\00"
@__str$3a1 = private global [22 x i8] c"glNamedBufferSubData\00\00"
@__str$3a2 = private global [26 x i8] c"glCopyNamedBufferSubData\00\00"
@__str$3a3 = private global [24 x i8] c"glClearNamedBufferData\00\00"
@__str$3a4 = private global [27 x i8] c"glClearNamedBufferSubData\00\00"
@__str$3a5 = private global [18 x i8] c"glMapNamedBuffer\00\00"
@__str$3a6 = private global [23 x i8] c"glMapNamedBufferRange\00\00"
@__str$3a7 = private global [20 x i8] c"glUnmapNamedBuffer\00\00"
@__str$3a8 = private global [31 x i8] c"glFlushMappedNamedBufferRange\00\00"
@__str$3a9 = private global [29 x i8] c"glGetNamedBufferParameteriv\00\00"
@__str$3aa = private global [31 x i8] c"glGetNamedBufferParameteri64v\00\00"
@__str$3ab = private global [26 x i8] c"glGetNamedBufferPointerv\00\00"
@__str$3ac = private global [25 x i8] c"glGetNamedBufferSubData\00\00"
@__str$3ad = private global [22 x i8] c"glCreateFramebuffers\00\00"
@__str$3ae = private global [32 x i8] c"glNamedFramebufferRenderbuffer\00\00"
@__str$3af = private global [30 x i8] c"glNamedFramebufferParameteri\00\00"
@__str$3b0 = private global [27 x i8] c"glNamedFramebufferTexture\00\00"
@__str$3b1 = private global [32 x i8] c"glNamedFramebufferTextureLayer\00\00"
@__str$3b2 = private global [30 x i8] c"glNamedFramebufferDrawBuffer\00\00"
@__str$3b3 = private global [31 x i8] c"glNamedFramebufferDrawBuffers\00\00"
@__str$3b4 = private global [30 x i8] c"glNamedFramebufferReadBuffer\00\00"
@__str$3b5 = private global [34 x i8] c"glInvalidateNamedFramebufferData\00\00"
@__str$3b6 = private global [37 x i8] c"glInvalidateNamedFramebufferSubData\00\00"
@__str$3b7 = private global [27 x i8] c"glClearNamedFramebufferiv\00\00"
@__str$3b8 = private global [28 x i8] c"glClearNamedFramebufferuiv\00\00"
@__str$3b9 = private global [27 x i8] c"glClearNamedFramebufferfv\00\00"
@__str$3ba = private global [27 x i8] c"glClearNamedFramebufferfi\00\00"
@__str$3bb = private global [24 x i8] c"glBlitNamedFramebuffer\00\00"
@__str$3bc = private global [31 x i8] c"glCheckNamedFramebufferStatus\00\00"
@__str$3bd = private global [34 x i8] c"glGetNamedFramebufferParameteriv\00\00"
@__str$3be = private global [44 x i8] c"glGetNamedFramebufferAttachmentParameteriv\00\00"
@__str$3bf = private global [23 x i8] c"glCreateRenderbuffers\00\00"
@__str$3c0 = private global [28 x i8] c"glNamedRenderbufferStorage\00\00"
@__str$3c1 = private global [39 x i8] c"glNamedRenderbufferStorageMultisample\00\00"
@__str$3c2 = private global [35 x i8] c"glGetNamedRenderbufferParameteriv\00\00"
@__str$3c3 = private global [18 x i8] c"glCreateTextures\00\00"
@__str$3c4 = private global [17 x i8] c"glTextureBuffer\00\00"
@__str$3c5 = private global [22 x i8] c"glTextureBufferRange\00\00"
@__str$3c6 = private global [20 x i8] c"glTextureStorage1D\00\00"
@__str$3c7 = private global [20 x i8] c"glTextureStorage2D\00\00"
@__str$3c8 = private global [20 x i8] c"glTextureStorage3D\00\00"
@__str$3c9 = private global [31 x i8] c"glTextureStorage2DMultisample\00\00"
@__str$3ca = private global [31 x i8] c"glTextureStorage3DMultisample\00\00"
@__str$3cb = private global [21 x i8] c"glTextureSubImage1D\00\00"
@__str$3cc = private global [21 x i8] c"glTextureSubImage2D\00\00"
@__str$3cd = private global [21 x i8] c"glTextureSubImage3D\00\00"
@__str$3ce = private global [31 x i8] c"glCompressedTextureSubImage1D\00\00"
@__str$3cf = private global [31 x i8] c"glCompressedTextureSubImage2D\00\00"
@__str$3d0 = private global [31 x i8] c"glCompressedTextureSubImage3D\00\00"
@__str$3d1 = private global [25 x i8] c"glCopyTextureSubImage1D\00\00"
@__str$3d2 = private global [25 x i8] c"glCopyTextureSubImage2D\00\00"
@__str$3d3 = private global [25 x i8] c"glCopyTextureSubImage3D\00\00"
@__str$3d4 = private global [21 x i8] c"glTextureParameterf\00\00"
@__str$3d5 = private global [22 x i8] c"glTextureParameterfv\00\00"
@__str$3d6 = private global [21 x i8] c"glTextureParameteri\00\00"
@__str$3d7 = private global [23 x i8] c"glTextureParameterIiv\00\00"
@__str$3d8 = private global [24 x i8] c"glTextureParameterIuiv\00\00"
@__str$3d9 = private global [22 x i8] c"glTextureParameteriv\00\00"
@__str$3da = private global [25 x i8] c"glGenerateTextureMipmap\00\00"
@__str$3db = private global [19 x i8] c"glBindTextureUnit\00\00"
@__str$3dc = private global [19 x i8] c"glGetTextureImage\00\00"
@__str$3dd = private global [29 x i8] c"glGetCompressedTextureImage\00\00"
@__str$3de = private global [30 x i8] c"glGetTextureLevelParameterfv\00\00"
@__str$3df = private global [30 x i8] c"glGetTextureLevelParameteriv\00\00"
@__str$3e0 = private global [25 x i8] c"glGetTextureParameterfv\00\00"
@__str$3e1 = private global [26 x i8] c"glGetTextureParameterIiv\00\00"
@__str$3e2 = private global [27 x i8] c"glGetTextureParameterIuiv\00\00"
@__str$3e3 = private global [25 x i8] c"glGetTextureParameteriv\00\00"
@__str$3e4 = private global [22 x i8] c"glCreateVertexArrays\00\00"
@__str$3e5 = private global [28 x i8] c"glDisableVertexArrayAttrib\00\00"
@__str$3e6 = private global [27 x i8] c"glEnableVertexArrayAttrib\00\00"
@__str$3e7 = private global [28 x i8] c"glVertexArrayElementBuffer\00\00"
@__str$3e8 = private global [27 x i8] c"glVertexArrayVertexBuffer\00\00"
@__str$3e9 = private global [28 x i8] c"glVertexArrayVertexBuffers\00\00"
@__str$3ea = private global [28 x i8] c"glVertexArrayAttribBinding\00\00"
@__str$3eb = private global [27 x i8] c"glVertexArrayAttribFormat\00\00"
@__str$3ec = private global [28 x i8] c"glVertexArrayAttribIFormat\00\00"
@__str$3ed = private global [28 x i8] c"glVertexArrayAttribLFormat\00\00"
@__str$3ee = private global [29 x i8] c"glVertexArrayBindingDivisor\00\00"
@__str$3ef = private global [20 x i8] c"glGetVertexArrayiv\00\00"
@__str$3f0 = private global [27 x i8] c"glGetVertexArrayIndexediv\00\00"
@__str$3f1 = private global [29 x i8] c"glGetVertexArrayIndexed64iv\00\00"
@__str$3f2 = private global [18 x i8] c"glCreateSamplers\00\00"
@__str$3f3 = private global [26 x i8] c"glCreateProgramPipelines\00\00"
@__str$3f4 = private global [17 x i8] c"glCreateQueries\00\00"
@__str$3f5 = private global [28 x i8] c"glGetQueryBufferObjecti64v\00\00"
@__str$3f6 = private global [26 x i8] c"glGetQueryBufferObjectiv\00\00"
@__str$3f7 = private global [29 x i8] c"glGetQueryBufferObjectui64v\00\00"
@__str$3f8 = private global [27 x i8] c"glGetQueryBufferObjectuiv\00\00"
@__str$3f9 = private global [25 x i8] c"glMemoryBarrierByRegion\00\00"
@__str$3fa = private global [22 x i8] c"glGetTextureSubImage\00\00"
@__str$3fb = private global [32 x i8] c"glGetCompressedTextureSubImage\00\00"
@__str$3fc = private global [26 x i8] c"glGetGraphicsResetStatus\00\00"
@__str$3fd = private global [26 x i8] c"glGetnCompressedTexImage\00\00"
@__str$3fe = private global [16 x i8] c"glGetnTexImage\00\00"
@__str$3ff = private global [17 x i8] c"glGetnUniformdv\00\00"
@__str$400 = private global [17 x i8] c"glGetnUniformfv\00\00"
@__str$401 = private global [17 x i8] c"glGetnUniformiv\00\00"
@__str$402 = private global [18 x i8] c"glGetnUniformuiv\00\00"
@__str$403 = private global [15 x i8] c"glReadnPixels\00\00"
@__str$404 = private global [13 x i8] c"glGetnMapdv\00\00"
@__str$405 = private global [13 x i8] c"glGetnMapfv\00\00"
@__str$406 = private global [13 x i8] c"glGetnMapiv\00\00"
@__str$407 = private global [18 x i8] c"glGetnPixelMapfv\00\00"
@__str$408 = private global [19 x i8] c"glGetnPixelMapuiv\00\00"
@__str$409 = private global [19 x i8] c"glGetnPixelMapusv\00\00"
@__str$40a = private global [22 x i8] c"glGetnPolygonStipple\00\00"
@__str$40b = private global [18 x i8] c"glGetnColorTable\00\00"
@__str$40c = private global [25 x i8] c"glGetnConvolutionFilter\00\00"
@__str$40d = private global [23 x i8] c"glGetnSeparableFilter\00\00"
@__str$40e = private global [17 x i8] c"glGetnHistogram\00\00"
@__str$40f = private global [14 x i8] c"glGetnMinmax\00\00"
@__str$410 = private global [18 x i8] c"glTextureBarrier\00\00"
@__str$411 = private global [20 x i8] c"glSpecializeShader\00\00"
@__str$412 = private global [32 x i8] c"glMultiDrawArraysIndirectCount\00\00"
@__str$413 = private global [34 x i8] c"glMultiDrawElementsIndirectCount\00\00"
@__str$414 = private global [22 x i8] c"glPolygonOffsetClamp\00\00"
@__str$415 = private global [38 x i8] c"D\3A\5CGitHub\5COdin\5Cshared\5Codin-gl\5Cgl.odin\00"
@__str$416 = private global [38 x i8] c"D\3A\5CGitHub\5COdin\5Cshared\5Codin-gl\5Cgl.odin\00"
@__str$417 = private global [12 x i8] c"check_error\00"
@__str$418 = private global [38 x i8] c"D\3A\5CGitHub\5COdin\5Cshared\5Codin-gl\5Cgl.odin\00"
@__str$419 = private global [38 x i8] c"D\3A\5CGitHub\5COdin\5Cshared\5Codin-gl\5Cgl.odin\00"
@__str$41a = private global [16 x i8] c"Error\20in\20\25v\3A\0A\25s\00"
@__str$41b = private global [38 x i8] c"D\3A\5CGitHub\5COdin\5Cshared\5Codin-gl\5Cgl.odin\00"
@__str$41c = private global [12 x i8] c"check_error\00"
@__str$41d = private global [26 x i8] c"Could\20not\20load\20file\20\22\25s\22\0A\00"
@__str$41e = private global [38 x i8] c"D\3A\5CGitHub\5COdin\5Cshared\5Codin-gl\5Cgl.odin\00"
@__str$41f = private global [25 x i8] c"compile_shader_from_file\00"
@__str$420 = private global [38 x i8] c"D\3A\5CGitHub\5COdin\5Cshared\5Codin-gl\5Cgl.odin\00"
@__str$421 = private global [25 x i8] c"compile_shader_from_file\00"
@__str$422 = private global [33 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cdecimal.odin\00"
@__str$423 = private global [33 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cdecimal.odin\00"
@__str$424 = private global [33 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cdecimal.odin\00"
@__str$425 = private global [33 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cdecimal.odin\00"
@__str$426 = private global [33 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cdecimal.odin\00"
@__str$427 = private global [33 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cdecimal.odin\00"
@__str$428 = private global [33 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cdecimal.odin\00"
@__str$429 = private global [33 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cdecimal.odin\00"
@__str$42a = private global [33 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cdecimal.odin\00"
@__str$42b = private global [33 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cdecimal.odin\00"
@__str$42c = private global [33 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cdecimal.odin\00"
@__str$42d = private global [33 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cdecimal.odin\00"
@__str$42e = private global [33 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cdecimal.odin\00"
@__str$42f = private global [33 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cdecimal.odin\00"
@__str$430 = private global [33 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cdecimal.odin\00"
@__str$431 = private global [33 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cdecimal.odin\00"
@__str$432 = private global [34 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5C_preload.odin\00"
@__str$433 = private global [7 x i8] c"append\00"
@__str$434 = private global [34 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5C_preload.odin\00"
@__str$435 = private global [34 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5C_preload.odin\00"
@__str$436 = private global [7 x i8] c"append\00"
@__str$437 = private global [34 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5C_preload.odin\00"
@__str$438 = private global [29 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5Cmem.odin\00"
@__str$439 = private global [10 x i8] c"slice_ptr\00"
@__str$43a = private global [34 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5C_preload.odin\00"
@__str$43b = private global [7 x i8] c"append\00"
@__str$43c = private global [34 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5C_preload.odin\00"
@__str$43d = private global [34 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5C_preload.odin\00"
@__str$43e = private global [7 x i8] c"append\00"
@__str$43f = private global [34 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5C_preload.odin\00"
@__str$440 = private global [34 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5C_preload.odin\00"
@__str$441 = private global [34 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5C_preload.odin\00"
@__str$442 = private global [34 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5C_preload.odin\00"
@__str$443 = private global [8 x i8] c"reserve\00"
@__str$444 = private global [34 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5C_preload.odin\00"
@__str$445 = private global [8 x i8] c"reserve\00"
@__str$446 = private global [34 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5C_preload.odin\00"
@__str$447 = private global [8 x i8] c"reserve\00"
@__str$448 = private global [34 x i8] c"D\3A\5CGitHub\5COdin\5Ccore\5C_preload.odin\00"
@__str$449 = private global [8 x i8] c"reserve\00"
@__str$44a = private global [16 x i8] c"Type_Info_Named\00"
@__str$44b = private global [5 x i8] c"name\00"
@__str$44c = private global [5 x i8] c"base\00"
@__str$44d = private global [10 x i8] c"Type_Info\00"
@__str$44e = private global [5 x i8] c"size\00"
@__str$44f = private global [6 x i8] c"align\00"
@__str$450 = private global [8 x i8] c"variant\00"
@__str$451 = private global [18 x i8] c"Type_Info_Integer\00"
@__str$452 = private global [7 x i8] c"signed\00"
@__str$453 = private global [15 x i8] c"Type_Info_Rune\00"
@__str$454 = private global [16 x i8] c"Type_Info_Float\00"
@__str$455 = private global [18 x i8] c"Type_Info_Complex\00"
@__str$456 = private global [17 x i8] c"Type_Info_String\00"
@__str$457 = private global [18 x i8] c"Type_Info_Boolean\00"
@__str$458 = private global [14 x i8] c"Type_Info_Any\00"
@__str$459 = private global [18 x i8] c"Type_Info_Pointer\00"
@__str$45a = private global [5 x i8] c"elem\00"
@__str$45b = private global [20 x i8] c"Type_Info_Procedure\00"
@__str$45c = private global [7 x i8] c"params\00"
@__str$45d = private global [8 x i8] c"results\00"
@__str$45e = private global [9 x i8] c"variadic\00"
@__str$45f = private global [11 x i8] c"convention\00"
@__str$460 = private global [19 x i8] c"Calling_Convention\00"
@__str$461 = private global [8 x i8] c"Invalid\00"
@__str$462 = private global [5 x i8] c"Odin\00"
@__str$463 = private global [12 x i8] c"Contextless\00"
@__str$464 = private global [2 x i8] c"C\00"
@__str$465 = private global [4 x i8] c"Std\00"
@__str$466 = private global [5 x i8] c"Fast\00"
@__str$467 = private global [16 x i8] c"Type_Info_Array\00"
@__str$468 = private global [5 x i8] c"elem\00"
@__str$469 = private global [10 x i8] c"elem_size\00"
@__str$46a = private global [6 x i8] c"count\00"
@__str$46b = private global [24 x i8] c"Type_Info_Dynamic_Array\00"
@__str$46c = private global [5 x i8] c"elem\00"
@__str$46d = private global [10 x i8] c"elem_size\00"
@__str$46e = private global [16 x i8] c"Type_Info_Slice\00"
@__str$46f = private global [5 x i8] c"elem\00"
@__str$470 = private global [10 x i8] c"elem_size\00"
@__str$471 = private global [17 x i8] c"Type_Info_Vector\00"
@__str$472 = private global [5 x i8] c"elem\00"
@__str$473 = private global [10 x i8] c"elem_size\00"
@__str$474 = private global [6 x i8] c"count\00"
@__str$475 = private global [16 x i8] c"Type_Info_Tuple\00"
@__str$476 = private global [6 x i8] c"types\00"
@__str$477 = private global [6 x i8] c"names\00"
@__str$478 = private global [17 x i8] c"Type_Info_Struct\00"
@__str$479 = private global [6 x i8] c"types\00"
@__str$47a = private global [6 x i8] c"names\00"
@__str$47b = private global [8 x i8] c"offsets\00"
@__str$47c = private global [7 x i8] c"usings\00"
@__str$47d = private global [10 x i8] c"is_packed\00"
@__str$47e = private global [11 x i8] c"is_ordered\00"
@__str$47f = private global [13 x i8] c"is_raw_union\00"
@__str$480 = private global [13 x i8] c"custom_align\00"
@__str$481 = private global [16 x i8] c"Type_Info_Union\00"
@__str$482 = private global [9 x i8] c"variants\00"
@__str$483 = private global [11 x i8] c"tag_offset\00"
@__str$484 = private global [9 x i8] c"tag_type\00"
@__str$485 = private global [15 x i8] c"Type_Info_Enum\00"
@__str$486 = private global [5 x i8] c"base\00"
@__str$487 = private global [6 x i8] c"names\00"
@__str$488 = private global [7 x i8] c"values\00"
@__str$489 = private global [21 x i8] c"Type_Info_Enum_Value\00"
@__str$48a = private global [14 x i8] c"Type_Info_Map\00"
@__str$48b = private global [4 x i8] c"key\00"
@__str$48c = private global [6 x i8] c"value\00"
@__str$48d = private global [17 x i8] c"generated_struct\00"
@__str$48e = private global [20 x i8] c"Type_Info_Bit_Field\00"
@__str$48f = private global [6 x i8] c"names\00"
@__str$490 = private global [5 x i8] c"bits\00"
@__str$491 = private global [8 x i8] c"offsets\00"
@__str$492 = private global [15 x i8] c"Allocator_Mode\00"
@__str$493 = private global [6 x i8] c"Alloc\00"
@__str$494 = private global [5 x i8] c"Free\00"
@__str$495 = private global [8 x i8] c"FreeAll\00"
@__str$496 = private global [7 x i8] c"Resize\00"
@__str$497 = private global [9 x i8] c"Int_Flag\00"
@__str$498 = private global [7 x i8] c"Prefix\00"
@__str$499 = private global [5 x i8] c"Plus\00"
@__str$49a = private global [6 x i8] c"Space\00"
@__str$49b = private global [21 x i8] c"Source_Code_Location\00"
@__str$49c = private global [10 x i8] c"file_path\00"
@__str$49d = private global [5 x i8] c"line\00"
@__str$49e = private global [7 x i8] c"column\00"
@__str$49f = private global [10 x i8] c"procedure\00"
@__str$4a0 = private global [12 x i8] c"Shader_Type\00"
@__str$4a1 = private global [16 x i8] c"FRAGMENT_SHADER\00"
@__str$4a2 = private global [14 x i8] c"VERTEX_SHADER\00"
@__str$4a3 = private global [16 x i8] c"GEOMETRY_SHADER\00"
@__str$4a4 = private global [15 x i8] c"COMPUTE_SHADER\00"
@__str$4a5 = private global [23 x i8] c"TESS_EVALUATION_SHADER\00"
@__str$4a6 = private global [20 x i8] c"TESS_CONTROL_SHADER\00"
@__str$4a7 = private global [12 x i8] c"SHADER_LINK\00"
@__str$4a8 = private global [15 x i8] c"Allocator_Proc\00"
@__str$4a9 = private global [15 x i8] c"allocator_data\00"
@__str$4aa = private global [5 x i8] c"mode\00"
@__str$4ab = private global [5 x i8] c"size\00"
@__str$4ac = private global [10 x i8] c"alignment\00"
@__str$4ad = private global [11 x i8] c"old_memory\00"
@__str$4ae = private global [9 x i8] c"old_size\00"
@__str$4af = private global [6 x i8] c"flags\00"
@__str$4b0 = private global [9 x i8] c"location\00"
@__str$4b1 = private global [10 x i8] c"Allocator\00"
@__str$4b2 = private global [10 x i8] c"procedure\00"
@__str$4b3 = private global [5 x i8] c"data\00"
@__str$4b4 = private global [8 x i8] c"Context\00"
@__str$4b5 = private global [10 x i8] c"allocator\00"
@__str$4b6 = private global [10 x i8] c"thread_id\00"
@__str$4b7 = private global [10 x i8] c"user_data\00"
@__str$4b8 = private global [11 x i8] c"user_index\00"
@__str$4b9 = private global [8 x i8] c"derived\00"
@__str$4ba = private global [10 x i8] c"__Map_Key\00"
@__str$4bb = private global [5 x i8] c"hash\00"
@__str$4bc = private global [4 x i8] c"str\00"
@__str$4bd = private global [18 x i8] c"__Map_Find_Result\00"
@__str$4be = private global [11 x i8] c"hash_index\00"
@__str$4bf = private global [11 x i8] c"entry_prev\00"
@__str$4c0 = private global [12 x i8] c"entry_index\00"
@__str$4c1 = private global [19 x i8] c"__Map_Entry_Header\00"
@__str$4c2 = private global [4 x i8] c"key\00"
@__str$4c3 = private global [5 x i8] c"next\00"
@__str$4c4 = private global [13 x i8] c"__Map_Header\00"
@__str$4c5 = private global [2 x i8] c"m\00"
@__str$4c6 = private global [14 x i8] c"is_key_string\00"
@__str$4c7 = private global [11 x i8] c"entry_size\00"
@__str$4c8 = private global [12 x i8] c"entry_align\00"
@__str$4c9 = private global [13 x i8] c"value_offset\00"
@__str$4ca = private global [11 x i8] c"value_size\00"
@__str$4cb = private global [4 x i8] c"Map\00"
@__str$4cc = private global [7 x i8] c"hashes\00"
@__str$4cd = private global [8 x i8] c"entries\00"
@__str$4ce = private global [14 x i8] c"Dynamic_Array\00"
@__str$4cf = private global [5 x i8] c"data\00"
@__str$4d0 = private global [4 x i8] c"len\00"
@__str$4d1 = private global [4 x i8] c"cap\00"
@__str$4d2 = private global [10 x i8] c"allocator\00"
@__str$4d3 = private global [7 x i8] c"Entity\00"
@__str$4d4 = private global [9 x i8] c"position\00"
@__str$4d5 = private global [6 x i8] c"scale\00"
@__str$4d6 = private global [7 x i8] c"sprite\00"
@__str$4d7 = private global [8 x i8] c"Vector2\00"
@__str$4d8 = private global [7 x i8] c"Sprite\00"
@__str$4d9 = private global [6 x i8] c"index\00"
@__str$4da = private global [6 x i8] c"width\00"
@__str$4db = private global [7 x i8] c"height\00"
@__str$4dc = private global [14 x i8] c"String_Buffer\00"
@__str$4dd = private global [9 x i8] c"Fmt_Info\00"
@__str$4de = private global [6 x i8] c"minus\00"
@__str$4df = private global [5 x i8] c"plus\00"
@__str$4e0 = private global [6 x i8] c"space\00"
@__str$4e1 = private global [5 x i8] c"zero\00"
@__str$4e2 = private global [5 x i8] c"hash\00"
@__str$4e3 = private global [10 x i8] c"width_set\00"
@__str$4e4 = private global [9 x i8] c"prec_set\00"
@__str$4e5 = private global [6 x i8] c"width\00"
@__str$4e6 = private global [5 x i8] c"prec\00"
@__str$4e7 = private global [7 x i8] c"indent\00"
@__str$4e8 = private global [10 x i8] c"reordered\00"
@__str$4e9 = private global [15 x i8] c"good_arg_index\00"
@__str$4ea = private global [4 x i8] c"buf\00"
@__str$4eb = private global [4 x i8] c"arg\00"
@__str$4ec = private global [13 x i8] c"Accept_Range\00"
@__str$4ed = private global [3 x i8] c"lo\00"
@__str$4ee = private global [3 x i8] c"hi\00"
@__str$4ef = private global [4 x i8] c"Any\00"
@__str$4f0 = private global [5 x i8] c"data\00"
@__str$4f1 = private global [10 x i8] c"type_info\00"
@__str$4f2 = private global [7 x i8] c"String\00"
@__str$4f3 = private global [5 x i8] c"data\00"
@__str$4f4 = private global [4 x i8] c"len\00"
@__str$4f5 = private global [6 x i8] c"Slice\00"
@__str$4f6 = private global [5 x i8] c"data\00"
@__str$4f7 = private global [4 x i8] c"len\00"
@__str$4f8 = private global [8 x i8] c"Vector3\00"
@__str$4f9 = private global [8 x i8] c"Vector4\00"
@__str$4fa = private global [14 x i8] c"Window_Handle\00"
@__str$4fb = private global [15 x i8] c"Monitor_Handle\00"
@__str$4fc = private global [14 x i8] c"Cursor_Handle\00"
@__str$4fd = private global [9 x i8] c"Vid_Mode\00"
@__str$4fe = private global [6 x i8] c"width\00"
@__str$4ff = private global [7 x i8] c"height\00"
@__str$500 = private global [9 x i8] c"red_bits\00"
@__str$501 = private global [11 x i8] c"green_bits\00"
@__str$502 = private global [10 x i8] c"blue_bits\00"
@__str$503 = private global [13 x i8] c"refresh_rate\00"
@__str$504 = private global [11 x i8] c"Gamma_Ramp\00"
@__str$505 = private global [4 x i8] c"red\00"
@__str$506 = private global [6 x i8] c"green\00"
@__str$507 = private global [5 x i8] c"blue\00"
@__str$508 = private global [5 x i8] c"size\00"
@__str$509 = private global [6 x i8] c"Image\00"
@__str$50a = private global [6 x i8] c"width\00"
@__str$50b = private global [7 x i8] c"height\00"
@__str$50c = private global [7 x i8] c"pixels\00"
@__str$50d = private global [20 x i8] c"Window_Iconify_Proc\00"
@__str$50e = private global [7 x i8] c"window\00"
@__str$50f = private global [10 x i8] c"iconified\00"
@__str$510 = private global [20 x i8] c"Window_Refresh_Proc\00"
@__str$511 = private global [7 x i8] c"window\00"
@__str$512 = private global [18 x i8] c"Window_Focus_Proc\00"
@__str$513 = private global [7 x i8] c"window\00"
@__str$514 = private global [8 x i8] c"focused\00"
@__str$515 = private global [18 x i8] c"Window_Close_Proc\00"
@__str$516 = private global [7 x i8] c"window\00"
@__str$517 = private global [17 x i8] c"Window_Size_Proc\00"
@__str$518 = private global [7 x i8] c"window\00"
@__str$519 = private global [6 x i8] c"width\00"
@__str$51a = private global [7 x i8] c"height\00"
@__str$51b = private global [16 x i8] c"Window_Pos_Proc\00"
@__str$51c = private global [7 x i8] c"window\00"
@__str$51d = private global [5 x i8] c"xpos\00"
@__str$51e = private global [5 x i8] c"ypos\00"
@__str$51f = private global [22 x i8] c"Framebuffer_Size_Proc\00"
@__str$520 = private global [7 x i8] c"window\00"
@__str$521 = private global [6 x i8] c"width\00"
@__str$522 = private global [7 x i8] c"height\00"
@__str$523 = private global [10 x i8] c"Drop_Proc\00"
@__str$524 = private global [7 x i8] c"window\00"
@__str$525 = private global [6 x i8] c"count\00"
@__str$526 = private global [6 x i8] c"paths\00"
@__str$527 = private global [13 x i8] c"Monitor_Proc\00"
@__str$528 = private global [7 x i8] c"window\00"
@__str$529 = private global [9 x i8] c"Key_Proc\00"
@__str$52a = private global [7 x i8] c"window\00"
@__str$52b = private global [4 x i8] c"key\00"
@__str$52c = private global [9 x i8] c"scancode\00"
@__str$52d = private global [7 x i8] c"action\00"
@__str$52e = private global [5 x i8] c"mods\00"
@__str$52f = private global [18 x i8] c"Mouse_Button_Proc\00"
@__str$530 = private global [7 x i8] c"window\00"
@__str$531 = private global [7 x i8] c"button\00"
@__str$532 = private global [7 x i8] c"action\00"
@__str$533 = private global [5 x i8] c"mods\00"
@__str$534 = private global [16 x i8] c"Cursor_Pos_Proc\00"
@__str$535 = private global [7 x i8] c"window\00"
@__str$536 = private global [5 x i8] c"xpos\00"
@__str$537 = private global [5 x i8] c"ypos\00"
@__str$538 = private global [12 x i8] c"Scroll_Proc\00"
@__str$539 = private global [7 x i8] c"window\00"
@__str$53a = private global [8 x i8] c"xoffset\00"
@__str$53b = private global [8 x i8] c"yoffset\00"
@__str$53c = private global [10 x i8] c"Char_Proc\00"
@__str$53d = private global [7 x i8] c"window\00"
@__str$53e = private global [10 x i8] c"codepoint\00"
@__str$53f = private global [15 x i8] c"Char_Mods_Proc\00"
@__str$540 = private global [7 x i8] c"window\00"
@__str$541 = private global [10 x i8] c"codepoint\00"
@__str$542 = private global [5 x i8] c"mods\00"
@__str$543 = private global [18 x i8] c"Cursor_Enter_Proc\00"
@__str$544 = private global [7 x i8] c"window\00"
@__str$545 = private global [8 x i8] c"entered\00"
@__str$546 = private global [14 x i8] c"Joystick_Proc\00"
@__str$547 = private global [4 x i8] c"joy\00"
@__str$548 = private global [6 x i8] c"event\00"
@__str$549 = private global [11 x i8] c"Error_Proc\00"
@__str$54a = private global [6 x i8] c"error\00"
@__str$54b = private global [12 x i8] c"description\00"
@__str$54c = private global [14 x i8] c"_TimingStruct\00"
@__str$54d = private global [3 x i8] c"t1\00"
@__str$54e = private global [7 x i8] c"avg_dt\00"
@__str$54f = private global [8 x i8] c"avg_dt2\00"
@__str$550 = private global [16 x i8] c"last_frame_time\00"
@__str$551 = private global [12 x i8] c"num_samples\00"
@__str$552 = private global [8 x i8] c"counter\00"
@__str$553 = private global [14 x i8] c"Engine_Config\00"
@__str$554 = private global [10 x i8] c"init_proc\00"
@__str$555 = private global [12 x i8] c"update_proc\00"
@__str$556 = private global [12 x i8] c"window_name\00"
@__str$557 = private global [13 x i8] c"window_width\00"
@__str$558 = private global [14 x i8] c"window_height\00"
@__str$559 = private global [21 x i8] c"opengl_version_major\00"
@__str$55a = private global [21 x i8] c"opengl_version_minor\00"
@__str$55b = private global [12 x i8] c"camera_size\00"
@__str$55c = private global [12 x i8] c"Sprite_Data\00"
@__str$55d = private global [7 x i8] c"sprite\00"
@__str$55e = private global [9 x i8] c"position\00"
@__str$55f = private global [6 x i8] c"scale\00"
@__str$560 = private global [7 x i8] c"Handle\00"
@__str$561 = private global [10 x i8] c"File_Time\00"
@__str$562 = private global [6 x i8] c"Errno\00"
@__str$563 = private global [17 x i8] c"AllocationHeader\00"
@__str$564 = private global [5 x i8] c"size\00"
@__str$565 = private global [18 x i8] c"Fixed_Byte_Buffer\00"
@__str$566 = private global [6 x i8] c"Arena\00"
@__str$567 = private global [8 x i8] c"backing\00"
@__str$568 = private global [7 x i8] c"memory\00"
@__str$569 = private global [11 x i8] c"temp_count\00"
@__str$56a = private global [16 x i8] c"ArenaTempMemory\00"
@__str$56b = private global [6 x i8] c"arena\00"
@__str$56c = private global [15 x i8] c"original_count\00"
@__str$56d = private global [13 x i8] c"DecimalSlice\00"
@__str$56e = private global [7 x i8] c"digits\00"
@__str$56f = private global [6 x i8] c"count\00"
@__str$570 = private global [14 x i8] c"decimal_point\00"
@__str$571 = private global [4 x i8] c"neg\00"
@__str$572 = private global [10 x i8] c"FloatInfo\00"
@__str$573 = private global [9 x i8] c"mantbits\00"
@__str$574 = private global [8 x i8] c"expbits\00"
@__str$575 = private global [5 x i8] c"bias\00"
@__str$576 = private global [5 x i8] c"Vec2\00"
@__str$577 = private global [5 x i8] c"Vec3\00"
@__str$578 = private global [5 x i8] c"Vec4\00"
@__str$579 = private global [5 x i8] c"Mat2\00"
@__str$57a = private global [5 x i8] c"Mat3\00"
@__str$57b = private global [5 x i8] c"Mat4\00"
@__str$57c = private global [8 x i8] c"Complex\00"
@__str$57d = private global [7 x i8] c"sync_t\00"
@__str$57e = private global [13 x i8] c"debug_proc_t\00"
@__str$57f = private global [7 x i8] c"source\00"
@__str$580 = private global [6 x i8] c"type_\00"
@__str$581 = private global [3 x i8] c"id\00"
@__str$582 = private global [9 x i8] c"severity\00"
@__str$583 = private global [7 x i8] c"length\00"
@__str$584 = private global [8 x i8] c"message\00"
@__str$585 = private global [10 x i8] c"userParam\00"
@__str$586 = private global [13 x i8] c"Uniform_Type\00"
@__str$587 = private global [6 x i8] c"FLOAT\00"
@__str$588 = private global [11 x i8] c"FLOAT_VEC2\00"
@__str$589 = private global [11 x i8] c"FLOAT_VEC3\00"
@__str$58a = private global [11 x i8] c"FLOAT_VEC4\00"
@__str$58b = private global [7 x i8] c"DOUBLE\00"
@__str$58c = private global [12 x i8] c"DOUBLE_VEC2\00"
@__str$58d = private global [12 x i8] c"DOUBLE_VEC3\00"
@__str$58e = private global [12 x i8] c"DOUBLE_VEC4\00"
@__str$58f = private global [4 x i8] c"INT\00"
@__str$590 = private global [9 x i8] c"INT_VEC2\00"
@__str$591 = private global [9 x i8] c"INT_VEC3\00"
@__str$592 = private global [9 x i8] c"INT_VEC4\00"
@__str$593 = private global [13 x i8] c"UNSIGNED_INT\00"
@__str$594 = private global [18 x i8] c"UNSIGNED_INT_VEC2\00"
@__str$595 = private global [18 x i8] c"UNSIGNED_INT_VEC3\00"
@__str$596 = private global [18 x i8] c"UNSIGNED_INT_VEC4\00"
@__str$597 = private global [5 x i8] c"BOOL\00"
@__str$598 = private global [10 x i8] c"BOOL_VEC2\00"
@__str$599 = private global [10 x i8] c"BOOL_VEC3\00"
@__str$59a = private global [10 x i8] c"BOOL_VEC4\00"
@__str$59b = private global [11 x i8] c"FLOAT_MAT2\00"
@__str$59c = private global [11 x i8] c"FLOAT_MAT3\00"
@__str$59d = private global [11 x i8] c"FLOAT_MAT4\00"
@__str$59e = private global [13 x i8] c"FLOAT_MAT2x3\00"
@__str$59f = private global [13 x i8] c"FLOAT_MAT2x4\00"
@__str$5a0 = private global [13 x i8] c"FLOAT_MAT3x2\00"
@__str$5a1 = private global [13 x i8] c"FLOAT_MAT3x4\00"
@__str$5a2 = private global [13 x i8] c"FLOAT_MAT4x2\00"
@__str$5a3 = private global [13 x i8] c"FLOAT_MAT4x3\00"
@__str$5a4 = private global [12 x i8] c"DOUBLE_MAT2\00"
@__str$5a5 = private global [12 x i8] c"DOUBLE_MAT3\00"
@__str$5a6 = private global [12 x i8] c"DOUBLE_MAT4\00"
@__str$5a7 = private global [14 x i8] c"DOUBLE_MAT2x3\00"
@__str$5a8 = private global [14 x i8] c"DOUBLE_MAT2x4\00"
@__str$5a9 = private global [14 x i8] c"DOUBLE_MAT3x2\00"
@__str$5aa = private global [14 x i8] c"DOUBLE_MAT3x4\00"
@__str$5ab = private global [14 x i8] c"DOUBLE_MAT4x2\00"
@__str$5ac = private global [14 x i8] c"DOUBLE_MAT4x3\00"
@__str$5ad = private global [11 x i8] c"SAMPLER_1D\00"
@__str$5ae = private global [11 x i8] c"SAMPLER_2D\00"
@__str$5af = private global [11 x i8] c"SAMPLER_3D\00"
@__str$5b0 = private global [13 x i8] c"SAMPLER_CUBE\00"
@__str$5b1 = private global [18 x i8] c"SAMPLER_1D_SHADOW\00"
@__str$5b2 = private global [18 x i8] c"SAMPLER_2D_SHADOW\00"
@__str$5b3 = private global [17 x i8] c"SAMPLER_1D_ARRAY\00"
@__str$5b4 = private global [17 x i8] c"SAMPLER_2D_ARRAY\00"
@__str$5b5 = private global [24 x i8] c"SAMPLER_1D_ARRAY_SHADOW\00"
@__str$5b6 = private global [24 x i8] c"SAMPLER_2D_ARRAY_SHADOW\00"
@__str$5b7 = private global [23 x i8] c"SAMPLER_2D_MULTISAMPLE\00"
@__str$5b8 = private global [29 x i8] c"SAMPLER_2D_MULTISAMPLE_ARRAY\00"
@__str$5b9 = private global [20 x i8] c"SAMPLER_CUBE_SHADOW\00"
@__str$5ba = private global [15 x i8] c"SAMPLER_BUFFER\00"
@__str$5bb = private global [16 x i8] c"SAMPLER_2D_RECT\00"
@__str$5bc = private global [23 x i8] c"SAMPLER_2D_RECT_SHADOW\00"
@__str$5bd = private global [15 x i8] c"INT_SAMPLER_1D\00"
@__str$5be = private global [15 x i8] c"INT_SAMPLER_2D\00"
@__str$5bf = private global [15 x i8] c"INT_SAMPLER_3D\00"
@__str$5c0 = private global [17 x i8] c"INT_SAMPLER_CUBE\00"
@__str$5c1 = private global [21 x i8] c"INT_SAMPLER_1D_ARRAY\00"
@__str$5c2 = private global [21 x i8] c"INT_SAMPLER_2D_ARRAY\00"
@__str$5c3 = private global [27 x i8] c"INT_SAMPLER_2D_MULTISAMPLE\00"
@__str$5c4 = private global [33 x i8] c"INT_SAMPLER_2D_MULTISAMPLE_ARRAY\00"
@__str$5c5 = private global [19 x i8] c"INT_SAMPLER_BUFFER\00"
@__str$5c6 = private global [20 x i8] c"INT_SAMPLER_2D_RECT\00"
@__str$5c7 = private global [24 x i8] c"UNSIGNED_INT_SAMPLER_1D\00"
@__str$5c8 = private global [24 x i8] c"UNSIGNED_INT_SAMPLER_2D\00"
@__str$5c9 = private global [24 x i8] c"UNSIGNED_INT_SAMPLER_3D\00"
@__str$5ca = private global [26 x i8] c"UNSIGNED_INT_SAMPLER_CUBE\00"
@__str$5cb = private global [30 x i8] c"UNSIGNED_INT_SAMPLER_1D_ARRAY\00"
@__str$5cc = private global [30 x i8] c"UNSIGNED_INT_SAMPLER_2D_ARRAY\00"
@__str$5cd = private global [36 x i8] c"UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE\00"
@__str$5ce = private global [42 x i8] c"UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY\00"
@__str$5cf = private global [28 x i8] c"UNSIGNED_INT_SAMPLER_BUFFER\00"
@__str$5d0 = private global [29 x i8] c"UNSIGNED_INT_SAMPLER_2D_RECT\00"
@__str$5d1 = private global [9 x i8] c"IMAGE_1D\00"
@__str$5d2 = private global [9 x i8] c"IMAGE_2D\00"
@__str$5d3 = private global [9 x i8] c"IMAGE_3D\00"
@__str$5d4 = private global [14 x i8] c"IMAGE_2D_RECT\00"
@__str$5d5 = private global [11 x i8] c"IMAGE_CUBE\00"
@__str$5d6 = private global [13 x i8] c"IMAGE_BUFFER\00"
@__str$5d7 = private global [15 x i8] c"IMAGE_1D_ARRAY\00"
@__str$5d8 = private global [15 x i8] c"IMAGE_2D_ARRAY\00"
@__str$5d9 = private global [21 x i8] c"IMAGE_CUBE_MAP_ARRAY\00"
@__str$5da = private global [21 x i8] c"IMAGE_2D_MULTISAMPLE\00"
@__str$5db = private global [27 x i8] c"IMAGE_2D_MULTISAMPLE_ARRAY\00"
@__str$5dc = private global [13 x i8] c"INT_IMAGE_1D\00"
@__str$5dd = private global [13 x i8] c"INT_IMAGE_2D\00"
@__str$5de = private global [13 x i8] c"INT_IMAGE_3D\00"
@__str$5df = private global [18 x i8] c"INT_IMAGE_2D_RECT\00"
@__str$5e0 = private global [15 x i8] c"INT_IMAGE_CUBE\00"
@__str$5e1 = private global [17 x i8] c"INT_IMAGE_BUFFER\00"
@__str$5e2 = private global [19 x i8] c"INT_IMAGE_1D_ARRAY\00"
@__str$5e3 = private global [19 x i8] c"INT_IMAGE_2D_ARRAY\00"
@__str$5e4 = private global [25 x i8] c"INT_IMAGE_CUBE_MAP_ARRAY\00"
@__str$5e5 = private global [25 x i8] c"INT_IMAGE_2D_MULTISAMPLE\00"
@__str$5e6 = private global [31 x i8] c"INT_IMAGE_2D_MULTISAMPLE_ARRAY\00"
@__str$5e7 = private global [22 x i8] c"UNSIGNED_INT_IMAGE_1D\00"
@__str$5e8 = private global [22 x i8] c"UNSIGNED_INT_IMAGE_2D\00"
@__str$5e9 = private global [22 x i8] c"UNSIGNED_INT_IMAGE_3D\00"
@__str$5ea = private global [27 x i8] c"UNSIGNED_INT_IMAGE_2D_RECT\00"
@__str$5eb = private global [24 x i8] c"UNSIGNED_INT_IMAGE_CUBE\00"
@__str$5ec = private global [26 x i8] c"UNSIGNED_INT_IMAGE_BUFFER\00"
@__str$5ed = private global [28 x i8] c"UNSIGNED_INT_IMAGE_1D_ARRAY\00"
@__str$5ee = private global [28 x i8] c"UNSIGNED_INT_IMAGE_2D_ARRAY\00"
@__str$5ef = private global [34 x i8] c"UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY\00"
@__str$5f0 = private global [34 x i8] c"UNSIGNED_INT_IMAGE_2D_MULTISAMPLE\00"
@__str$5f1 = private global [40 x i8] c"UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY\00"
@__str$5f2 = private global [28 x i8] c"UNSIGNED_INT_ATOMIC_COUNTER\00"
@__str$5f3 = private global [13 x i8] c"Uniform_Info\00"
@__str$5f4 = private global [9 x i8] c"location\00"
@__str$5f5 = private global [5 x i8] c"size\00"
@__str$5f6 = private global [5 x i8] c"kind\00"
@__str$5f7 = private global [5 x i8] c"name\00"
@__str$5f8 = private global [13 x i8] c"Io_Callbacks\00"
@__str$5f9 = private global [5 x i8] c"read\00"
@__str$5fa = private global [5 x i8] c"skip\00"
@__str$5fb = private global [4 x i8] c"eof\00"
@__str$5fc = private global [5 x i8] c"user\00"
@__str$5fd = private global [5 x i8] c"data\00"
@__str$5fe = private global [5 x i8] c"size\00"
@__str$5ff = private global [5 x i8] c"user\00"
@__str$600 = private global [2 x i8] c"n\00"
@__str$601 = private global [5 x i8] c"user\00"
@__str$602 = private global [7 x i8] c"Handle\00"
@__str$603 = private global [5 x i8] c"Hwnd\00"
@__str$604 = private global [4 x i8] c"Hdc\00"
@__str$605 = private global [10 x i8] c"Hinstance\00"
@__str$606 = private global [6 x i8] c"Hicon\00"
@__str$607 = private global [8 x i8] c"Hcursor\00"
@__str$608 = private global [6 x i8] c"Hmenu\00"
@__str$609 = private global [7 x i8] c"Hbrush\00"
@__str$60a = private global [8 x i8] c"Hgdiobj\00"
@__str$60b = private global [8 x i8] c"Hmodule\00"
@__str$60c = private global [9 x i8] c"Hmonitor\00"
@__str$60d = private global [10 x i8] c"Hrawinput\00"
@__str$60e = private global [4 x i8] c"HKL\00"
@__str$60f = private global [7 x i8] c"Wparam\00"
@__str$610 = private global [7 x i8] c"Lparam\00"
@__str$611 = private global [8 x i8] c"Lresult\00"
@__str$612 = private global [9 x i8] c"Wnd_Proc\00"
@__str$613 = private global [2 x i8] c"_\00"
@__str$614 = private global [2 x i8] c"_\00"
@__str$615 = private global [2 x i8] c"_\00"
@__str$616 = private global [2 x i8] c"_\00"
@__str$617 = private global [9 x i8] c"Long_Ptr\00"
@__str$618 = private global [5 x i8] c"Bool\00"
@__str$619 = private global [6 x i8] c"Point\00"
@__str$61a = private global [2 x i8] c"x\00"
@__str$61b = private global [2 x i8] c"y\00"
@__str$61c = private global [15 x i8] c"Wnd_Class_Ex_A\00"
@__str$61d = private global [5 x i8] c"size\00"
@__str$61e = private global [6 x i8] c"style\00"
@__str$61f = private global [9 x i8] c"wnd_proc\00"
@__str$620 = private global [10 x i8] c"cls_extra\00"
@__str$621 = private global [10 x i8] c"wnd_extra\00"
@__str$622 = private global [9 x i8] c"instance\00"
@__str$623 = private global [5 x i8] c"icon\00"
@__str$624 = private global [7 x i8] c"cursor\00"
@__str$625 = private global [11 x i8] c"background\00"
@__str$626 = private global [10 x i8] c"menu_name\00"
@__str$627 = private global [11 x i8] c"class_name\00"
@__str$628 = private global [3 x i8] c"sm\00"
@__str$629 = private global [15 x i8] c"Wnd_Class_Ex_W\00"
@__str$62a = private global [5 x i8] c"size\00"
@__str$62b = private global [6 x i8] c"style\00"
@__str$62c = private global [9 x i8] c"wnd_proc\00"
@__str$62d = private global [10 x i8] c"cls_extra\00"
@__str$62e = private global [10 x i8] c"wnd_extra\00"
@__str$62f = private global [9 x i8] c"instance\00"
@__str$630 = private global [5 x i8] c"icon\00"
@__str$631 = private global [7 x i8] c"cursor\00"
@__str$632 = private global [11 x i8] c"background\00"
@__str$633 = private global [10 x i8] c"menu_name\00"
@__str$634 = private global [11 x i8] c"class_name\00"
@__str$635 = private global [3 x i8] c"sm\00"
@__str$636 = private global [4 x i8] c"Msg\00"
@__str$637 = private global [5 x i8] c"hwnd\00"
@__str$638 = private global [8 x i8] c"message\00"
@__str$639 = private global [7 x i8] c"wparam\00"
@__str$63a = private global [7 x i8] c"lparam\00"
@__str$63b = private global [5 x i8] c"time\00"
@__str$63c = private global [3 x i8] c"pt\00"
@__str$63d = private global [5 x i8] c"Rect\00"
@__str$63e = private global [5 x i8] c"left\00"
@__str$63f = private global [4 x i8] c"top\00"
@__str$640 = private global [6 x i8] c"right\00"
@__str$641 = private global [7 x i8] c"bottom\00"
@__str$642 = private global [9 x i8] c"Filetime\00"
@__str$643 = private global [3 x i8] c"lo\00"
@__str$644 = private global [3 x i8] c"hi\00"
@__str$645 = private global [11 x i8] c"Systemtime\00"
@__str$646 = private global [5 x i8] c"year\00"
@__str$647 = private global [6 x i8] c"month\00"
@__str$648 = private global [12 x i8] c"day_of_week\00"
@__str$649 = private global [4 x i8] c"day\00"
@__str$64a = private global [5 x i8] c"hour\00"
@__str$64b = private global [7 x i8] c"minute\00"
@__str$64c = private global [7 x i8] c"second\00"
@__str$64d = private global [12 x i8] c"millisecond\00"
@__str$64e = private global [27 x i8] c"By_Handle_File_Information\00"
@__str$64f = private global [16 x i8] c"file_attributes\00"
@__str$650 = private global [14 x i8] c"creation_time\00"
@__str$651 = private global [17 x i8] c"last_access_time\00"
@__str$652 = private global [16 x i8] c"last_write_time\00"
@__str$653 = private global [21 x i8] c"volume_serial_number\00"
@__str$654 = private global [15 x i8] c"file_size_high\00"
@__str$655 = private global [14 x i8] c"file_size_low\00"
@__str$656 = private global [16 x i8] c"number_of_links\00"
@__str$657 = private global [16 x i8] c"file_index_high\00"
@__str$658 = private global [15 x i8] c"file_index_low\00"
@__str$659 = private global [20 x i8] c"File_Attribute_Data\00"
@__str$65a = private global [16 x i8] c"file_attributes\00"
@__str$65b = private global [14 x i8] c"creation_time\00"
@__str$65c = private global [17 x i8] c"last_access_time\00"
@__str$65d = private global [16 x i8] c"last_write_time\00"
@__str$65e = private global [15 x i8] c"file_size_high\00"
@__str$65f = private global [14 x i8] c"file_size_low\00"
@__str$660 = private global [10 x i8] c"Find_Data\00"
@__str$661 = private global [16 x i8] c"file_attributes\00"
@__str$662 = private global [14 x i8] c"creation_time\00"
@__str$663 = private global [17 x i8] c"last_access_time\00"
@__str$664 = private global [16 x i8] c"last_write_time\00"
@__str$665 = private global [15 x i8] c"file_size_high\00"
@__str$666 = private global [14 x i8] c"file_size_low\00"
@__str$667 = private global [10 x i8] c"reserved0\00"
@__str$668 = private global [10 x i8] c"reserved1\00"
@__str$669 = private global [10 x i8] c"file_name\00"
@__str$66a = private global [20 x i8] c"alternate_file_name\00"
@__str$66b = private global [20 x i8] c"Security_Attributes\00"
@__str$66c = private global [7 x i8] c"length\00"
@__str$66d = private global [20 x i8] c"security_descriptor\00"
@__str$66e = private global [15 x i8] c"inherit_handle\00"
@__str$66f = private global [24 x i8] c"Pixel_Format_Descriptor\00"
@__str$670 = private global [5 x i8] c"size\00"
@__str$671 = private global [8 x i8] c"version\00"
@__str$672 = private global [6 x i8] c"flags\00"
@__str$673 = private global [11 x i8] c"pixel_type\00"
@__str$674 = private global [11 x i8] c"color_bits\00"
@__str$675 = private global [9 x i8] c"red_bits\00"
@__str$676 = private global [10 x i8] c"red_shift\00"
@__str$677 = private global [11 x i8] c"green_bits\00"
@__str$678 = private global [12 x i8] c"green_shift\00"
@__str$679 = private global [10 x i8] c"blue_bits\00"
@__str$67a = private global [11 x i8] c"blue_shift\00"
@__str$67b = private global [11 x i8] c"alpha_bits\00"
@__str$67c = private global [12 x i8] c"alpha_shift\00"
@__str$67d = private global [11 x i8] c"accum_bits\00"
@__str$67e = private global [15 x i8] c"accum_red_bits\00"
@__str$67f = private global [17 x i8] c"accum_green_bits\00"
@__str$680 = private global [16 x i8] c"accum_blue_bits\00"
@__str$681 = private global [17 x i8] c"accum_alpha_bits\00"
@__str$682 = private global [11 x i8] c"depth_bits\00"
@__str$683 = private global [13 x i8] c"stencil_bits\00"
@__str$684 = private global [12 x i8] c"aux_buffers\00"
@__str$685 = private global [11 x i8] c"layer_type\00"
@__str$686 = private global [9 x i8] c"reserved\00"
@__str$687 = private global [11 x i8] c"layer_mask\00"
@__str$688 = private global [13 x i8] c"visible_mask\00"
@__str$689 = private global [12 x i8] c"damage_mask\00"
@__str$68a = private global [17 x i8] c"Critical_Section\00"
@__str$68b = private global [11 x i8] c"debug_info\00"
@__str$68c = private global [11 x i8] c"lock_count\00"
@__str$68d = private global [16 x i8] c"recursion_count\00"
@__str$68e = private global [14 x i8] c"owning_thread\00"
@__str$68f = private global [15 x i8] c"lock_semaphore\00"
@__str$690 = private global [11 x i8] c"spin_count\00"
@__str$691 = private global [23 x i8] c"Critical_Section_Debug\00"
@__str$692 = private global [4 x i8] c"typ\00"
@__str$693 = private global [25 x i8] c"creator_back_trace_index\00"
@__str$694 = private global [17 x i8] c"critical_section\00"
@__str$695 = private global [19 x i8] c"process_locks_list\00"
@__str$696 = private global [12 x i8] c"entry_count\00"
@__str$697 = private global [17 x i8] c"contention_count\00"
@__str$698 = private global [6 x i8] c"flags\00"
@__str$699 = private global [30 x i8] c"creator_back_trace_index_high\00"
@__str$69a = private global [11 x i8] c"spare_word\00"
@__str$69b = private global [11 x i8] c"List_Entry\00"
@__str$69c = private global [6 x i8] c"flink\00"
@__str$69d = private global [6 x i8] c"blink\00"
@__str$69e = private global [17 x i8] c"Raw_Input_Device\00"
@__str$69f = private global [11 x i8] c"usage_page\00"
@__str$6a0 = private global [6 x i8] c"usage\00"
@__str$6a1 = private global [6 x i8] c"flags\00"
@__str$6a2 = private global [11 x i8] c"wnd_target\00"
@__str$6a3 = private global [17 x i8] c"Raw_Input_Header\00"
@__str$6a4 = private global [5 x i8] c"kind\00"
@__str$6a5 = private global [5 x i8] c"size\00"
@__str$6a6 = private global [7 x i8] c"device\00"
@__str$6a7 = private global [7 x i8] c"wparam\00"
@__str$6a8 = private global [8 x i8] c"Raw_HID\00"
@__str$6a9 = private global [9 x i8] c"size_hid\00"
@__str$6aa = private global [6 x i8] c"count\00"
@__str$6ab = private global [9 x i8] c"raw_data\00"
@__str$6ac = private global [13 x i8] c"Raw_Keyboard\00"
@__str$6ad = private global [10 x i8] c"make_code\00"
@__str$6ae = private global [6 x i8] c"flags\00"
@__str$6af = private global [9 x i8] c"reserved\00"
@__str$6b0 = private global [5 x i8] c"vkey\00"
@__str$6b1 = private global [8 x i8] c"message\00"
@__str$6b2 = private global [18 x i8] c"extra_information\00"
@__str$6b3 = private global [10 x i8] c"Raw_Mouse\00"
@__str$6b4 = private global [6 x i8] c"flags\00"
@__str$6b5 = private global [5 x i8] c"data\00"
@__str$6b6 = private global [12 x i8] c"raw_buttons\00"
@__str$6b7 = private global [7 x i8] c"last_x\00"
@__str$6b8 = private global [7 x i8] c"last_y\00"
@__str$6b9 = private global [18 x i8] c"extra_information\00"
@__str$6ba = private global [8 x i8] c"buttons\00"
@__str$6bb = private global [2 x i8] c"_\00"
@__str$6bc = private global [13 x i8] c"button_flags\00"
@__str$6bd = private global [12 x i8] c"button_data\00"
@__str$6be = private global [10 x i8] c"Raw_Input\00"
@__str$6bf = private global [7 x i8] c"header\00"
@__str$6c0 = private global [5 x i8] c"data\00"
@__str$6c1 = private global [6 x i8] c"mouse\00"
@__str$6c2 = private global [9 x i8] c"keyboard\00"
@__str$6c3 = private global [4 x i8] c"hid\00"
@__str$6c4 = private global [23 x i8] c"GET_FILEEX_INFO_LEVELS\00"
@__str$6c5 = private global [13 x i8] c"Monitor_Info\00"
@__str$6c6 = private global [5 x i8] c"size\00"
@__str$6c7 = private global [8 x i8] c"monitor\00"
@__str$6c8 = private global [5 x i8] c"work\00"
@__str$6c9 = private global [6 x i8] c"flags\00"
@__str$6ca = private global [17 x i8] c"Window_Placement\00"
@__str$6cb = private global [7 x i8] c"length\00"
@__str$6cc = private global [6 x i8] c"flags\00"
@__str$6cd = private global [9 x i8] c"show_cmd\00"
@__str$6ce = private global [8 x i8] c"min_pos\00"
@__str$6cf = private global [8 x i8] c"max_pos\00"
@__str$6d0 = private global [11 x i8] c"normal_pos\00"
@__str$6d1 = private global [19 x i8] c"Bitmap_Info_Header\00"
@__str$6d2 = private global [5 x i8] c"size\00"
@__str$6d3 = private global [6 x i8] c"width\00"
@__str$6d4 = private global [7 x i8] c"height\00"
@__str$6d5 = private global [7 x i8] c"planes\00"
@__str$6d6 = private global [10 x i8] c"bit_count\00"
@__str$6d7 = private global [12 x i8] c"compression\00"
@__str$6d8 = private global [11 x i8] c"size_image\00"
@__str$6d9 = private global [17 x i8] c"x_pels_per_meter\00"
@__str$6da = private global [17 x i8] c"y_pels_per_meter\00"
@__str$6db = private global [9 x i8] c"clr_used\00"
@__str$6dc = private global [14 x i8] c"clr_important\00"
@__str$6dd = private global [12 x i8] c"Bitmap_Info\00"
@__str$6de = private global [7 x i8] c"header\00"
@__str$6df = private global [7 x i8] c"colors\00"
@__str$6e0 = private global [9 x i8] c"Rgb_Quad\00"
@__str$6e1 = private global [5 x i8] c"blue\00"
@__str$6e2 = private global [6 x i8] c"green\00"
@__str$6e3 = private global [4 x i8] c"red\00"
@__str$6e4 = private global [9 x i8] c"reserved\00"
@__str$6e5 = private global [9 x i8] c"Key_Code\00"
@__str$6e6 = private global [8 x i8] c"Unknown\00"
@__str$6e7 = private global [8 x i8] c"Lbutton\00"
@__str$6e8 = private global [8 x i8] c"Rbutton\00"
@__str$6e9 = private global [7 x i8] c"Cancel\00"
@__str$6ea = private global [8 x i8] c"Mbutton\00"
@__str$6eb = private global [9 x i8] c"Xbutton1\00"
@__str$6ec = private global [9 x i8] c"Xbutton2\00"
@__str$6ed = private global [5 x i8] c"Back\00"
@__str$6ee = private global [4 x i8] c"Tab\00"
@__str$6ef = private global [6 x i8] c"Clear\00"
@__str$6f0 = private global [7 x i8] c"Return\00"
@__str$6f1 = private global [6 x i8] c"Shift\00"
@__str$6f2 = private global [8 x i8] c"Control\00"
@__str$6f3 = private global [5 x i8] c"Menu\00"
@__str$6f4 = private global [6 x i8] c"Pause\00"
@__str$6f5 = private global [8 x i8] c"Capital\00"
@__str$6f6 = private global [5 x i8] c"Kana\00"
@__str$6f7 = private global [8 x i8] c"Hangeul\00"
@__str$6f8 = private global [7 x i8] c"Hangul\00"
@__str$6f9 = private global [6 x i8] c"Junja\00"
@__str$6fa = private global [6 x i8] c"Final\00"
@__str$6fb = private global [6 x i8] c"Hanja\00"
@__str$6fc = private global [6 x i8] c"Kanji\00"
@__str$6fd = private global [7 x i8] c"Escape\00"
@__str$6fe = private global [8 x i8] c"Convert\00"
@__str$6ff = private global [11 x i8] c"NonConvert\00"
@__str$700 = private global [7 x i8] c"Accept\00"
@__str$701 = private global [11 x i8] c"ModeChange\00"
@__str$702 = private global [6 x i8] c"Space\00"
@__str$703 = private global [6 x i8] c"Prior\00"
@__str$704 = private global [5 x i8] c"Next\00"
@__str$705 = private global [4 x i8] c"End\00"
@__str$706 = private global [5 x i8] c"Home\00"
@__str$707 = private global [5 x i8] c"Left\00"
@__str$708 = private global [3 x i8] c"Up\00"
@__str$709 = private global [6 x i8] c"Right\00"
@__str$70a = private global [5 x i8] c"Down\00"
@__str$70b = private global [7 x i8] c"Select\00"
@__str$70c = private global [6 x i8] c"Print\00"
@__str$70d = private global [8 x i8] c"Execute\00"
@__str$70e = private global [9 x i8] c"Snapshot\00"
@__str$70f = private global [7 x i8] c"Insert\00"
@__str$710 = private global [7 x i8] c"Delete\00"
@__str$711 = private global [5 x i8] c"Help\00"
@__str$712 = private global [5 x i8] c"Num0\00"
@__str$713 = private global [5 x i8] c"Num1\00"
@__str$714 = private global [5 x i8] c"Num2\00"
@__str$715 = private global [5 x i8] c"Num3\00"
@__str$716 = private global [5 x i8] c"Num4\00"
@__str$717 = private global [5 x i8] c"Num5\00"
@__str$718 = private global [5 x i8] c"Num6\00"
@__str$719 = private global [5 x i8] c"Num7\00"
@__str$71a = private global [5 x i8] c"Num8\00"
@__str$71b = private global [5 x i8] c"Num9\00"
@__str$71c = private global [2 x i8] c"A\00"
@__str$71d = private global [2 x i8] c"B\00"
@__str$71e = private global [2 x i8] c"C\00"
@__str$71f = private global [2 x i8] c"D\00"
@__str$720 = private global [2 x i8] c"E\00"
@__str$721 = private global [2 x i8] c"F\00"
@__str$722 = private global [2 x i8] c"G\00"
@__str$723 = private global [2 x i8] c"H\00"
@__str$724 = private global [2 x i8] c"I\00"
@__str$725 = private global [2 x i8] c"J\00"
@__str$726 = private global [2 x i8] c"K\00"
@__str$727 = private global [2 x i8] c"L\00"
@__str$728 = private global [2 x i8] c"M\00"
@__str$729 = private global [2 x i8] c"N\00"
@__str$72a = private global [2 x i8] c"O\00"
@__str$72b = private global [2 x i8] c"P\00"
@__str$72c = private global [2 x i8] c"Q\00"
@__str$72d = private global [2 x i8] c"R\00"
@__str$72e = private global [2 x i8] c"S\00"
@__str$72f = private global [2 x i8] c"T\00"
@__str$730 = private global [2 x i8] c"U\00"
@__str$731 = private global [2 x i8] c"V\00"
@__str$732 = private global [2 x i8] c"W\00"
@__str$733 = private global [2 x i8] c"X\00"
@__str$734 = private global [2 x i8] c"Y\00"
@__str$735 = private global [2 x i8] c"Z\00"
@__str$736 = private global [5 x i8] c"Lwin\00"
@__str$737 = private global [5 x i8] c"Rwin\00"
@__str$738 = private global [5 x i8] c"Apps\00"
@__str$739 = private global [8 x i8] c"Numpad0\00"
@__str$73a = private global [8 x i8] c"Numpad1\00"
@__str$73b = private global [8 x i8] c"Numpad2\00"
@__str$73c = private global [8 x i8] c"Numpad3\00"
@__str$73d = private global [8 x i8] c"Numpad4\00"
@__str$73e = private global [8 x i8] c"Numpad5\00"
@__str$73f = private global [8 x i8] c"Numpad6\00"
@__str$740 = private global [8 x i8] c"Numpad7\00"
@__str$741 = private global [8 x i8] c"Numpad8\00"
@__str$742 = private global [8 x i8] c"Numpad9\00"
@__str$743 = private global [9 x i8] c"Multiply\00"
@__str$744 = private global [4 x i8] c"Add\00"
@__str$745 = private global [10 x i8] c"Separator\00"
@__str$746 = private global [9 x i8] c"Subtract\00"
@__str$747 = private global [8 x i8] c"Decimal\00"
@__str$748 = private global [7 x i8] c"Divide\00"
@__str$749 = private global [3 x i8] c"F1\00"
@__str$74a = private global [3 x i8] c"F2\00"
@__str$74b = private global [3 x i8] c"F3\00"
@__str$74c = private global [3 x i8] c"F4\00"
@__str$74d = private global [3 x i8] c"F5\00"
@__str$74e = private global [3 x i8] c"F6\00"
@__str$74f = private global [3 x i8] c"F7\00"
@__str$750 = private global [3 x i8] c"F8\00"
@__str$751 = private global [3 x i8] c"F9\00"
@__str$752 = private global [4 x i8] c"F10\00"
@__str$753 = private global [4 x i8] c"F11\00"
@__str$754 = private global [4 x i8] c"F12\00"
@__str$755 = private global [4 x i8] c"F13\00"
@__str$756 = private global [4 x i8] c"F14\00"
@__str$757 = private global [4 x i8] c"F15\00"
@__str$758 = private global [4 x i8] c"F16\00"
@__str$759 = private global [4 x i8] c"F17\00"
@__str$75a = private global [4 x i8] c"F18\00"
@__str$75b = private global [4 x i8] c"F19\00"
@__str$75c = private global [4 x i8] c"F20\00"
@__str$75d = private global [4 x i8] c"F21\00"
@__str$75e = private global [4 x i8] c"F22\00"
@__str$75f = private global [4 x i8] c"F23\00"
@__str$760 = private global [4 x i8] c"F24\00"
@__str$761 = private global [8 x i8] c"Numlock\00"
@__str$762 = private global [7 x i8] c"Scroll\00"
@__str$763 = private global [7 x i8] c"Lshift\00"
@__str$764 = private global [7 x i8] c"Rshift\00"
@__str$765 = private global [9 x i8] c"Lcontrol\00"
@__str$766 = private global [9 x i8] c"Rcontrol\00"
@__str$767 = private global [6 x i8] c"Lmenu\00"
@__str$768 = private global [6 x i8] c"Rmenu\00"
@__str$769 = private global [11 x i8] c"ProcessKey\00"
@__str$76a = private global [5 x i8] c"Attn\00"
@__str$76b = private global [6 x i8] c"Crsel\00"
@__str$76c = private global [6 x i8] c"Exsel\00"
@__str$76d = private global [6 x i8] c"Ereof\00"
@__str$76e = private global [5 x i8] c"Play\00"
@__str$76f = private global [5 x i8] c"Zoom\00"
@__str$770 = private global [7 x i8] c"Noname\00"
@__str$771 = private global [4 x i8] c"Pa1\00"
@__str$772 = private global [9 x i8] c"OemClear\00"
@__str$773 = private global [8 x i8] c"Decimal\00"
@__str$774 = private global [7 x i8] c"digits\00"
@__str$775 = private global [6 x i8] c"count\00"
@__str$776 = private global [14 x i8] c"decimal_point\00"
@__str$777 = private global [4 x i8] c"neg\00"
@__str$778 = private global [6 x i8] c"trunc\00"
@__str$779 = private global [14 x i8] c"String_Buffer\00"
@__str$77a = private global [14 x i8] c"String_Buffer\00"
@__str$77b = private global [12 x i8] c"Sprite_Data\00"
@__str$77c = private global [12 x i8] c"Sprite_Data\00"
@__str$77d = private global [5 x i8] c"Vec3\00"
@__str$77e = private global [5 x i8] c"Vec3\00"
@__str$77f = private global [5 x i8] c"Vec3\00"
@__str$780 = private global [5 x i8] c"Vec3\00"
@__str$781 = private global [7 x i8] c"TWords\00"
@__str$782 = private global [4 x i8] c"all\00"
@__str$783 = private global [2 x i8] c"_\00"
@__str$784 = private global [3 x i8] c"hi\00"
@__str$785 = private global [3 x i8] c"lo\00"
@__str$786 = private global [23 x i8] c"Metadata_Texture_Entry\00"
@__str$787 = private global [3 x i8] c"uv\00"
@__str$788 = private global [7 x i8] c"Buffer\00"
@__str$789 = private global [2 x i8] c"b\00"
@__str$78a = private global [2 x i8] c"n\00"
@__str$78b = private global [40 x i8] c"D\3A\5CProgramming\5Codin-gl-engine\5Cmain.odin\00"
@__str$78c = private global [40 x i8] c"D\3A\5CProgramming\5Codin-gl-engine\5Cmain.odin\00"
@__str$78d = private global [19 x i8] c"__$startup_runtime\00"
@__str$78e = private global [40 x i8] c"D\3A\5CProgramming\5Codin-gl-engine\5Cmain.odin\00"
@__str$78f = private global [40 x i8] c"D\3A\5CProgramming\5Codin-gl-engine\5Cmain.odin\00"
@__str$790 = private global [19 x i8] c"__$startup_runtime\00"
@__str$791 = private global [18 x i8] c"0123456789abcdefx\00"
@__str$792 = private global [18 x i8] c"0123456789ABCDEFX\00"
@__str$793 = private global [37 x i8] c"0123456789abcdefghijklmnopqrstuvwxyz\00"
@__str$794 = private global [18 x i8] c"0123456789abcdefx\00"
@__str$795 = private global [18 x i8] c"0123456789ABCDEFX\00"
@__str$796 = private global [37 x i8] c"0123456789abcdefghijklmnopqrstuvwxyz\00"
attributes #0 = {nounwind uwtable}
attributes #1 = {nounwind alwaysinline uwtable}
attributes #2 = {nounwind noinline optnone uwtable}
